

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Oct 07 18:05:16 2025

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1
    37                           	psect	text28,global,reloc=2,class=CODE,delta=1
    38                           	psect	text29,global,reloc=2,class=CODE,delta=1
    39                           	psect	text30,global,reloc=2,class=CODE,delta=1
    40                           	psect	text31,global,reloc=2,class=CODE,delta=1
    41                           	psect	text32,global,reloc=2,class=CODE,delta=1
    42                           	psect	text33,global,reloc=2,class=CODE,delta=1
    43                           	psect	text34,global,reloc=2,class=CODE,delta=1
    44                           	psect	text35,global,reloc=2,class=CODE,delta=1
    45                           	psect	text36,global,reloc=2,class=CODE,delta=1
    46                           	psect	text37,global,reloc=2,class=CODE,delta=1
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    49  0000                     
    50                           	psect	smallconst
    51  001000                     __psmallconst:
    52                           	opt stack 0
    53  001000  00                 	db	0
    54  001001                     _dpowers:
    55                           	opt stack 0
    56  001001  0001               	dw	1
    57  001003  0000               	dw	0
    58  001005  000A               	dw	10
    59  001007  0000               	dw	0
    60  001009  0064               	dw	100
    61  00100B  0000               	dw	0
    62  00100D  03E8               	dw	1000
    63  00100F  0000               	dw	0
    64  001011  2710               	dw	10000
    65  001013  0000               	dw	0
    66  001015  86A0               	dw	34464
    67  001017  0001               	dw	1
    68  001019  4240               	dw	16960
    69  00101B  000F               	dw	15
    70  00101D  9680               	dw	38528
    71  00101F  0098               	dw	152
    72  001021  E100               	dw	57600
    73  001023  05F5               	dw	1525
    74  001025  CA00               	dw	51712
    75  001027  3B9A               	dw	15258
    76  001029                     __end_of_dpowers:
    77                           	opt stack 0
    78  001029                     __npowers_:
    79                           	opt stack 0
    80  001029  00                 	db	0
    81  00102A  80                 	db	128
    82  00102B  3F                 	db	63
    83  00102C  CD                 	db	205
    84  00102D  CC                 	db	204
    85  00102E  3D                 	db	61
    86  00102F  D7                 	db	215
    87  001030  23                 	db	35
    88  001031  3C                 	db	60
    89  001032  12                 	db	18
    90  001033  83                 	db	131
    91  001034  3A                 	db	58
    92  001035  B7                 	db	183
    93  001036  D1                 	db	209
    94  001037  38                 	db	56
    95  001038  C6                 	db	198
    96  001039  27                 	db	39
    97  00103A  37                 	db	55
    98  00103B  38                 	db	56
    99  00103C  86                 	db	134
   100  00103D  35                 	db	53
   101  00103E  C0                 	db	192
   102  00103F  D6                 	db	214
   103  001040  33                 	db	51
   104  001041  CC                 	db	204
   105  001042  2B                 	db	43
   106  001043  32                 	db	50
   107  001044  70                 	db	112
   108  001045  89                 	db	137
   109  001046  30                 	db	48
   110  001047  E7                 	db	231
   111  001048  DB                 	db	219
   112  001049  2E                 	db	46
   113  00104A  E5                 	db	229
   114  00104B  3C                 	db	60
   115  00104C  1E                 	db	30
   116  00104D  42                 	db	66
   117  00104E  A2                 	db	162
   118  00104F  0D                 	db	13
   119  001050                     __end_of__npowers_:
   120                           	opt stack 0
   121  001050                     __powers_:
   122                           	opt stack 0
   123  001050  00                 	db	0
   124  001051  80                 	db	128
   125  001052  3F                 	db	63
   126  001053  00                 	db	0
   127  001054  20                 	db	32
   128  001055  41                 	db	65
   129  001056  00                 	db	0
   130  001057  C8                 	db	200
   131  001058  42                 	db	66
   132  001059  00                 	db	0
   133  00105A  7A                 	db	122
   134  00105B  44                 	db	68
   135  00105C  40                 	db	64
   136  00105D  1C                 	db	28
   137  00105E  46                 	db	70
   138  00105F  50                 	db	80
   139  001060  C3                 	db	195
   140  001061  47                 	db	71
   141  001062  24                 	db	36
   142  001063  74                 	db	116
   143  001064  49                 	db	73
   144  001065  97                 	db	151
   145  001066  18                 	db	24
   146  001067  4B                 	db	75
   147  001068  BC                 	db	188
   148  001069  BE                 	db	190
   149  00106A  4C                 	db	76
   150  00106B  6B                 	db	107
   151  00106C  6E                 	db	110
   152  00106D  4E                 	db	78
   153  00106E  03                 	db	3
   154  00106F  15                 	db	21
   155  001070  50                 	db	80
   156  001071  79                 	db	121
   157  001072  AD                 	db	173
   158  001073  60                 	db	96
   159  001074  F3                 	db	243
   160  001075  49                 	db	73
   161  001076  71                 	db	113
   162  001077                     __end_of__powers_:
   163                           	opt stack 0
   164  001077                     _LED_7seg:
   165                           	opt stack 0
   166  001077  01                 	db	1
   167  001078  4F                 	db	79
   168  001079  12                 	db	18
   169  00107A  06                 	db	6
   170  00107B  4C                 	db	76
   171  00107C  24                 	db	36
   172  00107D  20                 	db	32
   173  00107E  0F                 	db	15
   174  00107F  00                 	db	0
   175  001080  04                 	db	4
   176  001081                     __end_of_LED_7seg:
   177                           	opt stack 0
   178  0000                     _ADCON0	set	4034
   179  0000                     _ADCON0bits	set	4034
   180  0000                     _ADCON1	set	4033
   181  0000                     _ADCON2	set	4032
   182  0000                     _ADRESH	set	4036
   183  0000                     _ADRESL	set	4035
   184  0000                     _CCP2CON	set	4026
   185  0000                     _CCPR2L	set	4027
   186  0000                     _OSCCON	set	4051
   187  0000                     _PIE1bits	set	3997
   188  0000                     _PIR1bits	set	3998
   189  0000                     _PORTB	set	3969
   190  0000                     _PORTCbits	set	3970
   191  0000                     _PORTD	set	3971
   192  0000                     _PORTDbits	set	3971
   193  0000                     _PORTE	set	3972
   194  0000                     _PORTEbits	set	3972
   195  0000                     _PR2	set	4043
   196  0000                     _RCSTA	set	4011
   197  0000                     _RCSTAbits	set	4011
   198  0000                     _SPBRG	set	4015
   199  0000                     _SPBRGH	set	4016
   200  0000                     _T2CON	set	4042
   201  0000                     _TRISA	set	3986
   202  0000                     _TRISB	set	3987
   203  0000                     _TRISC	set	3988
   204  0000                     _TRISCbits	set	3988
   205  0000                     _TRISD	set	3989
   206  0000                     _TRISE	set	3990
   207  0000                     _TXREG	set	4013
   208  0000                     _TXSTA	set	4012
   209  0000                     _TXSTAbits	set	4012
   210  0000                     _TRMT	set	32097
   211  001081                     STR_1:
   212  001081  52                 	db	82	;'R'
   213  001082  65                 	db	101	;'e'
   214  001083  73                 	db	115	;'s'
   215  001084  69                 	db	105	;'i'
   216  001085  73                 	db	115	;'s'
   217  001086  74                 	db	116	;'t'
   218  001087  61                 	db	97	;'a'
   219  001088  6E                 	db	110	;'n'
   220  001089  63                 	db	99	;'c'
   221  00108A  65                 	db	101	;'e'
   222  00108B  3A                 	db	58	;':'
   223  00108C  20                 	db	32
   224  00108D  25                 	db	37
   225  00108E  66                 	db	102	;'f'
   226  00108F  20                 	db	32
   227  001090  4B                 	db	75	;'K'
   228  001091  0D                 	db	13
   229  001092  0A                 	db	10
   230  001093  0A                 	db	10
   231  001094  00                 	db	0
   232                           
   233                           ; #config settings
   234  001095  00                 	db	0	; dummy byte at the end
   235  0000                     
   236                           	psect	cinit
   237  002E10                     __pcinit:
   238                           	opt stack 0
   239  002E10                     start_initialization:
   240                           	opt stack 0
   241  002E10                     __initialization:
   242                           	opt stack 0
   243  002E10                     end_of_initialization:
   244                           	opt stack 0
   245  002E10                     __end_of__initialization:
   246                           	opt stack 0
   247  002E10  0E00               	movlw	low (__Lmediumconst shr (0+16))
   248  002E12  6EF8               	movwf	tblptru,c
   249  002E14  0100               	movlb	0
   250  002E16  EFA3  F00D         	goto	_main	;jump to C main() function
   251                           tblptru	equ	0xFF8
   252                           
   253                           	psect	cstackBANK0
   254  000080                     __pcstackBANK0:
   255                           	opt stack 0
   256  000080                     _printf$1491:
   257                           	opt stack 0
   258                           
   259                           ; 3 bytes @ 0x0
   260  000080                     	ds	3
   261  000083                     printf@ap:
   262                           	opt stack 0
   263                           
   264                           ; 2 bytes @ 0x3
   265  000083                     	ds	2
   266  000085                     printf@flag:
   267                           	opt stack 0
   268                           
   269                           ; 2 bytes @ 0x5
   270  000085                     	ds	2
   271  000087                     printf@prec:
   272                           	opt stack 0
   273                           
   274                           ; 2 bytes @ 0x7
   275  000087                     	ds	2
   276  000089                     printf@val:
   277                           	opt stack 0
   278                           
   279                           ; 4 bytes @ 0x9
   280  000089                     	ds	4
   281  00008D                     printf@exp:
   282                           	opt stack 0
   283                           
   284                           ; 2 bytes @ 0xD
   285  00008D                     	ds	2
   286  00008F                     printf@tmpval:
   287                           	opt stack 0
   288                           
   289                           ; 4 bytes @ 0xF
   290  00008F                     	ds	4
   291  000093                     printf@fval:
   292                           	opt stack 0
   293                           
   294                           ; 3 bytes @ 0x13
   295  000093                     	ds	3
   296  000096                     printf@c:
   297                           	opt stack 0
   298                           
   299                           ; 1 bytes @ 0x16
   300  000096                     	ds	1
   301  000097                     main@Rref:
   302                           	opt stack 0
   303                           
   304                           ; 3 bytes @ 0x17
   305  000097                     	ds	3
   306  00009A                     main@num_step:
   307                           	opt stack 0
   308                           
   309                           ; 2 bytes @ 0x1A
   310  00009A                     	ds	2
   311  00009C                     main@lower:
   312                           	opt stack 0
   313                           
   314                           ; 2 bytes @ 0x1C
   315  00009C                     	ds	2
   316  00009E                     main@upper_570:
   317                           	opt stack 0
   318                           
   319                           ; 2 bytes @ 0x1E
   320  00009E                     	ds	2
   321  0000A0                     main@lower_571:
   322                           	opt stack 0
   323                           
   324                           ; 2 bytes @ 0x20
   325  0000A0                     	ds	2
   326  0000A2                     main@volt:
   327                           	opt stack 0
   328                           
   329                           ; 3 bytes @ 0x22
   330  0000A2                     	ds	3
   331  0000A5                     main@upper:
   332                           	opt stack 0
   333                           
   334                           ; 2 bytes @ 0x25
   335  0000A5                     	ds	2
   336  0000A7                     main@R:
   337                           	opt stack 0
   338                           
   339                           ; 3 bytes @ 0x27
   340  0000A7                     	ds	3
   341                           tblptru	equ	0xFF8
   342                           
   343                           	psect	cstackCOMRAM
   344  000001                     __pcstackCOMRAM:
   345                           	opt stack 0
   346  000001                     ?_get_full_ADC:
   347                           	opt stack 0
   348  000001                     ?___ftpack:
   349                           	opt stack 0
   350  000001                     ?__tdiv_to_l_:
   351                           	opt stack 0
   352  000001                     ?__div_to_l_:
   353                           	opt stack 0
   354  000001                     ?___lldiv:
   355                           	opt stack 0
   356  000001                     ?___llmod:
   357                           	opt stack 0
   358  000001                     putch@c:
   359                           	opt stack 0
   360  000001                     Select_ADC_Channel@channel:
   361                           	opt stack 0
   362  000001                     Delay_One_Sec@i:
   363                           	opt stack 0
   364  000001                     OpenUSART@spbrg:
   365                           	opt stack 0
   366  000001                     __div_to_l_@f1:
   367                           	opt stack 0
   368  000001                     ___ftpack@arg:
   369                           	opt stack 0
   370  000001                     __tdiv_to_l_@f1:
   371                           	opt stack 0
   372  000001                     ___ftge@ff1:
   373                           	opt stack 0
   374  000001                     ___lldiv@dividend:
   375                           	opt stack 0
   376  000001                     ___llmod@dividend:
   377                           	opt stack 0
   378                           
   379                           ; 4 bytes @ 0x0
   380  000001                     	ds	2
   381  000003                     ??_get_full_ADC:
   382  000003                     OpenUSART@config:
   383                           	opt stack 0
   384                           
   385                           ; 1 bytes @ 0x2
   386  000003                     	ds	1
   387  000004                     ___ftpack@exp:
   388                           	opt stack 0
   389  000004                     __div_to_l_@f2:
   390                           	opt stack 0
   391  000004                     __tdiv_to_l_@f2:
   392                           	opt stack 0
   393  000004                     ___ftge@ff2:
   394                           	opt stack 0
   395                           
   396                           ; 3 bytes @ 0x3
   397  000004                     	ds	1
   398  000005                     ___ftpack@sign:
   399                           	opt stack 0
   400  000005                     get_full_ADC@result:
   401                           	opt stack 0
   402  000005                     ___lldiv@divisor:
   403                           	opt stack 0
   404  000005                     ___llmod@divisor:
   405                           	opt stack 0
   406                           
   407                           ; 4 bytes @ 0x4
   408  000005                     	ds	1
   409  000006                     ??___ftpack:
   410                           
   411                           ; 0 bytes @ 0x5
   412  000006                     	ds	1
   413  000007                     ??__tdiv_to_l_:
   414  000007                     ??___ftge:
   415  000007                     __div_to_l_@quot:
   416                           	opt stack 0
   417                           
   418                           ; 4 bytes @ 0x6
   419  000007                     	ds	2
   420  000009                     ?___awtoft:
   421                           	opt stack 0
   422  000009                     ?___lltoft:
   423                           	opt stack 0
   424  000009                     ___llmod@counter:
   425                           	opt stack 0
   426  000009                     ___awtoft@c:
   427                           	opt stack 0
   428  000009                     ___lldiv@quotient:
   429                           	opt stack 0
   430  000009                     ___lltoft@c:
   431                           	opt stack 0
   432                           
   433                           ; 4 bytes @ 0x8
   434  000009                     	ds	1
   435  00000A                     set_D2_color@resistance:
   436                           	opt stack 0
   437  00000A                     __tdiv_to_l_@quot:
   438                           	opt stack 0
   439                           
   440                           ; 4 bytes @ 0x9
   441  00000A                     	ds	1
   442  00000B                     __div_to_l_@cntr:
   443                           	opt stack 0
   444                           
   445                           ; 1 bytes @ 0xA
   446  00000B                     	ds	1
   447  00000C                     ___awtoft@sign:
   448                           	opt stack 0
   449  00000C                     __div_to_l_@exp1:
   450                           	opt stack 0
   451                           
   452                           ; 1 bytes @ 0xB
   453  00000C                     	ds	1
   454  00000D                     ??___lltoft:
   455  00000D                     ?___ftneg:
   456                           	opt stack 0
   457  00000D                     ___lldiv@counter:
   458                           	opt stack 0
   459  00000D                     ___ftneg@f1:
   460                           	opt stack 0
   461                           
   462                           ; 3 bytes @ 0xC
   463  00000D                     	ds	1
   464  00000E                     __tdiv_to_l_@cntr:
   465                           	opt stack 0
   466                           
   467                           ; 1 bytes @ 0xD
   468  00000E                     	ds	1
   469  00000F                     __tdiv_to_l_@exp1:
   470                           	opt stack 0
   471                           
   472                           ; 1 bytes @ 0xE
   473  00000F                     	ds	1
   474  000010                     ?___ftadd:
   475                           	opt stack 0
   476  000010                     ___ftadd@f1:
   477                           	opt stack 0
   478                           
   479                           ; 3 bytes @ 0xF
   480  000010                     	ds	1
   481  000011                     ___lltoft@exp:
   482                           	opt stack 0
   483                           
   484                           ; 1 bytes @ 0x10
   485  000011                     	ds	2
   486  000013                     ___ftadd@f2:
   487                           	opt stack 0
   488                           
   489                           ; 3 bytes @ 0x12
   490  000013                     	ds	3
   491  000016                     ??___ftadd:
   492                           
   493                           ; 0 bytes @ 0x15
   494  000016                     	ds	3
   495  000019                     ___ftadd@sign:
   496                           	opt stack 0
   497                           
   498                           ; 1 bytes @ 0x18
   499  000019                     	ds	1
   500  00001A                     ___ftadd@exp2:
   501                           	opt stack 0
   502                           
   503                           ; 1 bytes @ 0x19
   504  00001A                     	ds	1
   505  00001B                     ___ftadd@exp1:
   506                           	opt stack 0
   507                           
   508                           ; 1 bytes @ 0x1A
   509  00001B                     	ds	1
   510  00001C                     ?___ftmul:
   511                           	opt stack 0
   512  00001C                     ?___ftsub:
   513                           	opt stack 0
   514  00001C                     ___ftmul@f1:
   515                           	opt stack 0
   516  00001C                     ___ftsub@f1:
   517                           	opt stack 0
   518                           
   519                           ; 3 bytes @ 0x1B
   520  00001C                     	ds	3
   521  00001F                     ___ftmul@f2:
   522                           	opt stack 0
   523  00001F                     ___ftsub@f2:
   524                           	opt stack 0
   525                           
   526                           ; 3 bytes @ 0x1E
   527  00001F                     	ds	3
   528  000022                     ??___ftmul:
   529  000022                     
   530                           ; 0 bytes @ 0x21
   531  000022                     	ds	3
   532  000025                     ___ftmul@exp:
   533                           	opt stack 0
   534                           
   535                           ; 1 bytes @ 0x24
   536  000025                     	ds	1
   537  000026                     ___ftmul@f3_as_product:
   538                           	opt stack 0
   539                           
   540                           ; 3 bytes @ 0x25
   541  000026                     	ds	3
   542  000029                     ___ftmul@cntr:
   543                           	opt stack 0
   544                           
   545                           ; 1 bytes @ 0x28
   546  000029                     	ds	1
   547  00002A                     ___ftmul@sign:
   548                           	opt stack 0
   549                           
   550                           ; 1 bytes @ 0x29
   551  00002A                     	ds	1
   552  00002B                     ?___ftdiv:
   553                           	opt stack 0
   554  00002B                     ___ftdiv@f1:
   555                           	opt stack 0
   556                           
   557                           ; 3 bytes @ 0x2A
   558  00002B                     	ds	3
   559  00002E                     ___ftdiv@f2:
   560                           	opt stack 0
   561                           
   562                           ; 3 bytes @ 0x2D
   563  00002E                     	ds	3
   564  000031                     ??___ftdiv:
   565                           
   566                           ; 0 bytes @ 0x30
   567  000031                     	ds	3
   568  000034                     ___ftdiv@cntr:
   569                           	opt stack 0
   570                           
   571                           ; 1 bytes @ 0x33
   572  000034                     	ds	1
   573  000035                     ___ftdiv@f3:
   574                           	opt stack 0
   575                           
   576                           ; 3 bytes @ 0x34
   577  000035                     	ds	3
   578  000038                     ___ftdiv@exp:
   579                           	opt stack 0
   580                           
   581                           ; 1 bytes @ 0x37
   582  000038                     	ds	1
   583  000039                     ___ftdiv@sign:
   584                           	opt stack 0
   585                           
   586                           ; 1 bytes @ 0x38
   587  000039                     	ds	1
   588  00003A                     ?___fttol:
   589                           	opt stack 0
   590  00003A                     ___fttol@f1:
   591                           	opt stack 0
   592                           
   593                           ; 3 bytes @ 0x39
   594  00003A                     	ds	4
   595  00003E                     ??___fttol:
   596                           
   597                           ; 0 bytes @ 0x3D
   598  00003E                     	ds	5
   599  000043                     ___fttol@sign1:
   600                           	opt stack 0
   601                           
   602                           ; 1 bytes @ 0x42
   603  000043                     	ds	1
   604  000044                     ___fttol@lval:
   605                           	opt stack 0
   606                           
   607                           ; 4 bytes @ 0x43
   608  000044                     	ds	4
   609  000048                     ___fttol@exp1:
   610                           	opt stack 0
   611                           
   612                           ; 1 bytes @ 0x47
   613  000048                     	ds	1
   614  000049                     ?___awmod:
   615                           	opt stack 0
   616  000049                     ___awmod@dividend:
   617                           	opt stack 0
   618  000049                     set_D1_color@resistance:
   619                           	opt stack 0
   620                           
   621                           ; 3 bytes @ 0x48
   622  000049                     	ds	2
   623  00004B                     ___awmod@divisor:
   624                           	opt stack 0
   625                           
   626                           ; 2 bytes @ 0x4A
   627  00004B                     	ds	1
   628  00004C                     set_D1_color@range:
   629                           	opt stack 0
   630                           
   631                           ; 2 bytes @ 0x4B
   632  00004C                     	ds	1
   633  00004D                     ___awmod@counter:
   634                           	opt stack 0
   635                           
   636                           ; 1 bytes @ 0x4C
   637  00004D                     	ds	1
   638  00004E                     ___awmod@sign:
   639                           	opt stack 0
   640                           
   641                           ; 1 bytes @ 0x4D
   642  00004E                     	ds	1
   643  00004F                     ?___awdiv:
   644                           	opt stack 0
   645  00004F                     ___awdiv@dividend:
   646                           	opt stack 0
   647                           
   648                           ; 2 bytes @ 0x4E
   649  00004F                     	ds	2
   650  000051                     ___awdiv@divisor:
   651                           	opt stack 0
   652                           
   653                           ; 2 bytes @ 0x50
   654  000051                     	ds	2
   655  000053                     ___awdiv@counter:
   656                           	opt stack 0
   657                           
   658                           ; 1 bytes @ 0x52
   659  000053                     	ds	1
   660  000054                     ___awdiv@sign:
   661                           	opt stack 0
   662                           
   663                           ; 1 bytes @ 0x53
   664  000054                     	ds	1
   665  000055                     ___awdiv@quotient:
   666                           	opt stack 0
   667                           
   668                           ; 2 bytes @ 0x54
   669  000055                     	ds	2
   670  000057                     ?___wmul:
   671                           	opt stack 0
   672  000057                     ___wmul@multiplier:
   673                           	opt stack 0
   674                           
   675                           ; 2 bytes @ 0x56
   676  000057                     	ds	2
   677  000059                     ___wmul@multiplicand:
   678                           	opt stack 0
   679                           
   680                           ; 2 bytes @ 0x58
   681  000059                     	ds	2
   682  00005B                     ___wmul@product:
   683                           	opt stack 0
   684                           
   685                           ; 2 bytes @ 0x5A
   686  00005B                     	ds	2
   687  00005D                     ?_fround:
   688                           	opt stack 0
   689  00005D                     ?_scale:
   690                           	opt stack 0
   691                           
   692                           ; 3 bytes @ 0x5C
   693  00005D                     	ds	3
   694  000060                     _fround$1489:
   695                           	opt stack 0
   696  000060                     _scale$1490:
   697                           	opt stack 0
   698                           
   699                           ; 3 bytes @ 0x5F
   700  000060                     	ds	3
   701  000063                     scale@scl:
   702                           	opt stack 0
   703  000063                     _fround$1488:
   704                           	opt stack 0
   705                           
   706                           ; 3 bytes @ 0x62
   707  000063                     	ds	3
   708  000066                     fround@prec:
   709                           	opt stack 0
   710                           
   711                           ; 1 bytes @ 0x65
   712  000066                     	ds	1
   713  000067                     ?_printf:
   714                           	opt stack 0
   715  000067                     printf@f:
   716                           	opt stack 0
   717                           
   718                           ; 2 bytes @ 0x66
   719  000067                     	ds	5
   720  00006C                     ??_printf:
   721                           
   722                           ; 0 bytes @ 0x6B
   723  00006C                     	ds	6
   724  000072                     tblptru	equ	0xFF8
   725                           
   726                           ; 0 bytes @ 0x71
   727 ;;
   728 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   729 ;;
   730 ;; *************** function _main *****************
   731 ;; Defined at:
   732 ;;		line 208 in file "lab6p1.c"
   733 ;; Parameters:    Size  Location     Type
   734 ;;		None
   735 ;; Auto vars:     Size  Location     Type
   736 ;;  lower           2   32[BANK0 ] int 
   737 ;;  upper           2   30[BANK0 ] int 
   738 ;;  upper           2   37[BANK0 ] int 
   739 ;;  lower           2   28[BANK0 ] int 
   740 ;;  R               3   39[BANK0 ] float 
   741 ;;  volt            3   34[BANK0 ] float 
   742 ;;  num_step        2   26[BANK0 ] int 
   743 ;;  Rref            3   23[BANK0 ] float 
   744 ;; Return value:  Size  Location     Type
   745 ;;		None               void
   746 ;; Registers used:
   747 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   748 ;; Tracked objects:
   749 ;;		On entry : 0/0
   750 ;;		On exit  : 0/0
   751 ;;		Unchanged: 0/0
   752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   754 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   756 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   757 ;;Total ram usage:       19 bytes
   758 ;; Hardware stack levels required when called:    4
   759 ;; This function calls:
   760 ;;		_Activate_Buzzer
   761 ;;		_Deactivate_Buzzer
   762 ;;		_Delay_One_Sec
   763 ;;		_Init_ADC
   764 ;;		_Init_TRIS
   765 ;;		_Init_UART
   766 ;;		_Select_ADC_Channel
   767 ;;		___awmod
   768 ;;		___awtoft
   769 ;;		___ftadd
   770 ;;		___ftdiv
   771 ;;		___ftge
   772 ;;		___ftmul
   773 ;;		___ftneg
   774 ;;		___fttol
   775 ;;		_get_full_ADC
   776 ;;		_printf
   777 ;;		_set_D1_color
   778 ;;		_set_D2_color
   779 ;; This function is called by:
   780 ;;		Startup code after reset
   781 ;; This function uses a non-reentrant model
   782 ;;
   783                           
   784                           	psect	text0
   785  001B46                     __ptext0:
   786                           	opt stack 0
   787  001B46                     _main:
   788                           	opt stack 27
   789                           
   790                           ;lab6p1.c: 209: Init_UART();
   791                           
   792                           ;incstack = 0
   793  001B46  ECD7  F016         	call	_Init_UART	;wreg free
   794                           
   795                           ;lab6p1.c: 210: Init_ADC();
   796  001B4A  ECFB  F016         	call	_Init_ADC	;wreg free
   797                           
   798                           ;lab6p1.c: 211: Init_TRIS();
   799  001B4E  ECE1  F016         	call	_Init_TRIS	;wreg free
   800                           
   801                           ;lab6p1.c: 212: float Rref = 22;
   802  001B52  0E00               	movlw	0
   803  001B54  0100               	movlb	0	; () banked
   804  001B56  6F97               	movwf	main@Rref& (0+255),b
   805  001B58  0EB0               	movlw	176
   806  001B5A  0100               	movlb	0	; () banked
   807  001B5C  6F98               	movwf	(main@Rref+1)& (0+255),b
   808  001B5E  0E41               	movlw	65
   809  001B60  0100               	movlb	0	; () banked
   810  001B62  6F99               	movwf	(main@Rref+2)& (0+255),b
   811                           
   812                           ; BSR set to: 0
   813                           ;lab6p1.c: 213: Select_ADC_Channel(4);
   814  001B64  0E04               	movlw	4
   815  001B66  EC02  F017         	call	_Select_ADC_Channel
   816  001B6A  D000               	goto	l2788
   817  001B6C                     l2788:
   818                           
   819                           ;lab6p1.c: 216: {
   820                           ;lab6p1.c: 217: int num_step = get_full_ADC();
   821  001B6C  ECA0  F016         	call	_get_full_ADC	;wreg free
   822  001B70  C001  F09A         	movff	?_get_full_ADC,main@num_step
   823  001B74  C002  F09B         	movff	?_get_full_ADC+1,main@num_step+1
   824                           
   825                           ;lab6p1.c: 218: float volt = (num_step * 5.0)/1024;
   826  001B78  0E00               	movlw	0
   827  001B7A  6E1F               	movwf	___ftmul@f2,c
   828  001B7C  0EA0               	movlw	160
   829  001B7E  6E20               	movwf	___ftmul@f2+1,c
   830  001B80  0E40               	movlw	64
   831  001B82  6E21               	movwf	___ftmul@f2+2,c
   832  001B84  C09A  F009         	movff	main@num_step,___awtoft@c
   833  001B88  C09B  F00A         	movff	main@num_step+1,___awtoft@c+1
   834  001B8C  EC6E  F016         	call	___awtoft	;wreg free
   835  001B90  C009  F01C         	movff	?___awtoft,___ftmul@f1
   836  001B94  C00A  F01D         	movff	?___awtoft+1,___ftmul@f1+1
   837  001B98  C00B  F01E         	movff	?___awtoft+2,___ftmul@f1+2
   838  001B9C  ECA1  F012         	call	___ftmul	;wreg free
   839  001BA0  C01C  F02B         	movff	?___ftmul,___ftdiv@f1
   840  001BA4  C01D  F02C         	movff	?___ftmul+1,___ftdiv@f1+1
   841  001BA8  C01E  F02D         	movff	?___ftmul+2,___ftdiv@f1+2
   842  001BAC  0E00               	movlw	0
   843  001BAE  6E2E               	movwf	___ftdiv@f2,c
   844  001BB0  0E80               	movlw	128
   845  001BB2  6E2F               	movwf	___ftdiv@f2+1,c
   846  001BB4  0E44               	movlw	68
   847  001BB6  6E30               	movwf	___ftdiv@f2+2,c
   848  001BB8  EC90  F013         	call	___ftdiv	;wreg free
   849  001BBC  C02B  F0A2         	movff	?___ftdiv,main@volt
   850  001BC0  C02C  F0A3         	movff	?___ftdiv+1,main@volt+1
   851  001BC4  C02D  F0A4         	movff	?___ftdiv+2,main@volt+2
   852                           
   853                           ;lab6p1.c: 219: float R = (volt / (5.0 - volt)) * Rref;
   854  001BC8  0E00               	movlw	0
   855  001BCA  6E13               	movwf	___ftadd@f2,c
   856  001BCC  0EA0               	movlw	160
   857  001BCE  6E14               	movwf	___ftadd@f2+1,c
   858  001BD0  0E40               	movlw	64
   859  001BD2  6E15               	movwf	___ftadd@f2+2,c
   860  001BD4  C0A2  F00D         	movff	main@volt,___ftneg@f1
   861  001BD8  C0A3  F00E         	movff	main@volt+1,___ftneg@f1+1
   862  001BDC  C0A4  F00F         	movff	main@volt+2,___ftneg@f1+2
   863  001BE0  ECB3  F016         	call	___ftneg	;wreg free
   864  001BE4  C00D  F010         	movff	?___ftneg,___ftadd@f1
   865  001BE8  C00E  F011         	movff	?___ftneg+1,___ftadd@f1+1
   866  001BEC  C00F  F012         	movff	?___ftneg+2,___ftadd@f1+2
   867  001BF0  EC32  F010         	call	___ftadd	;wreg free
   868  001BF4  C010  F02E         	movff	?___ftadd,___ftdiv@f2
   869  001BF8  C011  F02F         	movff	?___ftadd+1,___ftdiv@f2+1
   870  001BFC  C012  F030         	movff	?___ftadd+2,___ftdiv@f2+2
   871  001C00  C0A2  F02B         	movff	main@volt,___ftdiv@f1
   872  001C04  C0A3  F02C         	movff	main@volt+1,___ftdiv@f1+1
   873  001C08  C0A4  F02D         	movff	main@volt+2,___ftdiv@f1+2
   874  001C0C  EC90  F013         	call	___ftdiv	;wreg free
   875  001C10  C02B  F01C         	movff	?___ftdiv,___ftmul@f1
   876  001C14  C02C  F01D         	movff	?___ftdiv+1,___ftmul@f1+1
   877  001C18  C02D  F01E         	movff	?___ftdiv+2,___ftmul@f1+2
   878  001C1C  C097  F01F         	movff	main@Rref,___ftmul@f2
   879  001C20  C098  F020         	movff	main@Rref+1,___ftmul@f2+1
   880  001C24  C099  F021         	movff	main@Rref+2,___ftmul@f2+2
   881  001C28  ECA1  F012         	call	___ftmul	;wreg free
   882  001C2C  C01C  F0A7         	movff	?___ftmul,main@R
   883  001C30  C01D  F0A8         	movff	?___ftmul+1,main@R+1
   884  001C34  C01E  F0A9         	movff	?___ftmul+2,main@R+2
   885                           
   886                           ;lab6p1.c: 220: if (R < 10)
   887  001C38  C0A7  F001         	movff	main@R,___ftge@ff1
   888  001C3C  C0A8  F002         	movff	main@R+1,___ftge@ff1+1
   889  001C40  C0A9  F003         	movff	main@R+2,___ftge@ff1+2
   890  001C44  0E00               	movlw	0
   891  001C46  6E04               	movwf	___ftge@ff2,c
   892  001C48  0E20               	movlw	32
   893  001C4A  6E05               	movwf	___ftge@ff2+1,c
   894  001C4C  0E41               	movlw	65
   895  001C4E  6E06               	movwf	___ftge@ff2+2,c
   896  001C50  ECAF  F014         	call	___ftge	;wreg free
   897  001C54  B0D8               	btfsc	status,0,c
   898  001C56  D057               	goto	l170
   899                           
   900                           ;lab6p1.c: 221: {
   901                           ;lab6p1.c: 222: int upper = R;
   902  001C58  C0A7  F03A         	movff	main@R,___fttol@f1
   903  001C5C  C0A8  F03B         	movff	main@R+1,___fttol@f1+1
   904  001C60  C0A9  F03C         	movff	main@R+2,___fttol@f1+2
   905  001C64  EC1D  F013         	call	___fttol	;wreg free
   906  001C68  C03A  F0A5         	movff	?___fttol,main@upper
   907  001C6C  C03B  F0A6         	movff	?___fttol+1,main@upper+1
   908                           
   909                           ;lab6p1.c: 223: int lower = (int) ((R - upper) * 10);
   910  001C70  0E00               	movlw	0
   911  001C72  6E1F               	movwf	___ftmul@f2,c
   912  001C74  0E20               	movlw	32
   913  001C76  6E20               	movwf	___ftmul@f2+1,c
   914  001C78  0E41               	movlw	65
   915  001C7A  6E21               	movwf	___ftmul@f2+2,c
   916  001C7C  C0A7  F013         	movff	main@R,___ftadd@f2
   917  001C80  C0A8  F014         	movff	main@R+1,___ftadd@f2+1
   918  001C84  C0A9  F015         	movff	main@R+2,___ftadd@f2+2
   919  001C88  C0A5  F009         	movff	main@upper,___awtoft@c
   920  001C8C  C0A6  F00A         	movff	main@upper+1,___awtoft@c+1
   921  001C90  EC6E  F016         	call	___awtoft	;wreg free
   922  001C94  C009  F00D         	movff	?___awtoft,___ftneg@f1
   923  001C98  C00A  F00E         	movff	?___awtoft+1,___ftneg@f1+1
   924  001C9C  C00B  F00F         	movff	?___awtoft+2,___ftneg@f1+2
   925  001CA0  ECB3  F016         	call	___ftneg	;wreg free
   926  001CA4  C00D  F010         	movff	?___ftneg,___ftadd@f1
   927  001CA8  C00E  F011         	movff	?___ftneg+1,___ftadd@f1+1
   928  001CAC  C00F  F012         	movff	?___ftneg+2,___ftadd@f1+2
   929  001CB0  EC32  F010         	call	___ftadd	;wreg free
   930  001CB4  C010  F01C         	movff	?___ftadd,___ftmul@f1
   931  001CB8  C011  F01D         	movff	?___ftadd+1,___ftmul@f1+1
   932  001CBC  C012  F01E         	movff	?___ftadd+2,___ftmul@f1+2
   933  001CC0  ECA1  F012         	call	___ftmul	;wreg free
   934  001CC4  C01C  F03A         	movff	?___ftmul,___fttol@f1
   935  001CC8  C01D  F03B         	movff	?___ftmul+1,___fttol@f1+1
   936  001CCC  C01E  F03C         	movff	?___ftmul+2,___fttol@f1+2
   937  001CD0  EC1D  F013         	call	___fttol	;wreg free
   938  001CD4  C03A  F09C         	movff	?___fttol,main@lower
   939  001CD8  C03B  F09D         	movff	?___fttol+1,main@lower+1
   940                           
   941                           ;lab6p1.c: 224: PORTD = LED_7seg[upper];
   942  001CDC  0E77               	movlw	low _LED_7seg
   943  001CDE  0100               	movlb	0	; () banked
   944  001CE0  25A5               	addwf	main@upper& (0+255),w,b
   945  001CE2  6EF6               	movwf	tblptrl,c
   946  001CE4  0E10               	movlw	high _LED_7seg
   947  001CE6  21A6               	addwfc	(main@upper+1)& (0+255),w,b
   948  001CE8  6EF7               	movwf	tblptrh,c
   949  001CEA                     	if	0	;There are less than 3 active tblptr bytes
   950  001CEA                     	endif
   951  001CEA  0008               	tblrd		*
   952  001CEC  CFF5 FF83          	movff	tablat,3971	;volatile
   953                           
   954                           ; BSR set to: 0
   955                           ;lab6p1.c: 225: PORTB = LED_7seg[lower];
   956  001CF0  0E77               	movlw	low _LED_7seg
   957  001CF2  0100               	movlb	0	; () banked
   958  001CF4  259C               	addwf	main@lower& (0+255),w,b
   959  001CF6  6EF6               	movwf	tblptrl,c
   960  001CF8  0E10               	movlw	high _LED_7seg
   961  001CFA  219D               	addwfc	(main@lower+1)& (0+255),w,b
   962  001CFC  6EF7               	movwf	tblptrh,c
   963  001CFE                     	if	0	;There are less than 3 active tblptr bytes
   964  001CFE                     	endif
   965  001CFE  0008               	tblrd		*
   966  001D00  CFF5 FF81          	movff	tablat,3969	;volatile
   967                           
   968                           ; BSR set to: 0
   969                           ;lab6p1.c: 226: PORTDbits.RD7 = 0;
   970  001D04  9E83               	bcf	3971,7,c	;volatile
   971  001D06                     l170:
   972                           
   973                           ;lab6p1.c: 227: }
   974                           ;lab6p1.c: 228: if (R >= 10)
   975  001D06  C0A7  F001         	movff	main@R,___ftge@ff1
   976  001D0A  C0A8  F002         	movff	main@R+1,___ftge@ff1+1
   977  001D0E  C0A9  F003         	movff	main@R+2,___ftge@ff1+2
   978  001D12  0E00               	movlw	0
   979  001D14  6E04               	movwf	___ftge@ff2,c
   980  001D16  0E20               	movlw	32
   981  001D18  6E05               	movwf	___ftge@ff2+1,c
   982  001D1A  0E41               	movlw	65
   983  001D1C  6E06               	movwf	___ftge@ff2+2,c
   984  001D1E  ECAF  F014         	call	___ftge	;wreg free
   985  001D22  A0D8               	btfss	status,0,c
   986  001D24  D046               	goto	l2812
   987                           
   988                           ;lab6p1.c: 229: {
   989                           ;lab6p1.c: 230: int upper = R / 10;
   990  001D26  0E00               	movlw	0
   991  001D28  6E2E               	movwf	___ftdiv@f2,c
   992  001D2A  0E20               	movlw	32
   993  001D2C  6E2F               	movwf	___ftdiv@f2+1,c
   994  001D2E  0E41               	movlw	65
   995  001D30  6E30               	movwf	___ftdiv@f2+2,c
   996  001D32  C0A7  F02B         	movff	main@R,___ftdiv@f1
   997  001D36  C0A8  F02C         	movff	main@R+1,___ftdiv@f1+1
   998  001D3A  C0A9  F02D         	movff	main@R+2,___ftdiv@f1+2
   999  001D3E  EC90  F013         	call	___ftdiv	;wreg free
  1000  001D42  C02B  F03A         	movff	?___ftdiv,___fttol@f1
  1001  001D46  C02C  F03B         	movff	?___ftdiv+1,___fttol@f1+1
  1002  001D4A  C02D  F03C         	movff	?___ftdiv+2,___fttol@f1+2
  1003  001D4E  EC1D  F013         	call	___fttol	;wreg free
  1004  001D52  C03A  F09E         	movff	?___fttol,main@upper_570
  1005  001D56  C03B  F09F         	movff	?___fttol+1,main@upper_570+1
  1006                           
  1007                           ;lab6p1.c: 231: int lower = (int) (R) % 10;
  1008  001D5A  C0A7  F03A         	movff	main@R,___fttol@f1
  1009  001D5E  C0A8  F03B         	movff	main@R+1,___fttol@f1+1
  1010  001D62  C0A9  F03C         	movff	main@R+2,___fttol@f1+2
  1011  001D66  EC1D  F013         	call	___fttol	;wreg free
  1012  001D6A  C03A  F049         	movff	?___fttol,___awmod@dividend
  1013  001D6E  C03B  F04A         	movff	?___fttol+1,___awmod@dividend+1
  1014  001D72  0E00               	movlw	0
  1015  001D74  6E4C               	movwf	___awmod@divisor+1,c
  1016  001D76  0E0A               	movlw	10
  1017  001D78  6E4B               	movwf	___awmod@divisor,c
  1018  001D7A  EC40  F015         	call	___awmod	;wreg free
  1019  001D7E  C049  F0A0         	movff	?___awmod,main@lower_571
  1020  001D82  C04A  F0A1         	movff	?___awmod+1,main@lower_571+1
  1021                           
  1022                           ;lab6p1.c: 232: PORTD = LED_7seg[upper];
  1023  001D86  0E77               	movlw	low _LED_7seg
  1024  001D88  0100               	movlb	0	; () banked
  1025  001D8A  259E               	addwf	main@upper_570& (0+255),w,b
  1026  001D8C  6EF6               	movwf	tblptrl,c
  1027  001D8E  0E10               	movlw	high _LED_7seg
  1028  001D90  219F               	addwfc	(main@upper_570+1)& (0+255),w,b
  1029  001D92  6EF7               	movwf	tblptrh,c
  1030  001D94                     	if	0	;There are less than 3 active tblptr bytes
  1031  001D94                     	endif
  1032  001D94  0008               	tblrd		*
  1033  001D96  CFF5 FF83          	movff	tablat,3971	;volatile
  1034                           
  1035                           ; BSR set to: 0
  1036                           ;lab6p1.c: 233: PORTB = LED_7seg[lower];
  1037  001D9A  0E77               	movlw	low _LED_7seg
  1038  001D9C  0100               	movlb	0	; () banked
  1039  001D9E  25A0               	addwf	main@lower_571& (0+255),w,b
  1040  001DA0  6EF6               	movwf	tblptrl,c
  1041  001DA2  0E10               	movlw	high _LED_7seg
  1042  001DA4  21A1               	addwfc	(main@lower_571+1)& (0+255),w,b
  1043  001DA6  6EF7               	movwf	tblptrh,c
  1044  001DA8                     	if	0	;There are less than 3 active tblptr bytes
  1045  001DA8                     	endif
  1046  001DA8  0008               	tblrd		*
  1047  001DAA  CFF5 FF81          	movff	tablat,3969	;volatile
  1048                           
  1049                           ; BSR set to: 0
  1050                           ;lab6p1.c: 234: PORTDbits.RD7 = 1;
  1051  001DAE  8E83               	bsf	3971,7,c	;volatile
  1052  001DB0  D000               	goto	l2812
  1053  001DB2                     l2812:
  1054                           
  1055                           ;lab6p1.c: 235: }
  1056                           ;lab6p1.c: 236: printf("Resistance: %f K\r\n\n", R);
  1057  001DB2  0E81               	movlw	low STR_1
  1058  001DB4  6E67               	movwf	printf@f,c
  1059  001DB6  0E10               	movlw	high STR_1
  1060  001DB8  6E68               	movwf	printf@f+1,c
  1061  001DBA  C0A7  F069         	movff	main@R,?_printf+2
  1062  001DBE  C0A8  F06A         	movff	main@R+1,?_printf+3
  1063  001DC2  C0A9  F06B         	movff	main@R+2,?_printf+4
  1064  001DC6  EC4B  F008         	call	_printf	;wreg free
  1065                           
  1066                           ;lab6p1.c: 237: set_D1_color(R);
  1067  001DCA  C0A7  F049         	movff	main@R,set_D1_color@resistance
  1068  001DCE  C0A8  F04A         	movff	main@R+1,set_D1_color@resistance+1
  1069  001DD2  C0A9  F04B         	movff	main@R+2,set_D1_color@resistance+2
  1070  001DD6  EC21  F016         	call	_set_D1_color	;wreg free
  1071                           
  1072                           ;lab6p1.c: 238: set_D2_color(R);
  1073  001DDA  C0A7  F00A         	movff	main@R,set_D2_color@resistance
  1074  001DDE  C0A8  F00B         	movff	main@R+1,set_D2_color@resistance+1
  1075  001DE2  C0A9  F00C         	movff	main@R+2,set_D2_color@resistance+2
  1076  001DE6  EC21  F012         	call	_set_D2_color	;wreg free
  1077                           
  1078                           ;lab6p1.c: 239: if (R < 0.07) Activate_Buzzer(); else Deactivate_Buzzer();
  1079  001DEA  C0A7  F001         	movff	main@R,___ftge@ff1
  1080  001DEE  C0A8  F002         	movff	main@R+1,___ftge@ff1+1
  1081  001DF2  C0A9  F003         	movff	main@R+2,___ftge@ff1+2
  1082  001DF6  0E5C               	movlw	92
  1083  001DF8  6E04               	movwf	___ftge@ff2,c
  1084  001DFA  0E8F               	movlw	143
  1085  001DFC  6E05               	movwf	___ftge@ff2+1,c
  1086  001DFE  0E3D               	movlw	61
  1087  001E00  6E06               	movwf	___ftge@ff2+2,c
  1088  001E02  ECAF  F014         	call	___ftge	;wreg free
  1089  001E06  B0D8               	btfsc	status,0,c
  1090  001E08  D003               	goto	l2822
  1091  001E0A  ECEB  F016         	call	_Activate_Buzzer	;wreg free
  1092  001E0E  D003               	goto	l2824
  1093  001E10                     l2822:
  1094  001E10  EC21  F017         	call	_Deactivate_Buzzer	;wreg free
  1095  001E14  D000               	goto	l2824
  1096  001E16                     l2824:
  1097                           
  1098                           ;lab6p1.c: 240: Delay_One_Sec();
  1099  001E16  ECC5  F016         	call	_Delay_One_Sec	;wreg free
  1100  001E1A  D6A8               	goto	l2788
  1101  001E1C  EF00  F000         	goto	start
  1102  001E20                     __end_of_main:
  1103                           	opt stack 0
  1104                           tblptru	equ	0xFF8
  1105                           tblptrh	equ	0xFF7
  1106                           tblptrl	equ	0xFF6
  1107                           tablat	equ	0xFF5
  1108                           status	equ	0xFD8
  1109                           
  1110 ;; *************** function _set_D2_color *****************
  1111 ;; Defined at:
  1112 ;;		line 144 in file "lab6p1.c"
  1113 ;; Parameters:    Size  Location     Type
  1114 ;;  resistance      3    9[COMRAM] float 
  1115 ;; Auto vars:     Size  Location     Type
  1116 ;;		None
  1117 ;; Return value:  Size  Location     Type
  1118 ;;		None               void
  1119 ;; Registers used:
  1120 ;;		wreg, status,2, status,0, cstack
  1121 ;; Tracked objects:
  1122 ;;		On entry : 0/0
  1123 ;;		On exit  : 0/0
  1124 ;;		Unchanged: 0/0
  1125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1126 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1129 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1130 ;;Total ram usage:        3 bytes
  1131 ;; Hardware stack levels used:    1
  1132 ;; Hardware stack levels required when called:    1
  1133 ;; This function calls:
  1134 ;;		_SET_D2_BLUE
  1135 ;;		_SET_D2_GREEN
  1136 ;;		_SET_D2_OFF
  1137 ;;		_SET_D2_RED
  1138 ;;		_SET_D2_WHITE
  1139 ;;		___ftge
  1140 ;; This function is called by:
  1141 ;;		_main
  1142 ;; This function uses a non-reentrant model
  1143 ;;
  1144                           
  1145                           	psect	text1
  1146  002442                     __ptext1:
  1147                           	opt stack 0
  1148  002442                     _set_D2_color:
  1149                           	opt stack 29
  1150                           
  1151                           ;lab6p1.c: 146: if (resistance > 0.3) {
  1152                           
  1153                           ;incstack = 0
  1154  002442  0E9A               	movlw	154
  1155  002444  6E01               	movwf	___ftge@ff1,c
  1156  002446  0E99               	movlw	153
  1157  002448  6E02               	movwf	___ftge@ff1+1,c
  1158  00244A  0E3E               	movlw	62
  1159  00244C  6E03               	movwf	___ftge@ff1+2,c
  1160  00244E  C00A  F004         	movff	set_D2_color@resistance,___ftge@ff2
  1161  002452  C00B  F005         	movff	set_D2_color@resistance+1,___ftge@ff2+1
  1162  002456  C00C  F006         	movff	set_D2_color@resistance+2,___ftge@ff2+2
  1163  00245A  ECAF  F014         	call	___ftge	;wreg free
  1164  00245E  B0D8               	btfsc	status,0,c
  1165  002460  D003               	goto	l2576
  1166                           
  1167                           ;lab6p1.c: 147: SET_D2_OFF();
  1168  002462  EC15  F017         	call	_SET_D2_OFF	;wreg free
  1169                           
  1170                           ;lab6p1.c: 148: } else if (resistance >= 0.2 && resistance <= 0.3) {
  1171  002466  D06C               	goto	l107
  1172  002468                     l2576:
  1173  002468  C00A  F001         	movff	set_D2_color@resistance,___ftge@ff1
  1174  00246C  C00B  F002         	movff	set_D2_color@resistance+1,___ftge@ff1+1
  1175  002470  C00C  F003         	movff	set_D2_color@resistance+2,___ftge@ff1+2
  1176  002474  0ECD               	movlw	205
  1177  002476  6E04               	movwf	___ftge@ff2,c
  1178  002478  0E4C               	movlw	76
  1179  00247A  6E05               	movwf	___ftge@ff2+1,c
  1180  00247C  0E3E               	movlw	62
  1181  00247E  6E06               	movwf	___ftge@ff2+2,c
  1182  002480  ECAF  F014         	call	___ftge	;wreg free
  1183  002484  A0D8               	btfss	status,0,c
  1184  002486  D013               	goto	l2582
  1185  002488  0E9A               	movlw	154
  1186  00248A  6E01               	movwf	___ftge@ff1,c
  1187  00248C  0E99               	movlw	153
  1188  00248E  6E02               	movwf	___ftge@ff1+1,c
  1189  002490  0E3E               	movlw	62
  1190  002492  6E03               	movwf	___ftge@ff1+2,c
  1191  002494  C00A  F004         	movff	set_D2_color@resistance,___ftge@ff2
  1192  002498  C00B  F005         	movff	set_D2_color@resistance+1,___ftge@ff2+1
  1193  00249C  C00C  F006         	movff	set_D2_color@resistance+2,___ftge@ff2+2
  1194  0024A0  ECAF  F014         	call	___ftge	;wreg free
  1195  0024A4  A0D8               	btfss	status,0,c
  1196  0024A6  D003               	goto	l2582
  1197                           
  1198                           ;lab6p1.c: 149: SET_D2_RED();
  1199  0024A8  EC11  F017         	call	_SET_D2_RED	;wreg free
  1200                           
  1201                           ;lab6p1.c: 150: } else if (resistance >= 0.1 && resistance < 0.2) {
  1202  0024AC  D049               	goto	l107
  1203  0024AE                     l2582:
  1204  0024AE  C00A  F001         	movff	set_D2_color@resistance,___ftge@ff1
  1205  0024B2  C00B  F002         	movff	set_D2_color@resistance+1,___ftge@ff1+1
  1206  0024B6  C00C  F003         	movff	set_D2_color@resistance+2,___ftge@ff1+2
  1207  0024BA  0ECD               	movlw	205
  1208  0024BC  6E04               	movwf	___ftge@ff2,c
  1209  0024BE  0ECC               	movlw	204
  1210  0024C0  6E05               	movwf	___ftge@ff2+1,c
  1211  0024C2  0E3D               	movlw	61
  1212  0024C4  6E06               	movwf	___ftge@ff2+2,c
  1213  0024C6  ECAF  F014         	call	___ftge	;wreg free
  1214  0024CA  A0D8               	btfss	status,0,c
  1215  0024CC  D013               	goto	l2588
  1216  0024CE  C00A  F001         	movff	set_D2_color@resistance,___ftge@ff1
  1217  0024D2  C00B  F002         	movff	set_D2_color@resistance+1,___ftge@ff1+1
  1218  0024D6  C00C  F003         	movff	set_D2_color@resistance+2,___ftge@ff1+2
  1219  0024DA  0ECD               	movlw	205
  1220  0024DC  6E04               	movwf	___ftge@ff2,c
  1221  0024DE  0E4C               	movlw	76
  1222  0024E0  6E05               	movwf	___ftge@ff2+1,c
  1223  0024E2  0E3E               	movlw	62
  1224  0024E4  6E06               	movwf	___ftge@ff2+2,c
  1225  0024E6  ECAF  F014         	call	___ftge	;wreg free
  1226  0024EA  B0D8               	btfsc	status,0,c
  1227  0024EC  D003               	goto	l2588
  1228                           
  1229                           ;lab6p1.c: 151: SET_D2_GREEN();
  1230  0024EE  EC19  F017         	call	_SET_D2_GREEN	;wreg free
  1231                           
  1232                           ;lab6p1.c: 152: } else if (resistance >= 0.07 && resistance < 0.1) {
  1233  0024F2  D026               	goto	l107
  1234  0024F4                     l2588:
  1235  0024F4  C00A  F001         	movff	set_D2_color@resistance,___ftge@ff1
  1236  0024F8  C00B  F002         	movff	set_D2_color@resistance+1,___ftge@ff1+1
  1237  0024FC  C00C  F003         	movff	set_D2_color@resistance+2,___ftge@ff1+2
  1238  002500  0E5C               	movlw	92
  1239  002502  6E04               	movwf	___ftge@ff2,c
  1240  002504  0E8F               	movlw	143
  1241  002506  6E05               	movwf	___ftge@ff2+1,c
  1242  002508  0E3D               	movlw	61
  1243  00250A  6E06               	movwf	___ftge@ff2+2,c
  1244  00250C  ECAF  F014         	call	___ftge	;wreg free
  1245  002510  A0D8               	btfss	status,0,c
  1246  002512  D013               	goto	l2594
  1247  002514  C00A  F001         	movff	set_D2_color@resistance,___ftge@ff1
  1248  002518  C00B  F002         	movff	set_D2_color@resistance+1,___ftge@ff1+1
  1249  00251C  C00C  F003         	movff	set_D2_color@resistance+2,___ftge@ff1+2
  1250  002520  0ECD               	movlw	205
  1251  002522  6E04               	movwf	___ftge@ff2,c
  1252  002524  0ECC               	movlw	204
  1253  002526  6E05               	movwf	___ftge@ff2+1,c
  1254  002528  0E3D               	movlw	61
  1255  00252A  6E06               	movwf	___ftge@ff2+2,c
  1256  00252C  ECAF  F014         	call	___ftge	;wreg free
  1257  002530  B0D8               	btfsc	status,0,c
  1258  002532  D003               	goto	l2594
  1259                           
  1260                           ;lab6p1.c: 153: SET_D2_BLUE();
  1261  002534  EC1D  F017         	call	_SET_D2_BLUE	;wreg free
  1262                           
  1263                           ;lab6p1.c: 154: } else {
  1264  002538  D003               	goto	l107
  1265  00253A                     l2594:
  1266                           
  1267                           ;lab6p1.c: 155: SET_D2_WHITE();
  1268  00253A  EC0D  F017         	call	_SET_D2_WHITE	;wreg free
  1269  00253E  D000               	goto	l107
  1270  002540                     l107:
  1271  002540  0012               	return		;funcret
  1272  002542                     __end_of_set_D2_color:
  1273                           	opt stack 0
  1274                           tblptru	equ	0xFF8
  1275                           tblptrh	equ	0xFF7
  1276                           tblptrl	equ	0xFF6
  1277                           tablat	equ	0xFF5
  1278                           status	equ	0xFD8
  1279                           
  1280 ;; *************** function _SET_D2_WHITE *****************
  1281 ;; Defined at:
  1282 ;;		line 195 in file "lab6p1.c"
  1283 ;; Parameters:    Size  Location     Type
  1284 ;;		None
  1285 ;; Auto vars:     Size  Location     Type
  1286 ;;		None
  1287 ;; Return value:  Size  Location     Type
  1288 ;;		None               void
  1289 ;; Registers used:
  1290 ;;		None
  1291 ;; Tracked objects:
  1292 ;;		On entry : 0/0
  1293 ;;		On exit  : 0/0
  1294 ;;		Unchanged: 0/0
  1295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1300 ;;Total ram usage:        0 bytes
  1301 ;; Hardware stack levels used:    1
  1302 ;; This function calls:
  1303 ;;		Nothing
  1304 ;; This function is called by:
  1305 ;;		_set_D2_color
  1306 ;; This function uses a non-reentrant model
  1307 ;;
  1308                           
  1309                           	psect	text2
  1310  002E1A                     __ptext2:
  1311                           	opt stack 0
  1312  002E1A                     _SET_D2_WHITE:
  1313                           	opt stack 29
  1314                           
  1315                           ;incstack = 0
  1316  002E1A  8482               	bsf	3970,2,c	;volatile
  1317  002E1C  8682               	bsf	3970,3,c	;volatile
  1318  002E1E  8882               	bsf	3970,4,c	;volatile
  1319  002E20  0012               	return		;funcret
  1320  002E22                     __end_of_SET_D2_WHITE:
  1321                           	opt stack 0
  1322                           tblptru	equ	0xFF8
  1323                           tblptrh	equ	0xFF7
  1324                           tblptrl	equ	0xFF6
  1325                           tablat	equ	0xFF5
  1326                           status	equ	0xFD8
  1327                           
  1328 ;; *************** function _SET_D2_RED *****************
  1329 ;; Defined at:
  1330 ;;		line 189 in file "lab6p1.c"
  1331 ;; Parameters:    Size  Location     Type
  1332 ;;		None
  1333 ;; Auto vars:     Size  Location     Type
  1334 ;;		None
  1335 ;; Return value:  Size  Location     Type
  1336 ;;		None               void
  1337 ;; Registers used:
  1338 ;;		None
  1339 ;; Tracked objects:
  1340 ;;		On entry : 0/0
  1341 ;;		On exit  : 0/0
  1342 ;;		Unchanged: 0/0
  1343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1348 ;;Total ram usage:        0 bytes
  1349 ;; Hardware stack levels used:    1
  1350 ;; This function calls:
  1351 ;;		Nothing
  1352 ;; This function is called by:
  1353 ;;		_set_D2_color
  1354 ;; This function uses a non-reentrant model
  1355 ;;
  1356                           
  1357                           	psect	text3
  1358  002E22                     __ptext3:
  1359                           	opt stack 0
  1360  002E22                     _SET_D2_RED:
  1361                           	opt stack 29
  1362                           
  1363                           ;incstack = 0
  1364  002E22  8482               	bsf	3970,2,c	;volatile
  1365  002E24  9682               	bcf	3970,3,c	;volatile
  1366  002E26  9882               	bcf	3970,4,c	;volatile
  1367  002E28  0012               	return		;funcret
  1368  002E2A                     __end_of_SET_D2_RED:
  1369                           	opt stack 0
  1370                           tblptru	equ	0xFF8
  1371                           tblptrh	equ	0xFF7
  1372                           tblptrl	equ	0xFF6
  1373                           tablat	equ	0xFF5
  1374                           status	equ	0xFD8
  1375                           
  1376 ;; *************** function _SET_D2_OFF *****************
  1377 ;; Defined at:
  1378 ;;		line 196 in file "lab6p1.c"
  1379 ;; Parameters:    Size  Location     Type
  1380 ;;		None
  1381 ;; Auto vars:     Size  Location     Type
  1382 ;;		None
  1383 ;; Return value:  Size  Location     Type
  1384 ;;		None               void
  1385 ;; Registers used:
  1386 ;;		None
  1387 ;; Tracked objects:
  1388 ;;		On entry : 0/0
  1389 ;;		On exit  : 0/0
  1390 ;;		Unchanged: 0/0
  1391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1396 ;;Total ram usage:        0 bytes
  1397 ;; Hardware stack levels used:    1
  1398 ;; This function calls:
  1399 ;;		Nothing
  1400 ;; This function is called by:
  1401 ;;		_set_D2_color
  1402 ;; This function uses a non-reentrant model
  1403 ;;
  1404                           
  1405                           	psect	text4
  1406  002E2A                     __ptext4:
  1407                           	opt stack 0
  1408  002E2A                     _SET_D2_OFF:
  1409                           	opt stack 29
  1410                           
  1411                           ;incstack = 0
  1412  002E2A  9482               	bcf	3970,2,c	;volatile
  1413  002E2C  9682               	bcf	3970,3,c	;volatile
  1414  002E2E  9882               	bcf	3970,4,c	;volatile
  1415  002E30  0012               	return		;funcret
  1416  002E32                     __end_of_SET_D2_OFF:
  1417                           	opt stack 0
  1418                           tblptru	equ	0xFF8
  1419                           tblptrh	equ	0xFF7
  1420                           tblptrl	equ	0xFF6
  1421                           tablat	equ	0xFF5
  1422                           status	equ	0xFD8
  1423                           
  1424 ;; *************** function _SET_D2_GREEN *****************
  1425 ;; Defined at:
  1426 ;;		line 190 in file "lab6p1.c"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;		None
  1429 ;; Auto vars:     Size  Location     Type
  1430 ;;		None
  1431 ;; Return value:  Size  Location     Type
  1432 ;;		None               void
  1433 ;; Registers used:
  1434 ;;		None
  1435 ;; Tracked objects:
  1436 ;;		On entry : 0/0
  1437 ;;		On exit  : 0/0
  1438 ;;		Unchanged: 0/0
  1439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1444 ;;Total ram usage:        0 bytes
  1445 ;; Hardware stack levels used:    1
  1446 ;; This function calls:
  1447 ;;		Nothing
  1448 ;; This function is called by:
  1449 ;;		_set_D2_color
  1450 ;; This function uses a non-reentrant model
  1451 ;;
  1452                           
  1453                           	psect	text5
  1454  002E32                     __ptext5:
  1455                           	opt stack 0
  1456  002E32                     _SET_D2_GREEN:
  1457                           	opt stack 29
  1458                           
  1459                           ;incstack = 0
  1460  002E32  9482               	bcf	3970,2,c	;volatile
  1461  002E34  8682               	bsf	3970,3,c	;volatile
  1462  002E36  9882               	bcf	3970,4,c	;volatile
  1463  002E38  0012               	return		;funcret
  1464  002E3A                     __end_of_SET_D2_GREEN:
  1465                           	opt stack 0
  1466                           tblptru	equ	0xFF8
  1467                           tblptrh	equ	0xFF7
  1468                           tblptrl	equ	0xFF6
  1469                           tablat	equ	0xFF5
  1470                           status	equ	0xFD8
  1471                           
  1472 ;; *************** function _SET_D2_BLUE *****************
  1473 ;; Defined at:
  1474 ;;		line 191 in file "lab6p1.c"
  1475 ;; Parameters:    Size  Location     Type
  1476 ;;		None
  1477 ;; Auto vars:     Size  Location     Type
  1478 ;;		None
  1479 ;; Return value:  Size  Location     Type
  1480 ;;		None               void
  1481 ;; Registers used:
  1482 ;;		None
  1483 ;; Tracked objects:
  1484 ;;		On entry : 0/0
  1485 ;;		On exit  : 0/0
  1486 ;;		Unchanged: 0/0
  1487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1492 ;;Total ram usage:        0 bytes
  1493 ;; Hardware stack levels used:    1
  1494 ;; This function calls:
  1495 ;;		Nothing
  1496 ;; This function is called by:
  1497 ;;		_set_D2_color
  1498 ;; This function uses a non-reentrant model
  1499 ;;
  1500                           
  1501                           	psect	text6
  1502  002E3A                     __ptext6:
  1503                           	opt stack 0
  1504  002E3A                     _SET_D2_BLUE:
  1505                           	opt stack 29
  1506                           
  1507                           ;incstack = 0
  1508  002E3A  9482               	bcf	3970,2,c	;volatile
  1509  002E3C  9682               	bcf	3970,3,c	;volatile
  1510  002E3E  8882               	bsf	3970,4,c	;volatile
  1511  002E40  0012               	return		;funcret
  1512  002E42                     __end_of_SET_D2_BLUE:
  1513                           	opt stack 0
  1514                           tblptru	equ	0xFF8
  1515                           tblptrh	equ	0xFF7
  1516                           tblptrl	equ	0xFF6
  1517                           tablat	equ	0xFF5
  1518                           status	equ	0xFD8
  1519                           
  1520 ;; *************** function _set_D1_color *****************
  1521 ;; Defined at:
  1522 ;;		line 133 in file "lab6p1.c"
  1523 ;; Parameters:    Size  Location     Type
  1524 ;;  resistance      3   72[COMRAM] float 
  1525 ;; Auto vars:     Size  Location     Type
  1526 ;;  range           2   75[COMRAM] int 
  1527 ;; Return value:  Size  Location     Type
  1528 ;;		None               void
  1529 ;; Registers used:
  1530 ;;		wreg, status,2, status,0, cstack
  1531 ;; Tracked objects:
  1532 ;;		On entry : 0/0
  1533 ;;		On exit  : 0/0
  1534 ;;		Unchanged: 0/0
  1535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1536 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1537 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1539 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1540 ;;Total ram usage:        5 bytes
  1541 ;; Hardware stack levels used:    1
  1542 ;; Hardware stack levels required when called:    2
  1543 ;; This function calls:
  1544 ;;		___ftdiv
  1545 ;;		___fttol
  1546 ;; This function is called by:
  1547 ;;		_main
  1548 ;; This function uses a non-reentrant model
  1549 ;;
  1550                           
  1551                           	psect	text7
  1552  002C42                     __ptext7:
  1553                           	opt stack 0
  1554  002C42                     _set_D1_color:
  1555                           	opt stack 28
  1556                           
  1557                           ;lab6p1.c: 134: int range = (int) (resistance / 10);
  1558                           
  1559                           ;incstack = 0
  1560  002C42  0E00               	movlw	0
  1561  002C44  6E2E               	movwf	___ftdiv@f2,c
  1562  002C46  0E20               	movlw	32
  1563  002C48  6E2F               	movwf	___ftdiv@f2+1,c
  1564  002C4A  0E41               	movlw	65
  1565  002C4C  6E30               	movwf	___ftdiv@f2+2,c
  1566  002C4E  C049  F02B         	movff	set_D1_color@resistance,___ftdiv@f1
  1567  002C52  C04A  F02C         	movff	set_D1_color@resistance+1,___ftdiv@f1+1
  1568  002C56  C04B  F02D         	movff	set_D1_color@resistance+2,___ftdiv@f1+2
  1569  002C5A  EC90  F013         	call	___ftdiv	;wreg free
  1570  002C5E  C02B  F03A         	movff	?___ftdiv,___fttol@f1
  1571  002C62  C02C  F03B         	movff	?___ftdiv+1,___fttol@f1+1
  1572  002C66  C02D  F03C         	movff	?___ftdiv+2,___fttol@f1+2
  1573  002C6A  EC1D  F013         	call	___fttol	;wreg free
  1574  002C6E  C03A  F04C         	movff	?___fttol,set_D1_color@range
  1575  002C72  C03B  F04D         	movff	?___fttol+1,set_D1_color@range+1
  1576                           
  1577                           ;lab6p1.c: 135: if (range >= 0 && range < 7)
  1578  002C76  BE4D               	btfsc	set_D1_color@range+1,7,c
  1579  002C78  D00B               	goto	l2570
  1580  002C7A  BE4D               	btfsc	set_D1_color@range+1,7,c
  1581  002C7C  D006               	goto	l2568
  1582  002C7E  504D               	movf	set_D1_color@range+1,w,c
  1583  002C80  E107               	bnz	l2570
  1584  002C82  0E07               	movlw	7
  1585  002C84  5C4C               	subwf	set_D1_color@range,w,c
  1586  002C86  B0D8               	btfsc	status,0,c
  1587  002C88  D003               	goto	l2570
  1588  002C8A                     l2568:
  1589                           
  1590                           ;lab6p1.c: 136: PORTE = range;
  1591  002C8A  C04C  FF84         	movff	set_D1_color@range,3972	;volatile
  1592  002C8E  D003               	goto	l96
  1593  002C90                     l2570:
  1594                           
  1595                           ;lab6p1.c: 137: else
  1596                           ;lab6p1.c: 138: PORTE = 0x07;
  1597  002C90  0E07               	movlw	7
  1598  002C92  6E84               	movwf	3972,c	;volatile
  1599  002C94  D000               	goto	l96
  1600  002C96                     l96:
  1601  002C96  0012               	return		;funcret
  1602  002C98                     __end_of_set_D1_color:
  1603                           	opt stack 0
  1604                           tblptru	equ	0xFF8
  1605                           tblptrh	equ	0xFF7
  1606                           tblptrl	equ	0xFF6
  1607                           tablat	equ	0xFF5
  1608                           status	equ	0xFD8
  1609                           
  1610 ;; *************** function ___ftdiv *****************
  1611 ;; Defined at:
  1612 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  1613 ;; Parameters:    Size  Location     Type
  1614 ;;  f1              3   42[COMRAM] float 
  1615 ;;  f2              3   45[COMRAM] float 
  1616 ;; Auto vars:     Size  Location     Type
  1617 ;;  f3              3   52[COMRAM] float 
  1618 ;;  sign            1   56[COMRAM] unsigned char 
  1619 ;;  exp             1   55[COMRAM] unsigned char 
  1620 ;;  cntr            1   51[COMRAM] unsigned char 
  1621 ;; Return value:  Size  Location     Type
  1622 ;;                  3   42[COMRAM] float 
  1623 ;; Registers used:
  1624 ;;		wreg, status,2, status,0, cstack
  1625 ;; Tracked objects:
  1626 ;;		On entry : 0/0
  1627 ;;		On exit  : 0/0
  1628 ;;		Unchanged: 0/0
  1629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1630 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1631 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1632 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1633 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1634 ;;Total ram usage:       15 bytes
  1635 ;; Hardware stack levels used:    1
  1636 ;; Hardware stack levels required when called:    1
  1637 ;; This function calls:
  1638 ;;		___ftpack
  1639 ;; This function is called by:
  1640 ;;		_set_D1_color
  1641 ;;		_main
  1642 ;; This function uses a non-reentrant model
  1643 ;;
  1644                           
  1645                           	psect	text8
  1646  002720                     __ptext8:
  1647                           	opt stack 0
  1648  002720                     ___ftdiv:
  1649                           	opt stack 28
  1650                           
  1651                           ;incstack = 0
  1652  002720  C02D  F031         	movff	___ftdiv@f1+2,??___ftdiv
  1653  002724  6A32               	clrf	(??___ftdiv+1)& (0+255),c
  1654  002726  6A33               	clrf	(??___ftdiv+2)& (0+255),c
  1655  002728  342C               	rlcf	___ftdiv@f1+1,w,c
  1656  00272A  3631               	rlcf	??___ftdiv& (0+255),f,c
  1657  00272C  E301               	bnc	u2301
  1658  00272E  8032               	bsf	(??___ftdiv+1)& (0+255),0,c
  1659  002730                     u2301:
  1660  002730  5031               	movf	??___ftdiv,w,c
  1661  002732  6E38               	movwf	___ftdiv@exp,c
  1662  002734  5038               	movf	___ftdiv@exp,w,c
  1663  002736  A4D8               	btfss	status,2,c
  1664  002738  D002               	goto	l2378
  1665  00273A  D00E               	goto	l2380
  1666  00273C  D061               	goto	l692
  1667  00273E                     l2378:
  1668  00273E  C030  F031         	movff	___ftdiv@f2+2,??___ftdiv
  1669  002742  6A32               	clrf	(??___ftdiv+1)& (0+255),c
  1670  002744  6A33               	clrf	(??___ftdiv+2)& (0+255),c
  1671  002746  342F               	rlcf	___ftdiv@f2+1,w,c
  1672  002748  3631               	rlcf	??___ftdiv& (0+255),f,c
  1673  00274A  E301               	bnc	u2321
  1674  00274C  8032               	bsf	(??___ftdiv+1)& (0+255),0,c
  1675  00274E                     u2321:
  1676  00274E  5031               	movf	??___ftdiv,w,c
  1677  002750  6E39               	movwf	___ftdiv@sign,c
  1678  002752  5039               	movf	___ftdiv@sign,w,c
  1679  002754  A4D8               	btfss	status,2,c
  1680  002756  D007               	goto	l2384
  1681  002758                     l2380:
  1682  002758  0E00               	movlw	0
  1683  00275A  6E2B               	movwf	?___ftdiv,c
  1684  00275C  0E00               	movlw	0
  1685  00275E  6E2C               	movwf	?___ftdiv+1,c
  1686  002760  0E00               	movlw	0
  1687  002762  6E2D               	movwf	?___ftdiv+2,c
  1688  002764  D04D               	goto	l692
  1689  002766                     l2384:
  1690  002766  0E00               	movlw	0
  1691  002768  6E35               	movwf	___ftdiv@f3,c
  1692  00276A  0E00               	movlw	0
  1693  00276C  6E36               	movwf	___ftdiv@f3+1,c
  1694  00276E  0E00               	movlw	0
  1695  002770  6E37               	movwf	___ftdiv@f3+2,c
  1696  002772  5039               	movf	___ftdiv@sign,w,c
  1697  002774  0F89               	addlw	137
  1698  002776  5E38               	subwf	___ftdiv@exp,f,c
  1699  002778  C02D  F039         	movff	___ftdiv@f1+2,___ftdiv@sign
  1700  00277C  5030               	movf	___ftdiv@f2+2,w,c
  1701  00277E  1A39               	xorwf	___ftdiv@sign,f,c
  1702  002780  0E80               	movlw	128
  1703  002782  1639               	andwf	___ftdiv@sign,f,c
  1704  002784  8E2C               	bsf	___ftdiv@f1+1,7,c
  1705  002786  0EFF               	movlw	255
  1706  002788  162B               	andwf	___ftdiv@f1,f,c
  1707  00278A  0EFF               	movlw	255
  1708  00278C  162C               	andwf	___ftdiv@f1+1,f,c
  1709  00278E  0E00               	movlw	0
  1710  002790  162D               	andwf	___ftdiv@f1+2,f,c
  1711  002792  8E2F               	bsf	___ftdiv@f2+1,7,c
  1712  002794  0EFF               	movlw	255
  1713  002796  162E               	andwf	___ftdiv@f2,f,c
  1714  002798  0EFF               	movlw	255
  1715  00279A  162F               	andwf	___ftdiv@f2+1,f,c
  1716  00279C  0E00               	movlw	0
  1717  00279E  1630               	andwf	___ftdiv@f2+2,f,c
  1718  0027A0  0E18               	movlw	24
  1719  0027A2  6E34               	movwf	___ftdiv@cntr,c
  1720  0027A4  D000               	goto	l2404
  1721  0027A6                     l2404:
  1722  0027A6  90D8               	bcf	status,0,c
  1723  0027A8  3635               	rlcf	___ftdiv@f3,f,c
  1724  0027AA  3636               	rlcf	___ftdiv@f3+1,f,c
  1725  0027AC  3637               	rlcf	___ftdiv@f3+2,f,c
  1726  0027AE  502E               	movf	___ftdiv@f2,w,c
  1727  0027B0  5C2B               	subwf	___ftdiv@f1,w,c
  1728  0027B2  502F               	movf	___ftdiv@f2+1,w,c
  1729  0027B4  582C               	subwfb	___ftdiv@f1+1,w,c
  1730  0027B6  5030               	movf	___ftdiv@f2+2,w,c
  1731  0027B8  582D               	subwfb	___ftdiv@f1+2,w,c
  1732  0027BA  A0D8               	btfss	status,0,c
  1733  0027BC  D007               	goto	l695
  1734  0027BE  502E               	movf	___ftdiv@f2,w,c
  1735  0027C0  5E2B               	subwf	___ftdiv@f1,f,c
  1736  0027C2  502F               	movf	___ftdiv@f2+1,w,c
  1737  0027C4  5A2C               	subwfb	___ftdiv@f1+1,f,c
  1738  0027C6  5030               	movf	___ftdiv@f2+2,w,c
  1739  0027C8  5A2D               	subwfb	___ftdiv@f1+2,f,c
  1740  0027CA  8035               	bsf	___ftdiv@f3,0,c
  1741  0027CC                     l695:
  1742  0027CC  90D8               	bcf	status,0,c
  1743  0027CE  362B               	rlcf	___ftdiv@f1,f,c
  1744  0027D0  362C               	rlcf	___ftdiv@f1+1,f,c
  1745  0027D2  362D               	rlcf	___ftdiv@f1+2,f,c
  1746  0027D4  2E34               	decfsz	___ftdiv@cntr,f,c
  1747  0027D6  D7E7               	goto	l2404
  1748  0027D8  D000               	goto	l2414
  1749  0027DA                     l2414:
  1750  0027DA  C035  F001         	movff	___ftdiv@f3,___ftpack@arg
  1751  0027DE  C036  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  1752  0027E2  C037  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  1753  0027E6  C038  F004         	movff	___ftdiv@exp,___ftpack@exp
  1754  0027EA  C039  F005         	movff	___ftdiv@sign,___ftpack@sign
  1755  0027EE  EC01  F014         	call	___ftpack	;wreg free
  1756  0027F2  C001  F02B         	movff	?___ftpack,?___ftdiv
  1757  0027F6  C002  F02C         	movff	?___ftpack+1,?___ftdiv+1
  1758  0027FA  C003  F02D         	movff	?___ftpack+2,?___ftdiv+2
  1759  0027FE  D000               	goto	l692
  1760  002800                     l692:
  1761  002800  0012               	return		;funcret
  1762  002802                     __end_of___ftdiv:
  1763                           	opt stack 0
  1764                           tblptru	equ	0xFF8
  1765                           tblptrh	equ	0xFF7
  1766                           tblptrl	equ	0xFF6
  1767                           tablat	equ	0xFF5
  1768                           status	equ	0xFD8
  1769                           
  1770 ;; *************** function _printf *****************
  1771 ;; Defined at:
  1772 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  1773 ;; Parameters:    Size  Location     Type
  1774 ;;  f               2  102[COMRAM] PTR const unsigned char 
  1775 ;;		 -> STR_1(20), 
  1776 ;; Auto vars:     Size  Location     Type
  1777 ;;  tmpval          4   15[BANK0 ] struct .
  1778 ;;  val             4    9[BANK0 ] unsigned long 
  1779 ;;  fval            3   19[BANK0 ] unsigned long 
  1780 ;;  cp              3    0        PTR const unsigned char 
  1781 ;;  exp             2   13[BANK0 ] int 
  1782 ;;  prec            2    7[BANK0 ] int 
  1783 ;;  flag            2    5[BANK0 ] unsigned short 
  1784 ;;  ap              2    3[BANK0 ] PTR void [1]
  1785 ;;		 -> ?_printf(2), 
  1786 ;;  len             2    0        unsigned int 
  1787 ;;  width           2    0        int 
  1788 ;;  c               1   22[BANK0 ] char 
  1789 ;;  d               1    0        unsigned char 
  1790 ;; Return value:  Size  Location     Type
  1791 ;;                  2  102[COMRAM] int 
  1792 ;; Registers used:
  1793 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1794 ;; Tracked objects:
  1795 ;;		On entry : 0/0
  1796 ;;		On exit  : 0/0
  1797 ;;		Unchanged: 0/0
  1798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1799 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1800 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1801 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1802 ;;      Totals:        11      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1803 ;;Total ram usage:       34 bytes
  1804 ;; Hardware stack levels used:    1
  1805 ;; Hardware stack levels required when called:    3
  1806 ;; This function calls:
  1807 ;;		___awdiv
  1808 ;;		___ftadd
  1809 ;;		___ftge
  1810 ;;		___ftmul
  1811 ;;		___ftneg
  1812 ;;		___ftsub
  1813 ;;		___fttol
  1814 ;;		___lldiv
  1815 ;;		___llmod
  1816 ;;		___lltoft
  1817 ;;		___wmul
  1818 ;;		__div_to_l_
  1819 ;;		__tdiv_to_l_
  1820 ;;		_fround
  1821 ;;		_putch
  1822 ;;		_scale
  1823 ;; This function is called by:
  1824 ;;		_main
  1825 ;; This function uses a non-reentrant model
  1826 ;;
  1827                           
  1828                           	psect	text9
  1829  001096                     __ptext9:
  1830                           	opt stack 0
  1831  001096                     _printf:
  1832                           	opt stack 27
  1833                           
  1834                           ;doprnt.c: 466: va_list ap;
  1835                           ;doprnt.c: 499: signed char c;
  1836                           ;doprnt.c: 501: int width;
  1837                           ;doprnt.c: 504: int prec;
  1838                           ;doprnt.c: 508: unsigned short flag;
  1839                           ;doprnt.c: 515: char d;
  1840                           ;doprnt.c: 516: double fval;
  1841                           ;doprnt.c: 517: int exp;
  1842                           ;doprnt.c: 523: union {
  1843                           ;doprnt.c: 524: unsigned long vd;
  1844                           ;doprnt.c: 525: double integ;
  1845                           ;doprnt.c: 526: } tmpval;
  1846                           ;doprnt.c: 528: unsigned long val;
  1847                           ;doprnt.c: 529: unsigned len;
  1848                           ;doprnt.c: 530: const char * cp;
  1849                           ;doprnt.c: 533: *ap = __va_start();
  1850                           
  1851                           ;incstack = 0
  1852  001096  0E69               	movlw	low (?_printf+2)
  1853  001098  0100               	movlb	0	; () banked
  1854  00109A  6F83               	movwf	printf@ap& (0+255),b
  1855  00109C  0E00               	movlw	high (?_printf+2)
  1856  00109E  0100               	movlb	0	; () banked
  1857  0010A0  6F84               	movwf	(printf@ap+1)& (0+255),b
  1858                           
  1859                           ;doprnt.c: 536: while(c = *f++) {
  1860  0010A2  D351               	goto	l2762
  1861  0010A4                     l2614:
  1862                           
  1863                           ; BSR set to: 0
  1864                           ;doprnt.c: 538: if(c != '%')
  1865  0010A4  0E25               	movlw	37
  1866  0010A6  0100               	movlb	0	; () banked
  1867  0010A8  1996               	xorwf	printf@c& (0+255),w,b
  1868  0010AA  B4D8               	btfsc	status,2,c
  1869  0010AC  D005               	goto	l2618
  1870                           
  1871                           ; BSR set to: 0
  1872                           ;doprnt.c: 540: {
  1873                           ;doprnt.c: 541: (putch(c) );
  1874  0010AE  0100               	movlb	0	; () banked
  1875  0010B0  5196               	movf	printf@c& (0+255),w,b
  1876  0010B2  ECF4  F016         	call	_putch
  1877                           
  1878                           ;doprnt.c: 542: continue;
  1879  0010B6  D347               	goto	l2762
  1880  0010B8                     l2618:
  1881                           
  1882                           ;doprnt.c: 543: }
  1883                           ;doprnt.c: 548: flag = 0;
  1884  0010B8  0E00               	movlw	0
  1885  0010BA  0100               	movlb	0	; () banked
  1886  0010BC  6F86               	movwf	(printf@flag+1)& (0+255),b
  1887  0010BE  0E00               	movlw	0
  1888  0010C0  6F85               	movwf	printf@flag& (0+255),b
  1889                           
  1890                           ;doprnt.c: 635: switch(c = *f++) {
  1891  0010C2  D006               	goto	l2624
  1892                           
  1893                           ; BSR set to: 0
  1894                           ;doprnt.c: 638: goto alldone;
  1895                           
  1896                           ;doprnt.c: 637: case 0:
  1897  0010C4  D34F               	goto	l259
  1898  0010C6                     l2620:
  1899                           
  1900                           ; BSR set to: 0
  1901                           ;doprnt.c: 663: flag |= 0x400;
  1902  0010C6  0100               	movlb	0	; () banked
  1903  0010C8  8586               	bsf	(printf@flag+1)& (0+255),2,b
  1904                           
  1905                           ;doprnt.c: 664: break;
  1906  0010CA  D014               	goto	l2626
  1907                           
  1908                           ; BSR set to: 0
  1909                           ;doprnt.c: 813: continue;
  1910                           
  1911                           ;doprnt.c: 802: default:
  1912  0010CC  D33C               	goto	l2762
  1913                           
  1914                           ; BSR set to: 0
  1915                           ;doprnt.c: 822: }
  1916  0010CE  D012               	goto	l2626
  1917  0010D0                     l2624:
  1918                           
  1919                           ; BSR set to: 0
  1920  0010D0  C067  FFF6         	movff	printf@f,tblptrl
  1921  0010D4  C068  FFF7         	movff	printf@f+1,tblptrh
  1922  0010D8  4A67               	infsnz	printf@f,f,c
  1923  0010DA  2A68               	incf	printf@f+1,f,c
  1924  0010DC                     	if	0	;tblptru may be non-zero
  1925  0010DC                     	endif
  1926  0010DC                     	if	0	;tblptru may be non-zero
  1927  0010DC                     	endif
  1928  0010DC  0008               	tblrd		*
  1929  0010DE  CFF5 F096          	movff	tablat,printf@c
  1930  0010E2  0100               	movlb	0	; () banked
  1931  0010E4  5196               	movf	printf@c& (0+255),w,b
  1932                           
  1933                           ; Switch size 1, requested type "space"
  1934                           ; Number of cases is 2, Range of values is 0 to 102
  1935                           ; switch strategies available:
  1936                           ; Name         Instructions Cycles
  1937                           ; simple_byte            7     4 (average)
  1938                           ;	Chosen strategy is simple_byte
  1939  0010E6  0A00               	xorlw	0	; case 0
  1940  0010E8  B4D8               	btfsc	status,2,c
  1941  0010EA  D33C               	goto	l259
  1942  0010EC  0A66               	xorlw	102	; case 102
  1943  0010EE  B4D8               	btfsc	status,2,c
  1944  0010F0  D7EA               	goto	l2620
  1945  0010F2  D329               	goto	l2762
  1946  0010F4                     l2626:
  1947                           
  1948                           ; BSR set to: 0
  1949                           ;doprnt.c: 825: if(flag & (0x700)) {
  1950  0010F4  0E07               	movlw	7
  1951  0010F6  0100               	movlb	0	; () banked
  1952  0010F8  1586               	andwf	(printf@flag+1)& (0+255),w,b
  1953  0010FA  B4D8               	btfsc	status,2,c
  1954  0010FC  D314               	goto	l2758
  1955                           
  1956                           ; BSR set to: 0
  1957                           ;doprnt.c: 829: prec = 6;
  1958  0010FE  0E00               	movlw	0
  1959  001100  0100               	movlb	0	; () banked
  1960  001102  6F88               	movwf	(printf@prec+1)& (0+255),b
  1961  001104  0E06               	movlw	6
  1962  001106  6F87               	movwf	printf@prec& (0+255),b
  1963                           
  1964                           ; BSR set to: 0
  1965                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1966  001108  C083  FFD9         	movff	printf@ap,fsr2l
  1967  00110C  C084  FFDA         	movff	printf@ap+1,fsr2h
  1968  001110  CFDE F093          	movff	postinc2,printf@fval
  1969  001114  CFDE F094          	movff	postinc2,printf@fval+1
  1970  001118  CFDD F095          	movff	postdec2,printf@fval+2
  1971                           
  1972                           ; BSR set to: 0
  1973  00111C  0E03               	movlw	3
  1974  00111E  0100               	movlb	0	; () banked
  1975  001120  2783               	addwf	printf@ap& (0+255),f,b
  1976  001122  0E00               	movlw	0
  1977  001124  2384               	addwfc	(printf@ap+1)& (0+255),f,b
  1978                           
  1979                           ; BSR set to: 0
  1980                           ;doprnt.c: 831: if(fval < 0.0) {
  1981  001126  0100               	movlb	0	; () banked
  1982  001128  AF95               	btfss	(printf@fval+2)& (0+255),7,b
  1983  00112A  D012               	goto	l2640
  1984                           
  1985                           ; BSR set to: 0
  1986                           ;doprnt.c: 832: fval = -fval;
  1987  00112C  C093  F00D         	movff	printf@fval,___ftneg@f1
  1988  001130  C094  F00E         	movff	printf@fval+1,___ftneg@f1+1
  1989  001134  C095  F00F         	movff	printf@fval+2,___ftneg@f1+2
  1990  001138  ECB3  F016         	call	___ftneg	;wreg free
  1991  00113C  C00D  F093         	movff	?___ftneg,printf@fval
  1992  001140  C00E  F094         	movff	?___ftneg+1,printf@fval+1
  1993  001144  C00F  F095         	movff	?___ftneg+2,printf@fval+2
  1994                           
  1995                           ;doprnt.c: 833: flag |= 0x03;
  1996  001148  0E03               	movlw	3
  1997  00114A  0100               	movlb	0	; () banked
  1998  00114C  1385               	iorwf	printf@flag& (0+255),f,b
  1999  00114E  D000               	goto	l2640
  2000  001150                     l2640:
  2001                           
  2002                           ; BSR set to: 0
  2003                           ;doprnt.c: 834: }
  2004                           ;doprnt.c: 835: exp = 0;
  2005  001150  0E00               	movlw	0
  2006  001152  0100               	movlb	0	; () banked
  2007  001154  6F8E               	movwf	(printf@exp+1)& (0+255),b
  2008  001156  0E00               	movlw	0
  2009  001158  6F8D               	movwf	printf@exp& (0+255),b
  2010                           
  2011                           ; BSR set to: 0
  2012                           ;doprnt.c: 836: if( fval!=0) {
  2013  00115A  0100               	movlb	0	; () banked
  2014  00115C  5193               	movf	printf@fval& (0+255),w,b
  2015  00115E  0100               	movlb	0	; () banked
  2016  001160  1194               	iorwf	(printf@fval+1)& (0+255),w,b
  2017  001162  0100               	movlb	0	; () banked
  2018  001164  1195               	iorwf	(printf@fval+2)& (0+255),w,b
  2019  001166  B4D8               	btfsc	status,2,c
  2020  001168  D08D               	goto	l2668
  2021                           
  2022                           ; BSR set to: 0
  2023                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  2024  00116A  0E82               	movlw	130
  2025  00116C  6E6C               	movwf	??_printf& (0+255),c
  2026  00116E  0EFF               	movlw	255
  2027  001170  6E6D               	movwf	(??_printf+1)& (0+255),c
  2028  001172  C093  F06E         	movff	printf@fval,??_printf+2
  2029  001176  C094  F06F         	movff	printf@fval+1,??_printf+3
  2030  00117A  C095  F070         	movff	printf@fval+2,??_printf+4
  2031  00117E  C096  F071         	movff	printf@fval+3,??_printf+5
  2032  001182  0E10               	movlw	16
  2033  001184  D005               	goto	u2710
  2034  001186                     u2715:
  2035  001186  90D8               	bcf	status,0,c
  2036  001188  3271               	rrcf	??_printf+5,f,c
  2037  00118A  3270               	rrcf	??_printf+4,f,c
  2038  00118C  326F               	rrcf	??_printf+3,f,c
  2039  00118E  326E               	rrcf	??_printf+2,f,c
  2040  001190                     u2710:
  2041  001190  2EE8               	decfsz	wreg,f,c
  2042  001192  D7F9               	goto	u2715
  2043  001194  506E               	movf	??_printf+2,w,c
  2044  001196  246C               	addwf	??_printf,w,c
  2045  001198  0100               	movlb	0	; () banked
  2046  00119A  6F8D               	movwf	printf@exp& (0+255),b
  2047  00119C  0E00               	movlw	0
  2048  00119E  206D               	addwfc	??_printf+1,w,c
  2049  0011A0  0100               	movlb	0	; () banked
  2050  0011A2  6F8E               	movwf	(printf@exp+1)& (0+255),b
  2051                           
  2052                           ; BSR set to: 0
  2053                           ;doprnt.c: 838: exp--;
  2054  0011A4  0100               	movlb	0	; () banked
  2055  0011A6  078D               	decf	printf@exp& (0+255),f,b
  2056  0011A8  A0D8               	btfss	status,0,c
  2057  0011AA  078E               	decf	(printf@exp+1)& (0+255),f,b
  2058                           
  2059                           ; BSR set to: 0
  2060                           ;doprnt.c: 839: exp *= 3;
  2061  0011AC  C08D  F057         	movff	printf@exp,___wmul@multiplier
  2062  0011B0  C08E  F058         	movff	printf@exp+1,___wmul@multiplier+1
  2063  0011B4  0E00               	movlw	0
  2064  0011B6  6E5A               	movwf	___wmul@multiplicand+1,c
  2065  0011B8  0E03               	movlw	3
  2066  0011BA  6E59               	movwf	___wmul@multiplicand,c
  2067  0011BC  EC8C  F016         	call	___wmul	;wreg free
  2068  0011C0  C057  F08D         	movff	?___wmul,printf@exp
  2069  0011C4  C058  F08E         	movff	?___wmul+1,printf@exp+1
  2070                           
  2071                           ;doprnt.c: 840: exp /= 10;
  2072  0011C8  C08D  F04F         	movff	printf@exp,___awdiv@dividend
  2073  0011CC  C08E  F050         	movff	printf@exp+1,___awdiv@dividend+1
  2074  0011D0  0E00               	movlw	0
  2075  0011D2  6E52               	movwf	___awdiv@divisor+1,c
  2076  0011D4  0E0A               	movlw	10
  2077  0011D6  6E51               	movwf	___awdiv@divisor,c
  2078  0011D8  EC64  F014         	call	___awdiv	;wreg free
  2079  0011DC  C04F  F08D         	movff	?___awdiv,printf@exp
  2080  0011E0  C050  F08E         	movff	?___awdiv+1,printf@exp+1
  2081                           
  2082                           ;doprnt.c: 841: if(exp < 0)
  2083  0011E4  0100               	movlb	0	; () banked
  2084  0011E6  AF8E               	btfss	(printf@exp+1)& (0+255),7,b
  2085  0011E8  D005               	goto	l2656
  2086                           
  2087                           ; BSR set to: 0
  2088                           ;doprnt.c: 842: exp--;
  2089  0011EA  0100               	movlb	0	; () banked
  2090  0011EC  078D               	decf	printf@exp& (0+255),f,b
  2091  0011EE  A0D8               	btfss	status,0,c
  2092  0011F0  078E               	decf	(printf@exp+1)& (0+255),f,b
  2093  0011F2  D000               	goto	l2656
  2094  0011F4                     l2656:
  2095                           
  2096                           ; BSR set to: 0
  2097                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  2098  0011F4  0100               	movlb	0	; () banked
  2099  0011F6  518D               	movf	printf@exp& (0+255),w,b
  2100  0011F8  0800               	sublw	0
  2101  0011FA  ECB3  F00B         	call	_scale
  2102  0011FE  C05D  F08F         	movff	?_scale,printf@tmpval
  2103  001202  C05E  F090         	movff	?_scale+1,printf@tmpval+1
  2104  001206  C05F  F091         	movff	?_scale+2,printf@tmpval+2
  2105                           
  2106                           ;doprnt.c: 847: tmpval.integ *= fval;
  2107  00120A  C08F  F01C         	movff	printf@tmpval,___ftmul@f1
  2108  00120E  C090  F01D         	movff	printf@tmpval+1,___ftmul@f1+1
  2109  001212  C091  F01E         	movff	printf@tmpval+2,___ftmul@f1+2
  2110  001216  C093  F01F         	movff	printf@fval,___ftmul@f2
  2111  00121A  C094  F020         	movff	printf@fval+1,___ftmul@f2+1
  2112  00121E  C095  F021         	movff	printf@fval+2,___ftmul@f2+2
  2113  001222  ECA1  F012         	call	___ftmul	;wreg free
  2114  001226  C01C  F08F         	movff	?___ftmul,printf@tmpval
  2115  00122A  C01D  F090         	movff	?___ftmul+1,printf@tmpval+1
  2116  00122E  C01E  F091         	movff	?___ftmul+2,printf@tmpval+2
  2117                           
  2118                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  2119  001232  C08F  F001         	movff	printf@tmpval,___ftge@ff1
  2120  001236  C090  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  2121  00123A  C091  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  2122  00123E  0E00               	movlw	0
  2123  001240  6E04               	movwf	___ftge@ff2,c
  2124  001242  0E80               	movlw	128
  2125  001244  6E05               	movwf	___ftge@ff2+1,c
  2126  001246  0E3F               	movlw	63
  2127  001248  6E06               	movwf	___ftge@ff2+2,c
  2128  00124A  ECAF  F014         	call	___ftge	;wreg free
  2129  00124E  B0D8               	btfsc	status,0,c
  2130  001250  D005               	goto	l2664
  2131                           
  2132                           ;doprnt.c: 849: exp--;
  2133  001252  0100               	movlb	0	; () banked
  2134  001254  078D               	decf	printf@exp& (0+255),f,b
  2135  001256  A0D8               	btfss	status,0,c
  2136  001258  078E               	decf	(printf@exp+1)& (0+255),f,b
  2137  00125A  D014               	goto	l2668
  2138  00125C                     l2664:
  2139                           
  2140                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  2141  00125C  C08F  F001         	movff	printf@tmpval,___ftge@ff1
  2142  001260  C090  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  2143  001264  C091  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  2144  001268  0E00               	movlw	0
  2145  00126A  6E04               	movwf	___ftge@ff2,c
  2146  00126C  0E20               	movlw	32
  2147  00126E  6E05               	movwf	___ftge@ff2+1,c
  2148  001270  0E41               	movlw	65
  2149  001272  6E06               	movwf	___ftge@ff2+2,c
  2150  001274  ECAF  F014         	call	___ftge	;wreg free
  2151  001278  A0D8               	btfss	status,0,c
  2152  00127A  D004               	goto	l2668
  2153                           
  2154                           ;doprnt.c: 851: exp++;
  2155  00127C  0100               	movlb	0	; () banked
  2156  00127E  4B8D               	infsnz	printf@exp& (0+255),f,b
  2157  001280  2B8E               	incf	(printf@exp+1)& (0+255),f,b
  2158                           
  2159                           ; BSR set to: 0
  2160                           
  2161                           ; BSR set to: 0
  2162  001282  D000               	goto	l2668
  2163  001284                     l2668:
  2164                           
  2165                           ;doprnt.c: 852: }
  2166                           ;doprnt.c: 1112: if(prec <= 12)
  2167  001284  0100               	movlb	0	; () banked
  2168  001286  BF88               	btfsc	(printf@prec+1)& (0+255),7,b
  2169  001288  D008               	goto	l2670
  2170  00128A  0100               	movlb	0	; () banked
  2171  00128C  5188               	movf	(printf@prec+1)& (0+255),w,b
  2172  00128E  E11E               	bnz	l2672
  2173  001290  0E0D               	movlw	13
  2174  001292  0100               	movlb	0	; () banked
  2175  001294  5D87               	subwf	printf@prec& (0+255),w,b
  2176  001296  B0D8               	btfsc	status,0,c
  2177  001298  D019               	goto	l2672
  2178  00129A                     l2670:
  2179                           
  2180                           ; BSR set to: 0
  2181                           ;doprnt.c: 1113: fval += fround(prec);
  2182  00129A  C093  F010         	movff	printf@fval,___ftadd@f1
  2183  00129E  C094  F011         	movff	printf@fval+1,___ftadd@f1+1
  2184  0012A2  C095  F012         	movff	printf@fval+2,___ftadd@f1+2
  2185  0012A6  0100               	movlb	0	; () banked
  2186  0012A8  5187               	movf	printf@prec& (0+255),w,b
  2187  0012AA  EC10  F00F         	call	_fround
  2188  0012AE  C05D  F013         	movff	?_fround,___ftadd@f2
  2189  0012B2  C05E  F014         	movff	?_fround+1,___ftadd@f2+1
  2190  0012B6  C05F  F015         	movff	?_fround+2,___ftadd@f2+2
  2191  0012BA  EC32  F010         	call	___ftadd	;wreg free
  2192  0012BE  C010  F093         	movff	?___ftadd,printf@fval
  2193  0012C2  C011  F094         	movff	?___ftadd+1,printf@fval+1
  2194  0012C6  C012  F095         	movff	?___ftadd+2,printf@fval+2
  2195  0012CA  D000               	goto	l2672
  2196  0012CC                     l2672:
  2197                           
  2198                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  2199  0012CC  0100               	movlb	0	; () banked
  2200  0012CE  BF8E               	btfsc	(printf@exp+1)& (0+255),7,b
  2201  0012D0  D008               	goto	l2674
  2202  0012D2  0100               	movlb	0	; () banked
  2203  0012D4  518E               	movf	(printf@exp+1)& (0+255),w,b
  2204  0012D6  E128               	bnz	l2680
  2205  0012D8  0E0A               	movlw	10
  2206  0012DA  0100               	movlb	0	; () banked
  2207  0012DC  5D8D               	subwf	printf@exp& (0+255),w,b
  2208  0012DE  B0D8               	btfsc	status,0,c
  2209  0012E0  D023               	goto	l2680
  2210  0012E2                     l2674:
  2211                           
  2212                           ; BSR set to: 0
  2213  0012E2  0100               	movlb	0	; () banked
  2214  0012E4  5193               	movf	printf@fval& (0+255),w,b
  2215  0012E6  0100               	movlb	0	; () banked
  2216  0012E8  1194               	iorwf	(printf@fval+1)& (0+255),w,b
  2217  0012EA  0100               	movlb	0	; () banked
  2218  0012EC  1195               	iorwf	(printf@fval+2)& (0+255),w,b
  2219  0012EE  B4D8               	btfsc	status,2,c
  2220  0012F0  D077               	goto	l2694
  2221                           
  2222                           ; BSR set to: 0
  2223  0012F2  C093  F03A         	movff	printf@fval,___fttol@f1
  2224  0012F6  C094  F03B         	movff	printf@fval+1,___fttol@f1+1
  2225  0012FA  C095  F03C         	movff	printf@fval+2,___fttol@f1+2
  2226  0012FE  EC1D  F013         	call	___fttol	;wreg free
  2227  001302  503A               	movf	?___fttol,w,c
  2228  001304  103B               	iorwf	?___fttol+1,w,c
  2229  001306  103C               	iorwf	?___fttol+2,w,c
  2230  001308  103D               	iorwf	?___fttol+3,w,c
  2231  00130A  A4D8               	btfss	status,2,c
  2232  00130C  D069               	goto	l2694
  2233  00130E  0100               	movlb	0	; () banked
  2234  001310  BF8E               	btfsc	(printf@exp+1)& (0+255),7,b
  2235  001312  D066               	goto	l2694
  2236  001314  0100               	movlb	0	; () banked
  2237  001316  518E               	movf	(printf@exp+1)& (0+255),w,b
  2238  001318  E107               	bnz	l2680
  2239  00131A  0E02               	movlw	2
  2240  00131C  0100               	movlb	0	; () banked
  2241  00131E  5D8D               	subwf	printf@exp& (0+255),w,b
  2242  001320  B0D8               	btfsc	status,0,c
  2243  001322  D002               	goto	l2680
  2244  001324  D05D               	goto	l2694
  2245  001326  D000               	goto	l2680
  2246  001328                     l2680:
  2247                           
  2248                           ; BSR set to: 0
  2249                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  2250  001328  C08F  F001         	movff	printf@tmpval,___ftge@ff1
  2251  00132C  C090  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  2252  001330  C091  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  2253  001334  0E70               	movlw	112
  2254  001336  6E04               	movwf	___ftge@ff2,c
  2255  001338  0E89               	movlw	137
  2256  00133A  6E05               	movwf	___ftge@ff2+1,c
  2257  00133C  0E40               	movlw	64
  2258  00133E  6E06               	movwf	___ftge@ff2+2,c
  2259  001340  ECAF  F014         	call	___ftge	;wreg free
  2260  001344  B0D8               	btfsc	status,0,c
  2261  001346  D003               	goto	l2684
  2262                           
  2263                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2264  001348  0100               	movlb	0	; () banked
  2265  00134A  0EF7               	movlw	247
  2266  00134C  D002               	goto	L1
  2267  00134E                     l2684:
  2268                           
  2269                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2270  00134E  0100               	movlb	0	; () banked
  2271  001350  0EF8               	movlw	248
  2272  001352                     L1:
  2273  001352  278D               	addwf	printf@exp& (0+255),f,b
  2274  001354  0EFF               	movlw	255
  2275  001356  238E               	addwfc	(printf@exp+1)& (0+255),f,b
  2276  001358  D000               	goto	l2686
  2277  00135A                     l2686:
  2278                           
  2279                           ; BSR set to: 0
  2280                           ;doprnt.c: 1124: }
  2281                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  2282  00135A  0100               	movlb	0	; () banked
  2283  00135C  518D               	movf	printf@exp& (0+255),w,b
  2284  00135E  ECB3  F00B         	call	_scale
  2285  001362  C05D  F08F         	movff	?_scale,printf@tmpval
  2286  001366  C05E  F090         	movff	?_scale+1,printf@tmpval+1
  2287  00136A  C05F  F091         	movff	?_scale+2,printf@tmpval+2
  2288                           
  2289                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  2290  00136E  D017               	goto	l2690
  2291  001370  C093  F001         	movff	printf@fval,__div_to_l_@f1
  2292  001374  C094  F002         	movff	printf@fval+1,__div_to_l_@f1+1
  2293  001378  C095  F003         	movff	printf@fval+2,__div_to_l_@f1+2
  2294  00137C  C08F  F004         	movff	printf@tmpval,__div_to_l_@f2
  2295  001380  C090  F005         	movff	printf@tmpval+1,__div_to_l_@f2+1
  2296  001384  C091  F006         	movff	printf@tmpval+2,__div_to_l_@f2+2
  2297  001388  EC9C  F011         	call	__div_to_l_	;wreg free
  2298  00138C  C001  F089         	movff	?__div_to_l_,printf@val
  2299  001390  C002  F08A         	movff	?__div_to_l_+1,printf@val+1
  2300  001394  C003  F08B         	movff	?__div_to_l_+2,printf@val+2
  2301  001398  C004  F08C         	movff	?__div_to_l_+3,printf@val+3
  2302  00139C  D017               	goto	l2692
  2303  00139E                     l2690:
  2304  00139E  C093  F001         	movff	printf@fval,__tdiv_to_l_@f1
  2305  0013A2  C094  F002         	movff	printf@fval+1,__tdiv_to_l_@f1+1
  2306  0013A6  C095  F003         	movff	printf@fval+2,__tdiv_to_l_@f1+2
  2307  0013AA  C08F  F004         	movff	printf@tmpval,__tdiv_to_l_@f2
  2308  0013AE  C090  F005         	movff	printf@tmpval+1,__tdiv_to_l_@f2+1
  2309  0013B2  C091  F006         	movff	printf@tmpval+2,__tdiv_to_l_@f2+2
  2310  0013B6  EC14  F011         	call	__tdiv_to_l_	;wreg free
  2311  0013BA  C001  F089         	movff	?__tdiv_to_l_,printf@val
  2312  0013BE  C002  F08A         	movff	?__tdiv_to_l_+1,printf@val+1
  2313  0013C2  C003  F08B         	movff	?__tdiv_to_l_+2,printf@val+2
  2314  0013C6  C004  F08C         	movff	?__tdiv_to_l_+3,printf@val+3
  2315  0013CA  D000               	goto	l2692
  2316  0013CC                     l2692:
  2317                           
  2318                           ;doprnt.c: 1129: fval = 0.0;
  2319  0013CC  0E00               	movlw	0
  2320  0013CE  0100               	movlb	0	; () banked
  2321  0013D0  6F93               	movwf	printf@fval& (0+255),b
  2322  0013D2  0E00               	movlw	0
  2323  0013D4  0100               	movlb	0	; () banked
  2324  0013D6  6F94               	movwf	(printf@fval+1)& (0+255),b
  2325  0013D8  0E00               	movlw	0
  2326  0013DA  0100               	movlb	0	; () banked
  2327  0013DC  6F95               	movwf	(printf@fval+2)& (0+255),b
  2328                           
  2329                           ;doprnt.c: 1130: } else {
  2330  0013DE  D034               	goto	l2698
  2331  0013E0                     l2694:
  2332                           
  2333                           ;doprnt.c: 1131: val = (unsigned long)fval;
  2334  0013E0  C093  F03A         	movff	printf@fval,___fttol@f1
  2335  0013E4  C094  F03B         	movff	printf@fval+1,___fttol@f1+1
  2336  0013E8  C095  F03C         	movff	printf@fval+2,___fttol@f1+2
  2337  0013EC  EC1D  F013         	call	___fttol	;wreg free
  2338  0013F0  C03A  F089         	movff	?___fttol,printf@val
  2339  0013F4  C03B  F08A         	movff	?___fttol+1,printf@val+1
  2340  0013F8  C03C  F08B         	movff	?___fttol+2,printf@val+2
  2341  0013FC  C03D  F08C         	movff	?___fttol+3,printf@val+3
  2342                           
  2343                           ;doprnt.c: 1132: fval -= (double)val;
  2344  001400  C093  F01C         	movff	printf@fval,___ftsub@f1
  2345  001404  C094  F01D         	movff	printf@fval+1,___ftsub@f1+1
  2346  001408  C095  F01E         	movff	printf@fval+2,___ftsub@f1+2
  2347  00140C  C089  F009         	movff	printf@val,___lltoft@c
  2348  001410  C08A  F00A         	movff	printf@val+1,___lltoft@c+1
  2349  001414  C08B  F00B         	movff	printf@val+2,___lltoft@c+2
  2350  001418  C08C  F00C         	movff	printf@val+3,___lltoft@c+3
  2351  00141C  ECF1  F015         	call	___lltoft	;wreg free
  2352  001420  C009  F01F         	movff	?___lltoft,___ftsub@f2
  2353  001424  C00A  F020         	movff	?___lltoft+1,___ftsub@f2+1
  2354  001428  C00B  F021         	movff	?___lltoft+2,___ftsub@f2+2
  2355  00142C  EC4C  F016         	call	___ftsub	;wreg free
  2356  001430  C01C  F093         	movff	?___ftsub,printf@fval
  2357  001434  C01D  F094         	movff	?___ftsub+1,printf@fval+1
  2358  001438  C01E  F095         	movff	?___ftsub+2,printf@fval+2
  2359                           
  2360                           ;doprnt.c: 1133: exp = 0;
  2361  00143C  0E00               	movlw	0
  2362  00143E  0100               	movlb	0	; () banked
  2363  001440  6F8E               	movwf	(printf@exp+1)& (0+255),b
  2364  001442  0E00               	movlw	0
  2365  001444  6F8D               	movwf	printf@exp& (0+255),b
  2366  001446  D000               	goto	l2698
  2367  001448                     l2698:
  2368                           
  2369                           ; BSR set to: 0
  2370                           ;doprnt.c: 1134: }
  2371                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2372  001448  0E01               	movlw	1
  2373  00144A  0100               	movlb	0	; () banked
  2374  00144C  6F96               	movwf	printf@c& (0+255),b
  2375  00144E                     l2700:
  2376                           
  2377                           ; BSR set to: 0
  2378  00144E  0E0A               	movlw	10
  2379  001450  0100               	movlb	0	; () banked
  2380  001452  1996               	xorwf	printf@c& (0+255),w,b
  2381  001454  B4D8               	btfsc	status,2,c
  2382  001456  D022               	goto	l2712
  2383  001458  D001               	goto	l2704
  2384                           
  2385                           ; BSR set to: 0
  2386  00145A  D020               	goto	l2712
  2387  00145C                     l2704:
  2388                           
  2389                           ; BSR set to: 0
  2390                           ;doprnt.c: 1137: if(val < dpowers[c])
  2391  00145C  0100               	movlb	0	; () banked
  2392  00145E  5196               	movf	printf@c& (0+255),w,b
  2393  001460  0D04               	mullw	4
  2394  001462  0E01               	movlw	low _dpowers
  2395  001464  24F3               	addwf	prodl,w,c
  2396  001466  6EF6               	movwf	tblptrl,c
  2397  001468  0E10               	movlw	high _dpowers
  2398  00146A  20F4               	addwfc	prodh,w,c
  2399  00146C  6EF7               	movwf	tblptrh,c
  2400  00146E                     	if	0	;There are less than 3 active tblptr bytes
  2401  00146E                     	endif
  2402  00146E  0009               	tblrd		*+
  2403  001470  50F5               	movf	tablat,w,c
  2404  001472  0100               	movlb	0	; () banked
  2405  001474  5D89               	subwf	printf@val& (0+255),w,b
  2406  001476  0009               	tblrd		*+
  2407  001478  50F5               	movf	tablat,w,c
  2408  00147A  0100               	movlb	0	; () banked
  2409  00147C  598A               	subwfb	(printf@val+1)& (0+255),w,b
  2410  00147E  0009               	tblrd		*+
  2411  001480  50F5               	movf	tablat,w,c
  2412  001482  0100               	movlb	0	; () banked
  2413  001484  598B               	subwfb	(printf@val+2)& (0+255),w,b
  2414  001486  0009               	tblrd		*+
  2415  001488  50F5               	movf	tablat,w,c
  2416  00148A  0100               	movlb	0	; () banked
  2417  00148C  598C               	subwfb	(printf@val+3)& (0+255),w,b
  2418  00148E  A0D8               	btfss	status,0,c
  2419  001490  D005               	goto	l2712
  2420  001492  D001               	goto	l2708
  2421                           
  2422                           ; BSR set to: 0
  2423                           ;doprnt.c: 1138: break;
  2424  001494  D003               	goto	l2712
  2425  001496                     l2708:
  2426                           
  2427                           ; BSR set to: 0
  2428  001496  0100               	movlb	0	; () banked
  2429  001498  2B96               	incf	printf@c& (0+255),f,b
  2430  00149A  D7D9               	goto	l2700
  2431  00149C                     l2712:
  2432                           
  2433                           ; BSR set to: 0
  2434                           ;doprnt.c: 1175: {
  2435                           ;doprnt.c: 1188: if(flag & 0x03)
  2436  00149C  0E03               	movlw	3
  2437  00149E  0100               	movlb	0	; () banked
  2438  0014A0  1585               	andwf	printf@flag& (0+255),w,b
  2439  0014A2  6E6C               	movwf	??_printf& (0+255),c
  2440  0014A4  0E00               	movlw	0
  2441  0014A6  0100               	movlb	0	; () banked
  2442  0014A8  1586               	andwf	(printf@flag+1)& (0+255),w,b
  2443  0014AA  6E6D               	movwf	(??_printf+1)& (0+255),c
  2444  0014AC  506C               	movf	??_printf,w,c
  2445  0014AE  106D               	iorwf	??_printf+1,w,c
  2446  0014B0  B4D8               	btfsc	status,2,c
  2447  0014B2  D04B               	goto	l2722
  2448                           
  2449                           ; BSR set to: 0
  2450                           ;doprnt.c: 1190: (putch('-') );
  2451  0014B4  0E2D               	movlw	45
  2452  0014B6  ECF4  F016         	call	_putch
  2453                           
  2454                           ;doprnt.c: 1195: }
  2455                           ;doprnt.c: 1196: while(c--) {
  2456  0014BA  D047               	goto	l2722
  2457  0014BC                     l2716:
  2458                           
  2459                           ;doprnt.c: 1200: {
  2460                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  2461  0014BC  C089  F001         	movff	printf@val,___lldiv@dividend
  2462  0014C0  C08A  F002         	movff	printf@val+1,___lldiv@dividend+1
  2463  0014C4  C08B  F003         	movff	printf@val+2,___lldiv@dividend+2
  2464  0014C8  C08C  F004         	movff	printf@val+3,___lldiv@dividend+3
  2465  0014CC  0100               	movlb	0	; () banked
  2466  0014CE  5196               	movf	printf@c& (0+255),w,b
  2467  0014D0  0D04               	mullw	4
  2468  0014D2  0E01               	movlw	low _dpowers
  2469  0014D4  24F3               	addwf	prodl,w,c
  2470  0014D6  6EF6               	movwf	tblptrl,c
  2471  0014D8  0E10               	movlw	high _dpowers
  2472  0014DA  20F4               	addwfc	prodh,w,c
  2473  0014DC  6EF7               	movwf	tblptrh,c
  2474  0014DE                     	if	0	;There are less than 3 active tblptr bytes
  2475  0014DE                     	endif
  2476  0014DE  0009               	tblrd		*+
  2477  0014E0  CFF5 F005          	movff	tablat,___lldiv@divisor
  2478  0014E4  0009               	tblrd		*+
  2479  0014E6  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  2480  0014EA  0009               	tblrd		*+
  2481  0014EC  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  2482  0014F0  000A               	tblrd		*-
  2483  0014F2  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  2484  0014F6  ECFA  F014         	call	___lldiv	;wreg free
  2485  0014FA  C001  F08F         	movff	?___lldiv,printf@tmpval
  2486  0014FE  C002  F090         	movff	?___lldiv+1,printf@tmpval+1
  2487  001502  C003  F091         	movff	?___lldiv+2,printf@tmpval+2
  2488  001506  C004  F092         	movff	?___lldiv+3,printf@tmpval+3
  2489                           
  2490                           ;doprnt.c: 1202: tmpval.vd %= 10;
  2491  00150A  C08F  F001         	movff	printf@tmpval,___llmod@dividend
  2492  00150E  C090  F002         	movff	printf@tmpval+1,___llmod@dividend+1
  2493  001512  C091  F003         	movff	printf@tmpval+2,___llmod@dividend+2
  2494  001516  C092  F004         	movff	printf@tmpval+3,___llmod@dividend+3
  2495  00151A  0E0A               	movlw	10
  2496  00151C  6E05               	movwf	___llmod@divisor,c
  2497  00151E  0E00               	movlw	0
  2498  001520  6E06               	movwf	___llmod@divisor+1,c
  2499  001522  0E00               	movlw	0
  2500  001524  6E07               	movwf	___llmod@divisor+2,c
  2501  001526  0E00               	movlw	0
  2502  001528  6E08               	movwf	___llmod@divisor+3,c
  2503  00152A  EC81  F015         	call	___llmod	;wreg free
  2504  00152E  C001  F08F         	movff	?___llmod,printf@tmpval
  2505  001532  C002  F090         	movff	?___llmod+1,printf@tmpval+1
  2506  001536  C003  F091         	movff	?___llmod+2,printf@tmpval+2
  2507  00153A  C004  F092         	movff	?___llmod+3,printf@tmpval+3
  2508                           
  2509                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
  2510  00153E  0100               	movlb	0	; () banked
  2511  001540  518F               	movf	printf@tmpval& (0+255),w,b
  2512  001542  0F30               	addlw	48
  2513  001544  ECF4  F016         	call	_putch
  2514  001548  D000               	goto	l2722
  2515  00154A                     l2722:
  2516  00154A  0100               	movlb	0	; () banked
  2517  00154C  0796               	decf	printf@c& (0+255),f,b
  2518  00154E  0100               	movlb	0	; () banked
  2519  001550  2996               	incf	printf@c& (0+255),w,b
  2520  001552  B4D8               	btfsc	status,2,c
  2521  001554  D00A               	goto	l2728
  2522  001556  D7B2               	goto	l2716
  2523                           
  2524                           ; BSR set to: 0
  2525                           ;doprnt.c: 1204: }
  2526                           ;doprnt.c: 1206: }
  2527                           ;doprnt.c: 1207: while(exp > 0) {
  2528  001558  D008               	goto	l2728
  2529  00155A                     l2724:
  2530                           
  2531                           ; BSR set to: 0
  2532                           ;doprnt.c: 1208: (putch('0') );
  2533  00155A  0E30               	movlw	48
  2534  00155C  ECF4  F016         	call	_putch
  2535                           
  2536                           ;doprnt.c: 1209: exp--;
  2537  001560  0100               	movlb	0	; () banked
  2538  001562  078D               	decf	printf@exp& (0+255),f,b
  2539  001564  A0D8               	btfss	status,0,c
  2540  001566  078E               	decf	(printf@exp+1)& (0+255),f,b
  2541  001568  D000               	goto	l2728
  2542  00156A                     l2728:
  2543                           
  2544                           ; BSR set to: 0
  2545  00156A  0100               	movlb	0	; () banked
  2546  00156C  BF8E               	btfsc	(printf@exp+1)& (0+255),7,b
  2547  00156E  D007               	goto	l2730
  2548  001570  0100               	movlb	0	; () banked
  2549  001572  518E               	movf	(printf@exp+1)& (0+255),w,b
  2550  001574  E1F2               	bnz	l2724
  2551  001576  0100               	movlb	0	; () banked
  2552  001578  058D               	decf	printf@exp& (0+255),w,b
  2553  00157A  B0D8               	btfsc	status,0,c
  2554  00157C  D7EE               	goto	l2724
  2555  00157E                     l2730:
  2556                           
  2557                           ; BSR set to: 0
  2558                           ;doprnt.c: 1210: }
  2559                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2560  00157E  0100               	movlb	0	; () banked
  2561  001580  BF88               	btfsc	(printf@prec+1)& (0+255),7,b
  2562  001582  D00C               	goto	l248
  2563  001584  0100               	movlb	0	; () banked
  2564  001586  5188               	movf	(printf@prec+1)& (0+255),w,b
  2565  001588  E105               	bnz	u2870
  2566  00158A  0E09               	movlw	9
  2567  00158C  0100               	movlb	0	; () banked
  2568  00158E  5D87               	subwf	printf@prec& (0+255),w,b
  2569  001590  A0D8               	btfss	status,0,c
  2570  001592  D004               	goto	l248
  2571  001594                     u2870:
  2572                           
  2573                           ; BSR set to: 0
  2574                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  2575  001594  0E08               	movlw	8
  2576  001596  0100               	movlb	0	; () banked
  2577  001598  6F96               	movwf	printf@c& (0+255),b
  2578  00159A  D003               	goto	l2734
  2579  00159C                     l248:
  2580                           
  2581                           ; BSR set to: 0
  2582                           ;doprnt.c: 1213: else
  2583                           ;doprnt.c: 1214: c = prec;
  2584  00159C  C087  F096         	movff	printf@prec,printf@c
  2585  0015A0  D000               	goto	l2734
  2586  0015A2                     l2734:
  2587                           
  2588                           ; BSR set to: 0
  2589                           ;doprnt.c: 1215: prec -= c;
  2590  0015A2  0100               	movlb	0	; () banked
  2591  0015A4  5196               	movf	printf@c& (0+255),w,b
  2592  0015A6  0100               	movlb	0	; () banked
  2593  0015A8  5F87               	subwf	printf@prec& (0+255),f,b
  2594  0015AA  0E00               	movlw	0
  2595  0015AC  0100               	movlb	0	; () banked
  2596  0015AE  BF96               	btfsc	printf@c& (0+255),7,b
  2597  0015B0  0EFF               	movlw	255
  2598  0015B2  0100               	movlb	0	; () banked
  2599  0015B4  5B88               	subwfb	(printf@prec+1)& (0+255),f,b
  2600                           
  2601                           ; BSR set to: 0
  2602                           ;doprnt.c: 1219: if(c)
  2603  0015B6  0100               	movlb	0	; () banked
  2604  0015B8  5196               	movf	printf@c& (0+255),w,b
  2605  0015BA  0100               	movlb	0	; () banked
  2606  0015BC  B4D8               	btfsc	status,2,c
  2607  0015BE  D004               	goto	l2740
  2608                           
  2609                           ; BSR set to: 0
  2610                           ;doprnt.c: 1221: (putch('.') );
  2611  0015C0  0E2E               	movlw	46
  2612  0015C2  ECF4  F016         	call	_putch
  2613  0015C6  D000               	goto	l2740
  2614  0015C8                     l2740:
  2615                           
  2616                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  2617  0015C8  0100               	movlb	0	; () banked
  2618  0015CA  5196               	movf	printf@c& (0+255),w,b
  2619  0015CC  ECB3  F00B         	call	_scale
  2620  0015D0  C05D  F080         	movff	?_scale,_printf$1491
  2621  0015D4  C05E  F081         	movff	?_scale+1,_printf$1491+1
  2622  0015D8  C05F  F082         	movff	?_scale+2,_printf$1491+2
  2623                           
  2624                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  2625  0015DC  C093  F01F         	movff	printf@fval,___ftmul@f2
  2626  0015E0  C094  F020         	movff	printf@fval+1,___ftmul@f2+1
  2627  0015E4  C095  F021         	movff	printf@fval+2,___ftmul@f2+2
  2628  0015E8  C080  F01C         	movff	_printf$1491,___ftmul@f1
  2629  0015EC  C081  F01D         	movff	_printf$1491+1,___ftmul@f1+1
  2630  0015F0  C082  F01E         	movff	_printf$1491+2,___ftmul@f1+2
  2631  0015F4  ECA1  F012         	call	___ftmul	;wreg free
  2632  0015F8  C01C  F03A         	movff	?___ftmul,___fttol@f1
  2633  0015FC  C01D  F03B         	movff	?___ftmul+1,___fttol@f1+1
  2634  001600  C01E  F03C         	movff	?___ftmul+2,___fttol@f1+2
  2635  001604  EC1D  F013         	call	___fttol	;wreg free
  2636  001608  C03A  F089         	movff	?___fttol,printf@val
  2637  00160C  C03B  F08A         	movff	?___fttol+1,printf@val+1
  2638  001610  C03C  F08B         	movff	?___fttol+2,printf@val+2
  2639  001614  C03D  F08C         	movff	?___fttol+3,printf@val+3
  2640                           
  2641                           ;doprnt.c: 1228: while(c--) {
  2642  001618  D06E               	goto	l2750
  2643  00161A                     l2744:
  2644                           
  2645                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  2646  00161A  C089  F001         	movff	printf@val,___lldiv@dividend
  2647  00161E  C08A  F002         	movff	printf@val+1,___lldiv@dividend+1
  2648  001622  C08B  F003         	movff	printf@val+2,___lldiv@dividend+2
  2649  001626  C08C  F004         	movff	printf@val+3,___lldiv@dividend+3
  2650  00162A  0100               	movlb	0	; () banked
  2651  00162C  5196               	movf	printf@c& (0+255),w,b
  2652  00162E  0D04               	mullw	4
  2653  001630  0E01               	movlw	low _dpowers
  2654  001632  24F3               	addwf	prodl,w,c
  2655  001634  6EF6               	movwf	tblptrl,c
  2656  001636  0E10               	movlw	high _dpowers
  2657  001638  20F4               	addwfc	prodh,w,c
  2658  00163A  6EF7               	movwf	tblptrh,c
  2659  00163C                     	if	0	;There are less than 3 active tblptr bytes
  2660  00163C                     	endif
  2661  00163C  0009               	tblrd		*+
  2662  00163E  CFF5 F005          	movff	tablat,___lldiv@divisor
  2663  001642  0009               	tblrd		*+
  2664  001644  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  2665  001648  0009               	tblrd		*+
  2666  00164A  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  2667  00164E  000A               	tblrd		*-
  2668  001650  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  2669  001654  ECFA  F014         	call	___lldiv	;wreg free
  2670  001658  C001  F08F         	movff	?___lldiv,printf@tmpval
  2671  00165C  C002  F090         	movff	?___lldiv+1,printf@tmpval+1
  2672  001660  C003  F091         	movff	?___lldiv+2,printf@tmpval+2
  2673  001664  C004  F092         	movff	?___lldiv+3,printf@tmpval+3
  2674                           
  2675                           ;doprnt.c: 1230: tmpval.vd %= 10;
  2676  001668  C08F  F001         	movff	printf@tmpval,___llmod@dividend
  2677  00166C  C090  F002         	movff	printf@tmpval+1,___llmod@dividend+1
  2678  001670  C091  F003         	movff	printf@tmpval+2,___llmod@dividend+2
  2679  001674  C092  F004         	movff	printf@tmpval+3,___llmod@dividend+3
  2680  001678  0E0A               	movlw	10
  2681  00167A  6E05               	movwf	___llmod@divisor,c
  2682  00167C  0E00               	movlw	0
  2683  00167E  6E06               	movwf	___llmod@divisor+1,c
  2684  001680  0E00               	movlw	0
  2685  001682  6E07               	movwf	___llmod@divisor+2,c
  2686  001684  0E00               	movlw	0
  2687  001686  6E08               	movwf	___llmod@divisor+3,c
  2688  001688  EC81  F015         	call	___llmod	;wreg free
  2689  00168C  C001  F08F         	movff	?___llmod,printf@tmpval
  2690  001690  C002  F090         	movff	?___llmod+1,printf@tmpval+1
  2691  001694  C003  F091         	movff	?___llmod+2,printf@tmpval+2
  2692  001698  C004  F092         	movff	?___llmod+3,printf@tmpval+3
  2693                           
  2694                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
  2695  00169C  0100               	movlb	0	; () banked
  2696  00169E  518F               	movf	printf@tmpval& (0+255),w,b
  2697  0016A0  0F30               	addlw	48
  2698  0016A2  ECF4  F016         	call	_putch
  2699                           
  2700                           ;doprnt.c: 1232: val %= dpowers[c];
  2701  0016A6  C089  F001         	movff	printf@val,___llmod@dividend
  2702  0016AA  C08A  F002         	movff	printf@val+1,___llmod@dividend+1
  2703  0016AE  C08B  F003         	movff	printf@val+2,___llmod@dividend+2
  2704  0016B2  C08C  F004         	movff	printf@val+3,___llmod@dividend+3
  2705  0016B6  0100               	movlb	0	; () banked
  2706  0016B8  5196               	movf	printf@c& (0+255),w,b
  2707  0016BA  0D04               	mullw	4
  2708  0016BC  0E01               	movlw	low _dpowers
  2709  0016BE  24F3               	addwf	prodl,w,c
  2710  0016C0  6EF6               	movwf	tblptrl,c
  2711  0016C2  0E10               	movlw	high _dpowers
  2712  0016C4  20F4               	addwfc	prodh,w,c
  2713  0016C6  6EF7               	movwf	tblptrh,c
  2714  0016C8                     	if	0	;There are less than 3 active tblptr bytes
  2715  0016C8                     	endif
  2716  0016C8  0009               	tblrd		*+
  2717  0016CA  CFF5 F005          	movff	tablat,___llmod@divisor
  2718  0016CE  0009               	tblrd		*+
  2719  0016D0  CFF5 F006          	movff	tablat,___llmod@divisor+1
  2720  0016D4  0009               	tblrd		*+
  2721  0016D6  CFF5 F007          	movff	tablat,___llmod@divisor+2
  2722  0016DA  000A               	tblrd		*-
  2723  0016DC  CFF5 F008          	movff	tablat,___llmod@divisor+3
  2724  0016E0  EC81  F015         	call	___llmod	;wreg free
  2725  0016E4  C001  F089         	movff	?___llmod,printf@val
  2726  0016E8  C002  F08A         	movff	?___llmod+1,printf@val+1
  2727  0016EC  C003  F08B         	movff	?___llmod+2,printf@val+2
  2728  0016F0  C004  F08C         	movff	?___llmod+3,printf@val+3
  2729  0016F4  D000               	goto	l2750
  2730  0016F6                     l2750:
  2731  0016F6  0100               	movlb	0	; () banked
  2732  0016F8  0796               	decf	printf@c& (0+255),f,b
  2733  0016FA  0100               	movlb	0	; () banked
  2734  0016FC  2996               	incf	printf@c& (0+255),w,b
  2735  0016FE  B4D8               	btfsc	status,2,c
  2736  001700  D00A               	goto	l2756
  2737  001702  D78B               	goto	l2744
  2738                           
  2739                           ; BSR set to: 0
  2740                           ;doprnt.c: 1233: }
  2741                           ;doprnt.c: 1235: while(prec) {
  2742  001704  D008               	goto	l2756
  2743  001706                     l2752:
  2744                           
  2745                           ; BSR set to: 0
  2746                           ;doprnt.c: 1236: (putch('0') );
  2747  001706  0E30               	movlw	48
  2748  001708  ECF4  F016         	call	_putch
  2749                           
  2750                           ;doprnt.c: 1237: prec--;
  2751  00170C  0100               	movlb	0	; () banked
  2752  00170E  0787               	decf	printf@prec& (0+255),f,b
  2753  001710  A0D8               	btfss	status,0,c
  2754  001712  0788               	decf	(printf@prec+1)& (0+255),f,b
  2755  001714  D000               	goto	l2756
  2756  001716                     l2756:
  2757                           
  2758                           ; BSR set to: 0
  2759  001716  0100               	movlb	0	; () banked
  2760  001718  5187               	movf	printf@prec& (0+255),w,b
  2761  00171A  0100               	movlb	0	; () banked
  2762  00171C  1188               	iorwf	(printf@prec+1)& (0+255),w,b
  2763  00171E  B4D8               	btfsc	status,2,c
  2764  001720  D012               	goto	l2762
  2765  001722  D7F1               	goto	l2752
  2766                           
  2767                           ; BSR set to: 0
  2768                           ;doprnt.c: 1238: }
  2769                           ;doprnt.c: 1245: continue;
  2770  001724  D010               	goto	l2762
  2771  001726                     l2758:
  2772                           
  2773                           ; BSR set to: 0
  2774                           ;doprnt.c: 1246: }
  2775                           ;doprnt.c: 1422: {
  2776                           ;doprnt.c: 1438: if(flag & 0x03)
  2777  001726  0E03               	movlw	3
  2778  001728  0100               	movlb	0	; () banked
  2779  00172A  1585               	andwf	printf@flag& (0+255),w,b
  2780  00172C  6E6C               	movwf	??_printf& (0+255),c
  2781  00172E  0E00               	movlw	0
  2782  001730  0100               	movlb	0	; () banked
  2783  001732  1586               	andwf	(printf@flag+1)& (0+255),w,b
  2784  001734  6E6D               	movwf	(??_printf+1)& (0+255),c
  2785  001736  506C               	movf	??_printf,w,c
  2786  001738  106D               	iorwf	??_printf+1,w,c
  2787  00173A  B4D8               	btfsc	status,2,c
  2788  00173C  D004               	goto	l2762
  2789                           
  2790                           ; BSR set to: 0
  2791                           ;doprnt.c: 1439: (putch('-') );
  2792  00173E  0E2D               	movlw	45
  2793  001740  ECF4  F016         	call	_putch
  2794  001744  D000               	goto	l2762
  2795  001746                     l2762:
  2796  001746  C067  FFF6         	movff	printf@f,tblptrl
  2797  00174A  C068  FFF7         	movff	printf@f+1,tblptrh
  2798  00174E  4A67               	infsnz	printf@f,f,c
  2799  001750  2A68               	incf	printf@f+1,f,c
  2800  001752                     	if	0	;tblptru may be non-zero
  2801  001752                     	endif
  2802  001752                     	if	0	;tblptru may be non-zero
  2803  001752                     	endif
  2804  001752  0008               	tblrd		*
  2805  001754  CFF5 F096          	movff	tablat,printf@c
  2806  001758  0100               	movlb	0	; () banked
  2807  00175A  5196               	movf	printf@c& (0+255),w,b
  2808  00175C  B4D8               	btfsc	status,2,c
  2809  00175E  D002               	goto	l259
  2810  001760  D4A1               	goto	l2614
  2811                           
  2812                           ; BSR set to: 0
  2813  001762  D000               	goto	l259
  2814  001764                     l259:
  2815                           
  2816                           ; BSR set to: 0
  2817  001764  0012               	return		;funcret
  2818  001766                     __end_of_printf:
  2819                           	opt stack 0
  2820                           tblptru	equ	0xFF8
  2821                           tblptrh	equ	0xFF7
  2822                           tblptrl	equ	0xFF6
  2823                           tablat	equ	0xFF5
  2824                           prodh	equ	0xFF4
  2825                           prodl	equ	0xFF3
  2826                           wreg	equ	0xFE8
  2827                           postinc2	equ	0xFDE
  2828                           postdec2	equ	0xFDD
  2829                           fsr2h	equ	0xFDA
  2830                           fsr2l	equ	0xFD9
  2831                           status	equ	0xFD8
  2832                           
  2833 ;; *************** function _scale *****************
  2834 ;; Defined at:
  2835 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  2836 ;; Parameters:    Size  Location     Type
  2837 ;;  scl             1    wreg     char 
  2838 ;; Auto vars:     Size  Location     Type
  2839 ;;  scl             1   98[COMRAM] char 
  2840 ;; Return value:  Size  Location     Type
  2841 ;;                  3   92[COMRAM] char 
  2842 ;; Registers used:
  2843 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2844 ;; Tracked objects:
  2845 ;;		On entry : 0/0
  2846 ;;		On exit  : 0/0
  2847 ;;		Unchanged: 0/0
  2848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2849 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2850 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2852 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2853 ;;Total ram usage:        7 bytes
  2854 ;; Hardware stack levels used:    1
  2855 ;; Hardware stack levels required when called:    2
  2856 ;; This function calls:
  2857 ;;		___awdiv
  2858 ;;		___awmod
  2859 ;;		___ftmul
  2860 ;;		___wmul
  2861 ;; This function is called by:
  2862 ;;		_printf
  2863 ;; This function uses a non-reentrant model
  2864 ;;
  2865                           
  2866                           	psect	text10
  2867  001766                     __ptext10:
  2868                           	opt stack 0
  2869  001766                     _scale:
  2870                           	opt stack 27
  2871                           
  2872                           ; BSR set to: 0
  2873                           ;incstack = 0
  2874                           ;scale@scl stored from wreg
  2875  001766  6E63               	movwf	scale@scl,c
  2876                           
  2877                           ;doprnt.c: 428: if(scl < 0) {
  2878  001768  AE63               	btfss	scale@scl,7,c
  2879  00176A  D0EF               	goto	l2238
  2880                           
  2881                           ;doprnt.c: 429: scl = -scl;
  2882  00176C  6C63               	negf	scale@scl,c
  2883                           
  2884                           ;doprnt.c: 430: if(scl>=110)
  2885  00176E  5063               	movf	scale@scl,w,c
  2886  001770  0A80               	xorlw	128
  2887  001772  0F12               	addlw	-238
  2888  001774  A0D8               	btfss	status,0,c
  2889  001776  D08D               	goto	l2228
  2890                           
  2891                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2892  001778  0E00               	movlw	0
  2893  00177A  6E5A               	movwf	___wmul@multiplicand+1,c
  2894  00177C  0E03               	movlw	3
  2895  00177E  6E59               	movwf	___wmul@multiplicand,c
  2896  001780  0E00               	movlw	0
  2897  001782  6E52               	movwf	___awdiv@divisor+1,c
  2898  001784  0E0A               	movlw	10
  2899  001786  6E51               	movwf	___awdiv@divisor,c
  2900  001788  0E00               	movlw	0
  2901  00178A  6E4C               	movwf	___awmod@divisor+1,c
  2902  00178C  0E64               	movlw	100
  2903  00178E  6E4B               	movwf	___awmod@divisor,c
  2904  001790  5063               	movf	scale@scl,w,c
  2905  001792  6E49               	movwf	___awmod@dividend,c
  2906  001794  6A4A               	clrf	___awmod@dividend+1,c
  2907  001796  BE49               	btfsc	___awmod@dividend,7,c
  2908  001798  064A               	decf	___awmod@dividend+1,f,c
  2909  00179A  EC40  F015         	call	___awmod	;wreg free
  2910  00179E  C049  F04F         	movff	?___awmod,___awdiv@dividend
  2911  0017A2  C04A  F050         	movff	?___awmod+1,___awdiv@dividend+1
  2912  0017A6  EC64  F014         	call	___awdiv	;wreg free
  2913  0017AA  0E09               	movlw	9
  2914  0017AC  244F               	addwf	?___awdiv,w,c
  2915  0017AE  6E57               	movwf	___wmul@multiplier,c
  2916  0017B0  0E00               	movlw	0
  2917  0017B2  2050               	addwfc	?___awdiv+1,w,c
  2918  0017B4  6E58               	movwf	___wmul@multiplier+1,c
  2919  0017B6  EC8C  F016         	call	___wmul	;wreg free
  2920  0017BA  0E29               	movlw	low __npowers_
  2921  0017BC  2457               	addwf	?___wmul,w,c
  2922  0017BE  6EF6               	movwf	tblptrl,c
  2923  0017C0  0E10               	movlw	high __npowers_
  2924  0017C2  2058               	addwfc	?___wmul+1,w,c
  2925  0017C4  6EF7               	movwf	tblptrh,c
  2926  0017C6                     	if	0	;There are less than 3 active tblptr bytes
  2927  0017C6                     	endif
  2928  0017C6  0009               	tblrd		*+
  2929  0017C8  CFF5 F01F          	movff	tablat,___ftmul@f2
  2930  0017CC  0009               	tblrd		*+
  2931  0017CE  CFF5 F020          	movff	tablat,___ftmul@f2+1
  2932  0017D2  000A               	tblrd		*-
  2933  0017D4  CFF5 F021          	movff	tablat,___ftmul@f2+2
  2934  0017D8  0E00               	movlw	0
  2935  0017DA  6E52               	movwf	___awdiv@divisor+1,c
  2936  0017DC  0E64               	movlw	100
  2937  0017DE  6E51               	movwf	___awdiv@divisor,c
  2938  0017E0  5063               	movf	scale@scl,w,c
  2939  0017E2  6E4F               	movwf	___awdiv@dividend,c
  2940  0017E4  6A50               	clrf	___awdiv@dividend+1,c
  2941  0017E6  BE4F               	btfsc	___awdiv@dividend,7,c
  2942  0017E8  0650               	decf	___awdiv@dividend+1,f,c
  2943  0017EA  EC64  F014         	call	___awdiv	;wreg free
  2944  0017EE  0E12               	movlw	18
  2945  0017F0  244F               	addwf	?___awdiv,w,c
  2946  0017F2  6E57               	movwf	___wmul@multiplier,c
  2947  0017F4  0E00               	movlw	0
  2948  0017F6  2050               	addwfc	?___awdiv+1,w,c
  2949  0017F8  6E58               	movwf	___wmul@multiplier+1,c
  2950  0017FA  0E00               	movlw	0
  2951  0017FC  6E5A               	movwf	___wmul@multiplicand+1,c
  2952  0017FE  0E03               	movlw	3
  2953  001800  6E59               	movwf	___wmul@multiplicand,c
  2954  001802  EC8C  F016         	call	___wmul	;wreg free
  2955  001806  0E29               	movlw	low __npowers_
  2956  001808  2457               	addwf	?___wmul,w,c
  2957  00180A  6EF6               	movwf	tblptrl,c
  2958  00180C  0E10               	movlw	high __npowers_
  2959  00180E  2058               	addwfc	?___wmul+1,w,c
  2960  001810  6EF7               	movwf	tblptrh,c
  2961  001812                     	if	0	;There are less than 3 active tblptr bytes
  2962  001812                     	endif
  2963  001812  0009               	tblrd		*+
  2964  001814  CFF5 F01C          	movff	tablat,___ftmul@f1
  2965  001818  0009               	tblrd		*+
  2966  00181A  CFF5 F01D          	movff	tablat,___ftmul@f1+1
  2967  00181E  000A               	tblrd		*-
  2968  001820  CFF5 F01E          	movff	tablat,___ftmul@f1+2
  2969  001824  ECA1  F012         	call	___ftmul	;wreg free
  2970  001828  C01C  F060         	movff	?___ftmul,_scale$1490
  2971  00182C  C01D  F061         	movff	?___ftmul+1,_scale$1490+1
  2972  001830  C01E  F062         	movff	?___ftmul+2,_scale$1490+2
  2973                           
  2974                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2975  001834  C060  F01C         	movff	_scale$1490,___ftmul@f1
  2976  001838  C061  F01D         	movff	_scale$1490+1,___ftmul@f1+1
  2977  00183C  C062  F01E         	movff	_scale$1490+2,___ftmul@f1+2
  2978  001840  0E00               	movlw	0
  2979  001842  6E5A               	movwf	___wmul@multiplicand+1,c
  2980  001844  0E03               	movlw	3
  2981  001846  6E59               	movwf	___wmul@multiplicand,c
  2982  001848  0E00               	movlw	0
  2983  00184A  6E4C               	movwf	___awmod@divisor+1,c
  2984  00184C  0E0A               	movlw	10
  2985  00184E  6E4B               	movwf	___awmod@divisor,c
  2986  001850  5063               	movf	scale@scl,w,c
  2987  001852  6E49               	movwf	___awmod@dividend,c
  2988  001854  6A4A               	clrf	___awmod@dividend+1,c
  2989  001856  BE49               	btfsc	___awmod@dividend,7,c
  2990  001858  064A               	decf	___awmod@dividend+1,f,c
  2991  00185A  EC40  F015         	call	___awmod	;wreg free
  2992  00185E  C049  F057         	movff	?___awmod,___wmul@multiplier
  2993  001862  C04A  F058         	movff	?___awmod+1,___wmul@multiplier+1
  2994  001866  EC8C  F016         	call	___wmul	;wreg free
  2995  00186A  0E29               	movlw	low __npowers_
  2996  00186C  2457               	addwf	?___wmul,w,c
  2997  00186E  6EF6               	movwf	tblptrl,c
  2998  001870  0E10               	movlw	high __npowers_
  2999  001872  2058               	addwfc	?___wmul+1,w,c
  3000  001874  6EF7               	movwf	tblptrh,c
  3001  001876                     	if	0	;There are less than 3 active tblptr bytes
  3002  001876                     	endif
  3003  001876  0009               	tblrd		*+
  3004  001878  CFF5 F01F          	movff	tablat,___ftmul@f2
  3005  00187C  0009               	tblrd		*+
  3006  00187E  CFF5 F020          	movff	tablat,___ftmul@f2+1
  3007  001882  000A               	tblrd		*-
  3008  001884  CFF5 F021          	movff	tablat,___ftmul@f2+2
  3009  001888  ECA1  F012         	call	___ftmul	;wreg free
  3010  00188C  D141               	goto	L5
  3011  00188E  D15A               	goto	l203
  3012  001890  D054               	goto	l2234
  3013  001892                     l2228:
  3014                           
  3015                           ;doprnt.c: 432: else if(scl > 10)
  3016  001892  5063               	movf	scale@scl,w,c
  3017  001894  0A80               	xorlw	128
  3018  001896  0F75               	addlw	-139
  3019  001898  A0D8               	btfss	status,0,c
  3020  00189A  D04F               	goto	l2234
  3021                           
  3022                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  3023  00189C  0E00               	movlw	0
  3024  00189E  6E52               	movwf	___awdiv@divisor+1,c
  3025  0018A0  0E0A               	movlw	10
  3026  0018A2  6E51               	movwf	___awdiv@divisor,c
  3027  0018A4  5063               	movf	scale@scl,w,c
  3028  0018A6  6E4F               	movwf	___awdiv@dividend,c
  3029  0018A8  6A50               	clrf	___awdiv@dividend+1,c
  3030  0018AA  BE4F               	btfsc	___awdiv@dividend,7,c
  3031  0018AC  0650               	decf	___awdiv@dividend+1,f,c
  3032  0018AE  EC64  F014         	call	___awdiv	;wreg free
  3033  0018B2  0E09               	movlw	9
  3034  0018B4  244F               	addwf	?___awdiv,w,c
  3035  0018B6  6E57               	movwf	___wmul@multiplier,c
  3036  0018B8  0E00               	movlw	0
  3037  0018BA  2050               	addwfc	?___awdiv+1,w,c
  3038  0018BC  6E58               	movwf	___wmul@multiplier+1,c
  3039  0018BE  0E00               	movlw	0
  3040  0018C0  6E5A               	movwf	___wmul@multiplicand+1,c
  3041  0018C2  0E03               	movlw	3
  3042  0018C4  6E59               	movwf	___wmul@multiplicand,c
  3043  0018C6  EC8C  F016         	call	___wmul	;wreg free
  3044  0018CA  0E29               	movlw	low __npowers_
  3045  0018CC  2457               	addwf	?___wmul,w,c
  3046  0018CE  6EF6               	movwf	tblptrl,c
  3047  0018D0  0E10               	movlw	high __npowers_
  3048  0018D2  2058               	addwfc	?___wmul+1,w,c
  3049  0018D4  6EF7               	movwf	tblptrh,c
  3050  0018D6                     	if	0	;There are less than 3 active tblptr bytes
  3051  0018D6                     	endif
  3052  0018D6  0009               	tblrd		*+
  3053  0018D8  CFF5 F01C          	movff	tablat,___ftmul@f1
  3054  0018DC  0009               	tblrd		*+
  3055  0018DE  CFF5 F01D          	movff	tablat,___ftmul@f1+1
  3056  0018E2  000A               	tblrd		*-
  3057  0018E4  CFF5 F01E          	movff	tablat,___ftmul@f1+2
  3058  0018E8  0E00               	movlw	0
  3059  0018EA  6E5A               	movwf	___wmul@multiplicand+1,c
  3060  0018EC  0E03               	movlw	3
  3061  0018EE  6E59               	movwf	___wmul@multiplicand,c
  3062  0018F0  0E00               	movlw	0
  3063  0018F2  6E4C               	movwf	___awmod@divisor+1,c
  3064  0018F4  0E0A               	movlw	10
  3065  0018F6  6E4B               	movwf	___awmod@divisor,c
  3066  0018F8  5063               	movf	scale@scl,w,c
  3067  0018FA  6E49               	movwf	___awmod@dividend,c
  3068  0018FC  6A4A               	clrf	___awmod@dividend+1,c
  3069  0018FE  BE49               	btfsc	___awmod@dividend,7,c
  3070  001900  064A               	decf	___awmod@dividend+1,f,c
  3071  001902  EC40  F015         	call	___awmod	;wreg free
  3072  001906  C049  F057         	movff	?___awmod,___wmul@multiplier
  3073  00190A  C04A  F058         	movff	?___awmod+1,___wmul@multiplier+1
  3074  00190E  EC8C  F016         	call	___wmul	;wreg free
  3075  001912  0E29               	movlw	low __npowers_
  3076  001914  2457               	addwf	?___wmul,w,c
  3077  001916  6EF6               	movwf	tblptrl,c
  3078  001918  0E10               	movlw	high __npowers_
  3079  00191A  2058               	addwfc	?___wmul+1,w,c
  3080  00191C  6EF7               	movwf	tblptrh,c
  3081  00191E                     	if	0	;There are less than 3 active tblptr bytes
  3082  00191E                     	endif
  3083  00191E  0009               	tblrd		*+
  3084  001920  CFF5 F01F          	movff	tablat,___ftmul@f2
  3085  001924  0009               	tblrd		*+
  3086  001926  CFF5 F020          	movff	tablat,___ftmul@f2+1
  3087  00192A  000A               	tblrd		*-
  3088  00192C  CFF5 F021          	movff	tablat,___ftmul@f2+2
  3089  001930  ECA1  F012         	call	___ftmul	;wreg free
  3090  001934  D0ED               	goto	L5
  3091  001936  D106               	goto	l203
  3092  001938  D000               	goto	l2234
  3093  00193A                     l2234:
  3094                           
  3095                           ;doprnt.c: 434: return _npowers_[scl];
  3096  00193A  5063               	movf	scale@scl,w,c
  3097  00193C  0D03               	mullw	3
  3098  00193E  0E29               	movlw	low __npowers_
  3099  001940  24F3               	addwf	prodl,w,c
  3100  001942  6EF6               	movwf	tblptrl,c
  3101  001944  0E10               	movlw	high __npowers_
  3102  001946  D0F2               	goto	L4
  3103  001948  D0FD               	goto	l203
  3104  00194A                     l2238:
  3105                           
  3106                           ;doprnt.c: 435: }
  3107                           ;doprnt.c: 436: if(scl>=110)
  3108  00194A  5063               	movf	scale@scl,w,c
  3109  00194C  0A80               	xorlw	128
  3110  00194E  0F12               	addlw	-238
  3111  001950  A0D8               	btfss	status,0,c
  3112  001952  D08D               	goto	l2246
  3113                           
  3114                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  3115  001954  0E00               	movlw	0
  3116  001956  6E5A               	movwf	___wmul@multiplicand+1,c
  3117  001958  0E03               	movlw	3
  3118  00195A  6E59               	movwf	___wmul@multiplicand,c
  3119  00195C  0E00               	movlw	0
  3120  00195E  6E52               	movwf	___awdiv@divisor+1,c
  3121  001960  0E0A               	movlw	10
  3122  001962  6E51               	movwf	___awdiv@divisor,c
  3123  001964  0E00               	movlw	0
  3124  001966  6E4C               	movwf	___awmod@divisor+1,c
  3125  001968  0E64               	movlw	100
  3126  00196A  6E4B               	movwf	___awmod@divisor,c
  3127  00196C  5063               	movf	scale@scl,w,c
  3128  00196E  6E49               	movwf	___awmod@dividend,c
  3129  001970  6A4A               	clrf	___awmod@dividend+1,c
  3130  001972  BE49               	btfsc	___awmod@dividend,7,c
  3131  001974  064A               	decf	___awmod@dividend+1,f,c
  3132  001976  EC40  F015         	call	___awmod	;wreg free
  3133  00197A  C049  F04F         	movff	?___awmod,___awdiv@dividend
  3134  00197E  C04A  F050         	movff	?___awmod+1,___awdiv@dividend+1
  3135  001982  EC64  F014         	call	___awdiv	;wreg free
  3136  001986  0E09               	movlw	9
  3137  001988  244F               	addwf	?___awdiv,w,c
  3138  00198A  6E57               	movwf	___wmul@multiplier,c
  3139  00198C  0E00               	movlw	0
  3140  00198E  2050               	addwfc	?___awdiv+1,w,c
  3141  001990  6E58               	movwf	___wmul@multiplier+1,c
  3142  001992  EC8C  F016         	call	___wmul	;wreg free
  3143  001996  0E50               	movlw	low __powers_
  3144  001998  2457               	addwf	?___wmul,w,c
  3145  00199A  6EF6               	movwf	tblptrl,c
  3146  00199C  0E10               	movlw	high __powers_
  3147  00199E  2058               	addwfc	?___wmul+1,w,c
  3148  0019A0  6EF7               	movwf	tblptrh,c
  3149  0019A2                     	if	0	;There are less than 3 active tblptr bytes
  3150  0019A2                     	endif
  3151  0019A2  0009               	tblrd		*+
  3152  0019A4  CFF5 F01F          	movff	tablat,___ftmul@f2
  3153  0019A8  0009               	tblrd		*+
  3154  0019AA  CFF5 F020          	movff	tablat,___ftmul@f2+1
  3155  0019AE  000A               	tblrd		*-
  3156  0019B0  CFF5 F021          	movff	tablat,___ftmul@f2+2
  3157  0019B4  0E00               	movlw	0
  3158  0019B6  6E52               	movwf	___awdiv@divisor+1,c
  3159  0019B8  0E64               	movlw	100
  3160  0019BA  6E51               	movwf	___awdiv@divisor,c
  3161  0019BC  5063               	movf	scale@scl,w,c
  3162  0019BE  6E4F               	movwf	___awdiv@dividend,c
  3163  0019C0  6A50               	clrf	___awdiv@dividend+1,c
  3164  0019C2  BE4F               	btfsc	___awdiv@dividend,7,c
  3165  0019C4  0650               	decf	___awdiv@dividend+1,f,c
  3166  0019C6  EC64  F014         	call	___awdiv	;wreg free
  3167  0019CA  0E12               	movlw	18
  3168  0019CC  244F               	addwf	?___awdiv,w,c
  3169  0019CE  6E57               	movwf	___wmul@multiplier,c
  3170  0019D0  0E00               	movlw	0
  3171  0019D2  2050               	addwfc	?___awdiv+1,w,c
  3172  0019D4  6E58               	movwf	___wmul@multiplier+1,c
  3173  0019D6  0E00               	movlw	0
  3174  0019D8  6E5A               	movwf	___wmul@multiplicand+1,c
  3175  0019DA  0E03               	movlw	3
  3176  0019DC  6E59               	movwf	___wmul@multiplicand,c
  3177  0019DE  EC8C  F016         	call	___wmul	;wreg free
  3178  0019E2  0E50               	movlw	low __powers_
  3179  0019E4  2457               	addwf	?___wmul,w,c
  3180  0019E6  6EF6               	movwf	tblptrl,c
  3181  0019E8  0E10               	movlw	high __powers_
  3182  0019EA  2058               	addwfc	?___wmul+1,w,c
  3183  0019EC  6EF7               	movwf	tblptrh,c
  3184  0019EE                     	if	0	;There are less than 3 active tblptr bytes
  3185  0019EE                     	endif
  3186  0019EE  0009               	tblrd		*+
  3187  0019F0  CFF5 F01C          	movff	tablat,___ftmul@f1
  3188  0019F4  0009               	tblrd		*+
  3189  0019F6  CFF5 F01D          	movff	tablat,___ftmul@f1+1
  3190  0019FA  000A               	tblrd		*-
  3191  0019FC  CFF5 F01E          	movff	tablat,___ftmul@f1+2
  3192  001A00  ECA1  F012         	call	___ftmul	;wreg free
  3193  001A04  C01C  F060         	movff	?___ftmul,_scale$1490
  3194  001A08  C01D  F061         	movff	?___ftmul+1,_scale$1490+1
  3195  001A0C  C01E  F062         	movff	?___ftmul+2,_scale$1490+2
  3196                           
  3197                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  3198  001A10  C060  F01C         	movff	_scale$1490,___ftmul@f1
  3199  001A14  C061  F01D         	movff	_scale$1490+1,___ftmul@f1+1
  3200  001A18  C062  F01E         	movff	_scale$1490+2,___ftmul@f1+2
  3201  001A1C  0E00               	movlw	0
  3202  001A1E  6E5A               	movwf	___wmul@multiplicand+1,c
  3203  001A20  0E03               	movlw	3
  3204  001A22  6E59               	movwf	___wmul@multiplicand,c
  3205  001A24  0E00               	movlw	0
  3206  001A26  6E4C               	movwf	___awmod@divisor+1,c
  3207  001A28  0E0A               	movlw	10
  3208  001A2A  6E4B               	movwf	___awmod@divisor,c
  3209  001A2C  5063               	movf	scale@scl,w,c
  3210  001A2E  6E49               	movwf	___awmod@dividend,c
  3211  001A30  6A4A               	clrf	___awmod@dividend+1,c
  3212  001A32  BE49               	btfsc	___awmod@dividend,7,c
  3213  001A34  064A               	decf	___awmod@dividend+1,f,c
  3214  001A36  EC40  F015         	call	___awmod	;wreg free
  3215  001A3A  C049  F057         	movff	?___awmod,___wmul@multiplier
  3216  001A3E  C04A  F058         	movff	?___awmod+1,___wmul@multiplier+1
  3217  001A42  EC8C  F016         	call	___wmul	;wreg free
  3218  001A46  0E50               	movlw	low __powers_
  3219  001A48  2457               	addwf	?___wmul,w,c
  3220  001A4A  6EF6               	movwf	tblptrl,c
  3221  001A4C  0E10               	movlw	high __powers_
  3222  001A4E  2058               	addwfc	?___wmul+1,w,c
  3223  001A50  6EF7               	movwf	tblptrh,c
  3224  001A52                     	if	0	;There are less than 3 active tblptr bytes
  3225  001A52                     	endif
  3226  001A52  0009               	tblrd		*+
  3227  001A54  CFF5 F01F          	movff	tablat,___ftmul@f2
  3228  001A58  0009               	tblrd		*+
  3229  001A5A  CFF5 F020          	movff	tablat,___ftmul@f2+1
  3230  001A5E  000A               	tblrd		*-
  3231  001A60  CFF5 F021          	movff	tablat,___ftmul@f2+2
  3232  001A64  ECA1  F012         	call	___ftmul	;wreg free
  3233  001A68  D053               	goto	L5
  3234  001A6A  D06C               	goto	l203
  3235  001A6C  D059               	goto	l2252
  3236  001A6E                     l2246:
  3237                           
  3238                           ;doprnt.c: 438: else if(scl > 10)
  3239  001A6E  5063               	movf	scale@scl,w,c
  3240  001A70  0A80               	xorlw	128
  3241  001A72  0F75               	addlw	-139
  3242  001A74  A0D8               	btfss	status,0,c
  3243  001A76  D054               	goto	l2252
  3244                           
  3245                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  3246  001A78  0E00               	movlw	0
  3247  001A7A  6E52               	movwf	___awdiv@divisor+1,c
  3248  001A7C  0E0A               	movlw	10
  3249  001A7E  6E51               	movwf	___awdiv@divisor,c
  3250  001A80  5063               	movf	scale@scl,w,c
  3251  001A82  6E4F               	movwf	___awdiv@dividend,c
  3252  001A84  6A50               	clrf	___awdiv@dividend+1,c
  3253  001A86  BE4F               	btfsc	___awdiv@dividend,7,c
  3254  001A88  0650               	decf	___awdiv@dividend+1,f,c
  3255  001A8A  EC64  F014         	call	___awdiv	;wreg free
  3256  001A8E  0E09               	movlw	9
  3257  001A90  244F               	addwf	?___awdiv,w,c
  3258  001A92  6E57               	movwf	___wmul@multiplier,c
  3259  001A94  0E00               	movlw	0
  3260  001A96  2050               	addwfc	?___awdiv+1,w,c
  3261  001A98  6E58               	movwf	___wmul@multiplier+1,c
  3262  001A9A  0E00               	movlw	0
  3263  001A9C  6E5A               	movwf	___wmul@multiplicand+1,c
  3264  001A9E  0E03               	movlw	3
  3265  001AA0  6E59               	movwf	___wmul@multiplicand,c
  3266  001AA2  EC8C  F016         	call	___wmul	;wreg free
  3267  001AA6  0E50               	movlw	low __powers_
  3268  001AA8  2457               	addwf	?___wmul,w,c
  3269  001AAA  6EF6               	movwf	tblptrl,c
  3270  001AAC  0E10               	movlw	high __powers_
  3271  001AAE  2058               	addwfc	?___wmul+1,w,c
  3272  001AB0  6EF7               	movwf	tblptrh,c
  3273  001AB2                     	if	0	;There are less than 3 active tblptr bytes
  3274  001AB2                     	endif
  3275  001AB2  0009               	tblrd		*+
  3276  001AB4  CFF5 F01C          	movff	tablat,___ftmul@f1
  3277  001AB8  0009               	tblrd		*+
  3278  001ABA  CFF5 F01D          	movff	tablat,___ftmul@f1+1
  3279  001ABE  000A               	tblrd		*-
  3280  001AC0  CFF5 F01E          	movff	tablat,___ftmul@f1+2
  3281  001AC4  0E00               	movlw	0
  3282  001AC6  6E5A               	movwf	___wmul@multiplicand+1,c
  3283  001AC8  0E03               	movlw	3
  3284  001ACA  6E59               	movwf	___wmul@multiplicand,c
  3285  001ACC  0E00               	movlw	0
  3286  001ACE  6E4C               	movwf	___awmod@divisor+1,c
  3287  001AD0  0E0A               	movlw	10
  3288  001AD2  6E4B               	movwf	___awmod@divisor,c
  3289  001AD4  5063               	movf	scale@scl,w,c
  3290  001AD6  6E49               	movwf	___awmod@dividend,c
  3291  001AD8  6A4A               	clrf	___awmod@dividend+1,c
  3292  001ADA  BE49               	btfsc	___awmod@dividend,7,c
  3293  001ADC  064A               	decf	___awmod@dividend+1,f,c
  3294  001ADE  EC40  F015         	call	___awmod	;wreg free
  3295  001AE2  C049  F057         	movff	?___awmod,___wmul@multiplier
  3296  001AE6  C04A  F058         	movff	?___awmod+1,___wmul@multiplier+1
  3297  001AEA  EC8C  F016         	call	___wmul	;wreg free
  3298  001AEE  0E50               	movlw	low __powers_
  3299  001AF0  2457               	addwf	?___wmul,w,c
  3300  001AF2  6EF6               	movwf	tblptrl,c
  3301  001AF4  0E10               	movlw	high __powers_
  3302  001AF6  2058               	addwfc	?___wmul+1,w,c
  3303  001AF8  6EF7               	movwf	tblptrh,c
  3304  001AFA                     	if	0	;There are less than 3 active tblptr bytes
  3305  001AFA                     	endif
  3306  001AFA  0009               	tblrd		*+
  3307  001AFC  CFF5 F01F          	movff	tablat,___ftmul@f2
  3308  001B00  0009               	tblrd		*+
  3309  001B02  CFF5 F020          	movff	tablat,___ftmul@f2+1
  3310  001B06  000A               	tblrd		*-
  3311  001B08  CFF5 F021          	movff	tablat,___ftmul@f2+2
  3312  001B0C  ECA1  F012         	call	___ftmul	;wreg free
  3313  001B10                     L5:
  3314  001B10  C01C  F05D         	movff	?___ftmul,?_scale
  3315  001B14  C01D  F05E         	movff	?___ftmul+1,?_scale+1
  3316  001B18  C01E  F05F         	movff	?___ftmul+2,?_scale+2
  3317  001B1C  D013               	goto	l203
  3318  001B1E  D000               	goto	l2252
  3319  001B20                     l2252:
  3320                           
  3321                           ;doprnt.c: 440: return _powers_[scl];
  3322  001B20  5063               	movf	scale@scl,w,c
  3323  001B22  0D03               	mullw	3
  3324  001B24  0E50               	movlw	low __powers_
  3325  001B26  24F3               	addwf	prodl,w,c
  3326  001B28  6EF6               	movwf	tblptrl,c
  3327  001B2A  0E10               	movlw	high __powers_
  3328  001B2C                     L4:
  3329  001B2C  20F4               	addwfc	prodh,w,c
  3330  001B2E  6EF7               	movwf	tblptrh,c
  3331  001B30                     	if	0	;There are less than 3 active tblptr bytes
  3332  001B30                     	endif
  3333  001B30  0009               	tblrd		*+
  3334  001B32  CFF5 F05D          	movff	tablat,?_scale
  3335  001B36  0009               	tblrd		*+
  3336  001B38  CFF5 F05E          	movff	tablat,?_scale+1
  3337  001B3C  000A               	tblrd		*-
  3338  001B3E  CFF5 F05F          	movff	tablat,?_scale+2
  3339  001B42  D000               	goto	l203
  3340  001B44                     l203:
  3341  001B44  0012               	return		;funcret
  3342  001B46                     __end_of_scale:
  3343                           	opt stack 0
  3344                           tblptru	equ	0xFF8
  3345                           tblptrh	equ	0xFF7
  3346                           tblptrl	equ	0xFF6
  3347                           tablat	equ	0xFF5
  3348                           prodh	equ	0xFF4
  3349                           prodl	equ	0xFF3
  3350                           wreg	equ	0xFE8
  3351                           postinc2	equ	0xFDE
  3352                           postdec2	equ	0xFDD
  3353                           fsr2h	equ	0xFDA
  3354                           fsr2l	equ	0xFD9
  3355                           status	equ	0xFD8
  3356                           
  3357 ;; *************** function _putch *****************
  3358 ;; Defined at:
  3359 ;;		line 68 in file "lab6p1.c"
  3360 ;; Parameters:    Size  Location     Type
  3361 ;;  c               1    wreg     unsigned char 
  3362 ;; Auto vars:     Size  Location     Type
  3363 ;;  c               1    0[COMRAM] unsigned char 
  3364 ;; Return value:  Size  Location     Type
  3365 ;;		None               void
  3366 ;; Registers used:
  3367 ;;		wreg
  3368 ;; Tracked objects:
  3369 ;;		On entry : 0/0
  3370 ;;		On exit  : 0/0
  3371 ;;		Unchanged: 0/0
  3372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3374 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3376 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3377 ;;Total ram usage:        1 bytes
  3378 ;; Hardware stack levels used:    1
  3379 ;; This function calls:
  3380 ;;		Nothing
  3381 ;; This function is called by:
  3382 ;;		_printf
  3383 ;; This function uses a non-reentrant model
  3384 ;;
  3385                           
  3386                           	psect	text11
  3387  002DE8                     __ptext11:
  3388                           	opt stack 0
  3389  002DE8                     _putch:
  3390                           	opt stack 29
  3391                           
  3392                           ;incstack = 0
  3393                           ;putch@c stored from wreg
  3394  002DE8  6E01               	movwf	putch@c,c
  3395                           
  3396                           ;lab6p1.c: 69: while (!TRMT);
  3397  002DEA  D000               	goto	l67
  3398  002DEC                     l67:
  3399  002DEC  A2AC               	btfss	4012,1,c	;volatile
  3400  002DEE  D7FE               	goto	l67
  3401                           
  3402                           ;lab6p1.c: 70: TXREG = c;
  3403  002DF0  C001  FFAD         	movff	putch@c,4013	;volatile
  3404  002DF4  0012               	return		;funcret
  3405  002DF6                     __end_of_putch:
  3406                           	opt stack 0
  3407                           tblptru	equ	0xFF8
  3408                           tblptrh	equ	0xFF7
  3409                           tblptrl	equ	0xFF6
  3410                           tablat	equ	0xFF5
  3411                           prodh	equ	0xFF4
  3412                           prodl	equ	0xFF3
  3413                           wreg	equ	0xFE8
  3414                           postinc2	equ	0xFDE
  3415                           postdec2	equ	0xFDD
  3416                           fsr2h	equ	0xFDA
  3417                           fsr2l	equ	0xFD9
  3418                           status	equ	0xFD8
  3419                           
  3420 ;; *************** function _fround *****************
  3421 ;; Defined at:
  3422 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  3423 ;; Parameters:    Size  Location     Type
  3424 ;;  prec            1    wreg     unsigned char 
  3425 ;; Auto vars:     Size  Location     Type
  3426 ;;  prec            1  101[COMRAM] unsigned char 
  3427 ;; Return value:  Size  Location     Type
  3428 ;;                  3   92[COMRAM] unsigned char 
  3429 ;; Registers used:
  3430 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3431 ;; Tracked objects:
  3432 ;;		On entry : 0/0
  3433 ;;		On exit  : 0/0
  3434 ;;		Unchanged: 0/0
  3435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3436 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3437 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3439 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3440 ;;Total ram usage:       10 bytes
  3441 ;; Hardware stack levels used:    1
  3442 ;; Hardware stack levels required when called:    2
  3443 ;; This function calls:
  3444 ;;		___awdiv
  3445 ;;		___awmod
  3446 ;;		___ftmul
  3447 ;;		___wmul
  3448 ;; This function is called by:
  3449 ;;		_printf
  3450 ;; This function uses a non-reentrant model
  3451 ;;
  3452                           
  3453                           	psect	text12
  3454  001E20                     __ptext12:
  3455                           	opt stack 0
  3456  001E20                     _fround:
  3457                           	opt stack 27
  3458                           
  3459                           ;incstack = 0
  3460                           ;fround@prec stored from wreg
  3461  001E20  6E66               	movwf	fround@prec,c
  3462                           
  3463                           ;doprnt.c: 413: if(prec>=110)
  3464  001E22  0E6D               	movlw	109
  3465  001E24  6466               	cpfsgt	fround@prec,c
  3466  001E26  D09B               	goto	l2206
  3467                           
  3468                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3469  001E28  0E00               	movlw	0
  3470  001E2A  6E5A               	movwf	___wmul@multiplicand+1,c
  3471  001E2C  0E03               	movlw	3
  3472  001E2E  6E59               	movwf	___wmul@multiplicand,c
  3473  001E30  0E00               	movlw	0
  3474  001E32  6E52               	movwf	___awdiv@divisor+1,c
  3475  001E34  0E0A               	movlw	10
  3476  001E36  6E51               	movwf	___awdiv@divisor,c
  3477  001E38  0E00               	movlw	0
  3478  001E3A  6E4C               	movwf	___awmod@divisor+1,c
  3479  001E3C  0E64               	movlw	100
  3480  001E3E  6E4B               	movwf	___awmod@divisor,c
  3481  001E40  C066  F049         	movff	fround@prec,___awmod@dividend
  3482  001E44  6A4A               	clrf	___awmod@dividend+1,c
  3483  001E46  EC40  F015         	call	___awmod	;wreg free
  3484  001E4A  C049  F04F         	movff	?___awmod,___awdiv@dividend
  3485  001E4E  C04A  F050         	movff	?___awmod+1,___awdiv@dividend+1
  3486  001E52  EC64  F014         	call	___awdiv	;wreg free
  3487  001E56  0E09               	movlw	9
  3488  001E58  244F               	addwf	?___awdiv,w,c
  3489  001E5A  6E57               	movwf	___wmul@multiplier,c
  3490  001E5C  0E00               	movlw	0
  3491  001E5E  2050               	addwfc	?___awdiv+1,w,c
  3492  001E60  6E58               	movwf	___wmul@multiplier+1,c
  3493  001E62  EC8C  F016         	call	___wmul	;wreg free
  3494  001E66  0E29               	movlw	low __npowers_
  3495  001E68  2457               	addwf	?___wmul,w,c
  3496  001E6A  6EF6               	movwf	tblptrl,c
  3497  001E6C  0E10               	movlw	high __npowers_
  3498  001E6E  2058               	addwfc	?___wmul+1,w,c
  3499  001E70  6EF7               	movwf	tblptrh,c
  3500  001E72                     	if	0	;There are less than 3 active tblptr bytes
  3501  001E72                     	endif
  3502  001E72  0009               	tblrd		*+
  3503  001E74  CFF5 F01F          	movff	tablat,___ftmul@f2
  3504  001E78  0009               	tblrd		*+
  3505  001E7A  CFF5 F020          	movff	tablat,___ftmul@f2+1
  3506  001E7E  000A               	tblrd		*-
  3507  001E80  CFF5 F021          	movff	tablat,___ftmul@f2+2
  3508  001E84  0E00               	movlw	0
  3509  001E86  6E52               	movwf	___awdiv@divisor+1,c
  3510  001E88  0E64               	movlw	100
  3511  001E8A  6E51               	movwf	___awdiv@divisor,c
  3512  001E8C  C066  F04F         	movff	fround@prec,___awdiv@dividend
  3513  001E90  6A50               	clrf	___awdiv@dividend+1,c
  3514  001E92  EC64  F014         	call	___awdiv	;wreg free
  3515  001E96  0E12               	movlw	18
  3516  001E98  244F               	addwf	?___awdiv,w,c
  3517  001E9A  6E57               	movwf	___wmul@multiplier,c
  3518  001E9C  0E00               	movlw	0
  3519  001E9E  2050               	addwfc	?___awdiv+1,w,c
  3520  001EA0  6E58               	movwf	___wmul@multiplier+1,c
  3521  001EA2  0E00               	movlw	0
  3522  001EA4  6E5A               	movwf	___wmul@multiplicand+1,c
  3523  001EA6  0E03               	movlw	3
  3524  001EA8  6E59               	movwf	___wmul@multiplicand,c
  3525  001EAA  EC8C  F016         	call	___wmul	;wreg free
  3526  001EAE  0E29               	movlw	low __npowers_
  3527  001EB0  2457               	addwf	?___wmul,w,c
  3528  001EB2  6EF6               	movwf	tblptrl,c
  3529  001EB4  0E10               	movlw	high __npowers_
  3530  001EB6  2058               	addwfc	?___wmul+1,w,c
  3531  001EB8  6EF7               	movwf	tblptrh,c
  3532  001EBA                     	if	0	;There are less than 3 active tblptr bytes
  3533  001EBA                     	endif
  3534  001EBA  0009               	tblrd		*+
  3535  001EBC  CFF5 F01C          	movff	tablat,___ftmul@f1
  3536  001EC0  0009               	tblrd		*+
  3537  001EC2  CFF5 F01D          	movff	tablat,___ftmul@f1+1
  3538  001EC6  000A               	tblrd		*-
  3539  001EC8  CFF5 F01E          	movff	tablat,___ftmul@f1+2
  3540  001ECC  ECA1  F012         	call	___ftmul	;wreg free
  3541  001ED0  C01C  F063         	movff	?___ftmul,_fround$1488
  3542  001ED4  C01D  F064         	movff	?___ftmul+1,_fround$1488+1
  3543  001ED8  C01E  F065         	movff	?___ftmul+2,_fround$1488+2
  3544                           
  3545                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3546  001EDC  0E00               	movlw	0
  3547  001EDE  6E5A               	movwf	___wmul@multiplicand+1,c
  3548  001EE0  0E03               	movlw	3
  3549  001EE2  6E59               	movwf	___wmul@multiplicand,c
  3550  001EE4  0E00               	movlw	0
  3551  001EE6  6E4C               	movwf	___awmod@divisor+1,c
  3552  001EE8  0E0A               	movlw	10
  3553  001EEA  6E4B               	movwf	___awmod@divisor,c
  3554  001EEC  C066  F049         	movff	fround@prec,___awmod@dividend
  3555  001EF0  6A4A               	clrf	___awmod@dividend+1,c
  3556  001EF2  EC40  F015         	call	___awmod	;wreg free
  3557  001EF6  C049  F057         	movff	?___awmod,___wmul@multiplier
  3558  001EFA  C04A  F058         	movff	?___awmod+1,___wmul@multiplier+1
  3559  001EFE  EC8C  F016         	call	___wmul	;wreg free
  3560  001F02  0E29               	movlw	low __npowers_
  3561  001F04  2457               	addwf	?___wmul,w,c
  3562  001F06  6EF6               	movwf	tblptrl,c
  3563  001F08  0E10               	movlw	high __npowers_
  3564  001F0A  2058               	addwfc	?___wmul+1,w,c
  3565  001F0C  6EF7               	movwf	tblptrh,c
  3566  001F0E                     	if	0	;There are less than 3 active tblptr bytes
  3567  001F0E                     	endif
  3568  001F0E  0009               	tblrd		*+
  3569  001F10  CFF5 F01F          	movff	tablat,___ftmul@f2
  3570  001F14  0009               	tblrd		*+
  3571  001F16  CFF5 F020          	movff	tablat,___ftmul@f2+1
  3572  001F1A  000A               	tblrd		*-
  3573  001F1C  CFF5 F021          	movff	tablat,___ftmul@f2+2
  3574  001F20  C063  F01C         	movff	_fround$1488,___ftmul@f1
  3575  001F24  C064  F01D         	movff	_fround$1488+1,___ftmul@f1+1
  3576  001F28  C065  F01E         	movff	_fround$1488+2,___ftmul@f1+2
  3577  001F2C  ECA1  F012         	call	___ftmul	;wreg free
  3578  001F30  C01C  F060         	movff	?___ftmul,_fround$1489
  3579  001F34  C01D  F061         	movff	?___ftmul+1,_fround$1489+1
  3580  001F38  C01E  F062         	movff	?___ftmul+2,_fround$1489+2
  3581                           
  3582                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3583  001F3C  C060  F01C         	movff	_fround$1489,___ftmul@f1
  3584  001F40  C061  F01D         	movff	_fround$1489+1,___ftmul@f1+1
  3585  001F44  C062  F01E         	movff	_fround$1489+2,___ftmul@f1+2
  3586  001F48  0E00               	movlw	0
  3587  001F4A  6E1F               	movwf	___ftmul@f2,c
  3588  001F4C  0E00               	movlw	0
  3589  001F4E  6E20               	movwf	___ftmul@f2+1,c
  3590  001F50  0E3F               	movlw	63
  3591  001F52  6E21               	movwf	___ftmul@f2+2,c
  3592  001F54  ECA1  F012         	call	___ftmul	;wreg free
  3593  001F58  D07D               	goto	L7
  3594  001F5A  D083               	goto	l196
  3595  001F5C  D062               	goto	l2214
  3596  001F5E                     l2206:
  3597                           
  3598                           ;doprnt.c: 415: else if(prec > 10)
  3599  001F5E  0E0A               	movlw	10
  3600  001F60  6466               	cpfsgt	fround@prec,c
  3601  001F62  D05F               	goto	l2214
  3602                           
  3603                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3604  001F64  0E00               	movlw	0
  3605  001F66  6E5A               	movwf	___wmul@multiplicand+1,c
  3606  001F68  0E03               	movlw	3
  3607  001F6A  6E59               	movwf	___wmul@multiplicand,c
  3608  001F6C  0E00               	movlw	0
  3609  001F6E  6E4C               	movwf	___awmod@divisor+1,c
  3610  001F70  0E0A               	movlw	10
  3611  001F72  6E4B               	movwf	___awmod@divisor,c
  3612  001F74  C066  F049         	movff	fround@prec,___awmod@dividend
  3613  001F78  6A4A               	clrf	___awmod@dividend+1,c
  3614  001F7A  EC40  F015         	call	___awmod	;wreg free
  3615  001F7E  C049  F057         	movff	?___awmod,___wmul@multiplier
  3616  001F82  C04A  F058         	movff	?___awmod+1,___wmul@multiplier+1
  3617  001F86  EC8C  F016         	call	___wmul	;wreg free
  3618  001F8A  0E29               	movlw	low __npowers_
  3619  001F8C  2457               	addwf	?___wmul,w,c
  3620  001F8E  6EF6               	movwf	tblptrl,c
  3621  001F90  0E10               	movlw	high __npowers_
  3622  001F92  2058               	addwfc	?___wmul+1,w,c
  3623  001F94  6EF7               	movwf	tblptrh,c
  3624  001F96                     	if	0	;There are less than 3 active tblptr bytes
  3625  001F96                     	endif
  3626  001F96  0009               	tblrd		*+
  3627  001F98  CFF5 F01F          	movff	tablat,___ftmul@f2
  3628  001F9C  0009               	tblrd		*+
  3629  001F9E  CFF5 F020          	movff	tablat,___ftmul@f2+1
  3630  001FA2  000A               	tblrd		*-
  3631  001FA4  CFF5 F021          	movff	tablat,___ftmul@f2+2
  3632  001FA8  0E00               	movlw	0
  3633  001FAA  6E52               	movwf	___awdiv@divisor+1,c
  3634  001FAC  0E0A               	movlw	10
  3635  001FAE  6E51               	movwf	___awdiv@divisor,c
  3636  001FB0  C066  F04F         	movff	fround@prec,___awdiv@dividend
  3637  001FB4  6A50               	clrf	___awdiv@dividend+1,c
  3638  001FB6  EC64  F014         	call	___awdiv	;wreg free
  3639  001FBA  0E09               	movlw	9
  3640  001FBC  244F               	addwf	?___awdiv,w,c
  3641  001FBE  6E57               	movwf	___wmul@multiplier,c
  3642  001FC0  0E00               	movlw	0
  3643  001FC2  2050               	addwfc	?___awdiv+1,w,c
  3644  001FC4  6E58               	movwf	___wmul@multiplier+1,c
  3645  001FC6  0E00               	movlw	0
  3646  001FC8  6E5A               	movwf	___wmul@multiplicand+1,c
  3647  001FCA  0E03               	movlw	3
  3648  001FCC  6E59               	movwf	___wmul@multiplicand,c
  3649  001FCE  EC8C  F016         	call	___wmul	;wreg free
  3650  001FD2  0E29               	movlw	low __npowers_
  3651  001FD4  2457               	addwf	?___wmul,w,c
  3652  001FD6  6EF6               	movwf	tblptrl,c
  3653  001FD8  0E10               	movlw	high __npowers_
  3654  001FDA  2058               	addwfc	?___wmul+1,w,c
  3655  001FDC  6EF7               	movwf	tblptrh,c
  3656  001FDE                     	if	0	;There are less than 3 active tblptr bytes
  3657  001FDE                     	endif
  3658  001FDE  0009               	tblrd		*+
  3659  001FE0  CFF5 F01C          	movff	tablat,___ftmul@f1
  3660  001FE4  0009               	tblrd		*+
  3661  001FE6  CFF5 F01D          	movff	tablat,___ftmul@f1+1
  3662  001FEA  000A               	tblrd		*-
  3663  001FEC  CFF5 F01E          	movff	tablat,___ftmul@f1+2
  3664  001FF0  ECA1  F012         	call	___ftmul	;wreg free
  3665  001FF4  C01C  F063         	movff	?___ftmul,_fround$1488
  3666  001FF8  C01D  F064         	movff	?___ftmul+1,_fround$1488+1
  3667  001FFC  C01E  F065         	movff	?___ftmul+2,_fround$1488+2
  3668                           
  3669                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3670  002000  C063  F01C         	movff	_fround$1488,___ftmul@f1
  3671  002004  C064  F01D         	movff	_fround$1488+1,___ftmul@f1+1
  3672  002008  C065  F01E         	movff	_fround$1488+2,___ftmul@f1+2
  3673  00200C  0E00               	movlw	0
  3674  00200E  6E1F               	movwf	___ftmul@f2,c
  3675  002010  0E00               	movlw	0
  3676  002012  6E20               	movwf	___ftmul@f2+1,c
  3677  002014  0E3F               	movlw	63
  3678  002016  6E21               	movwf	___ftmul@f2+2,c
  3679  002018  ECA1  F012         	call	___ftmul	;wreg free
  3680  00201C  D01B               	goto	L7
  3681  00201E  D021               	goto	l196
  3682  002020  D000               	goto	l2214
  3683  002022                     l2214:
  3684                           
  3685                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  3686  002022  5066               	movf	fround@prec,w,c
  3687  002024  0D03               	mullw	3
  3688  002026  0E29               	movlw	low __npowers_
  3689  002028  24F3               	addwf	prodl,w,c
  3690  00202A  6EF6               	movwf	tblptrl,c
  3691  00202C  0E10               	movlw	high __npowers_
  3692  00202E  20F4               	addwfc	prodh,w,c
  3693  002030  6EF7               	movwf	tblptrh,c
  3694  002032                     	if	0	;There are less than 3 active tblptr bytes
  3695  002032                     	endif
  3696  002032  0009               	tblrd		*+
  3697  002034  CFF5 F01C          	movff	tablat,___ftmul@f1
  3698  002038  0009               	tblrd		*+
  3699  00203A  CFF5 F01D          	movff	tablat,___ftmul@f1+1
  3700  00203E  000A               	tblrd		*-
  3701  002040  CFF5 F01E          	movff	tablat,___ftmul@f1+2
  3702  002044  0E00               	movlw	0
  3703  002046  6E1F               	movwf	___ftmul@f2,c
  3704  002048  0E00               	movlw	0
  3705  00204A  6E20               	movwf	___ftmul@f2+1,c
  3706  00204C  0E3F               	movlw	63
  3707  00204E  6E21               	movwf	___ftmul@f2+2,c
  3708  002050  ECA1  F012         	call	___ftmul	;wreg free
  3709  002054                     L7:
  3710  002054  C01C  F05D         	movff	?___ftmul,?_fround
  3711  002058  C01D  F05E         	movff	?___ftmul+1,?_fround+1
  3712  00205C  C01E  F05F         	movff	?___ftmul+2,?_fround+2
  3713  002060  D000               	goto	l196
  3714  002062                     l196:
  3715  002062  0012               	return		;funcret
  3716  002064                     __end_of_fround:
  3717                           	opt stack 0
  3718                           tblptru	equ	0xFF8
  3719                           tblptrh	equ	0xFF7
  3720                           tblptrl	equ	0xFF6
  3721                           tablat	equ	0xFF5
  3722                           prodh	equ	0xFF4
  3723                           prodl	equ	0xFF3
  3724                           wreg	equ	0xFE8
  3725                           postinc2	equ	0xFDE
  3726                           postdec2	equ	0xFDD
  3727                           fsr2h	equ	0xFDA
  3728                           fsr2l	equ	0xFD9
  3729                           status	equ	0xFD8
  3730                           
  3731 ;; *************** function ___wmul *****************
  3732 ;; Defined at:
  3733 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  3734 ;; Parameters:    Size  Location     Type
  3735 ;;  multiplier      2   86[COMRAM] unsigned int 
  3736 ;;  multiplicand    2   88[COMRAM] unsigned int 
  3737 ;; Auto vars:     Size  Location     Type
  3738 ;;  product         2   90[COMRAM] unsigned int 
  3739 ;; Return value:  Size  Location     Type
  3740 ;;                  2   86[COMRAM] unsigned int 
  3741 ;; Registers used:
  3742 ;;		wreg, status,2, status,0, prodl, prodh
  3743 ;; Tracked objects:
  3744 ;;		On entry : 0/0
  3745 ;;		On exit  : 0/0
  3746 ;;		Unchanged: 0/0
  3747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3748 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3749 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3751 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3752 ;;Total ram usage:        6 bytes
  3753 ;; Hardware stack levels used:    1
  3754 ;; This function calls:
  3755 ;;		Nothing
  3756 ;; This function is called by:
  3757 ;;		_fround
  3758 ;;		_scale
  3759 ;;		_printf
  3760 ;; This function uses a non-reentrant model
  3761 ;;
  3762                           
  3763                           	psect	text13
  3764  002D18                     __ptext13:
  3765                           	opt stack 0
  3766  002D18                     ___wmul:
  3767                           	opt stack 28
  3768                           
  3769                           ;incstack = 0
  3770  002D18  5057               	movf	___wmul@multiplier,w,c
  3771  002D1A  0259               	mulwf	___wmul@multiplicand,c
  3772  002D1C  CFF3 F05B          	movff	prodl,___wmul@product
  3773  002D20  CFF4 F05C          	movff	prodh,___wmul@product+1
  3774  002D24  5057               	movf	___wmul@multiplier,w,c
  3775  002D26  025A               	mulwf	___wmul@multiplicand+1,c
  3776  002D28  50F3               	movf	prodl,w,c
  3777  002D2A  265C               	addwf	___wmul@product+1,f,c
  3778  002D2C  5058               	movf	___wmul@multiplier+1,w,c
  3779  002D2E  0259               	mulwf	___wmul@multiplicand,c
  3780  002D30  50F3               	movf	prodl,w,c
  3781  002D32  265C               	addwf	___wmul@product+1,f,c
  3782  002D34  C05B  F057         	movff	___wmul@product,?___wmul
  3783  002D38  C05C  F058         	movff	___wmul@product+1,?___wmul+1
  3784  002D3C  D000               	goto	l295
  3785  002D3E                     l295:
  3786  002D3E  0012               	return		;funcret
  3787  002D40                     __end_of___wmul:
  3788                           	opt stack 0
  3789                           tblptru	equ	0xFF8
  3790                           tblptrh	equ	0xFF7
  3791                           tblptrl	equ	0xFF6
  3792                           tablat	equ	0xFF5
  3793                           prodh	equ	0xFF4
  3794                           prodl	equ	0xFF3
  3795                           wreg	equ	0xFE8
  3796                           postinc2	equ	0xFDE
  3797                           postdec2	equ	0xFDD
  3798                           fsr2h	equ	0xFDA
  3799                           fsr2l	equ	0xFD9
  3800                           status	equ	0xFD8
  3801                           
  3802 ;; *************** function ___ftmul *****************
  3803 ;; Defined at:
  3804 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  3805 ;; Parameters:    Size  Location     Type
  3806 ;;  f1              3   27[COMRAM] float 
  3807 ;;  f2              3   30[COMRAM] float 
  3808 ;; Auto vars:     Size  Location     Type
  3809 ;;  f3_as_produc    3   37[COMRAM] unsigned um
  3810 ;;  sign            1   41[COMRAM] unsigned char 
  3811 ;;  cntr            1   40[COMRAM] unsigned char 
  3812 ;;  exp             1   36[COMRAM] unsigned char 
  3813 ;; Return value:  Size  Location     Type
  3814 ;;                  3   27[COMRAM] float 
  3815 ;; Registers used:
  3816 ;;		wreg, status,2, status,0, cstack
  3817 ;; Tracked objects:
  3818 ;;		On entry : 0/0
  3819 ;;		On exit  : 0/0
  3820 ;;		Unchanged: 0/0
  3821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3822 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3823 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3824 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3825 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3826 ;;Total ram usage:       15 bytes
  3827 ;; Hardware stack levels used:    1
  3828 ;; Hardware stack levels required when called:    1
  3829 ;; This function calls:
  3830 ;;		___ftpack
  3831 ;; This function is called by:
  3832 ;;		_main
  3833 ;;		_fround
  3834 ;;		_scale
  3835 ;;		_printf
  3836 ;;		_Display_7Seg
  3837 ;; This function uses a non-reentrant model
  3838 ;;
  3839                           
  3840                           	psect	text14
  3841  002542                     __ptext14:
  3842                           	opt stack 0
  3843  002542                     ___ftmul:
  3844                           	opt stack 27
  3845                           
  3846                           ;incstack = 0
  3847  002542  C01E  F022         	movff	___ftmul@f1+2,??___ftmul
  3848  002546  6A23               	clrf	(??___ftmul+1)& (0+255),c
  3849  002548  6A24               	clrf	(??___ftmul+2)& (0+255),c
  3850  00254A  341D               	rlcf	___ftmul@f1+1,w,c
  3851  00254C  3622               	rlcf	??___ftmul& (0+255),f,c
  3852  00254E  E301               	bnc	u1781
  3853  002550  8023               	bsf	(??___ftmul+1)& (0+255),0,c
  3854  002552                     u1781:
  3855  002552  5022               	movf	??___ftmul,w,c
  3856  002554  6E25               	movwf	___ftmul@exp,c
  3857  002556  5025               	movf	___ftmul@exp,w,c
  3858  002558  A4D8               	btfss	status,2,c
  3859  00255A  D002               	goto	l2010
  3860  00255C  D00E               	goto	l2012
  3861  00255E  D06C               	goto	l724
  3862  002560                     l2010:
  3863  002560  C021  F022         	movff	___ftmul@f2+2,??___ftmul
  3864  002564  6A23               	clrf	(??___ftmul+1)& (0+255),c
  3865  002566  6A24               	clrf	(??___ftmul+2)& (0+255),c
  3866  002568  3420               	rlcf	___ftmul@f2+1,w,c
  3867  00256A  3622               	rlcf	??___ftmul& (0+255),f,c
  3868  00256C  E301               	bnc	u1801
  3869  00256E  8023               	bsf	(??___ftmul+1)& (0+255),0,c
  3870  002570                     u1801:
  3871  002570  5022               	movf	??___ftmul,w,c
  3872  002572  6E2A               	movwf	___ftmul@sign,c
  3873  002574  502A               	movf	___ftmul@sign,w,c
  3874  002576  A4D8               	btfss	status,2,c
  3875  002578  D007               	goto	l2016
  3876  00257A                     l2012:
  3877  00257A  0E00               	movlw	0
  3878  00257C  6E1C               	movwf	?___ftmul,c
  3879  00257E  0E00               	movlw	0
  3880  002580  6E1D               	movwf	?___ftmul+1,c
  3881  002582  0E00               	movlw	0
  3882  002584  6E1E               	movwf	?___ftmul+2,c
  3883  002586  D058               	goto	l724
  3884  002588                     l2016:
  3885  002588  502A               	movf	___ftmul@sign,w,c
  3886  00258A  0F7B               	addlw	123
  3887  00258C  2625               	addwf	___ftmul@exp,f,c
  3888  00258E  C01E  F02A         	movff	___ftmul@f1+2,___ftmul@sign
  3889  002592  5021               	movf	___ftmul@f2+2,w,c
  3890  002594  1A2A               	xorwf	___ftmul@sign,f,c
  3891  002596  0E80               	movlw	128
  3892  002598  162A               	andwf	___ftmul@sign,f,c
  3893  00259A  8E1D               	bsf	___ftmul@f1+1,7,c
  3894  00259C  8E20               	bsf	___ftmul@f2+1,7,c
  3895  00259E  0EFF               	movlw	255
  3896  0025A0  161F               	andwf	___ftmul@f2,f,c
  3897  0025A2  0EFF               	movlw	255
  3898  0025A4  1620               	andwf	___ftmul@f2+1,f,c
  3899  0025A6  0E00               	movlw	0
  3900  0025A8  1621               	andwf	___ftmul@f2+2,f,c
  3901  0025AA  0E00               	movlw	0
  3902  0025AC  6E26               	movwf	___ftmul@f3_as_product,c
  3903  0025AE  0E00               	movlw	0
  3904  0025B0  6E27               	movwf	___ftmul@f3_as_product+1,c
  3905  0025B2  0E00               	movlw	0
  3906  0025B4  6E28               	movwf	___ftmul@f3_as_product+2,c
  3907  0025B6  0E07               	movlw	7
  3908  0025B8  6E29               	movwf	___ftmul@cntr,c
  3909  0025BA  D000               	goto	l2030
  3910  0025BC                     l2030:
  3911  0025BC  A01C               	btfss	___ftmul@f1,0,c
  3912  0025BE  D007               	goto	l2034
  3913  0025C0  501F               	movf	___ftmul@f2,w,c
  3914  0025C2  2626               	addwf	___ftmul@f3_as_product,f,c
  3915  0025C4  5020               	movf	___ftmul@f2+1,w,c
  3916  0025C6  2227               	addwfc	___ftmul@f3_as_product+1,f,c
  3917  0025C8  5021               	movf	___ftmul@f2+2,w,c
  3918  0025CA  2228               	addwfc	___ftmul@f3_as_product+2,f,c
  3919  0025CC  D000               	goto	l2034
  3920  0025CE                     l2034:
  3921  0025CE  90D8               	bcf	status,0,c
  3922  0025D0  321E               	rrcf	___ftmul@f1+2,f,c
  3923  0025D2  321D               	rrcf	___ftmul@f1+1,f,c
  3924  0025D4  321C               	rrcf	___ftmul@f1,f,c
  3925  0025D6  90D8               	bcf	status,0,c
  3926  0025D8  361F               	rlcf	___ftmul@f2,f,c
  3927  0025DA  3620               	rlcf	___ftmul@f2+1,f,c
  3928  0025DC  3621               	rlcf	___ftmul@f2+2,f,c
  3929  0025DE  2E29               	decfsz	___ftmul@cntr,f,c
  3930  0025E0  D7ED               	goto	l2030
  3931  0025E2  D000               	goto	l2038
  3932  0025E4                     l2038:
  3933  0025E4  0E09               	movlw	9
  3934  0025E6  6E29               	movwf	___ftmul@cntr,c
  3935  0025E8  D000               	goto	l2040
  3936  0025EA                     l2040:
  3937  0025EA  A01C               	btfss	___ftmul@f1,0,c
  3938  0025EC  D007               	goto	l2044
  3939  0025EE  501F               	movf	___ftmul@f2,w,c
  3940  0025F0  2626               	addwf	___ftmul@f3_as_product,f,c
  3941  0025F2  5020               	movf	___ftmul@f2+1,w,c
  3942  0025F4  2227               	addwfc	___ftmul@f3_as_product+1,f,c
  3943  0025F6  5021               	movf	___ftmul@f2+2,w,c
  3944  0025F8  2228               	addwfc	___ftmul@f3_as_product+2,f,c
  3945  0025FA  D000               	goto	l2044
  3946  0025FC                     l2044:
  3947  0025FC  90D8               	bcf	status,0,c
  3948  0025FE  321E               	rrcf	___ftmul@f1+2,f,c
  3949  002600  321D               	rrcf	___ftmul@f1+1,f,c
  3950  002602  321C               	rrcf	___ftmul@f1,f,c
  3951  002604  90D8               	bcf	status,0,c
  3952  002606  3228               	rrcf	___ftmul@f3_as_product+2,f,c
  3953  002608  3227               	rrcf	___ftmul@f3_as_product+1,f,c
  3954  00260A  3226               	rrcf	___ftmul@f3_as_product,f,c
  3955  00260C  2E29               	decfsz	___ftmul@cntr,f,c
  3956  00260E  D7ED               	goto	l2040
  3957  002610  D000               	goto	l2048
  3958  002612                     l2048:
  3959  002612  C026  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  3960  002616  C027  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3961  00261A  C028  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3962  00261E  C025  F004         	movff	___ftmul@exp,___ftpack@exp
  3963  002622  C02A  F005         	movff	___ftmul@sign,___ftpack@sign
  3964  002626  EC01  F014         	call	___ftpack	;wreg free
  3965  00262A  C001  F01C         	movff	?___ftpack,?___ftmul
  3966  00262E  C002  F01D         	movff	?___ftpack+1,?___ftmul+1
  3967  002632  C003  F01E         	movff	?___ftpack+2,?___ftmul+2
  3968  002636  D000               	goto	l724
  3969  002638                     l724:
  3970  002638  0012               	return		;funcret
  3971  00263A                     __end_of___ftmul:
  3972                           	opt stack 0
  3973                           tblptru	equ	0xFF8
  3974                           tblptrh	equ	0xFF7
  3975                           tblptrl	equ	0xFF6
  3976                           tablat	equ	0xFF5
  3977                           prodh	equ	0xFF4
  3978                           prodl	equ	0xFF3
  3979                           wreg	equ	0xFE8
  3980                           postinc2	equ	0xFDE
  3981                           postdec2	equ	0xFDD
  3982                           fsr2h	equ	0xFDA
  3983                           fsr2l	equ	0xFD9
  3984                           status	equ	0xFD8
  3985                           
  3986 ;; *************** function ___awmod *****************
  3987 ;; Defined at:
  3988 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
  3989 ;; Parameters:    Size  Location     Type
  3990 ;;  dividend        2   72[COMRAM] int 
  3991 ;;  divisor         2   74[COMRAM] int 
  3992 ;; Auto vars:     Size  Location     Type
  3993 ;;  sign            1   77[COMRAM] unsigned char 
  3994 ;;  counter         1   76[COMRAM] unsigned char 
  3995 ;; Return value:  Size  Location     Type
  3996 ;;                  2   72[COMRAM] int 
  3997 ;; Registers used:
  3998 ;;		wreg, status,2, status,0
  3999 ;; Tracked objects:
  4000 ;;		On entry : 0/0
  4001 ;;		On exit  : 0/0
  4002 ;;		Unchanged: 0/0
  4003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4004 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4005 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4007 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4008 ;;Total ram usage:        6 bytes
  4009 ;; Hardware stack levels used:    1
  4010 ;; This function calls:
  4011 ;;		Nothing
  4012 ;; This function is called by:
  4013 ;;		_main
  4014 ;;		_fround
  4015 ;;		_scale
  4016 ;; This function uses a non-reentrant model
  4017 ;;
  4018                           
  4019                           	psect	text15
  4020  002A80                     __ptext15:
  4021                           	opt stack 0
  4022  002A80                     ___awmod:
  4023                           	opt stack 28
  4024                           
  4025                           ;incstack = 0
  4026  002A80  0E00               	movlw	0
  4027  002A82  6E4E               	movwf	___awmod@sign,c
  4028  002A84  AE4A               	btfss	___awmod@dividend+1,7,c
  4029  002A86  D007               	goto	l2104
  4030  002A88  6C49               	negf	___awmod@dividend,c
  4031  002A8A  1E4A               	comf	___awmod@dividend+1,f,c
  4032  002A8C  B0D8               	btfsc	status,0,c
  4033  002A8E  2A4A               	incf	___awmod@dividend+1,f,c
  4034  002A90  0E01               	movlw	1
  4035  002A92  6E4E               	movwf	___awmod@sign,c
  4036  002A94  D000               	goto	l2104
  4037  002A96                     l2104:
  4038  002A96  AE4C               	btfss	___awmod@divisor+1,7,c
  4039  002A98  D005               	goto	l2108
  4040  002A9A  6C4B               	negf	___awmod@divisor,c
  4041  002A9C  1E4C               	comf	___awmod@divisor+1,f,c
  4042  002A9E  B0D8               	btfsc	status,0,c
  4043  002AA0  2A4C               	incf	___awmod@divisor+1,f,c
  4044  002AA2  D000               	goto	l2108
  4045  002AA4                     l2108:
  4046  002AA4  504B               	movf	___awmod@divisor,w,c
  4047  002AA6  104C               	iorwf	___awmod@divisor+1,w,c
  4048  002AA8  B4D8               	btfsc	status,2,c
  4049  002AAA  D01D               	goto	l2124
  4050  002AAC  0E01               	movlw	1
  4051  002AAE  6E4D               	movwf	___awmod@counter,c
  4052  002AB0  D005               	goto	l2114
  4053  002AB2                     l2112:
  4054  002AB2  90D8               	bcf	status,0,c
  4055  002AB4  364B               	rlcf	___awmod@divisor,f,c
  4056  002AB6  364C               	rlcf	___awmod@divisor+1,f,c
  4057  002AB8  2A4D               	incf	___awmod@counter,f,c
  4058  002ABA  D000               	goto	l2114
  4059  002ABC                     l2114:
  4060  002ABC  BE4C               	btfsc	___awmod@divisor+1,7,c
  4061  002ABE  D002               	goto	l2116
  4062  002AC0  D7F8               	goto	l2112
  4063  002AC2  D000               	goto	l2116
  4064  002AC4                     l2116:
  4065  002AC4  504B               	movf	___awmod@divisor,w,c
  4066  002AC6  5C49               	subwf	___awmod@dividend,w,c
  4067  002AC8  504C               	movf	___awmod@divisor+1,w,c
  4068  002ACA  584A               	subwfb	___awmod@dividend+1,w,c
  4069  002ACC  A0D8               	btfss	status,0,c
  4070  002ACE  D005               	goto	l2120
  4071  002AD0  504B               	movf	___awmod@divisor,w,c
  4072  002AD2  5E49               	subwf	___awmod@dividend,f,c
  4073  002AD4  504C               	movf	___awmod@divisor+1,w,c
  4074  002AD6  5A4A               	subwfb	___awmod@dividend+1,f,c
  4075  002AD8  D000               	goto	l2120
  4076  002ADA                     l2120:
  4077  002ADA  90D8               	bcf	status,0,c
  4078  002ADC  324C               	rrcf	___awmod@divisor+1,f,c
  4079  002ADE  324B               	rrcf	___awmod@divisor,f,c
  4080  002AE0  2E4D               	decfsz	___awmod@counter,f,c
  4081  002AE2  D7F0               	goto	l2116
  4082  002AE4  D000               	goto	l2124
  4083  002AE6                     l2124:
  4084  002AE6  504E               	movf	___awmod@sign,w,c
  4085  002AE8  B4D8               	btfsc	status,2,c
  4086  002AEA  D005               	goto	l2128
  4087  002AEC  6C49               	negf	___awmod@dividend,c
  4088  002AEE  1E4A               	comf	___awmod@dividend+1,f,c
  4089  002AF0  B0D8               	btfsc	status,0,c
  4090  002AF2  2A4A               	incf	___awmod@dividend+1,f,c
  4091  002AF4  D000               	goto	l2128
  4092  002AF6                     l2128:
  4093  002AF6  C049  F049         	movff	___awmod@dividend,?___awmod
  4094  002AFA  C04A  F04A         	movff	___awmod@dividend+1,?___awmod+1
  4095  002AFE  D000               	goto	l501
  4096  002B00                     l501:
  4097  002B00  0012               	return		;funcret
  4098  002B02                     __end_of___awmod:
  4099                           	opt stack 0
  4100                           tblptru	equ	0xFF8
  4101                           tblptrh	equ	0xFF7
  4102                           tblptrl	equ	0xFF6
  4103                           tablat	equ	0xFF5
  4104                           prodh	equ	0xFF4
  4105                           prodl	equ	0xFF3
  4106                           wreg	equ	0xFE8
  4107                           postinc2	equ	0xFDE
  4108                           postdec2	equ	0xFDD
  4109                           fsr2h	equ	0xFDA
  4110                           fsr2l	equ	0xFD9
  4111                           status	equ	0xFD8
  4112                           
  4113 ;; *************** function ___awdiv *****************
  4114 ;; Defined at:
  4115 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  4116 ;; Parameters:    Size  Location     Type
  4117 ;;  dividend        2   78[COMRAM] int 
  4118 ;;  divisor         2   80[COMRAM] int 
  4119 ;; Auto vars:     Size  Location     Type
  4120 ;;  quotient        2   84[COMRAM] int 
  4121 ;;  sign            1   83[COMRAM] unsigned char 
  4122 ;;  counter         1   82[COMRAM] unsigned char 
  4123 ;; Return value:  Size  Location     Type
  4124 ;;                  2   78[COMRAM] int 
  4125 ;; Registers used:
  4126 ;;		wreg, status,2, status,0
  4127 ;; Tracked objects:
  4128 ;;		On entry : 0/0
  4129 ;;		On exit  : 0/0
  4130 ;;		Unchanged: 0/0
  4131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4132 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4133 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4135 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4136 ;;Total ram usage:        8 bytes
  4137 ;; Hardware stack levels used:    1
  4138 ;; This function calls:
  4139 ;;		Nothing
  4140 ;; This function is called by:
  4141 ;;		_fround
  4142 ;;		_scale
  4143 ;;		_printf
  4144 ;; This function uses a non-reentrant model
  4145 ;;
  4146                           
  4147                           	psect	text16
  4148  0028C8                     __ptext16:
  4149                           	opt stack 0
  4150  0028C8                     ___awdiv:
  4151                           	opt stack 28
  4152                           
  4153                           ;incstack = 0
  4154  0028C8  0E00               	movlw	0
  4155  0028CA  6E54               	movwf	___awdiv@sign,c
  4156  0028CC  AE52               	btfss	___awdiv@divisor+1,7,c
  4157  0028CE  D007               	goto	l2060
  4158  0028D0  6C51               	negf	___awdiv@divisor,c
  4159  0028D2  1E52               	comf	___awdiv@divisor+1,f,c
  4160  0028D4  B0D8               	btfsc	status,0,c
  4161  0028D6  2A52               	incf	___awdiv@divisor+1,f,c
  4162  0028D8  0E01               	movlw	1
  4163  0028DA  6E54               	movwf	___awdiv@sign,c
  4164  0028DC  D000               	goto	l2060
  4165  0028DE                     l2060:
  4166  0028DE  AE50               	btfss	___awdiv@dividend+1,7,c
  4167  0028E0  D007               	goto	l2066
  4168  0028E2  6C4F               	negf	___awdiv@dividend,c
  4169  0028E4  1E50               	comf	___awdiv@dividend+1,f,c
  4170  0028E6  B0D8               	btfsc	status,0,c
  4171  0028E8  2A50               	incf	___awdiv@dividend+1,f,c
  4172  0028EA  0E01               	movlw	1
  4173  0028EC  1A54               	xorwf	___awdiv@sign,f,c
  4174  0028EE  D000               	goto	l2066
  4175  0028F0                     l2066:
  4176  0028F0  0E00               	movlw	0
  4177  0028F2  6E56               	movwf	___awdiv@quotient+1,c
  4178  0028F4  0E00               	movlw	0
  4179  0028F6  6E55               	movwf	___awdiv@quotient,c
  4180  0028F8  5051               	movf	___awdiv@divisor,w,c
  4181  0028FA  1052               	iorwf	___awdiv@divisor+1,w,c
  4182  0028FC  B4D8               	btfsc	status,2,c
  4183  0028FE  D021               	goto	l2088
  4184  002900  0E01               	movlw	1
  4185  002902  6E53               	movwf	___awdiv@counter,c
  4186  002904  D005               	goto	l2074
  4187  002906                     l2072:
  4188  002906  90D8               	bcf	status,0,c
  4189  002908  3651               	rlcf	___awdiv@divisor,f,c
  4190  00290A  3652               	rlcf	___awdiv@divisor+1,f,c
  4191  00290C  2A53               	incf	___awdiv@counter,f,c
  4192  00290E  D000               	goto	l2074
  4193  002910                     l2074:
  4194  002910  BE52               	btfsc	___awdiv@divisor+1,7,c
  4195  002912  D002               	goto	l2076
  4196  002914  D7F8               	goto	l2072
  4197  002916  D000               	goto	l2076
  4198  002918                     l2076:
  4199  002918  90D8               	bcf	status,0,c
  4200  00291A  3655               	rlcf	___awdiv@quotient,f,c
  4201  00291C  3656               	rlcf	___awdiv@quotient+1,f,c
  4202  00291E  5051               	movf	___awdiv@divisor,w,c
  4203  002920  5C4F               	subwf	___awdiv@dividend,w,c
  4204  002922  5052               	movf	___awdiv@divisor+1,w,c
  4205  002924  5850               	subwfb	___awdiv@dividend+1,w,c
  4206  002926  A0D8               	btfss	status,0,c
  4207  002928  D006               	goto	l2084
  4208  00292A  5051               	movf	___awdiv@divisor,w,c
  4209  00292C  5E4F               	subwf	___awdiv@dividend,f,c
  4210  00292E  5052               	movf	___awdiv@divisor+1,w,c
  4211  002930  5A50               	subwfb	___awdiv@dividend+1,f,c
  4212  002932  8055               	bsf	___awdiv@quotient,0,c
  4213  002934  D000               	goto	l2084
  4214  002936                     l2084:
  4215  002936  90D8               	bcf	status,0,c
  4216  002938  3252               	rrcf	___awdiv@divisor+1,f,c
  4217  00293A  3251               	rrcf	___awdiv@divisor,f,c
  4218  00293C  2E53               	decfsz	___awdiv@counter,f,c
  4219  00293E  D7EC               	goto	l2076
  4220  002940  D000               	goto	l2088
  4221  002942                     l2088:
  4222  002942  5054               	movf	___awdiv@sign,w,c
  4223  002944  B4D8               	btfsc	status,2,c
  4224  002946  D005               	goto	l2092
  4225  002948  6C55               	negf	___awdiv@quotient,c
  4226  00294A  1E56               	comf	___awdiv@quotient+1,f,c
  4227  00294C  B0D8               	btfsc	status,0,c
  4228  00294E  2A56               	incf	___awdiv@quotient+1,f,c
  4229  002950  D000               	goto	l2092
  4230  002952                     l2092:
  4231  002952  C055  F04F         	movff	___awdiv@quotient,?___awdiv
  4232  002956  C056  F050         	movff	___awdiv@quotient+1,?___awdiv+1
  4233  00295A  D000               	goto	l488
  4234  00295C                     l488:
  4235  00295C  0012               	return		;funcret
  4236  00295E                     __end_of___awdiv:
  4237                           	opt stack 0
  4238                           tblptru	equ	0xFF8
  4239                           tblptrh	equ	0xFF7
  4240                           tblptrl	equ	0xFF6
  4241                           tablat	equ	0xFF5
  4242                           prodh	equ	0xFF4
  4243                           prodl	equ	0xFF3
  4244                           wreg	equ	0xFE8
  4245                           postinc2	equ	0xFDE
  4246                           postdec2	equ	0xFDD
  4247                           fsr2h	equ	0xFDA
  4248                           fsr2l	equ	0xFD9
  4249                           status	equ	0xFD8
  4250                           
  4251 ;; *************** function __tdiv_to_l_ *****************
  4252 ;; Defined at:
  4253 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdivl.c"
  4254 ;; Parameters:    Size  Location     Type
  4255 ;;  f1              3    0[COMRAM] float 
  4256 ;;  f2              3    3[COMRAM] float 
  4257 ;; Auto vars:     Size  Location     Type
  4258 ;;  quot            4    9[COMRAM] unsigned long 
  4259 ;;  exp1            1   14[COMRAM] unsigned char 
  4260 ;;  cntr            1   13[COMRAM] unsigned char 
  4261 ;; Return value:  Size  Location     Type
  4262 ;;                  4    0[COMRAM] unsigned long 
  4263 ;; Registers used:
  4264 ;;		wreg, status,2, status,0
  4265 ;; Tracked objects:
  4266 ;;		On entry : 0/0
  4267 ;;		On exit  : 0/0
  4268 ;;		Unchanged: 0/0
  4269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4270 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4271 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4272 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4273 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4274 ;;Total ram usage:       15 bytes
  4275 ;; Hardware stack levels used:    1
  4276 ;; This function calls:
  4277 ;;		Nothing
  4278 ;; This function is called by:
  4279 ;;		_printf
  4280 ;; This function uses a non-reentrant model
  4281 ;;
  4282                           
  4283                           	psect	text17
  4284  002228                     __ptext17:
  4285                           	opt stack 0
  4286  002228                     __tdiv_to_l_:
  4287                           	opt stack 29
  4288                           
  4289                           ;incstack = 0
  4290  002228  C003  F007         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  4291  00222C  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  4292  00222E  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  4293  002230  3402               	rlcf	__tdiv_to_l_@f1+1,w,c
  4294  002232  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  4295  002234  E301               	bnc	u2141
  4296  002236  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  4297  002238                     u2141:
  4298  002238  5007               	movf	??__tdiv_to_l_,w,c
  4299  00223A  6E0F               	movwf	__tdiv_to_l_@exp1,c
  4300  00223C  500F               	movf	__tdiv_to_l_@exp1,w,c
  4301  00223E  A4D8               	btfss	status,2,c
  4302  002240  D002               	goto	l2262
  4303  002242  D05D               	goto	l2304
  4304  002244  D078               	goto	l700
  4305  002246                     l2262:
  4306  002246  C006  F007         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  4307  00224A  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  4308  00224C  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  4309  00224E  3405               	rlcf	__tdiv_to_l_@f2+1,w,c
  4310  002250  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  4311  002252  E301               	bnc	u2161
  4312  002254  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  4313  002256                     u2161:
  4314  002256  5007               	movf	??__tdiv_to_l_,w,c
  4315  002258  6E0E               	movwf	__tdiv_to_l_@cntr,c
  4316  00225A  500E               	movf	__tdiv_to_l_@cntr,w,c
  4317  00225C  A4D8               	btfss	status,2,c
  4318  00225E  D002               	goto	l2268
  4319  002260  D04E               	goto	l2304
  4320  002262  D069               	goto	l700
  4321  002264                     l2268:
  4322  002264  8E02               	bsf	__tdiv_to_l_@f1+1,7,c
  4323  002266  0EFF               	movlw	255
  4324  002268  1601               	andwf	__tdiv_to_l_@f1,f,c
  4325  00226A  0EFF               	movlw	255
  4326  00226C  1602               	andwf	__tdiv_to_l_@f1+1,f,c
  4327  00226E  0E00               	movlw	0
  4328  002270  1603               	andwf	__tdiv_to_l_@f1+2,f,c
  4329  002272  8E05               	bsf	__tdiv_to_l_@f2+1,7,c
  4330  002274  0EFF               	movlw	255
  4331  002276  1604               	andwf	__tdiv_to_l_@f2,f,c
  4332  002278  0EFF               	movlw	255
  4333  00227A  1605               	andwf	__tdiv_to_l_@f2+1,f,c
  4334  00227C  0E00               	movlw	0
  4335  00227E  1606               	andwf	__tdiv_to_l_@f2+2,f,c
  4336  002280  0E00               	movlw	0
  4337  002282  6E0A               	movwf	__tdiv_to_l_@quot,c
  4338  002284  0E00               	movlw	0
  4339  002286  6E0B               	movwf	__tdiv_to_l_@quot+1,c
  4340  002288  0E00               	movlw	0
  4341  00228A  6E0C               	movwf	__tdiv_to_l_@quot+2,c
  4342  00228C  0E00               	movlw	0
  4343  00228E  6E0D               	movwf	__tdiv_to_l_@quot+3,c
  4344  002290  0E7F               	movlw	127
  4345  002292  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  4346  002294  500E               	movf	__tdiv_to_l_@cntr,w,c
  4347  002296  0F98               	addlw	152
  4348  002298  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  4349  00229A  0E18               	movlw	24
  4350  00229C  6E0E               	movwf	__tdiv_to_l_@cntr,c
  4351  00229E                     l702:
  4352  00229E  90D8               	bcf	status,0,c
  4353  0022A0  360A               	rlcf	__tdiv_to_l_@quot,f,c
  4354  0022A2  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  4355  0022A4  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  4356  0022A6  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  4357  0022A8  5004               	movf	__tdiv_to_l_@f2,w,c
  4358  0022AA  5C01               	subwf	__tdiv_to_l_@f1,w,c
  4359  0022AC  5005               	movf	__tdiv_to_l_@f2+1,w,c
  4360  0022AE  5802               	subwfb	__tdiv_to_l_@f1+1,w,c
  4361  0022B0  5006               	movf	__tdiv_to_l_@f2+2,w,c
  4362  0022B2  5803               	subwfb	__tdiv_to_l_@f1+2,w,c
  4363  0022B4  A0D8               	btfss	status,0,c
  4364  0022B6  D007               	goto	l703
  4365  0022B8  5004               	movf	__tdiv_to_l_@f2,w,c
  4366  0022BA  5E01               	subwf	__tdiv_to_l_@f1,f,c
  4367  0022BC  5005               	movf	__tdiv_to_l_@f2+1,w,c
  4368  0022BE  5A02               	subwfb	__tdiv_to_l_@f1+1,f,c
  4369  0022C0  5006               	movf	__tdiv_to_l_@f2+2,w,c
  4370  0022C2  5A03               	subwfb	__tdiv_to_l_@f1+2,f,c
  4371  0022C4  800A               	bsf	__tdiv_to_l_@quot,0,c
  4372  0022C6                     l703:
  4373  0022C6  90D8               	bcf	status,0,c
  4374  0022C8  3601               	rlcf	__tdiv_to_l_@f1,f,c
  4375  0022CA  3602               	rlcf	__tdiv_to_l_@f1+1,f,c
  4376  0022CC  3603               	rlcf	__tdiv_to_l_@f1+2,f,c
  4377  0022CE  2E0E               	decfsz	__tdiv_to_l_@cntr,f,c
  4378  0022D0  D7E6               	goto	l702
  4379  0022D2  D000               	goto	l2290
  4380  0022D4                     l2290:
  4381  0022D4  AE0F               	btfss	__tdiv_to_l_@exp1,7,c
  4382  0022D6  D010               	goto	l2302
  4383  0022D8  500F               	movf	__tdiv_to_l_@exp1,w,c
  4384  0022DA  0A80               	xorlw	128
  4385  0022DC  0F97               	addlw	151
  4386  0022DE  B0D8               	btfsc	status,0,c
  4387  0022E0  D003               	goto	l2298
  4388  0022E2  D00D               	goto	l2304
  4389  0022E4  D028               	goto	l700
  4390  0022E6  D000               	goto	l2298
  4391  0022E8                     l2298:
  4392  0022E8  90D8               	bcf	status,0,c
  4393  0022EA  320D               	rrcf	__tdiv_to_l_@quot+3,f,c
  4394  0022EC  320C               	rrcf	__tdiv_to_l_@quot+2,f,c
  4395  0022EE  320B               	rrcf	__tdiv_to_l_@quot+1,f,c
  4396  0022F0  320A               	rrcf	__tdiv_to_l_@quot,f,c
  4397  0022F2  3E0F               	incfsz	__tdiv_to_l_@exp1,f,c
  4398  0022F4  D7F9               	goto	l2298
  4399  0022F6  D017               	goto	l709
  4400  0022F8                     l2302:
  4401  0022F8  0E17               	movlw	23
  4402  0022FA  640F               	cpfsgt	__tdiv_to_l_@exp1,c
  4403  0022FC  D011               	goto	l2310
  4404  0022FE                     l2304:
  4405  0022FE  0E00               	movlw	0
  4406  002300  6E01               	movwf	?__tdiv_to_l_,c
  4407  002302  0E00               	movlw	0
  4408  002304  6E02               	movwf	?__tdiv_to_l_+1,c
  4409  002306  0E00               	movlw	0
  4410  002308  6E03               	movwf	?__tdiv_to_l_+2,c
  4411  00230A  0E00               	movlw	0
  4412  00230C  6E04               	movwf	?__tdiv_to_l_+3,c
  4413  00230E  D013               	goto	l700
  4414  002310  D007               	goto	l2310
  4415  002312                     l2308:
  4416  002312  90D8               	bcf	status,0,c
  4417  002314  360A               	rlcf	__tdiv_to_l_@quot,f,c
  4418  002316  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  4419  002318  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  4420  00231A  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  4421  00231C  060F               	decf	__tdiv_to_l_@exp1,f,c
  4422  00231E  D000               	goto	l2310
  4423  002320                     l2310:
  4424  002320  500F               	movf	__tdiv_to_l_@exp1,w,c
  4425  002322  A4D8               	btfss	status,2,c
  4426  002324  D7F6               	goto	l2308
  4427  002326                     l709:
  4428  002326  C00A  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  4429  00232A  C00B  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  4430  00232E  C00C  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  4431  002332  C00D  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  4432  002336                     l700:
  4433  002336  0012               	return		;funcret
  4434  002338                     __end_of__tdiv_to_l_:
  4435                           	opt stack 0
  4436                           tblptru	equ	0xFF8
  4437                           tblptrh	equ	0xFF7
  4438                           tblptrl	equ	0xFF6
  4439                           tablat	equ	0xFF5
  4440                           prodh	equ	0xFF4
  4441                           prodl	equ	0xFF3
  4442                           wreg	equ	0xFE8
  4443                           postinc2	equ	0xFDE
  4444                           postdec2	equ	0xFDD
  4445                           fsr2h	equ	0xFDA
  4446                           fsr2l	equ	0xFD9
  4447                           status	equ	0xFD8
  4448                           
  4449 ;; *************** function __div_to_l_ *****************
  4450 ;; Defined at:
  4451 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fldivl.c"
  4452 ;; Parameters:    Size  Location     Type
  4453 ;;  f1              3    0[COMRAM] unsigned long 
  4454 ;;  f2              3    3[COMRAM] unsigned long 
  4455 ;; Auto vars:     Size  Location     Type
  4456 ;;  quot            4    6[COMRAM] unsigned long 
  4457 ;;  exp1            1   11[COMRAM] unsigned char 
  4458 ;;  cntr            1   10[COMRAM] unsigned char 
  4459 ;; Return value:  Size  Location     Type
  4460 ;;                  4    0[COMRAM] unsigned long 
  4461 ;; Registers used:
  4462 ;;		wreg, status,2, status,0
  4463 ;; Tracked objects:
  4464 ;;		On entry : 0/0
  4465 ;;		On exit  : 0/0
  4466 ;;		Unchanged: 0/0
  4467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4468 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4469 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4471 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4472 ;;Total ram usage:       12 bytes
  4473 ;; Hardware stack levels used:    1
  4474 ;; This function calls:
  4475 ;;		Nothing
  4476 ;; This function is called by:
  4477 ;;		_printf
  4478 ;; This function uses a non-reentrant model
  4479 ;;
  4480                           
  4481                           	psect	text18
  4482  002338                     __ptext18:
  4483                           	opt stack 0
  4484  002338                     __div_to_l_:
  4485                           	opt stack 29
  4486                           
  4487                           ;incstack = 0
  4488  002338  3403               	rlcf	__div_to_l_@f1+2,w,c
  4489  00233A  3404               	rlcf	__div_to_l_@f1+3,w,c
  4490  00233C  6E0C               	movwf	__div_to_l_@exp1,c
  4491  00233E  500C               	movf	__div_to_l_@exp1,w,c
  4492  002340  A4D8               	btfss	status,2,c
  4493  002342  D002               	goto	l2318
  4494  002344  D061               	goto	l2364
  4495  002346  D07C               	goto	l579
  4496  002348                     l2318:
  4497  002348  3406               	rlcf	__div_to_l_@f2+2,w,c
  4498  00234A  3407               	rlcf	__div_to_l_@f2+3,w,c
  4499  00234C  6E0B               	movwf	__div_to_l_@cntr,c
  4500  00234E  500B               	movf	__div_to_l_@cntr,w,c
  4501  002350  A4D8               	btfss	status,2,c
  4502  002352  D002               	goto	l2324
  4503  002354  D059               	goto	l2364
  4504  002356  D074               	goto	l579
  4505  002358                     l2324:
  4506  002358  8E03               	bsf	__div_to_l_@f1+2,7,c
  4507  00235A  0EFF               	movlw	255
  4508  00235C  1601               	andwf	__div_to_l_@f1,f,c
  4509  00235E  0EFF               	movlw	255
  4510  002360  1602               	andwf	__div_to_l_@f1+1,f,c
  4511  002362  0EFF               	movlw	255
  4512  002364  1603               	andwf	__div_to_l_@f1+2,f,c
  4513  002366  0E00               	movlw	0
  4514  002368  1604               	andwf	__div_to_l_@f1+3,f,c
  4515  00236A  8E06               	bsf	__div_to_l_@f2+2,7,c
  4516  00236C  0EFF               	movlw	255
  4517  00236E  1604               	andwf	__div_to_l_@f2,f,c
  4518  002370  0EFF               	movlw	255
  4519  002372  1605               	andwf	__div_to_l_@f2+1,f,c
  4520  002374  0EFF               	movlw	255
  4521  002376  1606               	andwf	__div_to_l_@f2+2,f,c
  4522  002378  0E00               	movlw	0
  4523  00237A  1607               	andwf	__div_to_l_@f2+3,f,c
  4524  00237C  0E00               	movlw	0
  4525  00237E  6E07               	movwf	__div_to_l_@quot,c
  4526  002380  0E00               	movlw	0
  4527  002382  6E08               	movwf	__div_to_l_@quot+1,c
  4528  002384  0E00               	movlw	0
  4529  002386  6E09               	movwf	__div_to_l_@quot+2,c
  4530  002388  0E00               	movlw	0
  4531  00238A  6E0A               	movwf	__div_to_l_@quot+3,c
  4532  00238C  0E7F               	movlw	127
  4533  00238E  5E0C               	subwf	__div_to_l_@exp1,f,c
  4534  002390  500B               	movf	__div_to_l_@cntr,w,c
  4535  002392  0FA0               	addlw	160
  4536  002394  5E0C               	subwf	__div_to_l_@exp1,f,c
  4537  002396  0E20               	movlw	32
  4538  002398  6E0B               	movwf	__div_to_l_@cntr,c
  4539  00239A  D000               	goto	l2338
  4540  00239C                     l2338:
  4541  00239C  90D8               	bcf	status,0,c
  4542  00239E  3607               	rlcf	__div_to_l_@quot,f,c
  4543  0023A0  3608               	rlcf	__div_to_l_@quot+1,f,c
  4544  0023A2  3609               	rlcf	__div_to_l_@quot+2,f,c
  4545  0023A4  360A               	rlcf	__div_to_l_@quot+3,f,c
  4546  0023A6  5004               	movf	__div_to_l_@f2,w,c
  4547  0023A8  5C01               	subwf	__div_to_l_@f1,w,c
  4548  0023AA  5005               	movf	__div_to_l_@f2+1,w,c
  4549  0023AC  5802               	subwfb	__div_to_l_@f1+1,w,c
  4550  0023AE  5006               	movf	__div_to_l_@f2+2,w,c
  4551  0023B0  5803               	subwfb	__div_to_l_@f1+2,w,c
  4552  0023B2  5007               	movf	__div_to_l_@f2+3,w,c
  4553  0023B4  5804               	subwfb	__div_to_l_@f1+3,w,c
  4554  0023B6  A0D8               	btfss	status,0,c
  4555  0023B8  D00A               	goto	l2346
  4556  0023BA  5004               	movf	__div_to_l_@f2,w,c
  4557  0023BC  5E01               	subwf	__div_to_l_@f1,f,c
  4558  0023BE  5005               	movf	__div_to_l_@f2+1,w,c
  4559  0023C0  5A02               	subwfb	__div_to_l_@f1+1,f,c
  4560  0023C2  5006               	movf	__div_to_l_@f2+2,w,c
  4561  0023C4  5A03               	subwfb	__div_to_l_@f1+2,f,c
  4562  0023C6  5007               	movf	__div_to_l_@f2+3,w,c
  4563  0023C8  5A04               	subwfb	__div_to_l_@f1+3,f,c
  4564  0023CA  8007               	bsf	__div_to_l_@quot,0,c
  4565  0023CC  D000               	goto	l2346
  4566  0023CE                     l2346:
  4567  0023CE  90D8               	bcf	status,0,c
  4568  0023D0  3601               	rlcf	__div_to_l_@f1,f,c
  4569  0023D2  3602               	rlcf	__div_to_l_@f1+1,f,c
  4570  0023D4  3603               	rlcf	__div_to_l_@f1+2,f,c
  4571  0023D6  3604               	rlcf	__div_to_l_@f1+3,f,c
  4572  0023D8  2E0B               	decfsz	__div_to_l_@cntr,f,c
  4573  0023DA  D7E0               	goto	l2338
  4574  0023DC  D000               	goto	l2350
  4575  0023DE                     l2350:
  4576  0023DE  AE0C               	btfss	__div_to_l_@exp1,7,c
  4577  0023E0  D010               	goto	l2362
  4578  0023E2  500C               	movf	__div_to_l_@exp1,w,c
  4579  0023E4  0A80               	xorlw	128
  4580  0023E6  0F9F               	addlw	159
  4581  0023E8  B0D8               	btfsc	status,0,c
  4582  0023EA  D003               	goto	l2358
  4583  0023EC  D00D               	goto	l2364
  4584  0023EE  D028               	goto	l579
  4585  0023F0  D000               	goto	l2358
  4586  0023F2                     l2358:
  4587  0023F2  90D8               	bcf	status,0,c
  4588  0023F4  320A               	rrcf	__div_to_l_@quot+3,f,c
  4589  0023F6  3209               	rrcf	__div_to_l_@quot+2,f,c
  4590  0023F8  3208               	rrcf	__div_to_l_@quot+1,f,c
  4591  0023FA  3207               	rrcf	__div_to_l_@quot,f,c
  4592  0023FC  3E0C               	incfsz	__div_to_l_@exp1,f,c
  4593  0023FE  D7F9               	goto	l2358
  4594  002400  D017               	goto	l588
  4595  002402                     l2362:
  4596  002402  0E1F               	movlw	31
  4597  002404  640C               	cpfsgt	__div_to_l_@exp1,c
  4598  002406  D011               	goto	l2370
  4599  002408                     l2364:
  4600  002408  0E00               	movlw	0
  4601  00240A  6E01               	movwf	?__div_to_l_,c
  4602  00240C  0E00               	movlw	0
  4603  00240E  6E02               	movwf	?__div_to_l_+1,c
  4604  002410  0E00               	movlw	0
  4605  002412  6E03               	movwf	?__div_to_l_+2,c
  4606  002414  0E00               	movlw	0
  4607  002416  6E04               	movwf	?__div_to_l_+3,c
  4608  002418  D013               	goto	l579
  4609  00241A  D007               	goto	l2370
  4610  00241C                     l2368:
  4611  00241C  90D8               	bcf	status,0,c
  4612  00241E  3607               	rlcf	__div_to_l_@quot,f,c
  4613  002420  3608               	rlcf	__div_to_l_@quot+1,f,c
  4614  002422  3609               	rlcf	__div_to_l_@quot+2,f,c
  4615  002424  360A               	rlcf	__div_to_l_@quot+3,f,c
  4616  002426  060C               	decf	__div_to_l_@exp1,f,c
  4617  002428  D000               	goto	l2370
  4618  00242A                     l2370:
  4619  00242A  500C               	movf	__div_to_l_@exp1,w,c
  4620  00242C  A4D8               	btfss	status,2,c
  4621  00242E  D7F6               	goto	l2368
  4622  002430                     l588:
  4623  002430  C007  F001         	movff	__div_to_l_@quot,?__div_to_l_
  4624  002434  C008  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  4625  002438  C009  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  4626  00243C  C00A  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  4627  002440                     l579:
  4628  002440  0012               	return		;funcret
  4629  002442                     __end_of__div_to_l_:
  4630                           	opt stack 0
  4631                           tblptru	equ	0xFF8
  4632                           tblptrh	equ	0xFF7
  4633                           tblptrl	equ	0xFF6
  4634                           tablat	equ	0xFF5
  4635                           prodh	equ	0xFF4
  4636                           prodl	equ	0xFF3
  4637                           wreg	equ	0xFE8
  4638                           postinc2	equ	0xFDE
  4639                           postdec2	equ	0xFDD
  4640                           fsr2h	equ	0xFDA
  4641                           fsr2l	equ	0xFD9
  4642                           status	equ	0xFD8
  4643                           
  4644 ;; *************** function ___lltoft *****************
  4645 ;; Defined at:
  4646 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lltoft.c"
  4647 ;; Parameters:    Size  Location     Type
  4648 ;;  c               4    8[COMRAM] unsigned long 
  4649 ;; Auto vars:     Size  Location     Type
  4650 ;;  exp             1   16[COMRAM] unsigned char 
  4651 ;; Return value:  Size  Location     Type
  4652 ;;                  3    8[COMRAM] float 
  4653 ;; Registers used:
  4654 ;;		wreg, status,2, status,0, cstack
  4655 ;; Tracked objects:
  4656 ;;		On entry : 0/0
  4657 ;;		On exit  : 0/0
  4658 ;;		Unchanged: 0/0
  4659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4660 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4661 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4662 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4663 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4664 ;;Total ram usage:        9 bytes
  4665 ;; Hardware stack levels used:    1
  4666 ;; Hardware stack levels required when called:    1
  4667 ;; This function calls:
  4668 ;;		___ftpack
  4669 ;; This function is called by:
  4670 ;;		_printf
  4671 ;; This function uses a non-reentrant model
  4672 ;;
  4673                           
  4674                           	psect	text19
  4675  002BE2                     __ptext19:
  4676                           	opt stack 0
  4677  002BE2                     ___lltoft:
  4678                           	opt stack 28
  4679                           
  4680                           ;incstack = 0
  4681  002BE2  0E8E               	movlw	142
  4682  002BE4  6E11               	movwf	___lltoft@exp,c
  4683  002BE6  D007               	goto	l2536
  4684  002BE8                     l2534:
  4685  002BE8  90D8               	bcf	status,0,c
  4686  002BEA  320C               	rrcf	___lltoft@c+3,f,c
  4687  002BEC  320B               	rrcf	___lltoft@c+2,f,c
  4688  002BEE  320A               	rrcf	___lltoft@c+1,f,c
  4689  002BF0  3209               	rrcf	___lltoft@c,f,c
  4690  002BF2  2A11               	incf	___lltoft@exp,f,c
  4691  002BF4  D000               	goto	l2536
  4692  002BF6                     l2536:
  4693  002BF6  0E00               	movlw	0
  4694  002BF8  1409               	andwf	___lltoft@c,w,c
  4695  002BFA  6E0D               	movwf	??___lltoft& (0+255),c
  4696  002BFC  0E00               	movlw	0
  4697  002BFE  140A               	andwf	___lltoft@c+1,w,c
  4698  002C00  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  4699  002C02  0E00               	movlw	0
  4700  002C04  140B               	andwf	___lltoft@c+2,w,c
  4701  002C06  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  4702  002C08  0EFF               	movlw	255
  4703  002C0A  140C               	andwf	___lltoft@c+3,w,c
  4704  002C0C  6E10               	movwf	(??___lltoft+3)& (0+255),c
  4705  002C0E  500D               	movf	??___lltoft,w,c
  4706  002C10  100E               	iorwf	??___lltoft+1,w,c
  4707  002C12  100F               	iorwf	??___lltoft+2,w,c
  4708  002C14  1010               	iorwf	??___lltoft+3,w,c
  4709  002C16  A4D8               	btfss	status,2,c
  4710  002C18  D7E7               	goto	l2534
  4711  002C1A  C009  F001         	movff	___lltoft@c,___ftpack@arg
  4712  002C1E  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  4713  002C22  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  4714  002C26  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  4715  002C2A  0E00               	movlw	0
  4716  002C2C  6E05               	movwf	___ftpack@sign,c
  4717  002C2E  EC01  F014         	call	___ftpack	;wreg free
  4718  002C32  C001  F009         	movff	?___ftpack,?___lltoft
  4719  002C36  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  4720  002C3A  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  4721  002C3E  D000               	goto	l814
  4722  002C40                     l814:
  4723  002C40  0012               	return		;funcret
  4724  002C42                     __end_of___lltoft:
  4725                           	opt stack 0
  4726                           tblptru	equ	0xFF8
  4727                           tblptrh	equ	0xFF7
  4728                           tblptrl	equ	0xFF6
  4729                           tablat	equ	0xFF5
  4730                           prodh	equ	0xFF4
  4731                           prodl	equ	0xFF3
  4732                           wreg	equ	0xFE8
  4733                           postinc2	equ	0xFDE
  4734                           postdec2	equ	0xFDD
  4735                           fsr2h	equ	0xFDA
  4736                           fsr2l	equ	0xFD9
  4737                           status	equ	0xFD8
  4738                           
  4739 ;; *************** function ___llmod *****************
  4740 ;; Defined at:
  4741 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  4742 ;; Parameters:    Size  Location     Type
  4743 ;;  dividend        4    0[COMRAM] unsigned long 
  4744 ;;  divisor         4    4[COMRAM] unsigned long 
  4745 ;; Auto vars:     Size  Location     Type
  4746 ;;  counter         1    8[COMRAM] unsigned char 
  4747 ;; Return value:  Size  Location     Type
  4748 ;;                  4    0[COMRAM] unsigned long 
  4749 ;; Registers used:
  4750 ;;		wreg, status,2, status,0
  4751 ;; Tracked objects:
  4752 ;;		On entry : 0/0
  4753 ;;		On exit  : 0/0
  4754 ;;		Unchanged: 0/0
  4755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4756 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4757 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4759 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4760 ;;Total ram usage:        9 bytes
  4761 ;; Hardware stack levels used:    1
  4762 ;; This function calls:
  4763 ;;		Nothing
  4764 ;; This function is called by:
  4765 ;;		_printf
  4766 ;; This function uses a non-reentrant model
  4767 ;;
  4768                           
  4769                           	psect	text20
  4770  002B02                     __ptext20:
  4771                           	opt stack 0
  4772  002B02                     ___llmod:
  4773                           	opt stack 29
  4774                           
  4775                           ;incstack = 0
  4776  002B02  5005               	movf	___llmod@divisor,w,c
  4777  002B04  1006               	iorwf	___llmod@divisor+1,w,c
  4778  002B06  1007               	iorwf	___llmod@divisor+2,w,c
  4779  002B08  1008               	iorwf	___llmod@divisor+3,w,c
  4780  002B0A  B4D8               	btfsc	status,2,c
  4781  002B0C  D029               	goto	l794
  4782  002B0E  0E01               	movlw	1
  4783  002B10  6E09               	movwf	___llmod@counter,c
  4784  002B12  D007               	goto	l2522
  4785  002B14                     l2520:
  4786  002B14  90D8               	bcf	status,0,c
  4787  002B16  3605               	rlcf	___llmod@divisor,f,c
  4788  002B18  3606               	rlcf	___llmod@divisor+1,f,c
  4789  002B1A  3607               	rlcf	___llmod@divisor+2,f,c
  4790  002B1C  3608               	rlcf	___llmod@divisor+3,f,c
  4791  002B1E  2A09               	incf	___llmod@counter,f,c
  4792  002B20  D000               	goto	l2522
  4793  002B22                     l2522:
  4794  002B22  BE08               	btfsc	___llmod@divisor+3,7,c
  4795  002B24  D002               	goto	l2524
  4796  002B26  D7F6               	goto	l2520
  4797  002B28  D000               	goto	l2524
  4798  002B2A                     l2524:
  4799  002B2A  5005               	movf	___llmod@divisor,w,c
  4800  002B2C  5C01               	subwf	___llmod@dividend,w,c
  4801  002B2E  5006               	movf	___llmod@divisor+1,w,c
  4802  002B30  5802               	subwfb	___llmod@dividend+1,w,c
  4803  002B32  5007               	movf	___llmod@divisor+2,w,c
  4804  002B34  5803               	subwfb	___llmod@dividend+2,w,c
  4805  002B36  5008               	movf	___llmod@divisor+3,w,c
  4806  002B38  5804               	subwfb	___llmod@dividend+3,w,c
  4807  002B3A  A0D8               	btfss	status,0,c
  4808  002B3C  D009               	goto	l2528
  4809  002B3E  5005               	movf	___llmod@divisor,w,c
  4810  002B40  5E01               	subwf	___llmod@dividend,f,c
  4811  002B42  5006               	movf	___llmod@divisor+1,w,c
  4812  002B44  5A02               	subwfb	___llmod@dividend+1,f,c
  4813  002B46  5007               	movf	___llmod@divisor+2,w,c
  4814  002B48  5A03               	subwfb	___llmod@dividend+2,f,c
  4815  002B4A  5008               	movf	___llmod@divisor+3,w,c
  4816  002B4C  5A04               	subwfb	___llmod@dividend+3,f,c
  4817  002B4E  D000               	goto	l2528
  4818  002B50                     l2528:
  4819  002B50  90D8               	bcf	status,0,c
  4820  002B52  3208               	rrcf	___llmod@divisor+3,f,c
  4821  002B54  3207               	rrcf	___llmod@divisor+2,f,c
  4822  002B56  3206               	rrcf	___llmod@divisor+1,f,c
  4823  002B58  3205               	rrcf	___llmod@divisor,f,c
  4824  002B5A  2E09               	decfsz	___llmod@counter,f,c
  4825  002B5C  D7E6               	goto	l2524
  4826  002B5E  D000               	goto	l794
  4827  002B60                     l794:
  4828  002B60  C001  F001         	movff	___llmod@dividend,?___llmod
  4829  002B64  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  4830  002B68  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  4831  002B6C  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  4832  002B70  0012               	return		;funcret
  4833  002B72                     __end_of___llmod:
  4834                           	opt stack 0
  4835                           tblptru	equ	0xFF8
  4836                           tblptrh	equ	0xFF7
  4837                           tblptrl	equ	0xFF6
  4838                           tablat	equ	0xFF5
  4839                           prodh	equ	0xFF4
  4840                           prodl	equ	0xFF3
  4841                           wreg	equ	0xFE8
  4842                           postinc2	equ	0xFDE
  4843                           postdec2	equ	0xFDD
  4844                           fsr2h	equ	0xFDA
  4845                           fsr2l	equ	0xFD9
  4846                           status	equ	0xFD8
  4847                           
  4848 ;; *************** function ___lldiv *****************
  4849 ;; Defined at:
  4850 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
  4851 ;; Parameters:    Size  Location     Type
  4852 ;;  dividend        4    0[COMRAM] unsigned long 
  4853 ;;  divisor         4    4[COMRAM] unsigned long 
  4854 ;; Auto vars:     Size  Location     Type
  4855 ;;  quotient        4    8[COMRAM] unsigned long 
  4856 ;;  counter         1   12[COMRAM] unsigned char 
  4857 ;; Return value:  Size  Location     Type
  4858 ;;                  4    0[COMRAM] unsigned long 
  4859 ;; Registers used:
  4860 ;;		wreg, status,2, status,0
  4861 ;; Tracked objects:
  4862 ;;		On entry : 0/0
  4863 ;;		On exit  : 0/0
  4864 ;;		Unchanged: 0/0
  4865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4866 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4867 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4869 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4870 ;;Total ram usage:       13 bytes
  4871 ;; Hardware stack levels used:    1
  4872 ;; This function calls:
  4873 ;;		Nothing
  4874 ;; This function is called by:
  4875 ;;		_printf
  4876 ;; This function uses a non-reentrant model
  4877 ;;
  4878                           
  4879                           	psect	text21
  4880  0029F4                     __ptext21:
  4881                           	opt stack 0
  4882  0029F4                     ___lldiv:
  4883                           	opt stack 29
  4884                           
  4885                           ;incstack = 0
  4886  0029F4  0E00               	movlw	0
  4887  0029F6  6E09               	movwf	___lldiv@quotient,c
  4888  0029F8  0E00               	movlw	0
  4889  0029FA  6E0A               	movwf	___lldiv@quotient+1,c
  4890  0029FC  0E00               	movlw	0
  4891  0029FE  6E0B               	movwf	___lldiv@quotient+2,c
  4892  002A00  0E00               	movlw	0
  4893  002A02  6E0C               	movwf	___lldiv@quotient+3,c
  4894  002A04  5005               	movf	___lldiv@divisor,w,c
  4895  002A06  1006               	iorwf	___lldiv@divisor+1,w,c
  4896  002A08  1007               	iorwf	___lldiv@divisor+2,w,c
  4897  002A0A  1008               	iorwf	___lldiv@divisor+3,w,c
  4898  002A0C  B4D8               	btfsc	status,2,c
  4899  002A0E  D02F               	goto	l784
  4900  002A10  0E01               	movlw	1
  4901  002A12  6E0D               	movwf	___lldiv@counter,c
  4902  002A14  D007               	goto	l2502
  4903  002A16                     l2500:
  4904  002A16  90D8               	bcf	status,0,c
  4905  002A18  3605               	rlcf	___lldiv@divisor,f,c
  4906  002A1A  3606               	rlcf	___lldiv@divisor+1,f,c
  4907  002A1C  3607               	rlcf	___lldiv@divisor+2,f,c
  4908  002A1E  3608               	rlcf	___lldiv@divisor+3,f,c
  4909  002A20  2A0D               	incf	___lldiv@counter,f,c
  4910  002A22  D000               	goto	l2502
  4911  002A24                     l2502:
  4912  002A24  BE08               	btfsc	___lldiv@divisor+3,7,c
  4913  002A26  D002               	goto	l2504
  4914  002A28  D7F6               	goto	l2500
  4915  002A2A  D000               	goto	l2504
  4916  002A2C                     l2504:
  4917  002A2C  90D8               	bcf	status,0,c
  4918  002A2E  3609               	rlcf	___lldiv@quotient,f,c
  4919  002A30  360A               	rlcf	___lldiv@quotient+1,f,c
  4920  002A32  360B               	rlcf	___lldiv@quotient+2,f,c
  4921  002A34  360C               	rlcf	___lldiv@quotient+3,f,c
  4922  002A36  5005               	movf	___lldiv@divisor,w,c
  4923  002A38  5C01               	subwf	___lldiv@dividend,w,c
  4924  002A3A  5006               	movf	___lldiv@divisor+1,w,c
  4925  002A3C  5802               	subwfb	___lldiv@dividend+1,w,c
  4926  002A3E  5007               	movf	___lldiv@divisor+2,w,c
  4927  002A40  5803               	subwfb	___lldiv@dividend+2,w,c
  4928  002A42  5008               	movf	___lldiv@divisor+3,w,c
  4929  002A44  5804               	subwfb	___lldiv@dividend+3,w,c
  4930  002A46  A0D8               	btfss	status,0,c
  4931  002A48  D00A               	goto	l2512
  4932  002A4A  5005               	movf	___lldiv@divisor,w,c
  4933  002A4C  5E01               	subwf	___lldiv@dividend,f,c
  4934  002A4E  5006               	movf	___lldiv@divisor+1,w,c
  4935  002A50  5A02               	subwfb	___lldiv@dividend+1,f,c
  4936  002A52  5007               	movf	___lldiv@divisor+2,w,c
  4937  002A54  5A03               	subwfb	___lldiv@dividend+2,f,c
  4938  002A56  5008               	movf	___lldiv@divisor+3,w,c
  4939  002A58  5A04               	subwfb	___lldiv@dividend+3,f,c
  4940  002A5A  8009               	bsf	___lldiv@quotient,0,c
  4941  002A5C  D000               	goto	l2512
  4942  002A5E                     l2512:
  4943  002A5E  90D8               	bcf	status,0,c
  4944  002A60  3208               	rrcf	___lldiv@divisor+3,f,c
  4945  002A62  3207               	rrcf	___lldiv@divisor+2,f,c
  4946  002A64  3206               	rrcf	___lldiv@divisor+1,f,c
  4947  002A66  3205               	rrcf	___lldiv@divisor,f,c
  4948  002A68  2E0D               	decfsz	___lldiv@counter,f,c
  4949  002A6A  D7E0               	goto	l2504
  4950  002A6C  D000               	goto	l784
  4951  002A6E                     l784:
  4952  002A6E  C009  F001         	movff	___lldiv@quotient,?___lldiv
  4953  002A72  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  4954  002A76  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  4955  002A7A  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  4956  002A7E  0012               	return		;funcret
  4957  002A80                     __end_of___lldiv:
  4958                           	opt stack 0
  4959                           tblptru	equ	0xFF8
  4960                           tblptrh	equ	0xFF7
  4961                           tblptrl	equ	0xFF6
  4962                           tablat	equ	0xFF5
  4963                           prodh	equ	0xFF4
  4964                           prodl	equ	0xFF3
  4965                           wreg	equ	0xFE8
  4966                           postinc2	equ	0xFDE
  4967                           postdec2	equ	0xFDD
  4968                           fsr2h	equ	0xFDA
  4969                           fsr2l	equ	0xFD9
  4970                           status	equ	0xFD8
  4971                           
  4972 ;; *************** function ___fttol *****************
  4973 ;; Defined at:
  4974 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
  4975 ;; Parameters:    Size  Location     Type
  4976 ;;  f1              3   57[COMRAM] float 
  4977 ;; Auto vars:     Size  Location     Type
  4978 ;;  lval            4   67[COMRAM] unsigned long 
  4979 ;;  exp1            1   71[COMRAM] unsigned char 
  4980 ;;  sign1           1   66[COMRAM] unsigned char 
  4981 ;; Return value:  Size  Location     Type
  4982 ;;                  4   57[COMRAM] long 
  4983 ;; Registers used:
  4984 ;;		wreg, status,2, status,0
  4985 ;; Tracked objects:
  4986 ;;		On entry : 0/0
  4987 ;;		On exit  : 0/0
  4988 ;;		Unchanged: 0/0
  4989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4990 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4991 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4992 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4993 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4994 ;;Total ram usage:       15 bytes
  4995 ;; Hardware stack levels used:    1
  4996 ;; This function calls:
  4997 ;;		Nothing
  4998 ;; This function is called by:
  4999 ;;		_set_D1_color
  5000 ;;		_main
  5001 ;;		_printf
  5002 ;;		_Display_7Seg
  5003 ;; This function uses a non-reentrant model
  5004 ;;
  5005                           
  5006                           	psect	text22
  5007  00263A                     __ptext22:
  5008                           	opt stack 0
  5009  00263A                     ___fttol:
  5010                           	opt stack 29
  5011                           
  5012                           ;incstack = 0
  5013  00263A  C03C  F03E         	movff	___fttol@f1+2,??___fttol
  5014  00263E  6A3F               	clrf	(??___fttol+1)& (0+255),c
  5015  002640  6A40               	clrf	(??___fttol+2)& (0+255),c
  5016  002642  343B               	rlcf	___fttol@f1+1,w,c
  5017  002644  363E               	rlcf	??___fttol& (0+255),f,c
  5018  002646  E301               	bnc	u2401
  5019  002648  803F               	bsf	(??___fttol+1)& (0+255),0,c
  5020  00264A                     u2401:
  5021  00264A  503E               	movf	??___fttol,w,c
  5022  00264C  6E48               	movwf	___fttol@exp1,c
  5023  00264E  5048               	movf	___fttol@exp1,w,c
  5024  002650  A4D8               	btfss	status,2,c
  5025  002652  D002               	goto	l2454
  5026  002654  D039               	goto	l2478
  5027  002656  D063               	goto	l745
  5028  002658                     l2454:
  5029  002658  0E17               	movlw	23
  5030  00265A  6E3E               	movwf	??___fttol& (0+255),c
  5031  00265C  C03A  F03F         	movff	___fttol@f1,??___fttol+1
  5032  002660  C03B  F040         	movff	___fttol@f1+1,??___fttol+2
  5033  002664  C03C  F041         	movff	___fttol@f1+2,??___fttol+3
  5034  002668  283E               	incf	??___fttol,w,c
  5035  00266A  6E42               	movwf	(??___fttol+4)& (0+255),c
  5036  00266C  D004               	goto	u2420
  5037  00266E                     u2425:
  5038  00266E  90D8               	bcf	status,0,c
  5039  002670  3241               	rrcf	??___fttol+3,f,c
  5040  002672  3240               	rrcf	??___fttol+2,f,c
  5041  002674  323F               	rrcf	??___fttol+1,f,c
  5042  002676                     u2420:
  5043  002676  2E42               	decfsz	(??___fttol+4)& (0+255),f,c
  5044  002678  D7FA               	goto	u2425
  5045  00267A  503F               	movf	??___fttol+1,w,c
  5046  00267C  6E43               	movwf	___fttol@sign1,c
  5047  00267E  8E3B               	bsf	___fttol@f1+1,7,c
  5048  002680  0EFF               	movlw	255
  5049  002682  163A               	andwf	___fttol@f1,f,c
  5050  002684  0EFF               	movlw	255
  5051  002686  163B               	andwf	___fttol@f1+1,f,c
  5052  002688  0E00               	movlw	0
  5053  00268A  163C               	andwf	___fttol@f1+2,f,c
  5054  00268C  503A               	movf	___fttol@f1,w,c
  5055  00268E  6E44               	movwf	___fttol@lval,c
  5056  002690  503B               	movf	___fttol@f1+1,w,c
  5057  002692  6E45               	movwf	___fttol@lval+1,c
  5058  002694  503C               	movf	___fttol@f1+2,w,c
  5059  002696  6E46               	movwf	___fttol@lval+2,c
  5060  002698  6A47               	clrf	___fttol@lval+3,c
  5061  00269A  0E8E               	movlw	142
  5062  00269C  5E48               	subwf	___fttol@exp1,f,c
  5063  00269E  AE48               	btfss	___fttol@exp1,7,c
  5064  0026A0  D010               	goto	l2476
  5065  0026A2  5048               	movf	___fttol@exp1,w,c
  5066  0026A4  0A80               	xorlw	128
  5067  0026A6  0F8F               	addlw	143
  5068  0026A8  B0D8               	btfsc	status,0,c
  5069  0026AA  D003               	goto	l2472
  5070  0026AC  D00D               	goto	l2478
  5071  0026AE  D037               	goto	l745
  5072  0026B0  D000               	goto	l2472
  5073  0026B2                     l2472:
  5074  0026B2  90D8               	bcf	status,0,c
  5075  0026B4  3247               	rrcf	___fttol@lval+3,f,c
  5076  0026B6  3246               	rrcf	___fttol@lval+2,f,c
  5077  0026B8  3245               	rrcf	___fttol@lval+1,f,c
  5078  0026BA  3244               	rrcf	___fttol@lval,f,c
  5079  0026BC  3E48               	incfsz	___fttol@exp1,f,c
  5080  0026BE  D7F9               	goto	l2472
  5081  0026C0  D019               	goto	l2486
  5082  0026C2                     l2476:
  5083  0026C2  0E17               	movlw	23
  5084  0026C4  6448               	cpfsgt	___fttol@exp1,c
  5085  0026C6  D011               	goto	l2484
  5086  0026C8                     l2478:
  5087  0026C8  0E00               	movlw	0
  5088  0026CA  6E3A               	movwf	?___fttol,c
  5089  0026CC  0E00               	movlw	0
  5090  0026CE  6E3B               	movwf	?___fttol+1,c
  5091  0026D0  0E00               	movlw	0
  5092  0026D2  6E3C               	movwf	?___fttol+2,c
  5093  0026D4  0E00               	movlw	0
  5094  0026D6  6E3D               	movwf	?___fttol+3,c
  5095  0026D8  D022               	goto	l745
  5096  0026DA  D007               	goto	l2484
  5097  0026DC                     l2482:
  5098  0026DC  90D8               	bcf	status,0,c
  5099  0026DE  3644               	rlcf	___fttol@lval,f,c
  5100  0026E0  3645               	rlcf	___fttol@lval+1,f,c
  5101  0026E2  3646               	rlcf	___fttol@lval+2,f,c
  5102  0026E4  3647               	rlcf	___fttol@lval+3,f,c
  5103  0026E6  0648               	decf	___fttol@exp1,f,c
  5104  0026E8  D000               	goto	l2484
  5105  0026EA                     l2484:
  5106  0026EA  5048               	movf	___fttol@exp1,w,c
  5107  0026EC  B4D8               	btfsc	status,2,c
  5108  0026EE  D002               	goto	l2486
  5109  0026F0  D7F5               	goto	l2482
  5110  0026F2  D000               	goto	l2486
  5111  0026F4                     l2486:
  5112  0026F4  5043               	movf	___fttol@sign1,w,c
  5113  0026F6  B4D8               	btfsc	status,2,c
  5114  0026F8  D009               	goto	l2490
  5115  0026FA  1E47               	comf	___fttol@lval+3,f,c
  5116  0026FC  1E46               	comf	___fttol@lval+2,f,c
  5117  0026FE  1E45               	comf	___fttol@lval+1,f,c
  5118  002700  6C44               	negf	___fttol@lval,c
  5119  002702  0E00               	movlw	0
  5120  002704  2245               	addwfc	___fttol@lval+1,f,c
  5121  002706  2246               	addwfc	___fttol@lval+2,f,c
  5122  002708  2247               	addwfc	___fttol@lval+3,f,c
  5123  00270A  D000               	goto	l2490
  5124  00270C                     l2490:
  5125  00270C  C044  F03A         	movff	___fttol@lval,?___fttol
  5126  002710  C045  F03B         	movff	___fttol@lval+1,?___fttol+1
  5127  002714  C046  F03C         	movff	___fttol@lval+2,?___fttol+2
  5128  002718  C047  F03D         	movff	___fttol@lval+3,?___fttol+3
  5129  00271C  D000               	goto	l745
  5130  00271E                     l745:
  5131  00271E  0012               	return		;funcret
  5132  002720                     __end_of___fttol:
  5133                           	opt stack 0
  5134                           tblptru	equ	0xFF8
  5135                           tblptrh	equ	0xFF7
  5136                           tblptrl	equ	0xFF6
  5137                           tablat	equ	0xFF5
  5138                           prodh	equ	0xFF4
  5139                           prodl	equ	0xFF3
  5140                           wreg	equ	0xFE8
  5141                           postinc2	equ	0xFDE
  5142                           postdec2	equ	0xFDD
  5143                           fsr2h	equ	0xFDA
  5144                           fsr2l	equ	0xFD9
  5145                           status	equ	0xFD8
  5146                           
  5147 ;; *************** function ___ftsub *****************
  5148 ;; Defined at:
  5149 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftsub.c"
  5150 ;; Parameters:    Size  Location     Type
  5151 ;;  f1              3   27[COMRAM] float 
  5152 ;;  f2              3   30[COMRAM] float 
  5153 ;; Auto vars:     Size  Location     Type
  5154 ;;		None
  5155 ;; Return value:  Size  Location     Type
  5156 ;;                  3   27[COMRAM] float 
  5157 ;; Registers used:
  5158 ;;		wreg, status,2, status,0, cstack
  5159 ;; Tracked objects:
  5160 ;;		On entry : 0/0
  5161 ;;		On exit  : 0/0
  5162 ;;		Unchanged: 0/0
  5163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5164 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5167 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5168 ;;Total ram usage:        6 bytes
  5169 ;; Hardware stack levels used:    1
  5170 ;; Hardware stack levels required when called:    2
  5171 ;; This function calls:
  5172 ;;		___ftadd
  5173 ;; This function is called by:
  5174 ;;		_printf
  5175 ;; This function uses a non-reentrant model
  5176 ;;
  5177                           
  5178                           	psect	text23
  5179  002C98                     __ptext23:
  5180                           	opt stack 0
  5181  002C98                     ___ftsub:
  5182                           	opt stack 27
  5183                           
  5184                           ;incstack = 0
  5185  002C98  501F               	movf	___ftsub@f2,w,c
  5186  002C9A  1020               	iorwf	___ftsub@f2+1,w,c
  5187  002C9C  1021               	iorwf	___ftsub@f2+2,w,c
  5188  002C9E  B4D8               	btfsc	status,2,c
  5189  002CA0  D007               	goto	l2422
  5190  002CA2  0E00               	movlw	0
  5191  002CA4  1A1F               	xorwf	___ftsub@f2,f,c
  5192  002CA6  0E00               	movlw	0
  5193  002CA8  1A20               	xorwf	___ftsub@f2+1,f,c
  5194  002CAA  0E80               	movlw	128
  5195  002CAC  1A21               	xorwf	___ftsub@f2+2,f,c
  5196  002CAE  D000               	goto	l2422
  5197  002CB0                     l2422:
  5198  002CB0  C01C  F010         	movff	___ftsub@f1,___ftadd@f1
  5199  002CB4  C01D  F011         	movff	___ftsub@f1+1,___ftadd@f1+1
  5200  002CB8  C01E  F012         	movff	___ftsub@f1+2,___ftadd@f1+2
  5201  002CBC  C01F  F013         	movff	___ftsub@f2,___ftadd@f2
  5202  002CC0  C020  F014         	movff	___ftsub@f2+1,___ftadd@f2+1
  5203  002CC4  C021  F015         	movff	___ftsub@f2+2,___ftadd@f2+2
  5204  002CC8  EC32  F010         	call	___ftadd	;wreg free
  5205  002CCC  C010  F01C         	movff	?___ftadd,?___ftsub
  5206  002CD0  C011  F01D         	movff	?___ftadd+1,?___ftsub+1
  5207  002CD4  C012  F01E         	movff	?___ftadd+2,?___ftsub+2
  5208  002CD8  D000               	goto	l741
  5209  002CDA                     l741:
  5210  002CDA  0012               	return		;funcret
  5211  002CDC                     __end_of___ftsub:
  5212                           	opt stack 0
  5213                           tblptru	equ	0xFF8
  5214                           tblptrh	equ	0xFF7
  5215                           tblptrl	equ	0xFF6
  5216                           tablat	equ	0xFF5
  5217                           prodh	equ	0xFF4
  5218                           prodl	equ	0xFF3
  5219                           wreg	equ	0xFE8
  5220                           postinc2	equ	0xFDE
  5221                           postdec2	equ	0xFDD
  5222                           fsr2h	equ	0xFDA
  5223                           fsr2l	equ	0xFD9
  5224                           status	equ	0xFD8
  5225                           
  5226 ;; *************** function ___ftadd *****************
  5227 ;; Defined at:
  5228 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftadd.c"
  5229 ;; Parameters:    Size  Location     Type
  5230 ;;  f1              3   15[COMRAM] float 
  5231 ;;  f2              3   18[COMRAM] float 
  5232 ;; Auto vars:     Size  Location     Type
  5233 ;;  exp1            1   26[COMRAM] unsigned char 
  5234 ;;  exp2            1   25[COMRAM] unsigned char 
  5235 ;;  sign            1   24[COMRAM] unsigned char 
  5236 ;; Return value:  Size  Location     Type
  5237 ;;                  3   15[COMRAM] float 
  5238 ;; Registers used:
  5239 ;;		wreg, status,2, status,0, cstack
  5240 ;; Tracked objects:
  5241 ;;		On entry : 0/0
  5242 ;;		On exit  : 0/0
  5243 ;;		Unchanged: 0/0
  5244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5245 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5246 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5247 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5248 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5249 ;;Total ram usage:       12 bytes
  5250 ;; Hardware stack levels used:    1
  5251 ;; Hardware stack levels required when called:    1
  5252 ;; This function calls:
  5253 ;;		___ftpack
  5254 ;; This function is called by:
  5255 ;;		_main
  5256 ;;		_printf
  5257 ;;		___ftsub
  5258 ;;		_Display_7Seg
  5259 ;; This function uses a non-reentrant model
  5260 ;;
  5261                           
  5262                           	psect	text24
  5263  002064                     __ptext24:
  5264                           	opt stack 0
  5265  002064                     ___ftadd:
  5266                           	opt stack 27
  5267                           
  5268                           ;incstack = 0
  5269  002064  C012  F016         	movff	___ftadd@f1+2,??___ftadd
  5270  002068  6A17               	clrf	(??___ftadd+1)& (0+255),c
  5271  00206A  6A18               	clrf	(??___ftadd+2)& (0+255),c
  5272  00206C  3411               	rlcf	___ftadd@f1+1,w,c
  5273  00206E  3616               	rlcf	??___ftadd& (0+255),f,c
  5274  002070  E301               	bnc	u1571
  5275  002072  8017               	bsf	(??___ftadd+1)& (0+255),0,c
  5276  002074                     u1571:
  5277  002074  5016               	movf	??___ftadd,w,c
  5278  002076  6E1B               	movwf	___ftadd@exp1,c
  5279  002078  C015  F016         	movff	___ftadd@f2+2,??___ftadd
  5280  00207C  6A17               	clrf	(??___ftadd+1)& (0+255),c
  5281  00207E  6A18               	clrf	(??___ftadd+2)& (0+255),c
  5282  002080  3414               	rlcf	___ftadd@f2+1,w,c
  5283  002082  3616               	rlcf	??___ftadd& (0+255),f,c
  5284  002084  E301               	bnc	u1581
  5285  002086  8017               	bsf	(??___ftadd+1)& (0+255),0,c
  5286  002088                     u1581:
  5287  002088  5016               	movf	??___ftadd,w,c
  5288  00208A  6E1A               	movwf	___ftadd@exp2,c
  5289  00208C  501B               	movf	___ftadd@exp1,w,c
  5290  00208E  B4D8               	btfsc	status,2,c
  5291  002090  D00B               	goto	l660
  5292  002092  501A               	movf	___ftadd@exp2,w,c
  5293  002094  5C1B               	subwf	___ftadd@exp1,w,c
  5294  002096  B0D8               	btfsc	status,0,c
  5295  002098  D00E               	goto	l1942
  5296  00209A  501B               	movf	___ftadd@exp1,w,c
  5297  00209C  0800               	sublw	0
  5298  00209E  241A               	addwf	___ftadd@exp2,w,c
  5299  0020A0  6E16               	movwf	??___ftadd& (0+255),c
  5300  0020A2  0E18               	movlw	24
  5301  0020A4  6416               	cpfsgt	??___ftadd,c
  5302  0020A6  D007               	goto	l1942
  5303  0020A8                     l660:
  5304  0020A8  C013  F010         	movff	___ftadd@f2,?___ftadd
  5305  0020AC  C014  F011         	movff	___ftadd@f2+1,?___ftadd+1
  5306  0020B0  C015  F012         	movff	___ftadd@f2+2,?___ftadd+2
  5307  0020B4  D0B8               	goto	l661
  5308  0020B6                     l1942:
  5309  0020B6  501A               	movf	___ftadd@exp2,w,c
  5310  0020B8  B4D8               	btfsc	status,2,c
  5311  0020BA  D00B               	goto	l664
  5312  0020BC  501B               	movf	___ftadd@exp1,w,c
  5313  0020BE  5C1A               	subwf	___ftadd@exp2,w,c
  5314  0020C0  B0D8               	btfsc	status,0,c
  5315  0020C2  D00E               	goto	l1948
  5316  0020C4  501A               	movf	___ftadd@exp2,w,c
  5317  0020C6  0800               	sublw	0
  5318  0020C8  241B               	addwf	___ftadd@exp1,w,c
  5319  0020CA  6E16               	movwf	??___ftadd& (0+255),c
  5320  0020CC  0E18               	movlw	24
  5321  0020CE  6416               	cpfsgt	??___ftadd,c
  5322  0020D0  D007               	goto	l1948
  5323  0020D2                     l664:
  5324  0020D2  C010  F010         	movff	___ftadd@f1,?___ftadd
  5325  0020D6  C011  F011         	movff	___ftadd@f1+1,?___ftadd+1
  5326  0020DA  C012  F012         	movff	___ftadd@f1+2,?___ftadd+2
  5327  0020DE  D0A3               	goto	l661
  5328  0020E0                     l1948:
  5329  0020E0  0E06               	movlw	6
  5330  0020E2  6E19               	movwf	___ftadd@sign,c
  5331  0020E4  AE12               	btfss	___ftadd@f1+2,7,c
  5332  0020E6  D002               	goto	l1954
  5333  0020E8  8E19               	bsf	___ftadd@sign,7,c
  5334  0020EA  D000               	goto	l1954
  5335  0020EC                     l1954:
  5336  0020EC  BE15               	btfsc	___ftadd@f2+2,7,c
  5337  0020EE  8C19               	bsf	___ftadd@sign,6,c
  5338  0020F0  8E11               	bsf	___ftadd@f1+1,7,c
  5339  0020F2  0EFF               	movlw	255
  5340  0020F4  1610               	andwf	___ftadd@f1,f,c
  5341  0020F6  0EFF               	movlw	255
  5342  0020F8  1611               	andwf	___ftadd@f1+1,f,c
  5343  0020FA  0E00               	movlw	0
  5344  0020FC  1612               	andwf	___ftadd@f1+2,f,c
  5345  0020FE  8E14               	bsf	___ftadd@f2+1,7,c
  5346  002100  0EFF               	movlw	255
  5347  002102  1613               	andwf	___ftadd@f2,f,c
  5348  002104  0EFF               	movlw	255
  5349  002106  1614               	andwf	___ftadd@f2+1,f,c
  5350  002108  0E00               	movlw	0
  5351  00210A  1615               	andwf	___ftadd@f2+2,f,c
  5352  00210C  501A               	movf	___ftadd@exp2,w,c
  5353  00210E  5C1B               	subwf	___ftadd@exp1,w,c
  5354  002110  B0D8               	btfsc	status,0,c
  5355  002112  D01E               	goto	l1974
  5356  002114                     l1964:
  5357  002114  90D8               	bcf	status,0,c
  5358  002116  3613               	rlcf	___ftadd@f2,f,c
  5359  002118  3614               	rlcf	___ftadd@f2+1,f,c
  5360  00211A  3615               	rlcf	___ftadd@f2+2,f,c
  5361  00211C  061A               	decf	___ftadd@exp2,f,c
  5362  00211E  501B               	movf	___ftadd@exp1,w,c
  5363  002120  181A               	xorwf	___ftadd@exp2,w,c
  5364  002122  B4D8               	btfsc	status,2,c
  5365  002124  D00F               	goto	l1972
  5366  002126  0619               	decf	___ftadd@sign,f,c
  5367  002128  C019  F016         	movff	___ftadd@sign,??___ftadd
  5368  00212C  0E07               	movlw	7
  5369  00212E  1616               	andwf	??___ftadd,f,c
  5370  002130  B4D8               	btfsc	status,2,c
  5371  002132  D008               	goto	l1972
  5372  002134  D7EF               	goto	l1964
  5373  002136  D006               	goto	l1972
  5374  002138                     l1970:
  5375  002138  90D8               	bcf	status,0,c
  5376  00213A  3212               	rrcf	___ftadd@f1+2,f,c
  5377  00213C  3211               	rrcf	___ftadd@f1+1,f,c
  5378  00213E  3210               	rrcf	___ftadd@f1,f,c
  5379  002140  2A1B               	incf	___ftadd@exp1,f,c
  5380  002142  D000               	goto	l1972
  5381  002144                     l1972:
  5382  002144  501A               	movf	___ftadd@exp2,w,c
  5383  002146  181B               	xorwf	___ftadd@exp1,w,c
  5384  002148  B4D8               	btfsc	status,2,c
  5385  00214A  D024               	goto	l675
  5386  00214C  D7F5               	goto	l1970
  5387  00214E  D022               	goto	l675
  5388  002150                     l1974:
  5389  002150  501B               	movf	___ftadd@exp1,w,c
  5390  002152  5C1A               	subwf	___ftadd@exp2,w,c
  5391  002154  B0D8               	btfsc	status,0,c
  5392  002156  D01E               	goto	l675
  5393  002158                     l1976:
  5394  002158  90D8               	bcf	status,0,c
  5395  00215A  3610               	rlcf	___ftadd@f1,f,c
  5396  00215C  3611               	rlcf	___ftadd@f1+1,f,c
  5397  00215E  3612               	rlcf	___ftadd@f1+2,f,c
  5398  002160  061B               	decf	___ftadd@exp1,f,c
  5399  002162  501B               	movf	___ftadd@exp1,w,c
  5400  002164  181A               	xorwf	___ftadd@exp2,w,c
  5401  002166  B4D8               	btfsc	status,2,c
  5402  002168  D00F               	goto	l1984
  5403  00216A  0619               	decf	___ftadd@sign,f,c
  5404  00216C  C019  F016         	movff	___ftadd@sign,??___ftadd
  5405  002170  0E07               	movlw	7
  5406  002172  1616               	andwf	??___ftadd,f,c
  5407  002174  B4D8               	btfsc	status,2,c
  5408  002176  D008               	goto	l1984
  5409  002178  D7EF               	goto	l1976
  5410  00217A  D006               	goto	l1984
  5411  00217C                     l1982:
  5412  00217C  90D8               	bcf	status,0,c
  5413  00217E  3215               	rrcf	___ftadd@f2+2,f,c
  5414  002180  3214               	rrcf	___ftadd@f2+1,f,c
  5415  002182  3213               	rrcf	___ftadd@f2,f,c
  5416  002184  2A1A               	incf	___ftadd@exp2,f,c
  5417  002186  D000               	goto	l1984
  5418  002188                     l1984:
  5419  002188  501A               	movf	___ftadd@exp2,w,c
  5420  00218A  181B               	xorwf	___ftadd@exp1,w,c
  5421  00218C  B4D8               	btfsc	status,2,c
  5422  00218E  D002               	goto	l675
  5423  002190  D7F5               	goto	l1982
  5424  002192  D000               	goto	l675
  5425  002194                     l675:
  5426  002194  AE19               	btfss	___ftadd@sign,7,c
  5427  002196  D00C               	goto	l684
  5428  002198  0EFF               	movlw	255
  5429  00219A  1A10               	xorwf	___ftadd@f1,f,c
  5430  00219C  0EFF               	movlw	255
  5431  00219E  1A11               	xorwf	___ftadd@f1+1,f,c
  5432  0021A0  0EFF               	movlw	255
  5433  0021A2  1A12               	xorwf	___ftadd@f1+2,f,c
  5434  0021A4  0E01               	movlw	1
  5435  0021A6  2610               	addwf	___ftadd@f1,f,c
  5436  0021A8  0E00               	movlw	0
  5437  0021AA  2211               	addwfc	___ftadd@f1+1,f,c
  5438  0021AC  0E00               	movlw	0
  5439  0021AE  2212               	addwfc	___ftadd@f1+2,f,c
  5440  0021B0                     l684:
  5441  0021B0  AC19               	btfss	___ftadd@sign,6,c
  5442  0021B2  D00D               	goto	l1990
  5443  0021B4  0EFF               	movlw	255
  5444  0021B6  1A13               	xorwf	___ftadd@f2,f,c
  5445  0021B8  0EFF               	movlw	255
  5446  0021BA  1A14               	xorwf	___ftadd@f2+1,f,c
  5447  0021BC  0EFF               	movlw	255
  5448  0021BE  1A15               	xorwf	___ftadd@f2+2,f,c
  5449  0021C0  0E01               	movlw	1
  5450  0021C2  2613               	addwf	___ftadd@f2,f,c
  5451  0021C4  0E00               	movlw	0
  5452  0021C6  2214               	addwfc	___ftadd@f2+1,f,c
  5453  0021C8  0E00               	movlw	0
  5454  0021CA  2215               	addwfc	___ftadd@f2+2,f,c
  5455  0021CC  D000               	goto	l1990
  5456  0021CE                     l1990:
  5457  0021CE  0E00               	movlw	0
  5458  0021D0  6E19               	movwf	___ftadd@sign,c
  5459  0021D2  5010               	movf	___ftadd@f1,w,c
  5460  0021D4  2613               	addwf	___ftadd@f2,f,c
  5461  0021D6  5011               	movf	___ftadd@f1+1,w,c
  5462  0021D8  2214               	addwfc	___ftadd@f2+1,f,c
  5463  0021DA  5012               	movf	___ftadd@f1+2,w,c
  5464  0021DC  2215               	addwfc	___ftadd@f2+2,f,c
  5465  0021DE  AE15               	btfss	___ftadd@f2+2,7,c
  5466  0021E0  D00F               	goto	l2000
  5467  0021E2  0EFF               	movlw	255
  5468  0021E4  1A13               	xorwf	___ftadd@f2,f,c
  5469  0021E6  0EFF               	movlw	255
  5470  0021E8  1A14               	xorwf	___ftadd@f2+1,f,c
  5471  0021EA  0EFF               	movlw	255
  5472  0021EC  1A15               	xorwf	___ftadd@f2+2,f,c
  5473  0021EE  0E01               	movlw	1
  5474  0021F0  2613               	addwf	___ftadd@f2,f,c
  5475  0021F2  0E00               	movlw	0
  5476  0021F4  2214               	addwfc	___ftadd@f2+1,f,c
  5477  0021F6  0E00               	movlw	0
  5478  0021F8  2215               	addwfc	___ftadd@f2+2,f,c
  5479  0021FA  0E01               	movlw	1
  5480  0021FC  6E19               	movwf	___ftadd@sign,c
  5481  0021FE  D000               	goto	l2000
  5482  002200                     l2000:
  5483  002200  C013  F001         	movff	___ftadd@f2,___ftpack@arg
  5484  002204  C014  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  5485  002208  C015  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  5486  00220C  C01B  F004         	movff	___ftadd@exp1,___ftpack@exp
  5487  002210  C019  F005         	movff	___ftadd@sign,___ftpack@sign
  5488  002214  EC01  F014         	call	___ftpack	;wreg free
  5489  002218  C001  F010         	movff	?___ftpack,?___ftadd
  5490  00221C  C002  F011         	movff	?___ftpack+1,?___ftadd+1
  5491  002220  C003  F012         	movff	?___ftpack+2,?___ftadd+2
  5492  002224  D000               	goto	l661
  5493  002226                     l661:
  5494  002226  0012               	return		;funcret
  5495  002228                     __end_of___ftadd:
  5496                           	opt stack 0
  5497                           tblptru	equ	0xFF8
  5498                           tblptrh	equ	0xFF7
  5499                           tblptrl	equ	0xFF6
  5500                           tablat	equ	0xFF5
  5501                           prodh	equ	0xFF4
  5502                           prodl	equ	0xFF3
  5503                           wreg	equ	0xFE8
  5504                           postinc2	equ	0xFDE
  5505                           postdec2	equ	0xFDD
  5506                           fsr2h	equ	0xFDA
  5507                           fsr2l	equ	0xFD9
  5508                           status	equ	0xFD8
  5509                           
  5510 ;; *************** function ___ftneg *****************
  5511 ;; Defined at:
  5512 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftneg.c"
  5513 ;; Parameters:    Size  Location     Type
  5514 ;;  f1              3   12[COMRAM] float 
  5515 ;; Auto vars:     Size  Location     Type
  5516 ;;		None
  5517 ;; Return value:  Size  Location     Type
  5518 ;;                  3   12[COMRAM] float 
  5519 ;; Registers used:
  5520 ;;		wreg, status,2, status,0
  5521 ;; Tracked objects:
  5522 ;;		On entry : 0/0
  5523 ;;		On exit  : 0/0
  5524 ;;		Unchanged: 0/0
  5525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5526 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5529 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5530 ;;Total ram usage:        3 bytes
  5531 ;; Hardware stack levels used:    1
  5532 ;; This function calls:
  5533 ;;		Nothing
  5534 ;; This function is called by:
  5535 ;;		_main
  5536 ;;		_printf
  5537 ;;		_Display_7Seg
  5538 ;; This function uses a non-reentrant model
  5539 ;;
  5540                           
  5541                           	psect	text25
  5542  002D66                     __ptext25:
  5543                           	opt stack 0
  5544  002D66                     ___ftneg:
  5545                           	opt stack 29
  5546                           
  5547                           ;incstack = 0
  5548  002D66  500D               	movf	___ftneg@f1,w,c
  5549  002D68  100E               	iorwf	___ftneg@f1+1,w,c
  5550  002D6A  100F               	iorwf	___ftneg@f1+2,w,c
  5551  002D6C  B4D8               	btfsc	status,2,c
  5552  002D6E  D006               	goto	l734
  5553  002D70  0E00               	movlw	0
  5554  002D72  1A0D               	xorwf	___ftneg@f1,f,c
  5555  002D74  0E00               	movlw	0
  5556  002D76  1A0E               	xorwf	___ftneg@f1+1,f,c
  5557  002D78  0E80               	movlw	128
  5558  002D7A  1A0F               	xorwf	___ftneg@f1+2,f,c
  5559  002D7C                     l734:
  5560  002D7C  C00D  F00D         	movff	___ftneg@f1,?___ftneg
  5561  002D80  C00E  F00E         	movff	___ftneg@f1+1,?___ftneg+1
  5562  002D84  C00F  F00F         	movff	___ftneg@f1+2,?___ftneg+2
  5563  002D88  0012               	return		;funcret
  5564  002D8A                     __end_of___ftneg:
  5565                           	opt stack 0
  5566                           tblptru	equ	0xFF8
  5567                           tblptrh	equ	0xFF7
  5568                           tblptrl	equ	0xFF6
  5569                           tablat	equ	0xFF5
  5570                           prodh	equ	0xFF4
  5571                           prodl	equ	0xFF3
  5572                           wreg	equ	0xFE8
  5573                           postinc2	equ	0xFDE
  5574                           postdec2	equ	0xFDD
  5575                           fsr2h	equ	0xFDA
  5576                           fsr2l	equ	0xFD9
  5577                           status	equ	0xFD8
  5578                           
  5579 ;; *************** function ___ftge *****************
  5580 ;; Defined at:
  5581 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftge.c"
  5582 ;; Parameters:    Size  Location     Type
  5583 ;;  ff1             3    0[COMRAM] float 
  5584 ;;  ff2             3    3[COMRAM] float 
  5585 ;; Auto vars:     Size  Location     Type
  5586 ;;		None
  5587 ;; Return value:  Size  Location     Type
  5588 ;;		None               void
  5589 ;; Registers used:
  5590 ;;		wreg, status,2, status,0
  5591 ;; Tracked objects:
  5592 ;;		On entry : 0/0
  5593 ;;		On exit  : 0/0
  5594 ;;		Unchanged: 0/0
  5595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5596 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5598 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5599 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5600 ;;Total ram usage:        9 bytes
  5601 ;; Hardware stack levels used:    1
  5602 ;; This function calls:
  5603 ;;		Nothing
  5604 ;; This function is called by:
  5605 ;;		_set_D2_color
  5606 ;;		_main
  5607 ;;		_printf
  5608 ;; This function uses a non-reentrant model
  5609 ;;
  5610                           
  5611                           	psect	text26
  5612  00295E                     __ptext26:
  5613                           	opt stack 0
  5614  00295E                     ___ftge:
  5615                           	opt stack 29
  5616                           
  5617                           ;incstack = 0
  5618  00295E  AE03               	btfss	___ftge@ff1+2,7,c
  5619  002960  D017               	goto	l2430
  5620  002962  C001  F007         	movff	___ftge@ff1,??___ftge
  5621  002966  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  5622  00296A  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  5623  00296E  1E07               	comf	??___ftge,f,c
  5624  002970  1E08               	comf	??___ftge+1,f,c
  5625  002972  1E09               	comf	??___ftge+2,f,c
  5626  002974  2A07               	incf	??___ftge,f,c
  5627  002976  0E00               	movlw	0
  5628  002978  2208               	addwfc	??___ftge+1,f,c
  5629  00297A  2209               	addwfc	??___ftge+2,f,c
  5630  00297C  0E00               	movlw	0
  5631  00297E  2407               	addwf	??___ftge,w,c
  5632  002980  6E01               	movwf	___ftge@ff1,c
  5633  002982  0E00               	movlw	0
  5634  002984  2008               	addwfc	??___ftge+1,w,c
  5635  002986  6E02               	movwf	___ftge@ff1+1,c
  5636  002988  0E80               	movlw	128
  5637  00298A  2009               	addwfc	??___ftge+2,w,c
  5638  00298C  6E03               	movwf	___ftge@ff1+2,c
  5639  00298E  D000               	goto	l2430
  5640  002990                     l2430:
  5641  002990  AE06               	btfss	___ftge@ff2+2,7,c
  5642  002992  D017               	goto	l2434
  5643  002994  C004  F007         	movff	___ftge@ff2,??___ftge
  5644  002998  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  5645  00299C  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  5646  0029A0  1E07               	comf	??___ftge,f,c
  5647  0029A2  1E08               	comf	??___ftge+1,f,c
  5648  0029A4  1E09               	comf	??___ftge+2,f,c
  5649  0029A6  2A07               	incf	??___ftge,f,c
  5650  0029A8  0E00               	movlw	0
  5651  0029AA  2208               	addwfc	??___ftge+1,f,c
  5652  0029AC  2209               	addwfc	??___ftge+2,f,c
  5653  0029AE  0E00               	movlw	0
  5654  0029B0  2407               	addwf	??___ftge,w,c
  5655  0029B2  6E04               	movwf	___ftge@ff2,c
  5656  0029B4  0E00               	movlw	0
  5657  0029B6  2008               	addwfc	??___ftge+1,w,c
  5658  0029B8  6E05               	movwf	___ftge@ff2+1,c
  5659  0029BA  0E80               	movlw	128
  5660  0029BC  2009               	addwfc	??___ftge+2,w,c
  5661  0029BE  6E06               	movwf	___ftge@ff2+2,c
  5662  0029C0  D000               	goto	l2434
  5663  0029C2                     l2434:
  5664  0029C2  0E00               	movlw	0
  5665  0029C4  1A01               	xorwf	___ftge@ff1,f,c
  5666  0029C6  0E00               	movlw	0
  5667  0029C8  1A02               	xorwf	___ftge@ff1+1,f,c
  5668  0029CA  0E80               	movlw	128
  5669  0029CC  1A03               	xorwf	___ftge@ff1+2,f,c
  5670  0029CE  0E00               	movlw	0
  5671  0029D0  1A04               	xorwf	___ftge@ff2,f,c
  5672  0029D2  0E00               	movlw	0
  5673  0029D4  1A05               	xorwf	___ftge@ff2+1,f,c
  5674  0029D6  0E80               	movlw	128
  5675  0029D8  1A06               	xorwf	___ftge@ff2+2,f,c
  5676  0029DA  5004               	movf	___ftge@ff2,w,c
  5677  0029DC  5C01               	subwf	___ftge@ff1,w,c
  5678  0029DE  5005               	movf	___ftge@ff2+1,w,c
  5679  0029E0  5802               	subwfb	___ftge@ff1+1,w,c
  5680  0029E2  5006               	movf	___ftge@ff2+2,w,c
  5681  0029E4  5803               	subwfb	___ftge@ff1+2,w,c
  5682  0029E6  B0D8               	btfsc	status,0,c
  5683  0029E8  D002               	goto	l2440
  5684  0029EA  90D8               	bcf	status,0,c
  5685  0029EC  D002               	goto	l718
  5686  0029EE                     l2440:
  5687  0029EE  80D8               	bsf	status,0,c
  5688  0029F0  D000               	goto	l718
  5689  0029F2                     l718:
  5690  0029F2  0012               	return		;funcret
  5691  0029F4                     __end_of___ftge:
  5692                           	opt stack 0
  5693                           tblptru	equ	0xFF8
  5694                           tblptrh	equ	0xFF7
  5695                           tblptrl	equ	0xFF6
  5696                           tablat	equ	0xFF5
  5697                           prodh	equ	0xFF4
  5698                           prodl	equ	0xFF3
  5699                           wreg	equ	0xFE8
  5700                           postinc2	equ	0xFDE
  5701                           postdec2	equ	0xFDD
  5702                           fsr2h	equ	0xFDA
  5703                           fsr2l	equ	0xFD9
  5704                           status	equ	0xFD8
  5705                           
  5706 ;; *************** function _get_full_ADC *****************
  5707 ;; Defined at:
  5708 ;;		line 112 in file "lab6p1.c"
  5709 ;; Parameters:    Size  Location     Type
  5710 ;;		None
  5711 ;; Auto vars:     Size  Location     Type
  5712 ;;  result          2    4[COMRAM] int 
  5713 ;; Return value:  Size  Location     Type
  5714 ;;                  2    0[COMRAM] unsigned int 
  5715 ;; Registers used:
  5716 ;;		wreg, status,2, status,0
  5717 ;; Tracked objects:
  5718 ;;		On entry : 0/0
  5719 ;;		On exit  : 0/0
  5720 ;;		Unchanged: 0/0
  5721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5722 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5723 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5724 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5725 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5726 ;;Total ram usage:        6 bytes
  5727 ;; Hardware stack levels used:    1
  5728 ;; This function calls:
  5729 ;;		Nothing
  5730 ;; This function is called by:
  5731 ;;		_main
  5732 ;; This function uses a non-reentrant model
  5733 ;;
  5734                           
  5735                           	psect	text27
  5736  002D40                     __ptext27:
  5737                           	opt stack 0
  5738  002D40                     _get_full_ADC:
  5739                           	opt stack 30
  5740                           
  5741                           ;lab6p1.c: 113: int result;
  5742                           ;lab6p1.c: 114: ADCON0bits.GO = 1;
  5743                           
  5744                           ;incstack = 0
  5745  002D40  82C2               	bsf	4034,1,c	;volatile
  5746                           
  5747                           ;lab6p1.c: 115: while (ADCON0bits.DONE);
  5748  002D42  D000               	goto	l85
  5749  002D44                     l85:
  5750  002D44  B2C2               	btfsc	4034,1,c	;volatile
  5751  002D46  D7FE               	goto	l85
  5752                           
  5753                           ;lab6p1.c: 116: result = (ADRESH * 0x100) + ADRESL;
  5754  002D48  50C4               	movf	4036,w,c	;volatile
  5755  002D4A  6E04               	movwf	(??_get_full_ADC+1)& (0+255),c
  5756  002D4C  6A03               	clrf	??_get_full_ADC& (0+255),c
  5757  002D4E  50C3               	movf	4035,w,c	;volatile
  5758  002D50  2403               	addwf	??_get_full_ADC,w,c
  5759  002D52  6E05               	movwf	get_full_ADC@result,c
  5760  002D54  0E00               	movlw	0
  5761  002D56  2004               	addwfc	??_get_full_ADC+1,w,c
  5762  002D58  6E06               	movwf	get_full_ADC@result+1,c
  5763                           
  5764                           ;lab6p1.c: 117: return result;
  5765  002D5A  C005  F001         	movff	get_full_ADC@result,?_get_full_ADC
  5766  002D5E  C006  F002         	movff	get_full_ADC@result+1,?_get_full_ADC+1
  5767  002D62  D000               	goto	l88
  5768  002D64                     l88:
  5769  002D64  0012               	return		;funcret
  5770  002D66                     __end_of_get_full_ADC:
  5771                           	opt stack 0
  5772                           tblptru	equ	0xFF8
  5773                           tblptrh	equ	0xFF7
  5774                           tblptrl	equ	0xFF6
  5775                           tablat	equ	0xFF5
  5776                           prodh	equ	0xFF4
  5777                           prodl	equ	0xFF3
  5778                           wreg	equ	0xFE8
  5779                           postinc2	equ	0xFDE
  5780                           postdec2	equ	0xFDD
  5781                           fsr2h	equ	0xFDA
  5782                           fsr2l	equ	0xFD9
  5783                           status	equ	0xFD8
  5784                           
  5785 ;; *************** function ___awtoft *****************
  5786 ;; Defined at:
  5787 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awtoft.c"
  5788 ;; Parameters:    Size  Location     Type
  5789 ;;  c               2    8[COMRAM] int 
  5790 ;; Auto vars:     Size  Location     Type
  5791 ;;  sign            1   11[COMRAM] unsigned char 
  5792 ;; Return value:  Size  Location     Type
  5793 ;;                  3    8[COMRAM] float 
  5794 ;; Registers used:
  5795 ;;		wreg, status,2, status,0, cstack
  5796 ;; Tracked objects:
  5797 ;;		On entry : 0/0
  5798 ;;		On exit  : 0/0
  5799 ;;		Unchanged: 0/0
  5800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5801 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5802 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5804 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5805 ;;Total ram usage:        4 bytes
  5806 ;; Hardware stack levels used:    1
  5807 ;; Hardware stack levels required when called:    1
  5808 ;; This function calls:
  5809 ;;		___ftpack
  5810 ;; This function is called by:
  5811 ;;		_main
  5812 ;;		_Display_7Seg
  5813 ;; This function uses a non-reentrant model
  5814 ;;
  5815                           
  5816                           	psect	text28
  5817  002CDC                     __ptext28:
  5818                           	opt stack 0
  5819  002CDC                     ___awtoft:
  5820                           	opt stack 29
  5821                           
  5822                           ;incstack = 0
  5823  002CDC  0E00               	movlw	0
  5824  002CDE  6E0C               	movwf	___awtoft@sign,c
  5825  002CE0  AE0A               	btfss	___awtoft@c+1,7,c
  5826  002CE2  D007               	goto	l2772
  5827  002CE4  6C09               	negf	___awtoft@c,c
  5828  002CE6  1E0A               	comf	___awtoft@c+1,f,c
  5829  002CE8  B0D8               	btfsc	status,0,c
  5830  002CEA  2A0A               	incf	___awtoft@c+1,f,c
  5831  002CEC  0E01               	movlw	1
  5832  002CEE  6E0C               	movwf	___awtoft@sign,c
  5833  002CF0  D000               	goto	l2772
  5834  002CF2                     l2772:
  5835  002CF2  C009  F001         	movff	___awtoft@c,___ftpack@arg
  5836  002CF6  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  5837  002CFA  6A03               	clrf	___ftpack@arg+2,c
  5838  002CFC  0E8E               	movlw	142
  5839  002CFE  6E04               	movwf	___ftpack@exp,c
  5840  002D00  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  5841  002D04  EC01  F014         	call	___ftpack	;wreg free
  5842  002D08  C001  F009         	movff	?___ftpack,?___awtoft
  5843  002D0C  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  5844  002D10  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  5845  002D14  D000               	goto	l513
  5846  002D16                     l513:
  5847  002D16  0012               	return		;funcret
  5848  002D18                     __end_of___awtoft:
  5849                           	opt stack 0
  5850                           tblptru	equ	0xFF8
  5851                           tblptrh	equ	0xFF7
  5852                           tblptrl	equ	0xFF6
  5853                           tablat	equ	0xFF5
  5854                           prodh	equ	0xFF4
  5855                           prodl	equ	0xFF3
  5856                           wreg	equ	0xFE8
  5857                           postinc2	equ	0xFDE
  5858                           postdec2	equ	0xFDD
  5859                           fsr2h	equ	0xFDA
  5860                           fsr2l	equ	0xFD9
  5861                           status	equ	0xFD8
  5862                           
  5863 ;; *************** function ___ftpack *****************
  5864 ;; Defined at:
  5865 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  5866 ;; Parameters:    Size  Location     Type
  5867 ;;  arg             3    0[COMRAM] unsigned um
  5868 ;;  exp             1    3[COMRAM] unsigned char 
  5869 ;;  sign            1    4[COMRAM] unsigned char 
  5870 ;; Auto vars:     Size  Location     Type
  5871 ;;		None
  5872 ;; Return value:  Size  Location     Type
  5873 ;;                  3    0[COMRAM] float 
  5874 ;; Registers used:
  5875 ;;		wreg, status,2, status,0
  5876 ;; Tracked objects:
  5877 ;;		On entry : 0/0
  5878 ;;		On exit  : 0/0
  5879 ;;		Unchanged: 0/0
  5880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5881 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5883 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5884 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5885 ;;Total ram usage:        8 bytes
  5886 ;; Hardware stack levels used:    1
  5887 ;; This function calls:
  5888 ;;		Nothing
  5889 ;; This function is called by:
  5890 ;;		___awtoft
  5891 ;;		___ftadd
  5892 ;;		___ftdiv
  5893 ;;		___ftmul
  5894 ;;		___lltoft
  5895 ;; This function uses a non-reentrant model
  5896 ;;
  5897                           
  5898                           	psect	text29
  5899  002802                     __ptext29:
  5900                           	opt stack 0
  5901  002802                     ___ftpack:
  5902                           	opt stack 28
  5903                           
  5904                           ;incstack = 0
  5905  002802  5004               	movf	___ftpack@exp,w,c
  5906  002804  B4D8               	btfsc	status,2,c
  5907  002806  D005               	goto	l1896
  5908  002808  5001               	movf	___ftpack@arg,w,c
  5909  00280A  1002               	iorwf	___ftpack@arg+1,w,c
  5910  00280C  1003               	iorwf	___ftpack@arg+2,w,c
  5911  00280E  A4D8               	btfss	status,2,c
  5912  002810  D00E               	goto	l1902
  5913  002812                     l1896:
  5914  002812  0E00               	movlw	0
  5915  002814  6E01               	movwf	?___ftpack,c
  5916  002816  0E00               	movlw	0
  5917  002818  6E02               	movwf	?___ftpack+1,c
  5918  00281A  0E00               	movlw	0
  5919  00281C  6E03               	movwf	?___ftpack+2,c
  5920  00281E  D053               	goto	l620
  5921  002820  D006               	goto	l1902
  5922  002822                     l1900:
  5923  002822  2A04               	incf	___ftpack@exp,f,c
  5924  002824  90D8               	bcf	status,0,c
  5925  002826  3203               	rrcf	___ftpack@arg+2,f,c
  5926  002828  3202               	rrcf	___ftpack@arg+1,f,c
  5927  00282A  3201               	rrcf	___ftpack@arg,f,c
  5928  00282C  D000               	goto	l1902
  5929  00282E                     l1902:
  5930  00282E  0E00               	movlw	0
  5931  002830  1401               	andwf	___ftpack@arg,w,c
  5932  002832  6E06               	movwf	??___ftpack& (0+255),c
  5933  002834  0E00               	movlw	0
  5934  002836  1402               	andwf	___ftpack@arg+1,w,c
  5935  002838  6E07               	movwf	(??___ftpack+1)& (0+255),c
  5936  00283A  0EFE               	movlw	254
  5937  00283C  1403               	andwf	___ftpack@arg+2,w,c
  5938  00283E  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5939  002840  5006               	movf	??___ftpack,w,c
  5940  002842  1007               	iorwf	??___ftpack+1,w,c
  5941  002844  1008               	iorwf	??___ftpack+2,w,c
  5942  002846  B4D8               	btfsc	status,2,c
  5943  002848  D00E               	goto	l1908
  5944  00284A  D7EB               	goto	l1900
  5945  00284C  D00C               	goto	l1908
  5946  00284E                     l1904:
  5947  00284E  2A04               	incf	___ftpack@exp,f,c
  5948  002850  0E01               	movlw	1
  5949  002852  2601               	addwf	___ftpack@arg,f,c
  5950  002854  0E00               	movlw	0
  5951  002856  2202               	addwfc	___ftpack@arg+1,f,c
  5952  002858  0E00               	movlw	0
  5953  00285A  2203               	addwfc	___ftpack@arg+2,f,c
  5954  00285C  90D8               	bcf	status,0,c
  5955  00285E  3203               	rrcf	___ftpack@arg+2,f,c
  5956  002860  3202               	rrcf	___ftpack@arg+1,f,c
  5957  002862  3201               	rrcf	___ftpack@arg,f,c
  5958  002864  D000               	goto	l1908
  5959  002866                     l1908:
  5960  002866  0E00               	movlw	0
  5961  002868  1401               	andwf	___ftpack@arg,w,c
  5962  00286A  6E06               	movwf	??___ftpack& (0+255),c
  5963  00286C  0E00               	movlw	0
  5964  00286E  1402               	andwf	___ftpack@arg+1,w,c
  5965  002870  6E07               	movwf	(??___ftpack+1)& (0+255),c
  5966  002872  0EFF               	movlw	255
  5967  002874  1403               	andwf	___ftpack@arg+2,w,c
  5968  002876  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5969  002878  5006               	movf	??___ftpack,w,c
  5970  00287A  1007               	iorwf	??___ftpack+1,w,c
  5971  00287C  1008               	iorwf	??___ftpack+2,w,c
  5972  00287E  B4D8               	btfsc	status,2,c
  5973  002880  D008               	goto	l1912
  5974  002882  D7E5               	goto	l1904
  5975  002884  D006               	goto	l1912
  5976  002886                     l1910:
  5977  002886  0604               	decf	___ftpack@exp,f,c
  5978  002888  90D8               	bcf	status,0,c
  5979  00288A  3601               	rlcf	___ftpack@arg,f,c
  5980  00288C  3602               	rlcf	___ftpack@arg+1,f,c
  5981  00288E  3603               	rlcf	___ftpack@arg+2,f,c
  5982  002890  D000               	goto	l1912
  5983  002892                     l1912:
  5984  002892  BE02               	btfsc	___ftpack@arg+1,7,c
  5985  002894  D004               	goto	l631
  5986  002896  0E02               	movlw	2
  5987  002898  6004               	cpfslt	___ftpack@exp,c
  5988  00289A  D7F5               	goto	l1910
  5989  00289C  D000               	goto	l631
  5990  00289E                     l631:
  5991  00289E  B004               	btfsc	___ftpack@exp,0,c
  5992  0028A0  D002               	goto	l1918
  5993  0028A2  9E02               	bcf	___ftpack@arg+1,7,c
  5994  0028A4  D000               	goto	l1918
  5995  0028A6                     l1918:
  5996  0028A6  90D8               	bcf	status,0,c
  5997  0028A8  3204               	rrcf	___ftpack@exp,f,c
  5998  0028AA  5004               	movf	___ftpack@exp,w,c
  5999  0028AC  1203               	iorwf	___ftpack@arg+2,f,c
  6000  0028AE  5005               	movf	___ftpack@sign,w,c
  6001  0028B0  B4D8               	btfsc	status,2,c
  6002  0028B2  D002               	goto	l1924
  6003  0028B4  8E03               	bsf	___ftpack@arg+2,7,c
  6004  0028B6  D000               	goto	l1924
  6005  0028B8                     l1924:
  6006  0028B8  C001  F001         	movff	___ftpack@arg,?___ftpack
  6007  0028BC  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  6008  0028C0  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  6009  0028C4  D000               	goto	l620
  6010  0028C6                     l620:
  6011  0028C6  0012               	return		;funcret
  6012  0028C8                     __end_of___ftpack:
  6013                           	opt stack 0
  6014                           tblptru	equ	0xFF8
  6015                           tblptrh	equ	0xFF7
  6016                           tblptrl	equ	0xFF6
  6017                           tablat	equ	0xFF5
  6018                           prodh	equ	0xFF4
  6019                           prodl	equ	0xFF3
  6020                           wreg	equ	0xFE8
  6021                           postinc2	equ	0xFDE
  6022                           postdec2	equ	0xFDD
  6023                           fsr2h	equ	0xFDA
  6024                           fsr2l	equ	0xFD9
  6025                           status	equ	0xFD8
  6026                           
  6027 ;; *************** function _Select_ADC_Channel *****************
  6028 ;; Defined at:
  6029 ;;		line 105 in file "lab6p1.c"
  6030 ;; Parameters:    Size  Location     Type
  6031 ;;  channel         1    wreg     unsigned char 
  6032 ;; Auto vars:     Size  Location     Type
  6033 ;;  channel         1    0[COMRAM] unsigned char 
  6034 ;; Return value:  Size  Location     Type
  6035 ;;		None               void
  6036 ;; Registers used:
  6037 ;;		wreg, status,2, status,0, prodl, prodh
  6038 ;; Tracked objects:
  6039 ;;		On entry : 0/0
  6040 ;;		On exit  : 0/0
  6041 ;;		Unchanged: 0/0
  6042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6044 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6046 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6047 ;;Total ram usage:        1 bytes
  6048 ;; Hardware stack levels used:    1
  6049 ;; This function calls:
  6050 ;;		Nothing
  6051 ;; This function is called by:
  6052 ;;		_main
  6053 ;; This function uses a non-reentrant model
  6054 ;;
  6055                           
  6056                           	psect	text30
  6057  002E04                     __ptext30:
  6058                           	opt stack 0
  6059  002E04                     _Select_ADC_Channel:
  6060                           	opt stack 30
  6061                           
  6062                           ;incstack = 0
  6063                           ;Select_ADC_Channel@channel stored from wreg
  6064  002E04  6E01               	movwf	Select_ADC_Channel@channel,c
  6065                           
  6066                           ;lab6p1.c: 106: ADCON0 = channel * 4 + 1;
  6067  002E06  5001               	movf	Select_ADC_Channel@channel,w,c
  6068  002E08  0D04               	mullw	4
  6069  002E0A  28F3               	incf	prodl,w,c
  6070  002E0C  6EC2               	movwf	4034,c	;volatile
  6071  002E0E  0012               	return		;funcret
  6072  002E10                     __end_of_Select_ADC_Channel:
  6073                           	opt stack 0
  6074                           tblptru	equ	0xFF8
  6075                           tblptrh	equ	0xFF7
  6076                           tblptrl	equ	0xFF6
  6077                           tablat	equ	0xFF5
  6078                           prodh	equ	0xFF4
  6079                           prodl	equ	0xFF3
  6080                           wreg	equ	0xFE8
  6081                           postinc2	equ	0xFDE
  6082                           postdec2	equ	0xFDD
  6083                           fsr2h	equ	0xFDA
  6084                           fsr2l	equ	0xFD9
  6085                           status	equ	0xFD8
  6086                           
  6087 ;; *************** function _Init_UART *****************
  6088 ;; Defined at:
  6089 ;;		line 76 in file "lab6p1.c"
  6090 ;; Parameters:    Size  Location     Type
  6091 ;;		None
  6092 ;; Auto vars:     Size  Location     Type
  6093 ;;		None
  6094 ;; Return value:  Size  Location     Type
  6095 ;;		None               void
  6096 ;; Registers used:
  6097 ;;		wreg, status,2, cstack
  6098 ;; Tracked objects:
  6099 ;;		On entry : 0/0
  6100 ;;		On exit  : 0/0
  6101 ;;		Unchanged: 0/0
  6102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6107 ;;Total ram usage:        0 bytes
  6108 ;; Hardware stack levels used:    1
  6109 ;; Hardware stack levels required when called:    1
  6110 ;; This function calls:
  6111 ;;		_OpenUSART
  6112 ;; This function is called by:
  6113 ;;		_main
  6114 ;; This function uses a non-reentrant model
  6115 ;;
  6116                           
  6117                           	psect	text31
  6118  002DAE                     __ptext31:
  6119                           	opt stack 0
  6120  002DAE                     _Init_UART:
  6121                           	opt stack 29
  6122                           
  6123                           ;lab6p1.c: 77: OpenUSART(0b01111111 & 0b10111111 & 0b11111110 &
  6124                           ;lab6p1.c: 78: 0b11111101 & 0b11111111 & 0b11111111, 25);
  6125                           
  6126                           ;incstack = 0
  6127  002DAE  0E00               	movlw	0
  6128  002DB0  6E02               	movwf	OpenUSART@spbrg+1,c
  6129  002DB2  0E19               	movlw	25
  6130  002DB4  6E01               	movwf	OpenUSART@spbrg,c
  6131  002DB6  0E3C               	movlw	60
  6132  002DB8  ECB9  F015         	call	_OpenUSART
  6133                           
  6134                           ;lab6p1.c: 79: OSCCON = 0x60;
  6135  002DBC  0E60               	movlw	96
  6136  002DBE  6ED3               	movwf	4051,c	;volatile
  6137  002DC0  0012               	return		;funcret
  6138  002DC2                     __end_of_Init_UART:
  6139                           	opt stack 0
  6140                           tblptru	equ	0xFF8
  6141                           tblptrh	equ	0xFF7
  6142                           tblptrl	equ	0xFF6
  6143                           tablat	equ	0xFF5
  6144                           prodh	equ	0xFF4
  6145                           prodl	equ	0xFF3
  6146                           wreg	equ	0xFE8
  6147                           postinc2	equ	0xFDE
  6148                           postdec2	equ	0xFDD
  6149                           fsr2h	equ	0xFDA
  6150                           fsr2l	equ	0xFD9
  6151                           status	equ	0xFD8
  6152                           
  6153 ;; *************** function _OpenUSART *****************
  6154 ;; Defined at:
  6155 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\uopen.c"
  6156 ;; Parameters:    Size  Location     Type
  6157 ;;  config          1    wreg     unsigned char 
  6158 ;;  spbrg           2    0[COMRAM] unsigned int 
  6159 ;; Auto vars:     Size  Location     Type
  6160 ;;  config          1    2[COMRAM] unsigned char 
  6161 ;; Return value:  Size  Location     Type
  6162 ;;		None               void
  6163 ;; Registers used:
  6164 ;;		wreg, status,2
  6165 ;; Tracked objects:
  6166 ;;		On entry : 0/0
  6167 ;;		On exit  : 0/0
  6168 ;;		Unchanged: 0/0
  6169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6170 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6171 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6173 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6174 ;;Total ram usage:        3 bytes
  6175 ;; Hardware stack levels used:    1
  6176 ;; This function calls:
  6177 ;;		Nothing
  6178 ;; This function is called by:
  6179 ;;		_Init_UART
  6180 ;; This function uses a non-reentrant model
  6181 ;;
  6182                           
  6183                           	psect	text32
  6184  002B72                     __ptext32:
  6185                           	opt stack 0
  6186  002B72                     _OpenUSART:
  6187                           	opt stack 29
  6188                           
  6189                           ;incstack = 0
  6190                           ;OpenUSART@config stored from wreg
  6191  002B72  6E03               	movwf	OpenUSART@config,c
  6192  002B74  0E00               	movlw	0
  6193  002B76  6EAC               	movwf	4012,c	;volatile
  6194  002B78  0E00               	movlw	0
  6195  002B7A  6EAB               	movwf	4011,c	;volatile
  6196  002B7C  A003               	btfss	OpenUSART@config,0,c
  6197  002B7E  D002               	goto	l2142
  6198  002B80  88AC               	bsf	4012,4,c	;volatile
  6199  002B82  D000               	goto	l2142
  6200  002B84                     l2142:
  6201  002B84  A203               	btfss	OpenUSART@config,1,c
  6202  002B86  D003               	goto	l2146
  6203  002B88  8CAC               	bsf	4012,6,c	;volatile
  6204  002B8A  8CAB               	bsf	4011,6,c	;volatile
  6205  002B8C  D000               	goto	l2146
  6206  002B8E                     l2146:
  6207  002B8E  A403               	btfss	OpenUSART@config,2,c
  6208  002B90  D002               	goto	l2150
  6209  002B92  8EAC               	bsf	4012,7,c	;volatile
  6210  002B94  D000               	goto	l2150
  6211  002B96                     l2150:
  6212  002B96  A603               	btfss	OpenUSART@config,3,c
  6213  002B98  D002               	goto	l283
  6214  002B9A  88AB               	bsf	4011,4,c	;volatile
  6215  002B9C  D002               	goto	l2154
  6216  002B9E                     l283:
  6217  002B9E  8AAB               	bsf	4011,5,c	;volatile
  6218  002BA0  D000               	goto	l2154
  6219  002BA2                     l2154:
  6220  002BA2  B803               	btfsc	OpenUSART@config,4,c
  6221  002BA4  84AC               	bsf	4012,2,c	;volatile
  6222  002BA6  989E               	bcf	3998,4,c	;volatile
  6223  002BA8  AA03               	btfss	OpenUSART@config,5,c
  6224  002BAA  D002               	goto	l2162
  6225  002BAC  86AB               	bsf	4011,3,c	;volatile
  6226  002BAE  D000               	goto	l2162
  6227  002BB0                     l2162:
  6228  002BB0  AC03               	btfss	OpenUSART@config,6,c
  6229  002BB2  D002               	goto	l287
  6230  002BB4  8A9D               	bsf	3997,5,c	;volatile
  6231  002BB6  D001               	goto	l288
  6232  002BB8                     l287:
  6233  002BB8  9A9D               	bcf	3997,5,c	;volatile
  6234  002BBA                     l288:
  6235  002BBA  9A9E               	bcf	3998,5,c	;volatile
  6236  002BBC  AE03               	btfss	OpenUSART@config,7,c
  6237  002BBE  D002               	goto	l289
  6238  002BC0  889D               	bsf	3997,4,c	;volatile
  6239  002BC2  D001               	goto	l290
  6240  002BC4                     l289:
  6241  002BC4  989D               	bcf	3997,4,c	;volatile
  6242  002BC6                     l290:
  6243  002BC6  C001  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  6244  002BCA  5002               	movf	OpenUSART@spbrg+1,w,c
  6245  002BCC  6EB0               	movwf	4016,c	;volatile
  6246  002BCE  8AAC               	bsf	4012,5,c	;volatile
  6247  002BD0  8EAB               	bsf	4011,7,c	;volatile
  6248  002BD2  9C94               	bcf	3988,6,c	;volatile
  6249  002BD4  8E94               	bsf	3988,7,c	;volatile
  6250  002BD6  B8AC               	btfsc	4012,4,c	;volatile
  6251  002BD8  BEAC               	btfsc	4012,7,c	;volatile
  6252  002BDA  D002               	goto	l292
  6253  002BDC  8C94               	bsf	3988,6,c	;volatile
  6254  002BDE  D000               	goto	l292
  6255  002BE0                     l292:
  6256  002BE0  0012               	return		;funcret
  6257  002BE2                     __end_of_OpenUSART:
  6258                           	opt stack 0
  6259                           tblptru	equ	0xFF8
  6260                           tblptrh	equ	0xFF7
  6261                           tblptrl	equ	0xFF6
  6262                           tablat	equ	0xFF5
  6263                           prodh	equ	0xFF4
  6264                           prodl	equ	0xFF3
  6265                           wreg	equ	0xFE8
  6266                           postinc2	equ	0xFDE
  6267                           postdec2	equ	0xFDD
  6268                           fsr2h	equ	0xFDA
  6269                           fsr2l	equ	0xFD9
  6270                           status	equ	0xFD8
  6271                           
  6272 ;; *************** function _Init_TRIS *****************
  6273 ;; Defined at:
  6274 ;;		line 94 in file "lab6p1.c"
  6275 ;; Parameters:    Size  Location     Type
  6276 ;;		None
  6277 ;; Auto vars:     Size  Location     Type
  6278 ;;		None
  6279 ;; Return value:  Size  Location     Type
  6280 ;;		None               void
  6281 ;; Registers used:
  6282 ;;		wreg, status,2
  6283 ;; Tracked objects:
  6284 ;;		On entry : 0/0
  6285 ;;		On exit  : 0/0
  6286 ;;		Unchanged: 0/0
  6287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6292 ;;Total ram usage:        0 bytes
  6293 ;; Hardware stack levels used:    1
  6294 ;; This function calls:
  6295 ;;		Nothing
  6296 ;; This function is called by:
  6297 ;;		_main
  6298 ;; This function uses a non-reentrant model
  6299 ;;
  6300                           
  6301                           	psect	text33
  6302  002DC2                     __ptext33:
  6303                           	opt stack 0
  6304  002DC2                     _Init_TRIS:
  6305                           	opt stack 30
  6306                           
  6307                           ;lab6p1.c: 95: TRISA = 0xFF;
  6308                           
  6309                           ;incstack = 0
  6310  002DC2  6892               	setf	3986,c	;volatile
  6311                           
  6312                           ;lab6p1.c: 96: TRISB = 0x00;
  6313  002DC4  0E00               	movlw	0
  6314  002DC6  6E93               	movwf	3987,c	;volatile
  6315                           
  6316                           ;lab6p1.c: 97: TRISC = 0x00;
  6317  002DC8  0E00               	movlw	0
  6318  002DCA  6E94               	movwf	3988,c	;volatile
  6319                           
  6320                           ;lab6p1.c: 98: TRISD = 0x00;
  6321  002DCC  0E00               	movlw	0
  6322  002DCE  6E95               	movwf	3989,c	;volatile
  6323                           
  6324                           ;lab6p1.c: 99: TRISE = 0x00;
  6325  002DD0  0E00               	movlw	0
  6326  002DD2  6E96               	movwf	3990,c	;volatile
  6327  002DD4  0012               	return		;funcret
  6328  002DD6                     __end_of_Init_TRIS:
  6329                           	opt stack 0
  6330                           tblptru	equ	0xFF8
  6331                           tblptrh	equ	0xFF7
  6332                           tblptrl	equ	0xFF6
  6333                           tablat	equ	0xFF5
  6334                           prodh	equ	0xFF4
  6335                           prodl	equ	0xFF3
  6336                           wreg	equ	0xFE8
  6337                           postinc2	equ	0xFDE
  6338                           postdec2	equ	0xFDD
  6339                           fsr2h	equ	0xFDA
  6340                           fsr2l	equ	0xFD9
  6341                           status	equ	0xFD8
  6342                           
  6343 ;; *************** function _Init_ADC *****************
  6344 ;; Defined at:
  6345 ;;		line 85 in file "lab6p1.c"
  6346 ;; Parameters:    Size  Location     Type
  6347 ;;		None
  6348 ;; Auto vars:     Size  Location     Type
  6349 ;;		None
  6350 ;; Return value:  Size  Location     Type
  6351 ;;		None               void
  6352 ;; Registers used:
  6353 ;;		wreg, status,2
  6354 ;; Tracked objects:
  6355 ;;		On entry : 0/0
  6356 ;;		On exit  : 0/0
  6357 ;;		Unchanged: 0/0
  6358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6363 ;;Total ram usage:        0 bytes
  6364 ;; Hardware stack levels used:    1
  6365 ;; This function calls:
  6366 ;;		Nothing
  6367 ;; This function is called by:
  6368 ;;		_main
  6369 ;; This function uses a non-reentrant model
  6370 ;;
  6371                           
  6372                           	psect	text34
  6373  002DF6                     __ptext34:
  6374                           	opt stack 0
  6375  002DF6                     _Init_ADC:
  6376                           	opt stack 30
  6377                           
  6378                           ;lab6p1.c: 86: ADCON0 = 0x01;
  6379                           
  6380                           ;incstack = 0
  6381  002DF6  0E01               	movlw	1
  6382  002DF8  6EC2               	movwf	4034,c	;volatile
  6383                           
  6384                           ;lab6p1.c: 87: ADCON1 = 0x1A;
  6385  002DFA  0E1A               	movlw	26
  6386  002DFC  6EC1               	movwf	4033,c	;volatile
  6387                           
  6388                           ;lab6p1.c: 88: ADCON2 = 0xA9;
  6389  002DFE  0EA9               	movlw	169
  6390  002E00  6EC0               	movwf	4032,c	;volatile
  6391  002E02  0012               	return		;funcret
  6392  002E04                     __end_of_Init_ADC:
  6393                           	opt stack 0
  6394                           tblptru	equ	0xFF8
  6395                           tblptrh	equ	0xFF7
  6396                           tblptrl	equ	0xFF6
  6397                           tablat	equ	0xFF5
  6398                           prodh	equ	0xFF4
  6399                           prodl	equ	0xFF3
  6400                           wreg	equ	0xFE8
  6401                           postinc2	equ	0xFDE
  6402                           postdec2	equ	0xFDD
  6403                           fsr2h	equ	0xFDA
  6404                           fsr2l	equ	0xFD9
  6405                           status	equ	0xFD8
  6406                           
  6407 ;; *************** function _Delay_One_Sec *****************
  6408 ;; Defined at:
  6409 ;;		line 201 in file "lab6p1.c"
  6410 ;; Parameters:    Size  Location     Type
  6411 ;;		None
  6412 ;; Auto vars:     Size  Location     Type
  6413 ;;  i               2    0[COMRAM] int 
  6414 ;; Return value:  Size  Location     Type
  6415 ;;		None               void
  6416 ;; Registers used:
  6417 ;;		wreg, status,2, status,0
  6418 ;; Tracked objects:
  6419 ;;		On entry : 0/0
  6420 ;;		On exit  : 0/0
  6421 ;;		Unchanged: 0/0
  6422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6424 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6426 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6427 ;;Total ram usage:        2 bytes
  6428 ;; Hardware stack levels used:    1
  6429 ;; This function calls:
  6430 ;;		Nothing
  6431 ;; This function is called by:
  6432 ;;		_main
  6433 ;; This function uses a non-reentrant model
  6434 ;;
  6435                           
  6436                           	psect	text35
  6437  002D8A                     __ptext35:
  6438                           	opt stack 0
  6439  002D8A                     _Delay_One_Sec:
  6440                           	opt stack 30
  6441                           
  6442                           ;lab6p1.c: 202: for (int i = 0; i < 17000; i++);
  6443                           
  6444                           ;incstack = 0
  6445  002D8A  0E00               	movlw	0
  6446  002D8C  6E02               	movwf	Delay_One_Sec@i+1,c
  6447  002D8E  0E00               	movlw	0
  6448  002D90  6E01               	movwf	Delay_One_Sec@i,c
  6449  002D92                     l2604:
  6450  002D92  BE02               	btfsc	Delay_One_Sec@i+1,7,c
  6451  002D94  D008               	goto	l2608
  6452  002D96  0E68               	movlw	104
  6453  002D98  5C01               	subwf	Delay_One_Sec@i,w,c
  6454  002D9A  0E42               	movlw	66
  6455  002D9C  5802               	subwfb	Delay_One_Sec@i+1,w,c
  6456  002D9E  B0D8               	btfsc	status,0,c
  6457  002DA0  D005               	goto	l166
  6458  002DA2  D001               	goto	l2608
  6459  002DA4  D003               	goto	l166
  6460  002DA6                     l2608:
  6461  002DA6  4A01               	infsnz	Delay_One_Sec@i,f,c
  6462  002DA8  2A02               	incf	Delay_One_Sec@i+1,f,c
  6463  002DAA  D7F3               	goto	l2604
  6464  002DAC                     l166:
  6465  002DAC  0012               	return		;funcret
  6466  002DAE                     __end_of_Delay_One_Sec:
  6467                           	opt stack 0
  6468                           tblptru	equ	0xFF8
  6469                           tblptrh	equ	0xFF7
  6470                           tblptrl	equ	0xFF6
  6471                           tablat	equ	0xFF5
  6472                           prodh	equ	0xFF4
  6473                           prodl	equ	0xFF3
  6474                           wreg	equ	0xFE8
  6475                           postinc2	equ	0xFDE
  6476                           postdec2	equ	0xFDD
  6477                           fsr2h	equ	0xFDA
  6478                           fsr2l	equ	0xFD9
  6479                           status	equ	0xFD8
  6480                           
  6481 ;; *************** function _Deactivate_Buzzer *****************
  6482 ;; Defined at:
  6483 ;;		line 172 in file "lab6p1.c"
  6484 ;; Parameters:    Size  Location     Type
  6485 ;;		None
  6486 ;; Auto vars:     Size  Location     Type
  6487 ;;		None
  6488 ;; Return value:  Size  Location     Type
  6489 ;;		None               void
  6490 ;; Registers used:
  6491 ;;		wreg, status,2
  6492 ;; Tracked objects:
  6493 ;;		On entry : 0/0
  6494 ;;		On exit  : 0/0
  6495 ;;		Unchanged: 0/0
  6496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6501 ;;Total ram usage:        0 bytes
  6502 ;; Hardware stack levels used:    1
  6503 ;; This function calls:
  6504 ;;		Nothing
  6505 ;; This function is called by:
  6506 ;;		_main
  6507 ;; This function uses a non-reentrant model
  6508 ;;
  6509                           
  6510                           	psect	text36
  6511  002E42                     __ptext36:
  6512                           	opt stack 0
  6513  002E42                     _Deactivate_Buzzer:
  6514                           	opt stack 30
  6515                           
  6516                           ;lab6p1.c: 173: CCP2CON = 0x0;
  6517                           
  6518                           ;incstack = 0
  6519  002E42  0E00               	movlw	0
  6520  002E44  6EBA               	movwf	4026,c	;volatile
  6521                           
  6522                           ;lab6p1.c: 174: PORTCbits.RC1 = 0;
  6523  002E46  9282               	bcf	3970,1,c	;volatile
  6524  002E48  0012               	return		;funcret
  6525  002E4A                     __end_of_Deactivate_Buzzer:
  6526                           	opt stack 0
  6527                           tblptru	equ	0xFF8
  6528                           tblptrh	equ	0xFF7
  6529                           tblptrl	equ	0xFF6
  6530                           tablat	equ	0xFF5
  6531                           prodh	equ	0xFF4
  6532                           prodl	equ	0xFF3
  6533                           wreg	equ	0xFE8
  6534                           postinc2	equ	0xFDE
  6535                           postdec2	equ	0xFDD
  6536                           fsr2h	equ	0xFDA
  6537                           fsr2l	equ	0xFD9
  6538                           status	equ	0xFD8
  6539                           
  6540 ;; *************** function _Activate_Buzzer *****************
  6541 ;; Defined at:
  6542 ;;		line 162 in file "lab6p1.c"
  6543 ;; Parameters:    Size  Location     Type
  6544 ;;		None
  6545 ;; Auto vars:     Size  Location     Type
  6546 ;;		None
  6547 ;; Return value:  Size  Location     Type
  6548 ;;		None               void
  6549 ;; Registers used:
  6550 ;;		wreg, status,2
  6551 ;; Tracked objects:
  6552 ;;		On entry : 0/0
  6553 ;;		On exit  : 0/0
  6554 ;;		Unchanged: 0/0
  6555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6560 ;;Total ram usage:        0 bytes
  6561 ;; Hardware stack levels used:    1
  6562 ;; This function calls:
  6563 ;;		Nothing
  6564 ;; This function is called by:
  6565 ;;		_main
  6566 ;; This function uses a non-reentrant model
  6567 ;;
  6568                           
  6569                           	psect	text37
  6570  002DD6                     __ptext37:
  6571                           	opt stack 0
  6572  002DD6                     _Activate_Buzzer:
  6573                           	opt stack 30
  6574                           
  6575                           ;lab6p1.c: 163: PR2 = 0b11111001;
  6576                           
  6577                           ;incstack = 0
  6578  002DD6  0EF9               	movlw	249
  6579  002DD8  6ECB               	movwf	4043,c	;volatile
  6580                           
  6581                           ;lab6p1.c: 164: T2CON = 0b00000101;
  6582  002DDA  0E05               	movlw	5
  6583  002DDC  6ECA               	movwf	4042,c	;volatile
  6584                           
  6585                           ;lab6p1.c: 165: CCPR2L = 0b01001010;
  6586  002DDE  0E4A               	movlw	74
  6587  002DE0  6EBB               	movwf	4027,c	;volatile
  6588                           
  6589                           ;lab6p1.c: 166: CCP2CON = 0b00111100;
  6590  002DE2  0E3C               	movlw	60
  6591  002DE4  6EBA               	movwf	4026,c	;volatile
  6592  002DE6  0012               	return		;funcret
  6593  002DE8                     __end_of_Activate_Buzzer:
  6594                           	opt stack 0
  6595                           tblptru	equ	0xFF8
  6596                           tblptrh	equ	0xFF7
  6597                           tblptrl	equ	0xFF6
  6598                           tablat	equ	0xFF5
  6599                           prodh	equ	0xFF4
  6600                           prodl	equ	0xFF3
  6601                           wreg	equ	0xFE8
  6602                           postinc2	equ	0xFDE
  6603                           postdec2	equ	0xFDD
  6604                           fsr2h	equ	0xFDA
  6605                           fsr2l	equ	0xFD9
  6606                           status	equ	0xFD8
  6607                           tblptru	equ	0xFF8
  6608                           tblptrh	equ	0xFF7
  6609                           tblptrl	equ	0xFF6
  6610                           tablat	equ	0xFF5
  6611                           prodh	equ	0xFF4
  6612                           prodl	equ	0xFF3
  6613                           wreg	equ	0xFE8
  6614                           postinc2	equ	0xFDE
  6615                           postdec2	equ	0xFDD
  6616                           fsr2h	equ	0xFDA
  6617                           fsr2l	equ	0xFD9
  6618                           status	equ	0xFD8
  6619                           
  6620                           	psect	rparam
  6621  0000                     tblptru	equ	0xFF8
  6622                           tblptrh	equ	0xFF7
  6623                           tblptrl	equ	0xFF6
  6624                           tablat	equ	0xFF5
  6625                           prodh	equ	0xFF4
  6626                           prodl	equ	0xFF3
  6627                           wreg	equ	0xFE8
  6628                           postinc2	equ	0xFDE
  6629                           postdec2	equ	0xFDD
  6630                           fsr2h	equ	0xFDA
  6631                           fsr2l	equ	0xFD9
  6632                           status	equ	0xFD8


Data Sizes:
    Strings     20
    Constant    128
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    113     113
    BANK0           128     42      42
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_1(CODE[20]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _set_D2_color->___ftge
    _set_D1_color->___fttol
    ___ftdiv->___ftmul
    _printf->_fround
    _scale->___wmul
    _fround->___wmul
    ___wmul->___awdiv
    ___ftmul->___ftadd
    ___awmod->___fttol
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___fttol->___ftdiv
    ___ftsub->___ftadd
    ___ftadd->___ftneg
    ___ftneg->___awtoft
    ___awtoft->___ftpack
    _Init_UART->_OpenUSART

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                19    19      0   61313
                                             23 BANK0     19    19      0
                    _Activate_Buzzer
                  _Deactivate_Buzzer
                      _Delay_One_Sec
                           _Init_ADC
                          _Init_TRIS
                          _Init_UART
                 _Select_ADC_Channel
                            ___awmod
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                       _get_full_ADC
                             _printf
                       _set_D1_color
                       _set_D2_color
 ---------------------------------------------------------------------------------
 (1) _set_D2_color                                         3     0      3    1721
                                              9 COMRAM     3     0      3
                        _SET_D2_BLUE
                       _SET_D2_GREEN
                         _SET_D2_OFF
                         _SET_D2_RED
                       _SET_D2_WHITE
                             ___ftge
 ---------------------------------------------------------------------------------
 (2) _SET_D2_WHITE                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SET_D2_RED                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SET_D2_OFF                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SET_D2_GREEN                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SET_D2_BLUE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_D1_color                                         5     2      3    3454
                                             72 COMRAM     5     2      3
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    2530
                                             42 COMRAM    15     9      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _printf                                              42    37      5   39657
                                            102 COMRAM    11     6      5
                                              0 BANK0     23    23      0
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               10     7      3    9120
                                             92 COMRAM     7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                            ___fttol (ARG)
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13    10      3    8922
                                             92 COMRAM    10     7      3
                            ___awdiv
                            ___awmod
                            ___ftadd (ARG)
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1855
                                             86 COMRAM     6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    4060
                                             27 COMRAM    15     9      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1356
                                             72 COMRAM     6     2      4
                            ___ftmul (ARG)
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1360
                                             78 COMRAM     8     4      4
                            ___awmod (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         15     9      6     409
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          12     6      6     552
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    1868
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     477
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     374
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     782
                                             57 COMRAM    15    11      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3449
                                             27 COMRAM     6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    3196
                                             15 COMRAM    12     6      6
                           ___awtoft (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     257
                                             12 COMRAM     3     0      3
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6    1514
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (1) _get_full_ADC                                         6     4      2      23
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    1996
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1746
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _Select_ADC_Channel                                   1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Init_UART                                            0     0      0     273
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     273
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _Init_TRIS                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Delay_One_Sec                                        2     2      0      46
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Deactivate_Buzzer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Activate_Buzzer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Activate_Buzzer
   _Deactivate_Buzzer
   _Delay_One_Sec
   _Init_ADC
   _Init_TRIS
   _Init_UART
     _OpenUSART
   _Select_ADC_Channel
   ___awmod
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
     ___fttol (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
   ___awtoft
     ___ftpack
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
     ___ftneg (ARG)
       ___awtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
     ___ftneg (ARG)
       ___awtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
   ___ftge
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
     ___ftneg (ARG)
       ___awtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
   ___ftneg
     ___awtoft (ARG)
       ___ftpack
   ___fttol
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
     ___ftneg (ARG)
       ___awtoft (ARG)
         ___ftpack
   _get_full_ADC
   _printf
     ___awdiv
       ___awmod (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___fttol (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
     ___ftge
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
     ___ftneg
       ___awtoft (ARG)
         ___ftpack
     ___ftsub
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
     ___lldiv
     ___llmod
     ___lltoft
       ___ftpack
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___fttol (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
       ___awmod (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___fttol (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___fttol (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
       ___awmod
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___fttol (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___fttol (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftadd (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftneg (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
         ___awmod (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___fttol (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
     _putch
     _scale
       ___awdiv
         ___awmod (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___fttol (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
       ___awmod
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___fttol (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___fttol (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___fttol (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftadd (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftneg (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
         ___awmod (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___fttol (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
   _set_D1_color
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
   _set_D2_color
     _SET_D2_BLUE
     _SET_D2_GREEN
     _SET_D2_OFF
     _SET_D2_RED
     _SET_D2_WHITE
     ___ftge

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F     71      71       1       89.0%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     2A      2A       5       32.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
ABS                  0      0       0      34        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BIGRAM             F7F      0       0      37        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Oct 07 18:05:16 2025

                         l67 2DEC                           l85 2D44                           l88 2D64  
                         l96 2C96                 ___awdiv@sign 0054          ___wmul@multiplicand 0059  
               ___ftadd@exp1 001B                 ___ftadd@exp2 001A                 ___ftadd@sign 0019  
                        l203 1B44                          l107 2540                          l170 1D06  
                        l501 2B00                          l166 2DAC                          l248 159C  
                        l513 2D16                          l290 2BC6                          l283 2B9E  
                        l259 1764                          l292 2BE0                          l620 28C6  
                        l700 2336                          l196 2062                          l702 229E  
                        l287 2BB8                          l631 289E                          l703 22C6  
                        l295 2D3E                          l288 2BBA                          l289 2BC4  
                        l660 20A8                          l724 2638                          l661 2226  
                        l741 2CDA                          l709 2326                          l718 29F2  
                        l734 2D7C                          l814 2C40                          l664 20D2  
                        l488 295C                          l745 271E                          l675 2194  
                        l579 2440                          l684 21B0                          l588 2430  
                        l692 2800                          l695 27CC                          l784 2A6E  
                        l794 2B60                          _PR2 000FCB            _Deactivate_Buzzer 2E42  
               ___awmod@sign 004E                          wreg 000FE8           ?_Deactivate_Buzzer 0001  
               __CFG_LVP$OFF 000000                 ___ftdiv@cntr 0034                 ___ftdiv@sign 0039  
               __CFG_WDT$OFF 000000                         l2000 2200                         l2010 2560  
                       l2012 257A                         l2030 25BC                         l2120 2ADA  
                       l2112 2AB2                         l2104 2A96                         l2040 25EA  
                       l2016 2588                         l2114 2ABC                         l2034 25CE  
                       l2060 28DE                         l2116 2AC4                         l2124 2AE6  
                       l2108 2AA4                         l2044 25FC                         l2150 2B96  
                       l2142 2B84                         l2310 2320                         l2302 22F8  
                       l2038 25E4                         l2214 2022                         l2206 1F5E  
                       l2304 22FE                         l2072 2906                         l2128 2AF6  
                       l2048 2612                         l2162 2BB0                         l2154 2BA2  
                       l2146 2B8E                         l2074 2910                         l2066 28F0  
                       l2234 193A                         l2500 2A16                         l2324 2358  
                       l2308 2312                         l2092 2952                         l2084 2936  
                       l2076 2918                         l2252 1B20                         l2228 1892  
                       l2404 27A6                         l2430 2990                         l2422 2CB0  
                       l2502 2A24                         l2350 23DE                         l2318 2348  
                       l2262 2246                         l2246 1A6E                         l2238 194A  
                       l2414 27DA                         l2440 29EE                         l2512 2A5E  
                       l2504 2A2C                         l2520 2B14                         l2088 2942  
                       l2434 29C2                         l2522 2B22                         l2370 242A  
                       l2362 2402                         l2346 23CE                         l2338 239C  
                       l2290 22D4                         l2604 2D92                         l1900 2822  
                       l2524 2B2A                         l2364 2408                         l2268 2264  
                       l2700 144E                         l2620 10C6                         l2380 2758  
                       l1910 2886                         l1902 282E                         l2454 2658  
                       l2534 2BE8                         l2358 23F2                         l2614 10A4  
                       l2608 2DA6                         l1912 2892                         l1904 284E  
                       l2472 26B2                         l2528 2B50                         l2536 2BF6  
                       l2368 241C                         l2712 149C                         l2704 145C  
                       l2640 1150                         l2624 10D0                         l2384 2766  
                       l2490 270C                         l2482 26DC                         l2298 22E8  
                       l2730 157E                         l2722 154A                         l2626 10F4  
                       l2618 10B8                         l2378 273E                         l2570 2C90  
                       l1924 28B8                         l1908 2866                         l2484 26EA  
                       l2476 26C2                         l2740 15C8                         l2724 155A  
                       l2716 14BC                         l2708 1496                         l2812 1DB2  
                       l1918 28A6                         l1942 20B6                         l2478 26C8  
                       l2486 26F4                         l2750 16F6                         l2734 15A2  
                       l2670 129A                         l2582 24AE                         l2822 1E10  
                       l2752 1706                         l2744 161A                         l2728 156A  
                       l2680 1328                         l2672 12CC                         l2664 125C  
                       l2656 11F4                         l2568 2C8A                         l2576 2468  
                       l2824 1E16                         l1970 2138                         l1954 20EC  
                       l2690 139E                         l2674 12E2                         l2762 1746  
                       l2594 253A                         l2772 2CF2                         l1972 2144  
                       l1964 2114                         l1948 20E0                         l2756 1716  
                       l2692 13CC                         l2684 134E                         l2668 1284  
                       l2588 24F4                         l1990 21CE                         l1982 217C  
                       l1974 2150                         l2686 135A                         l2694 13E0  
                       l2758 1726                         l1896 2812                         l1984 2188  
                       l1976 2158                         l2698 1448                         l2788 1B6C  
                       STR_1 1081                         u2141 2238                         u2301 2730  
                       u2401 264A                         u2161 2256                         u2321 274E  
                       u2420 2676                         u2425 266E                         u1801 2570  
                       u1571 2074                         u1581 2088                         u2710 1190  
                       u2715 1186                 printf@tmpval 008F                         u1781 2552  
                       u2870 1594                         _TRMT 007D61          ??_Deactivate_Buzzer 0001  
                       _main 1B46                 ___ftpack@arg 0001                 ___ftpack@exp 0004  
             ??_get_full_ADC 0003                         fsr2h 000FDA                         fsr2l 000FD9  
                       prodh 000FF4                         prodl 000FF3                         start 0000  
               ___ftmul@cntr 0029                 ___param_bank 000010                 ___ftmul@sign 002A  
               ___fttol@exp1 0048                 ___fttol@lval 0044             __end_of_LED_7seg 1081  
  __end_of_Deactivate_Buzzer 2E4A                  ?_SET_D2_OFF 0001                  ?_SET_D2_RED 0001  
                      ?_main 0001              __end_of___awdiv 295E              __end_of___ftadd 2228  
            __end_of___awmod 2B02              __end_of___ftdiv 2802              __end_of___ftneg 2D8A  
            __end_of___lldiv 2A80              __end_of___ftmul 263A              ___awdiv@divisor 0051  
            __end_of___llmod 2B72              __end_of___ftsub 2CDC              __end_of___fttol 2720  
                      _T2CON 000FCA              ___awdiv@counter 0053                        _RCSTA 000FAB  
                      _SPBRG 000FAF                        _PORTB 000F81                        _PORTD 000F83  
                      _PORTE 000F84                        _TRISA 000F92                        _TRISB 000F93  
                      _TRISC 000F94                        _TRISD 000F95                        _TRISE 000F96  
                      _TXREG 000FAD                        _TXSTA 000FAC                 ___lltoft@exp 0011  
              ___awtoft@sign 000C              __end_of_dpowers 1029                        _scale 1766  
              ___ftpack@sign 0005                        main@R 00A7                        _putch 2DE8  
               main@num_step 009A               __CFG_BOREN$OFF 000000                        tablat 000FF5  
                      status 000FD8              __initialization 2E10                 __end_of_main 1E20  
           __end_of_Init_ADC 2E04                       ??_main 0072                ___fttol@sign1 0043  
              __activetblptr 000002         __size_of__tdiv_to_l_ 0110                 ?_SET_D2_BLUE 0001  
                     _ADCON0 000FC2                       _ADCON1 000FC1                       _ADCON2 000FC0  
           ___llmod@dividend 0001                       ?_scale 005D                       _ADRESH 000FC4  
                     _ADRESL 000FC3                       _CCPR2L 000FBB             ___awdiv@dividend 004F  
           __end_of___awtoft 2D18                       ?_putch 0001             __end_of___ftpack 28C8  
           __end_of___lltoft 2C42                       _OSCCON 000FD3           __size_of_Init_UART 0014  
         __size_of_Init_TRIS 0014                       _SPBRGH 000FB0          __size_of_SET_D2_OFF 0008  
        __size_of_SET_D2_RED 0008             __end_of__powers_ 1077           __size_of_OpenUSART 0070  
                     ___ftge 295E     __size_of_Activate_Buzzer 0012                       ___wmul 2D18  
                  ??___awdiv 0053                    ??___ftadd 0016                    ??___awmod 004D  
                  ??___ftdiv 0031                    ??___ftneg 0010                    ??___lldiv 0009  
                  ??___ftmul 0022                    ??___llmod 0009                    ??___ftsub 0022  
                  ??___fttol 003E                main@lower_571 00A0                       _fround 1E20  
           ___awdiv@quotient 0055              ___awmod@divisor 004B   __size_of_Deactivate_Buzzer 0008  
            ___awmod@counter 004D                       _printf 1096        ___ftmul@f3_as_product 0026  
       __end_of_get_full_ADC 2D66                 __mediumconst 0000                       tblptrh 000FF7  
                     tblptrl 000FF6                       tblptru 000FF8                       putch@c 0001  
              main@upper_570 009E                   __accesstop 0080      __end_of__initialization 2E10  
              ?_set_D1_color 0049                ?_set_D2_color 000A                   ___ftadd@f1 0010  
                 ___ftadd@f2 0013                   ___ftge@ff1 0001                   ___ftge@ff2 0004  
              ___rparam_used 000001                   ___ftdiv@f1 002B                   ___ftdiv@f2 002E  
                 ___ftdiv@f3 0035                   ___ftneg@f1 000D                   ___awtoft@c 0009  
                 ___ftmul@f1 001C                   ___ftmul@f2 001F                   ___ftsub@f1 001C  
                 ___ftsub@f2 001F                   ___fttol@f1 003A               __pcstackCOMRAM 0001  
                 ___lltoft@c 0009                __end_of_scale 1B46                __end_of_putch 2DF6  
          __end_of_Init_UART 2DC2            __end_of_Init_TRIS 2DD6                   __div_to_l_ 2338  
          __end_of_OpenUSART 2BE2              __div_to_l_@exp1 000C              __div_to_l_@cntr 000B  
                    ??_scale 0060              __div_to_l_@quot 0007                      ??_putch 0001  
                  ?_Init_ADC 0001               ??_set_D1_color 004C               Delay_One_Sec@i 0001  
             ??_set_D2_color 000D   __end_of_Select_ADC_Channel 2E10                __div_to_l_@f1 0001  
              __div_to_l_@f2 0004                      ?___ftge 0001                      ?___wmul 0057  
              ?_SET_D2_GREEN 0001                ?_SET_D2_WHITE 0001                      _CCP2CON 000FBA  
     __size_of_Delay_One_Sec 0024                      ?_fround 005D                    ?___awtoft 0009  
                  ?___ftpack 0001                      ?_printf 0067                 ??_SET_D2_OFF 0001  
               ??_SET_D2_RED 0001    Select_ADC_Channel@channel 0001                    ?___lltoft 0009  
          ??_Activate_Buzzer 0001         __size_of_SET_D2_BLUE 0008                   ??_Init_ADC 0001  
         __end_of_SET_D2_OFF 2E32           __end_of_SET_D2_RED 2E2A            __end_of__npowers_ 1050  
                    __Hparam 0000                   _scale$1490 0060                      __Lparam 0000  
             ??_SET_D2_GREEN 0001              __size_of___ftge 0096                      ___awdiv 28C8  
                    ___ftadd 2064                      ___awmod 2A80                      ___ftdiv 2720  
             ??_SET_D2_WHITE 0001                      ___ftneg 2D66                      ___lldiv 29F4  
            __size_of___wmul 0028                      ___ftmul 2542                      ___llmod 2B02  
                    ___ftsub 2C98                      ___fttol 263A        __size_of_get_full_ADC 0026  
               __psmallconst 1000                      __pcinit 2E10                   ??___awtoft 000C  
                 ??___ftpack 0006              __size_of_fround 0244                      __ramtop 1000  
                 ??___lltoft 000D                      __ptext0 1B46                      __ptext1 2442  
                    __ptext2 2E1A                      __ptext3 2E22                      __ptext4 2E2A  
                    __ptext5 2E32                      __ptext6 2E3A                      __ptext7 2C42  
                    __ptext8 2720                      __ptext9 1096            set_D1_color@range 004C  
            __size_of_printf 06D0                  ?__div_to_l_ 0001                      _dpowers 1001  
           ___awmod@dividend 0049         end_of_initialization 2E10                _Delay_One_Sec 2D8A  
              __Lmediumconst 0000                 _get_full_ADC 2D40              ___lldiv@divisor 0005  
            ___lldiv@counter 000D                    _RCSTAbits 000FAB                      printf@c 0096  
                    printf@f 0067                      postdec2 000FDD                      postinc2 000FDE  
             __tdiv_to_l_@f1 0001               __tdiv_to_l_@f2 0004                ??__tdiv_to_l_ 0007  
       __end_of_set_D1_color 2C98                    _PORTCbits 000F82         __end_of_set_D2_color 2542  
                  _PORTDbits 000F83                    _PORTEbits 000F84       set_D1_color@resistance 0049  
                  _TRISCbits 000F94               ?_Delay_One_Sec 0001                  ___ftdiv@exp 0038  
                  _TXSTAbits 000FAC           get_full_ADC@result 0005          __size_of__div_to_l_ 010A  
                ___ftmul@exp 0025               __end_of___ftge 29F4               __end_of___wmul 2D40  
             __end_of_fround 2064               __end_of_printf 1766          start_initialization 2E10  
                  _Init_UART 2DAE                    _Init_TRIS 2DC2          __end_of__tdiv_to_l_ 2338  
       __end_of_SET_D2_GREEN 2E3A         __end_of_SET_D2_WHITE 2E22                    _OpenUSART 2B72  
            ___llmod@divisor 0005             __CFG_OSC$INTIO67 000000            __size_of_Init_ADC 000E  
            ___llmod@counter 0009              _Activate_Buzzer 2DD6                     ??___ftge 0007  
                   ??___wmul 005B           _Select_ADC_Channel 2E04                     ??_fround 0060  
                   ??_printf 006C                   fround@prec 0066            __size_of___awtoft 003C  
          __size_of___ftpack 00C6          ?_Select_ADC_Channel 0001            __size_of___lltoft 0060  
                 ?_Init_UART 0001                   ?_Init_TRIS 0001                __pcstackBANK0 0080  
            ??_Delay_One_Sec 0001                   ?_OpenUSART 0001       set_D2_color@resistance 000A  
       ??_Select_ADC_Channel 0001        __size_of_set_D1_color 0056        __size_of_set_D2_color 0100  
                   ?___awdiv 004F                     ?___ftadd 0010                     ?___awmod 0049  
                   ?___ftdiv 002B                     ?___ftneg 000D                     ?___lldiv 0001  
                   ?___ftmul 001C                     ?___llmod 0001                     ?___ftsub 001C  
                  __npowers_ 1029                     ?___fttol 003A                  __tdiv_to_l_ 2228  
               ??__div_to_l_ 0007                  __smallconst 1000                ??_SET_D2_BLUE 0001  
             __size_of_scale 03E0               __size_of_putch 000E      __end_of_Activate_Buzzer 2DE8  
                   _LED_7seg 1077               ___wmul@product 005B                 _set_D1_color 2C42  
               _set_D2_color 2442                     _PIE1bits 000F9D                     _PIR1bits 000F9E  
         __end_of__div_to_l_ 2442                   _ADCON0bits 000FC2            ___wmul@multiplier 0057  
                 printf@flag 0085                   printf@fval 0093                   printf@prec 0087  
      __size_of_SET_D2_GREEN 0008                    main@lower 009C                  ??_Init_UART 0004  
      __size_of_SET_D2_WHITE 0008                  ??_Init_TRIS 0001                    main@upper 00A5  
                   _Init_ADC 2DF6                  ??_OpenUSART 0003          __end_of_SET_D2_BLUE 2E42  
            OpenUSART@config 0003                     __Hrparam 0000                     __Lrparam 0000  
               _SET_D2_GREEN 2E32             __size_of___awdiv 0096             __size_of___ftadd 01C4  
           __size_of___awmod 0082             __size_of___ftdiv 00E2             __size_of___ftneg 0024  
           __size_of___lldiv 008C             __size_of___ftmul 00F8                 _SET_D2_WHITE 2E1A  
           __size_of___llmod 0070             __size_of___ftsub 0044             __size_of___fttol 00E6  
                   ___awtoft 2CDC                     ___ftpack 2802                  _fround$1488 0063  
                _fround$1489 0060                     ___lltoft 2BE2                     __ptext10 1766  
                   __ptext11 2DE8                     __ptext20 2B02                     __ptext12 1E20  
                   __ptext21 29F4                     __ptext13 2D18                     __ptext30 2E04  
                   __ptext22 263A                     __ptext14 2542                     __ptext31 2DAE  
                   __ptext23 2C98                     __ptext15 2A80                     __ptext32 2B72  
                   __ptext24 2064                     __ptext16 28C8                     __ptext33 2DC2  
                   __ptext25 2D66                     __ptext17 2228                     __ptext34 2DF6  
                   __ptext26 295E                     __ptext18 2338                     __ptext35 2D8A  
                   __ptext27 2D40                     __ptext19 2BE2                     __ptext36 2E42  
                   __ptext28 2CDC                     __ptext37 2DD6                     __ptext29 2802  
                   __powers_ 1050             ?_Activate_Buzzer 0001                __size_of_main 02DA  
                   main@Rref 0097                    printf@exp 008D                    printf@val 0089  
                   main@volt 00A2               OpenUSART@spbrg 0001                  _SET_D2_BLUE 2E3A  
                   scale@scl 0063             __tdiv_to_l_@exp1 000F             __tdiv_to_l_@cntr 000E  
           __tdiv_to_l_@quot 000A             ___lldiv@dividend 0001                     printf@ap 0083  
               ?__tdiv_to_l_ 0001                   _SET_D2_OFF 2E2A                   _SET_D2_RED 2E22  
                _printf$1491 0080             ___lldiv@quotient 0009        __end_of_Delay_One_Sec 2DAE  
              ?_get_full_ADC 0001  __size_of_Select_ADC_Channel 000C  
