

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Oct 09 15:46:40 2025

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    54                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    55  0000                     
    56                           	psect	idataBANK0
    57  002E28                     __pidataBANK0:
    58                           	opt stack 0
    59                           
    60                           ;initializer for _LED_7seg
    61  002E28  01                 	db	1
    62  002E29  4F                 	db	79
    63  002E2A  12                 	db	18
    64  002E2B  06                 	db	6
    65  002E2C  4C                 	db	76
    66  002E2D  24                 	db	36
    67  002E2E  20                 	db	32
    68  002E2F  0F                 	db	15
    69  002E30  00                 	db	0
    70  002E31  0C                 	db	12
    71                           
    72                           	psect	smallconst
    73  001000                     __psmallconst:
    74                           	opt stack 0
    75  001000  00                 	db	0
    76  001001                     _dpowers:
    77                           	opt stack 0
    78  001001  0001               	dw	1
    79  001003  0000               	dw	0
    80  001005  000A               	dw	10
    81  001007  0000               	dw	0
    82  001009  0064               	dw	100
    83  00100B  0000               	dw	0
    84  00100D  03E8               	dw	1000
    85  00100F  0000               	dw	0
    86  001011  2710               	dw	10000
    87  001013  0000               	dw	0
    88  001015  86A0               	dw	34464
    89  001017  0001               	dw	1
    90  001019  4240               	dw	16960
    91  00101B  000F               	dw	15
    92  00101D  9680               	dw	38528
    93  00101F  0098               	dw	152
    94  001021  E100               	dw	57600
    95  001023  05F5               	dw	1525
    96  001025  CA00               	dw	51712
    97  001027  3B9A               	dw	15258
    98  001029                     __end_of_dpowers:
    99                           	opt stack 0
   100  001029                     __npowers_:
   101                           	opt stack 0
   102  001029  00                 	db	0
   103  00102A  80                 	db	128
   104  00102B  3F                 	db	63
   105  00102C  CD                 	db	205
   106  00102D  CC                 	db	204
   107  00102E  3D                 	db	61
   108  00102F  D7                 	db	215
   109  001030  23                 	db	35
   110  001031  3C                 	db	60
   111  001032  12                 	db	18
   112  001033  83                 	db	131
   113  001034  3A                 	db	58
   114  001035  B7                 	db	183
   115  001036  D1                 	db	209
   116  001037  38                 	db	56
   117  001038  C6                 	db	198
   118  001039  27                 	db	39
   119  00103A  37                 	db	55
   120  00103B  38                 	db	56
   121  00103C  86                 	db	134
   122  00103D  35                 	db	53
   123  00103E  C0                 	db	192
   124  00103F  D6                 	db	214
   125  001040  33                 	db	51
   126  001041  CC                 	db	204
   127  001042  2B                 	db	43
   128  001043  32                 	db	50
   129  001044  70                 	db	112
   130  001045  89                 	db	137
   131  001046  30                 	db	48
   132  001047  E7                 	db	231
   133  001048  DB                 	db	219
   134  001049  2E                 	db	46
   135  00104A  E5                 	db	229
   136  00104B  3C                 	db	60
   137  00104C  1E                 	db	30
   138  00104D  42                 	db	66
   139  00104E  A2                 	db	162
   140  00104F  0D                 	db	13
   141  001050                     __end_of__npowers_:
   142                           	opt stack 0
   143  001050                     __powers_:
   144                           	opt stack 0
   145  001050  00                 	db	0
   146  001051  80                 	db	128
   147  001052  3F                 	db	63
   148  001053  00                 	db	0
   149  001054  20                 	db	32
   150  001055  41                 	db	65
   151  001056  00                 	db	0
   152  001057  C8                 	db	200
   153  001058  42                 	db	66
   154  001059  00                 	db	0
   155  00105A  7A                 	db	122
   156  00105B  44                 	db	68
   157  00105C  40                 	db	64
   158  00105D  1C                 	db	28
   159  00105E  46                 	db	70
   160  00105F  50                 	db	80
   161  001060  C3                 	db	195
   162  001061  47                 	db	71
   163  001062  24                 	db	36
   164  001063  74                 	db	116
   165  001064  49                 	db	73
   166  001065  97                 	db	151
   167  001066  18                 	db	24
   168  001067  4B                 	db	75
   169  001068  BC                 	db	188
   170  001069  BE                 	db	190
   171  00106A  4C                 	db	76
   172  00106B  6B                 	db	107
   173  00106C  6E                 	db	110
   174  00106D  4E                 	db	78
   175  00106E  03                 	db	3
   176  00106F  15                 	db	21
   177  001070  50                 	db	80
   178  001071  79                 	db	121
   179  001072  AD                 	db	173
   180  001073  60                 	db	96
   181  001074  F3                 	db	243
   182  001075  49                 	db	73
   183  001076  71                 	db	113
   184  001077                     __end_of__powers_:
   185                           	opt stack 0
   186  0000                     _ADCON0	set	4034
   187  0000                     _ADCON0bits	set	4034
   188  0000                     _ADCON1	set	4033
   189  0000                     _ADCON2	set	4032
   190  0000                     _ADRESH	set	4036
   191  0000                     _ADRESL	set	4035
   192  0000                     _CCP2CON	set	4026
   193  0000                     _CCPR2L	set	4027
   194  0000                     _OSCCON	set	4051
   195  0000                     _PIE1bits	set	3997
   196  0000                     _PIR1bits	set	3998
   197  0000                     _PORTB	set	3969
   198  0000                     _PORTC	set	3970
   199  0000                     _PORTCbits	set	3970
   200  0000                     _PORTD	set	3971
   201  0000                     _PORTDbits	set	3971
   202  0000                     _PORTEbits	set	3972
   203  0000                     _PR2	set	4043
   204  0000                     _RCSTA	set	4011
   205  0000                     _RCSTAbits	set	4011
   206  0000                     _SPBRG	set	4015
   207  0000                     _SPBRGH	set	4016
   208  0000                     _T2CON	set	4042
   209  0000                     _TRISA	set	3986
   210  0000                     _TRISB	set	3987
   211  0000                     _TRISC	set	3988
   212  0000                     _TRISCbits	set	3988
   213  0000                     _TRISD	set	3989
   214  0000                     _TRISE	set	3990
   215  0000                     _TXREG	set	4013
   216  0000                     _TXSTA	set	4012
   217  0000                     _TXSTAbits	set	4012
   218  0000                     _TRMT	set	32097
   219  001077                     STR_1:
   220  001077  52                 	db	82	;'R'
   221  001078  65                 	db	101	;'e'
   222  001079  73                 	db	115	;'s'
   223  00107A  69                 	db	105	;'i'
   224  00107B  73                 	db	115	;'s'
   225  00107C  74                 	db	116	;'t'
   226  00107D  61                 	db	97	;'a'
   227  00107E  6E                 	db	110	;'n'
   228  00107F  63                 	db	99	;'c'
   229  001080  65                 	db	101	;'e'
   230  001081  20                 	db	32
   231  001082  3D                 	db	61	;'='
   232  001083  20                 	db	32
   233  001084  25                 	db	37
   234  001085  66                 	db	102	;'f'
   235  001086  20                 	db	32
   236  001087  0D                 	db	13
   237  001088  0A                 	db	10
   238  001089  00                 	db	0
   239                           
   240                           ; #config settings
   241  00108A  00                 	db	0	; dummy byte at the end
   242  0000                     
   243                           	psect	cinit
   244  002C84                     __pcinit:
   245                           	opt stack 0
   246  002C84                     start_initialization:
   247                           	opt stack 0
   248  002C84                     __initialization:
   249                           	opt stack 0
   250                           
   251                           ; Clear objects allocated to COMRAM (8 bytes)
   252  002C84  EE00  F078         	lfsr	0,__pbssCOMRAM
   253  002C88  0E08               	movlw	8
   254  002C8A                     clear_0:
   255  002C8A  6AEE               	clrf	postinc0,c
   256  002C8C  06E8               	decf	wreg,f,c
   257  002C8E  E1FD               	bnz	clear_0
   258                           
   259                           ; Initialize objects allocated to BANK0 (10 bytes)
   260                           ; load TBLPTR registers with __pidataBANK0
   261  002C90  0E28               	movlw	low __pidataBANK0
   262  002C92  6EF6               	movwf	tblptrl,c
   263  002C94  0E2E               	movlw	high __pidataBANK0
   264  002C96  6EF7               	movwf	tblptrh,c
   265  002C98  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   266  002C9A  6EF8               	movwf	tblptru,c
   267  002C9C  EE00  F097         	lfsr	0,__pdataBANK0
   268  002CA0  EE10 F00A          	lfsr	1,10
   269  002CA4                     copy_data0:
   270  002CA4  0009               	tblrd		*+
   271  002CA6  CFF5 FFEE          	movff	tablat,postinc0
   272  002CAA  50E5               	movf	postdec1,w,c
   273  002CAC  50E1               	movf	fsr1l,w,c
   274  002CAE  E1FA               	bnz	copy_data0
   275  002CB0                     end_of_initialization:
   276                           	opt stack 0
   277  002CB0                     __end_of__initialization:
   278                           	opt stack 0
   279  002CB0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   280  002CB2  6EF8               	movwf	tblptru,c
   281  002CB4  0100               	movlb	0
   282  002CB6  EF9E  F00D         	goto	_main	;jump to C main() function
   283                           tblptru	equ	0xFF8
   284                           tblptrh	equ	0xFF7
   285                           tblptrl	equ	0xFF6
   286                           tablat	equ	0xFF5
   287                           postinc0	equ	0xFEE
   288                           wreg	equ	0xFE8
   289                           postdec1	equ	0xFE5
   290                           fsr1l	equ	0xFE1
   291                           
   292                           	psect	bssCOMRAM
   293  000078                     __pbssCOMRAM:
   294                           	opt stack 0
   295  000078                     _R:
   296                           	opt stack 0
   297  000078                     	ds	3
   298  00007B                     _volt:
   299                           	opt stack 0
   300  00007B                     	ds	3
   301  00007E                     _num_step:
   302                           	opt stack 0
   303  00007E                     	ds	2
   304                           tblptru	equ	0xFF8
   305                           tblptrh	equ	0xFF7
   306                           tblptrl	equ	0xFF6
   307                           tablat	equ	0xFF5
   308                           postinc0	equ	0xFEE
   309                           wreg	equ	0xFE8
   310                           postdec1	equ	0xFE5
   311                           fsr1l	equ	0xFE1
   312                           
   313                           	psect	dataBANK0
   314  000097                     __pdataBANK0:
   315                           	opt stack 0
   316  000097                     _LED_7seg:
   317                           	opt stack 0
   318  000097                     	ds	10
   319                           tblptru	equ	0xFF8
   320                           tblptrh	equ	0xFF7
   321                           tblptrl	equ	0xFF6
   322                           tablat	equ	0xFF5
   323                           postinc0	equ	0xFEE
   324                           wreg	equ	0xFE8
   325                           postdec1	equ	0xFE5
   326                           fsr1l	equ	0xFE1
   327                           
   328                           	psect	cstackBANK0
   329  000080                     __pcstackBANK0:
   330                           	opt stack 0
   331  000080                     _printf$1470:
   332                           	opt stack 0
   333                           
   334                           ; 3 bytes @ 0x0
   335  000080                     	ds	3
   336  000083                     printf@ap:
   337                           	opt stack 0
   338                           
   339                           ; 2 bytes @ 0x3
   340  000083                     	ds	2
   341  000085                     printf@flag:
   342                           	opt stack 0
   343                           
   344                           ; 2 bytes @ 0x5
   345  000085                     	ds	2
   346  000087                     printf@prec:
   347                           	opt stack 0
   348                           
   349                           ; 2 bytes @ 0x7
   350  000087                     	ds	2
   351  000089                     printf@val:
   352                           	opt stack 0
   353                           
   354                           ; 4 bytes @ 0x9
   355  000089                     	ds	4
   356  00008D                     printf@exp:
   357                           	opt stack 0
   358                           
   359                           ; 2 bytes @ 0xD
   360  00008D                     	ds	2
   361  00008F                     printf@tmpval:
   362                           	opt stack 0
   363                           
   364                           ; 4 bytes @ 0xF
   365  00008F                     	ds	4
   366  000093                     printf@fval:
   367                           	opt stack 0
   368                           
   369                           ; 3 bytes @ 0x13
   370  000093                     	ds	3
   371  000096                     printf@c:
   372                           	opt stack 0
   373                           
   374                           ; 1 bytes @ 0x16
   375  000096                     	ds	1
   376                           tblptru	equ	0xFF8
   377                           tblptrh	equ	0xFF7
   378                           tblptrl	equ	0xFF6
   379                           tablat	equ	0xFF5
   380                           postinc0	equ	0xFEE
   381                           wreg	equ	0xFE8
   382                           postdec1	equ	0xFE5
   383                           fsr1l	equ	0xFE1
   384                           
   385                           	psect	cstackCOMRAM
   386  000001                     __pcstackCOMRAM:
   387                           	opt stack 0
   388  000001                     ?_get_full_ADC:
   389                           	opt stack 0
   390  000001                     ?___ftpack:
   391                           	opt stack 0
   392  000001                     ?__tdiv_to_l_:
   393                           	opt stack 0
   394  000001                     ?__div_to_l_:
   395                           	opt stack 0
   396  000001                     ?___lldiv:
   397                           	opt stack 0
   398  000001                     ?___llmod:
   399                           	opt stack 0
   400  000001                     putch@c:
   401                           	opt stack 0
   402  000001                     select_ADC_CH@AN_pin:
   403                           	opt stack 0
   404  000001                     wait_1_sec@j:
   405                           	opt stack 0
   406  000001                     OpenUSART@spbrg:
   407                           	opt stack 0
   408  000001                     __div_to_l_@f1:
   409                           	opt stack 0
   410  000001                     ___ftpack@arg:
   411                           	opt stack 0
   412  000001                     __tdiv_to_l_@f1:
   413                           	opt stack 0
   414  000001                     ___ftge@ff1:
   415                           	opt stack 0
   416  000001                     ___lldiv@dividend:
   417                           	opt stack 0
   418  000001                     ___llmod@dividend:
   419                           	opt stack 0
   420                           
   421                           ; 4 bytes @ 0x0
   422  000001                     	ds	2
   423  000003                     ??_get_full_ADC:
   424  000003                     OpenUSART@config:
   425                           	opt stack 0
   426                           
   427                           ; 1 bytes @ 0x2
   428  000003                     	ds	1
   429  000004                     ___ftpack@exp:
   430                           	opt stack 0
   431  000004                     __div_to_l_@f2:
   432                           	opt stack 0
   433  000004                     __tdiv_to_l_@f2:
   434                           	opt stack 0
   435  000004                     ___ftge@ff2:
   436                           	opt stack 0
   437                           
   438                           ; 3 bytes @ 0x3
   439  000004                     	ds	1
   440  000005                     ___ftpack@sign:
   441                           	opt stack 0
   442  000005                     get_full_ADC@result:
   443                           	opt stack 0
   444  000005                     ___lldiv@divisor:
   445                           	opt stack 0
   446  000005                     ___llmod@divisor:
   447                           	opt stack 0
   448                           
   449                           ; 4 bytes @ 0x4
   450  000005                     	ds	1
   451  000006                     ??___ftpack:
   452                           
   453                           ; 0 bytes @ 0x5
   454  000006                     	ds	1
   455  000007                     ??__tdiv_to_l_:
   456  000007                     ??___ftge:
   457  000007                     __div_to_l_@quot:
   458                           	opt stack 0
   459                           
   460                           ; 4 bytes @ 0x6
   461  000007                     	ds	2
   462  000009                     ?___lbtoft:
   463                           	opt stack 0
   464  000009                     ?___lltoft:
   465                           	opt stack 0
   466  000009                     ?___lwtoft:
   467                           	opt stack 0
   468  000009                     ___llmod@counter:
   469                           	opt stack 0
   470  000009                     ___lwtoft@c:
   471                           	opt stack 0
   472  000009                     ___lldiv@quotient:
   473                           	opt stack 0
   474  000009                     ___lltoft@c:
   475                           	opt stack 0
   476                           
   477                           ; 4 bytes @ 0x8
   478  000009                     	ds	1
   479  00000A                     display_D2@T:
   480                           	opt stack 0
   481  00000A                     check_buzzer@r:
   482                           	opt stack 0
   483  00000A                     __tdiv_to_l_@quot:
   484                           	opt stack 0
   485                           
   486                           ; 4 bytes @ 0x9
   487  00000A                     	ds	1
   488  00000B                     __div_to_l_@cntr:
   489                           	opt stack 0
   490                           
   491                           ; 1 bytes @ 0xA
   492  00000B                     	ds	1
   493  00000C                     __div_to_l_@exp1:
   494                           	opt stack 0
   495  00000C                     ___lbtoft@c:
   496                           	opt stack 0
   497                           
   498                           ; 1 bytes @ 0xB
   499  00000C                     	ds	1
   500  00000D                     ??___lltoft:
   501  00000D                     ?___ftneg:
   502                           	opt stack 0
   503  00000D                     ___lldiv@counter:
   504                           	opt stack 0
   505  00000D                     ___ftneg@f1:
   506                           	opt stack 0
   507                           
   508                           ; 3 bytes @ 0xC
   509  00000D                     	ds	1
   510  00000E                     __tdiv_to_l_@cntr:
   511                           	opt stack 0
   512                           
   513                           ; 1 bytes @ 0xD
   514  00000E                     	ds	1
   515  00000F                     __tdiv_to_l_@exp1:
   516                           	opt stack 0
   517                           
   518                           ; 1 bytes @ 0xE
   519  00000F                     	ds	1
   520  000010                     ?___ftadd:
   521                           	opt stack 0
   522  000010                     ___ftadd@f1:
   523                           	opt stack 0
   524                           
   525                           ; 3 bytes @ 0xF
   526  000010                     	ds	1
   527  000011                     ___lltoft@exp:
   528                           	opt stack 0
   529                           
   530                           ; 1 bytes @ 0x10
   531  000011                     	ds	2
   532  000013                     ___ftadd@f2:
   533                           	opt stack 0
   534                           
   535                           ; 3 bytes @ 0x12
   536  000013                     	ds	3
   537  000016                     ??___ftadd:
   538                           
   539                           ; 0 bytes @ 0x15
   540  000016                     	ds	3
   541  000019                     ___ftadd@sign:
   542                           	opt stack 0
   543                           
   544                           ; 1 bytes @ 0x18
   545  000019                     	ds	1
   546  00001A                     ___ftadd@exp2:
   547                           	opt stack 0
   548                           
   549                           ; 1 bytes @ 0x19
   550  00001A                     	ds	1
   551  00001B                     ___ftadd@exp1:
   552                           	opt stack 0
   553                           
   554                           ; 1 bytes @ 0x1A
   555  00001B                     	ds	1
   556  00001C                     ?___ftdiv:
   557                           	opt stack 0
   558  00001C                     ?___ftsub:
   559                           	opt stack 0
   560  00001C                     ___ftdiv@f1:
   561                           	opt stack 0
   562  00001C                     ___ftsub@f1:
   563                           	opt stack 0
   564                           
   565                           ; 3 bytes @ 0x1B
   566  00001C                     	ds	3
   567  00001F                     ___ftdiv@f2:
   568                           	opt stack 0
   569  00001F                     ___ftsub@f2:
   570                           	opt stack 0
   571                           
   572                           ; 3 bytes @ 0x1E
   573  00001F                     	ds	3
   574  000022                     ??___ftdiv:
   575  000022                     
   576                           ; 0 bytes @ 0x21
   577  000022                     	ds	3
   578  000025                     ___ftdiv@cntr:
   579                           	opt stack 0
   580                           
   581                           ; 1 bytes @ 0x24
   582  000025                     	ds	1
   583  000026                     ___ftdiv@f3:
   584                           	opt stack 0
   585                           
   586                           ; 3 bytes @ 0x25
   587  000026                     	ds	3
   588  000029                     ___ftdiv@exp:
   589                           	opt stack 0
   590                           
   591                           ; 1 bytes @ 0x28
   592  000029                     	ds	1
   593  00002A                     ___ftdiv@sign:
   594                           	opt stack 0
   595                           
   596                           ; 1 bytes @ 0x29
   597  00002A                     	ds	1
   598  00002B                     ?___ftmul:
   599                           	opt stack 0
   600  00002B                     ___ftmul@f1:
   601                           	opt stack 0
   602                           
   603                           ; 3 bytes @ 0x2A
   604  00002B                     	ds	3
   605  00002E                     ___ftmul@f2:
   606                           	opt stack 0
   607                           
   608                           ; 3 bytes @ 0x2D
   609  00002E                     	ds	3
   610  000031                     ??___ftmul:
   611                           
   612                           ; 0 bytes @ 0x30
   613  000031                     	ds	3
   614  000034                     ___ftmul@exp:
   615                           	opt stack 0
   616                           
   617                           ; 1 bytes @ 0x33
   618  000034                     	ds	1
   619  000035                     ___ftmul@f3_as_product:
   620                           	opt stack 0
   621                           
   622                           ; 3 bytes @ 0x34
   623  000035                     	ds	3
   624  000038                     ___ftmul@cntr:
   625                           	opt stack 0
   626                           
   627                           ; 1 bytes @ 0x37
   628  000038                     	ds	1
   629  000039                     ___ftmul@sign:
   630                           	opt stack 0
   631                           
   632                           ; 1 bytes @ 0x38
   633  000039                     	ds	1
   634  00003A                     ?___fttol:
   635                           	opt stack 0
   636  00003A                     ___fttol@f1:
   637                           	opt stack 0
   638                           
   639                           ; 3 bytes @ 0x39
   640  00003A                     	ds	4
   641  00003E                     ??___fttol:
   642                           
   643                           ; 0 bytes @ 0x3D
   644  00003E                     	ds	5
   645  000043                     ___fttol@sign1:
   646                           	opt stack 0
   647                           
   648                           ; 1 bytes @ 0x42
   649  000043                     	ds	1
   650  000044                     ___fttol@lval:
   651                           	opt stack 0
   652                           
   653                           ; 4 bytes @ 0x43
   654  000044                     	ds	4
   655  000048                     ___fttol@exp1:
   656                           	opt stack 0
   657                           
   658                           ; 1 bytes @ 0x47
   659  000048                     	ds	1
   660  000049                     ?___awmod:
   661                           	opt stack 0
   662  000049                     ___awmod@dividend:
   663                           	opt stack 0
   664                           
   665                           ; 2 bytes @ 0x48
   666  000049                     	ds	2
   667  00004B                     ___awmod@divisor:
   668                           	opt stack 0
   669                           
   670                           ; 2 bytes @ 0x4A
   671  00004B                     	ds	2
   672  00004D                     ___awmod@counter:
   673                           	opt stack 0
   674                           
   675                           ; 1 bytes @ 0x4C
   676  00004D                     	ds	1
   677  00004E                     ___awmod@sign:
   678                           	opt stack 0
   679                           
   680                           ; 1 bytes @ 0x4D
   681  00004E                     	ds	1
   682  00004F                     ?___awdiv:
   683                           	opt stack 0
   684  00004F                     ___awdiv@dividend:
   685                           	opt stack 0
   686                           
   687                           ; 2 bytes @ 0x4E
   688  00004F                     	ds	2
   689  000051                     ___awdiv@divisor:
   690                           	opt stack 0
   691                           
   692                           ; 2 bytes @ 0x50
   693  000051                     	ds	2
   694  000053                     ___awdiv@counter:
   695                           	opt stack 0
   696                           
   697                           ; 1 bytes @ 0x52
   698  000053                     	ds	1
   699  000054                     ___awdiv@sign:
   700                           	opt stack 0
   701                           
   702                           ; 1 bytes @ 0x53
   703  000054                     	ds	1
   704  000055                     ___awdiv@quotient:
   705                           	opt stack 0
   706                           
   707                           ; 2 bytes @ 0x54
   708  000055                     	ds	2
   709  000057                     ?___wmul:
   710                           	opt stack 0
   711  000057                     display_D1@R:
   712                           	opt stack 0
   713  000057                     ___wmul@multiplier:
   714                           	opt stack 0
   715                           
   716                           ; 2 bytes @ 0x56
   717  000057                     	ds	2
   718  000059                     display_D1@range:
   719                           	opt stack 0
   720  000059                     ___wmul@multiplicand:
   721                           	opt stack 0
   722                           
   723                           ; 2 bytes @ 0x58
   724  000059                     	ds	2
   725  00005B                     ___wmul@product:
   726                           	opt stack 0
   727                           
   728                           ; 2 bytes @ 0x5A
   729  00005B                     	ds	2
   730  00005D                     ?_fround:
   731                           	opt stack 0
   732  00005D                     ?_scale:
   733                           	opt stack 0
   734                           
   735                           ; 3 bytes @ 0x5C
   736  00005D                     	ds	3
   737  000060                     _fround$1468:
   738                           	opt stack 0
   739  000060                     _scale$1469:
   740                           	opt stack 0
   741                           
   742                           ; 3 bytes @ 0x5F
   743  000060                     	ds	3
   744  000063                     scale@scl:
   745                           	opt stack 0
   746  000063                     _fround$1467:
   747                           	opt stack 0
   748                           
   749                           ; 3 bytes @ 0x62
   750  000063                     	ds	3
   751  000066                     fround@prec:
   752                           	opt stack 0
   753                           
   754                           ; 1 bytes @ 0x65
   755  000066                     	ds	1
   756  000067                     ?_printf:
   757                           	opt stack 0
   758  000067                     printf@f:
   759                           	opt stack 0
   760                           
   761                           ; 2 bytes @ 0x66
   762  000067                     	ds	5
   763  00006C                     ??_printf:
   764                           
   765                           ; 0 bytes @ 0x6B
   766  00006C                     	ds	6
   767  000072                     ??_main:
   768                           
   769                           ; 0 bytes @ 0x71
   770  000072                     	ds	2
   771  000074                     main@L:
   772                           	opt stack 0
   773                           
   774                           ; 1 bytes @ 0x73
   775  000074                     	ds	1
   776  000075                     main@U_557:
   777                           	opt stack 0
   778                           
   779                           ; 1 bytes @ 0x74
   780  000075                     	ds	1
   781  000076                     main@L_558:
   782                           	opt stack 0
   783                           
   784                           ; 1 bytes @ 0x75
   785  000076                     	ds	1
   786  000077                     main@U:
   787                           	opt stack 0
   788                           
   789                           ; 1 bytes @ 0x76
   790  000077                     	ds	1
   791                           tblptru	equ	0xFF8
   792                           tblptrh	equ	0xFF7
   793                           tblptrl	equ	0xFF6
   794                           tablat	equ	0xFF5
   795                           postinc0	equ	0xFEE
   796                           wreg	equ	0xFE8
   797                           postdec1	equ	0xFE5
   798                           fsr1l	equ	0xFE1
   799                           
   800 ;;
   801 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   802 ;;
   803 ;; *************** function _main *****************
   804 ;; Defined at:
   805 ;;		line 64 in file "lab6p3.c"
   806 ;; Parameters:    Size  Location     Type
   807 ;;		None
   808 ;; Auto vars:     Size  Location     Type
   809 ;;  L               1  117[COMRAM] unsigned char 
   810 ;;  U               1  116[COMRAM] unsigned char 
   811 ;;  U               1  118[COMRAM] unsigned char 
   812 ;;  L               1  115[COMRAM] unsigned char 
   813 ;; Return value:  Size  Location     Type
   814 ;;		None               void
   815 ;; Registers used:
   816 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   817 ;; Tracked objects:
   818 ;;		On entry : 0/0
   819 ;;		On exit  : 0/0
   820 ;;		Unchanged: 0/0
   821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   823 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   824 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   825 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   826 ;;Total ram usage:        6 bytes
   827 ;; Hardware stack levels required when called:    4
   828 ;; This function calls:
   829 ;;		_Init_ADC
   830 ;;		_Init_TRIS
   831 ;;		___awmod
   832 ;;		___ftadd
   833 ;;		___ftdiv
   834 ;;		___ftge
   835 ;;		___ftmul
   836 ;;		___ftneg
   837 ;;		___fttol
   838 ;;		___lbtoft
   839 ;;		___lwtoft
   840 ;;		_check_buzzer
   841 ;;		_display_D1
   842 ;;		_display_D2
   843 ;;		_get_full_ADC
   844 ;;		_init_UART
   845 ;;		_printf
   846 ;;		_select_ADC_CH
   847 ;;		_wait_1_sec
   848 ;; This function is called by:
   849 ;;		Startup code after reset
   850 ;; This function uses a non-reentrant model
   851 ;;
   852                           
   853                           	psect	text0
   854  001B3C                     __ptext0:
   855                           	opt stack 0
   856  001B3C                     _main:
   857                           	opt stack 27
   858                           
   859                           ;lab6p3.c: 66: init_UART();
   860                           
   861                           ;incstack = 0
   862  001B3C  ECE3  F016         	call	_init_UART	;wreg free
   863                           
   864                           ;lab6p3.c: 67: Init_ADC();
   865  001B40  EC07  F017         	call	_Init_ADC	;wreg free
   866                           
   867                           ;lab6p3.c: 68: Init_TRIS();
   868  001B44  ECED  F016         	call	_Init_TRIS	;wreg free
   869                           
   870                           ;lab6p3.c: 70: select_ADC_CH(4);
   871  001B48  0E04               	movlw	4
   872  001B4A  EC0E  F017         	call	_select_ADC_CH
   873  001B4E  D000               	goto	l2765
   874  001B50                     l2765:
   875                           
   876                           ;lab6p3.c: 72: {
   877                           ;lab6p3.c: 73: num_step = get_full_ADC();
   878  001B50  EC88  F016         	call	_get_full_ADC	;wreg free
   879  001B54  C001  F07E         	movff	?_get_full_ADC,_num_step
   880  001B58  C002  F07F         	movff	?_get_full_ADC+1,_num_step+1
   881                           
   882                           ;lab6p3.c: 75: volt = (num_step * 4)/1000.0;
   883  001B5C  C07E  F072         	movff	_num_step,??_main
   884  001B60  C07F  F073         	movff	_num_step+1,??_main+1
   885  001B64  90D8               	bcf	status,0,c
   886  001B66  3672               	rlcf	??_main,f,c
   887  001B68  3673               	rlcf	??_main+1,f,c
   888  001B6A  90D8               	bcf	status,0,c
   889  001B6C  3672               	rlcf	??_main,f,c
   890  001B6E  3673               	rlcf	??_main+1,f,c
   891  001B70  C072  F009         	movff	??_main,___lwtoft@c
   892  001B74  C073  F00A         	movff	??_main+1,___lwtoft@c+1
   893  001B78  EC9B  F016         	call	___lwtoft	;wreg free
   894  001B7C  C009  F01C         	movff	?___lwtoft,___ftdiv@f1
   895  001B80  C00A  F01D         	movff	?___lwtoft+1,___ftdiv@f1+1
   896  001B84  C00B  F01E         	movff	?___lwtoft+2,___ftdiv@f1+2
   897  001B88  0E00               	movlw	0
   898  001B8A  6E1F               	movwf	___ftdiv@f2,c
   899  001B8C  0E7A               	movlw	122
   900  001B8E  6E20               	movwf	___ftdiv@f2+1,c
   901  001B90  0E44               	movlw	68
   902  001B92  6E21               	movwf	___ftdiv@f2+2,c
   903  001B94  EC6F  F013         	call	___ftdiv	;wreg free
   904  001B98  C01C  F07B         	movff	?___ftdiv,_volt
   905  001B9C  C01D  F07C         	movff	?___ftdiv+1,_volt+1
   906  001BA0  C01E  F07D         	movff	?___ftdiv+2,_volt+2
   907                           
   908                           ;lab6p3.c: 76: R = (volt / (4.096 - volt)) * 100.0;
   909  001BA4  0E12               	movlw	18
   910  001BA6  6E13               	movwf	___ftadd@f2,c
   911  001BA8  0E83               	movlw	131
   912  001BAA  6E14               	movwf	___ftadd@f2+1,c
   913  001BAC  0E40               	movlw	64
   914  001BAE  6E15               	movwf	___ftadd@f2+2,c
   915  001BB0  C07B  F00D         	movff	_volt,___ftneg@f1
   916  001BB4  C07C  F00E         	movff	_volt+1,___ftneg@f1+1
   917  001BB8  C07D  F00F         	movff	_volt+2,___ftneg@f1+2
   918  001BBC  ECC1  F016         	call	___ftneg	;wreg free
   919  001BC0  C00D  F010         	movff	?___ftneg,___ftadd@f1
   920  001BC4  C00E  F011         	movff	?___ftneg+1,___ftadd@f1+1
   921  001BC8  C00F  F012         	movff	?___ftneg+2,___ftadd@f1+2
   922  001BCC  ECFE  F00F         	call	___ftadd	;wreg free
   923  001BD0  C010  F01F         	movff	?___ftadd,___ftdiv@f2
   924  001BD4  C011  F020         	movff	?___ftadd+1,___ftdiv@f2+1
   925  001BD8  C012  F021         	movff	?___ftadd+2,___ftdiv@f2+2
   926  001BDC  C07B  F01C         	movff	_volt,___ftdiv@f1
   927  001BE0  C07C  F01D         	movff	_volt+1,___ftdiv@f1+1
   928  001BE4  C07D  F01E         	movff	_volt+2,___ftdiv@f1+2
   929  001BE8  EC6F  F013         	call	___ftdiv	;wreg free
   930  001BEC  C01C  F02B         	movff	?___ftdiv,___ftmul@f1
   931  001BF0  C01D  F02C         	movff	?___ftdiv+1,___ftmul@f1+1
   932  001BF4  C01E  F02D         	movff	?___ftdiv+2,___ftmul@f1+2
   933  001BF8  0E00               	movlw	0
   934  001BFA  6E2E               	movwf	___ftmul@f2,c
   935  001BFC  0EC8               	movlw	200
   936  001BFE  6E2F               	movwf	___ftmul@f2+1,c
   937  001C00  0E42               	movlw	66
   938  001C02  6E30               	movwf	___ftmul@f2+2,c
   939  001C04  EC80  F012         	call	___ftmul	;wreg free
   940  001C08  C02B  F078         	movff	?___ftmul,_R
   941  001C0C  C02C  F079         	movff	?___ftmul+1,_R+1
   942  001C10  C02D  F07A         	movff	?___ftmul+2,_R+2
   943                           
   944                           ;lab6p3.c: 81: wait_1_sec();
   945  001C14  ECD3  F016         	call	_wait_1_sec	;wreg free
   946                           
   947                           ;lab6p3.c: 82: if(R < 10)
   948  001C18  C078  F001         	movff	_R,___ftge@ff1
   949  001C1C  C079  F002         	movff	_R+1,___ftge@ff1+1
   950  001C20  C07A  F003         	movff	_R+2,___ftge@ff1+2
   951  001C24  0E00               	movlw	0
   952  001C26  6E04               	movwf	___ftge@ff2,c
   953  001C28  0E20               	movlw	32
   954  001C2A  6E05               	movwf	___ftge@ff2+1,c
   955  001C2C  0E41               	movlw	65
   956  001C2E  6E06               	movwf	___ftge@ff2+2,c
   957  001C30  EC8E  F014         	call	___ftge	;wreg free
   958  001C34  B0D8               	btfsc	status,0,c
   959  001C36  D051               	goto	l2783
   960                           
   961                           ;lab6p3.c: 83: {
   962                           ;lab6p3.c: 84: char U = (int) R;
   963  001C38  C078  F03A         	movff	_R,___fttol@f1
   964  001C3C  C079  F03B         	movff	_R+1,___fttol@f1+1
   965  001C40  C07A  F03C         	movff	_R+2,___fttol@f1+2
   966  001C44  ECFC  F012         	call	___fttol	;wreg free
   967  001C48  503A               	movf	?___fttol,w,c
   968  001C4A  6E77               	movwf	main@U,c
   969                           
   970                           ;lab6p3.c: 85: char L = (int) ((R-U) * 10);
   971  001C4C  0E00               	movlw	0
   972  001C4E  6E2E               	movwf	___ftmul@f2,c
   973  001C50  0E20               	movlw	32
   974  001C52  6E2F               	movwf	___ftmul@f2+1,c
   975  001C54  0E41               	movlw	65
   976  001C56  6E30               	movwf	___ftmul@f2+2,c
   977  001C58  C078  F013         	movff	_R,___ftadd@f2
   978  001C5C  C079  F014         	movff	_R+1,___ftadd@f2+1
   979  001C60  C07A  F015         	movff	_R+2,___ftadd@f2+2
   980  001C64  5077               	movf	main@U,w,c
   981  001C66  ECAE  F016         	call	___lbtoft
   982  001C6A  C009  F00D         	movff	?___lbtoft,___ftneg@f1
   983  001C6E  C00A  F00E         	movff	?___lbtoft+1,___ftneg@f1+1
   984  001C72  C00B  F00F         	movff	?___lbtoft+2,___ftneg@f1+2
   985  001C76  ECC1  F016         	call	___ftneg	;wreg free
   986  001C7A  C00D  F010         	movff	?___ftneg,___ftadd@f1
   987  001C7E  C00E  F011         	movff	?___ftneg+1,___ftadd@f1+1
   988  001C82  C00F  F012         	movff	?___ftneg+2,___ftadd@f1+2
   989  001C86  ECFE  F00F         	call	___ftadd	;wreg free
   990  001C8A  C010  F02B         	movff	?___ftadd,___ftmul@f1
   991  001C8E  C011  F02C         	movff	?___ftadd+1,___ftmul@f1+1
   992  001C92  C012  F02D         	movff	?___ftadd+2,___ftmul@f1+2
   993  001C96  EC80  F012         	call	___ftmul	;wreg free
   994  001C9A  C02B  F03A         	movff	?___ftmul,___fttol@f1
   995  001C9E  C02C  F03B         	movff	?___ftmul+1,___fttol@f1+1
   996  001CA2  C02D  F03C         	movff	?___ftmul+2,___fttol@f1+2
   997  001CA6  ECFC  F012         	call	___fttol	;wreg free
   998  001CAA  503A               	movf	?___fttol,w,c
   999  001CAC  6E74               	movwf	main@L,c
  1000                           
  1001                           ;lab6p3.c: 87: PORTB = LED_7seg[U];
  1002  001CAE  5077               	movf	main@U,w,c
  1003  001CB0  0D01               	mullw	1
  1004  001CB2  0E97               	movlw	low _LED_7seg
  1005  001CB4  24F3               	addwf	prodl,w,c
  1006  001CB6  6ED9               	movwf	fsr2l,c
  1007  001CB8  0E00               	movlw	high _LED_7seg
  1008  001CBA  20F4               	addwfc	prodh,w,c
  1009  001CBC  6EDA               	movwf	fsr2h,c
  1010  001CBE  50DF               	movf	indf2,w,c
  1011  001CC0  6E81               	movwf	3969,c	;volatile
  1012                           
  1013                           ;lab6p3.c: 88: PORTD = LED_7seg[L];
  1014  001CC2  5074               	movf	main@L,w,c
  1015  001CC4  0D01               	mullw	1
  1016  001CC6  0E97               	movlw	low _LED_7seg
  1017  001CC8  24F3               	addwf	prodl,w,c
  1018  001CCA  6ED9               	movwf	fsr2l,c
  1019  001CCC  0E00               	movlw	high _LED_7seg
  1020  001CCE  20F4               	addwfc	prodh,w,c
  1021  001CD0  6EDA               	movwf	fsr2h,c
  1022  001CD2  50DF               	movf	indf2,w,c
  1023  001CD4  6E83               	movwf	3971,c	;volatile
  1024                           
  1025                           ;lab6p3.c: 89: PORTDbits.RD7 = 0;
  1026  001CD6  9E83               	bcf	3971,7,c	;volatile
  1027                           
  1028                           ;lab6p3.c: 90: }
  1029  001CD8  D042               	goto	l2791
  1030  001CDA                     l2783:
  1031                           
  1032                           ;lab6p3.c: 92: else
  1033                           ;lab6p3.c: 93: {
  1034                           ;lab6p3.c: 94: char U = (int)(R/10);
  1035  001CDA  0E00               	movlw	0
  1036  001CDC  6E1F               	movwf	___ftdiv@f2,c
  1037  001CDE  0E20               	movlw	32
  1038  001CE0  6E20               	movwf	___ftdiv@f2+1,c
  1039  001CE2  0E41               	movlw	65
  1040  001CE4  6E21               	movwf	___ftdiv@f2+2,c
  1041  001CE6  C078  F01C         	movff	_R,___ftdiv@f1
  1042  001CEA  C079  F01D         	movff	_R+1,___ftdiv@f1+1
  1043  001CEE  C07A  F01E         	movff	_R+2,___ftdiv@f1+2
  1044  001CF2  EC6F  F013         	call	___ftdiv	;wreg free
  1045  001CF6  C01C  F03A         	movff	?___ftdiv,___fttol@f1
  1046  001CFA  C01D  F03B         	movff	?___ftdiv+1,___fttol@f1+1
  1047  001CFE  C01E  F03C         	movff	?___ftdiv+2,___fttol@f1+2
  1048  001D02  ECFC  F012         	call	___fttol	;wreg free
  1049  001D06  503A               	movf	?___fttol,w,c
  1050  001D08  6E75               	movwf	main@U_557,c
  1051                           
  1052                           ;lab6p3.c: 95: char L = (int)R % 10;
  1053  001D0A  C078  F03A         	movff	_R,___fttol@f1
  1054  001D0E  C079  F03B         	movff	_R+1,___fttol@f1+1
  1055  001D12  C07A  F03C         	movff	_R+2,___fttol@f1+2
  1056  001D16  ECFC  F012         	call	___fttol	;wreg free
  1057  001D1A  C03A  F049         	movff	?___fttol,___awmod@dividend
  1058  001D1E  C03B  F04A         	movff	?___fttol+1,___awmod@dividend+1
  1059  001D22  0E00               	movlw	0
  1060  001D24  6E4C               	movwf	___awmod@divisor+1,c
  1061  001D26  0E0A               	movlw	10
  1062  001D28  6E4B               	movwf	___awmod@divisor,c
  1063  001D2A  EC1F  F015         	call	___awmod	;wreg free
  1064  001D2E  5049               	movf	?___awmod,w,c
  1065  001D30  6E76               	movwf	main@L_558,c
  1066                           
  1067                           ;lab6p3.c: 97: PORTB = LED_7seg[U];
  1068  001D32  5075               	movf	main@U_557,w,c
  1069  001D34  0D01               	mullw	1
  1070  001D36  0E97               	movlw	low _LED_7seg
  1071  001D38  24F3               	addwf	prodl,w,c
  1072  001D3A  6ED9               	movwf	fsr2l,c
  1073  001D3C  0E00               	movlw	high _LED_7seg
  1074  001D3E  20F4               	addwfc	prodh,w,c
  1075  001D40  6EDA               	movwf	fsr2h,c
  1076  001D42  50DF               	movf	indf2,w,c
  1077  001D44  6E81               	movwf	3969,c	;volatile
  1078                           
  1079                           ;lab6p3.c: 98: PORTD = LED_7seg[L];
  1080  001D46  5076               	movf	main@L_558,w,c
  1081  001D48  0D01               	mullw	1
  1082  001D4A  0E97               	movlw	low _LED_7seg
  1083  001D4C  24F3               	addwf	prodl,w,c
  1084  001D4E  6ED9               	movwf	fsr2l,c
  1085  001D50  0E00               	movlw	high _LED_7seg
  1086  001D52  20F4               	addwfc	prodh,w,c
  1087  001D54  6EDA               	movwf	fsr2h,c
  1088  001D56  50DF               	movf	indf2,w,c
  1089  001D58  6E83               	movwf	3971,c	;volatile
  1090                           
  1091                           ;lab6p3.c: 99: PORTDbits.RD7 = 1;
  1092  001D5A  8E83               	bsf	3971,7,c	;volatile
  1093  001D5C  D000               	goto	l2791
  1094  001D5E                     l2791:
  1095                           
  1096                           ;lab6p3.c: 100: }
  1097                           ;lab6p3.c: 104: printf ("Resistance = %f \r\n", R);
  1098  001D5E  0E77               	movlw	low STR_1
  1099  001D60  6E67               	movwf	printf@f,c
  1100  001D62  0E10               	movlw	high STR_1
  1101  001D64  6E68               	movwf	printf@f+1,c
  1102  001D66  C078  F069         	movff	_R,?_printf+2
  1103  001D6A  C079  F06A         	movff	_R+1,?_printf+3
  1104  001D6E  C07A  F06B         	movff	_R+2,?_printf+4
  1105  001D72  EC46  F008         	call	_printf	;wreg free
  1106                           
  1107                           ;lab6p3.c: 105: check_buzzer(R);
  1108  001D76  C078  F00A         	movff	_R,check_buzzer@r
  1109  001D7A  C079  F00B         	movff	_R+1,check_buzzer@r+1
  1110  001D7E  C07A  F00C         	movff	_R+2,check_buzzer@r+2
  1111  001D82  EC5D  F016         	call	_check_buzzer	;wreg free
  1112                           
  1113                           ;lab6p3.c: 107: display_D1(R);
  1114  001D86  C078  F03A         	movff	_R,___fttol@f1
  1115  001D8A  C079  F03B         	movff	_R+1,___fttol@f1+1
  1116  001D8E  C07A  F03C         	movff	_R+2,___fttol@f1+2
  1117  001D92  ECFC  F012         	call	___fttol	;wreg free
  1118  001D96  C03A  F057         	movff	?___fttol,display_D1@R
  1119  001D9A  C03B  F058         	movff	?___fttol+1,display_D1@R+1
  1120  001D9E  EC22  F016         	call	_display_D1	;wreg free
  1121                           
  1122                           ;lab6p3.c: 108: display_D2(R);
  1123  001DA2  C078  F00A         	movff	_R,display_D2@T
  1124  001DA6  C079  F00B         	movff	_R+1,display_D2@T+1
  1125  001DAA  C07A  F00C         	movff	_R+2,display_D2@T+2
  1126  001DAE  ECE0  F010         	call	_display_D2	;wreg free
  1127  001DB2  D6CE               	goto	l2765
  1128  001DB4  EF00  F000         	goto	start
  1129  001DB8                     __end_of_main:
  1130                           	opt stack 0
  1131                           tblptru	equ	0xFF8
  1132                           tblptrh	equ	0xFF7
  1133                           tblptrl	equ	0xFF6
  1134                           tablat	equ	0xFF5
  1135                           prodh	equ	0xFF4
  1136                           prodl	equ	0xFF3
  1137                           postinc0	equ	0xFEE
  1138                           wreg	equ	0xFE8
  1139                           postdec1	equ	0xFE5
  1140                           fsr1l	equ	0xFE1
  1141                           indf2	equ	0xFDF
  1142                           fsr2h	equ	0xFDA
  1143                           fsr2l	equ	0xFD9
  1144                           status	equ	0xFD8
  1145                           
  1146 ;; *************** function _wait_1_sec *****************
  1147 ;; Defined at:
  1148 ;;		line 59 in file "lab6p3.c"
  1149 ;; Parameters:    Size  Location     Type
  1150 ;;		None
  1151 ;; Auto vars:     Size  Location     Type
  1152 ;;  j               2    0[COMRAM] int 
  1153 ;; Return value:  Size  Location     Type
  1154 ;;		None               void
  1155 ;; Registers used:
  1156 ;;		wreg, status,2, status,0
  1157 ;; Tracked objects:
  1158 ;;		On entry : 0/0
  1159 ;;		On exit  : 0/0
  1160 ;;		Unchanged: 0/0
  1161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1163 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1165 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1166 ;;Total ram usage:        2 bytes
  1167 ;; Hardware stack levels used:    1
  1168 ;; This function calls:
  1169 ;;		Nothing
  1170 ;; This function is called by:
  1171 ;;		_main
  1172 ;; This function uses a non-reentrant model
  1173 ;;
  1174                           
  1175                           	psect	text1
  1176  002DA6                     __ptext1:
  1177                           	opt stack 0
  1178  002DA6                     _wait_1_sec:
  1179                           	opt stack 30
  1180                           
  1181                           ;lab6p3.c: 61: for (int j=0; j<0xffff; j++);
  1182                           
  1183                           ;incstack = 0
  1184  002DA6  0E00               	movlw	0
  1185  002DA8  6E02               	movwf	wait_1_sec@j+1,c
  1186  002DAA  0E00               	movlw	0
  1187  002DAC  6E01               	movwf	wait_1_sec@j,c
  1188  002DAE                     l2489:
  1189  002DAE  2801               	incf	wait_1_sec@j,w,c
  1190  002DB0  E105               	bnz	l2493
  1191  002DB2  2802               	incf	wait_1_sec@j+1,w,c
  1192  002DB4  B4D8               	btfsc	status,2,c
  1193  002DB6  D006               	goto	l104
  1194  002DB8  D001               	goto	l2493
  1195  002DBA  D004               	goto	l104
  1196  002DBC                     l2493:
  1197  002DBC  4A01               	infsnz	wait_1_sec@j,f,c
  1198  002DBE  2A02               	incf	wait_1_sec@j+1,f,c
  1199  002DC0  D7F6               	goto	l2489
  1200  002DC2  D7FC               	goto	l2493
  1201  002DC4                     l104:
  1202  002DC4  0012               	return		;funcret
  1203  002DC6                     __end_of_wait_1_sec:
  1204                           	opt stack 0
  1205                           tblptru	equ	0xFF8
  1206                           tblptrh	equ	0xFF7
  1207                           tblptrl	equ	0xFF6
  1208                           tablat	equ	0xFF5
  1209                           prodh	equ	0xFF4
  1210                           prodl	equ	0xFF3
  1211                           postinc0	equ	0xFEE
  1212                           wreg	equ	0xFE8
  1213                           postdec1	equ	0xFE5
  1214                           fsr1l	equ	0xFE1
  1215                           indf2	equ	0xFDF
  1216                           fsr2h	equ	0xFDA
  1217                           fsr2l	equ	0xFD9
  1218                           status	equ	0xFD8
  1219                           
  1220 ;; *************** function _select_ADC_CH *****************
  1221 ;; Defined at:
  1222 ;;		line 134 in file "lab6p3.c"
  1223 ;; Parameters:    Size  Location     Type
  1224 ;;  AN_pin          1    wreg     unsigned char 
  1225 ;; Auto vars:     Size  Location     Type
  1226 ;;  AN_pin          1    0[COMRAM] unsigned char 
  1227 ;; Return value:  Size  Location     Type
  1228 ;;		None               void
  1229 ;; Registers used:
  1230 ;;		wreg, status,2, status,0, prodl, prodh
  1231 ;; Tracked objects:
  1232 ;;		On entry : 0/0
  1233 ;;		On exit  : 0/0
  1234 ;;		Unchanged: 0/0
  1235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1237 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1239 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1240 ;;Total ram usage:        1 bytes
  1241 ;; Hardware stack levels used:    1
  1242 ;; This function calls:
  1243 ;;		Nothing
  1244 ;; This function is called by:
  1245 ;;		_main
  1246 ;; This function uses a non-reentrant model
  1247 ;;
  1248                           
  1249                           	psect	text2
  1250  002E1C                     __ptext2:
  1251                           	opt stack 0
  1252  002E1C                     _select_ADC_CH:
  1253                           	opt stack 30
  1254                           
  1255                           ;incstack = 0
  1256                           ;select_ADC_CH@AN_pin stored from wreg
  1257  002E1C  6E01               	movwf	select_ADC_CH@AN_pin,c
  1258                           
  1259                           ;lab6p3.c: 136: ADCON0 = AN_pin * 4 + 1;
  1260  002E1E  5001               	movf	select_ADC_CH@AN_pin,w,c
  1261  002E20  0D04               	mullw	4
  1262  002E22  28F3               	incf	prodl,w,c
  1263  002E24  6EC2               	movwf	4034,c	;volatile
  1264  002E26  0012               	return		;funcret
  1265  002E28                     __end_of_select_ADC_CH:
  1266                           	opt stack 0
  1267                           tblptru	equ	0xFF8
  1268                           tblptrh	equ	0xFF7
  1269                           tblptrl	equ	0xFF6
  1270                           tablat	equ	0xFF5
  1271                           prodh	equ	0xFF4
  1272                           prodl	equ	0xFF3
  1273                           postinc0	equ	0xFEE
  1274                           wreg	equ	0xFE8
  1275                           postdec1	equ	0xFE5
  1276                           fsr1l	equ	0xFE1
  1277                           indf2	equ	0xFDF
  1278                           fsr2h	equ	0xFDA
  1279                           fsr2l	equ	0xFD9
  1280                           status	equ	0xFD8
  1281                           
  1282 ;; *************** function _printf *****************
  1283 ;; Defined at:
  1284 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  1285 ;; Parameters:    Size  Location     Type
  1286 ;;  f               2  102[COMRAM] PTR const unsigned char 
  1287 ;;		 -> STR_1(19), 
  1288 ;; Auto vars:     Size  Location     Type
  1289 ;;  tmpval          4   15[BANK0 ] struct .
  1290 ;;  val             4    9[BANK0 ] unsigned long 
  1291 ;;  fval            3   19[BANK0 ] unsigned long 
  1292 ;;  cp              3    0        PTR const unsigned char 
  1293 ;;  exp             2   13[BANK0 ] int 
  1294 ;;  prec            2    7[BANK0 ] int 
  1295 ;;  flag            2    5[BANK0 ] unsigned short 
  1296 ;;  ap              2    3[BANK0 ] PTR void [1]
  1297 ;;		 -> ?_printf(2), 
  1298 ;;  len             2    0        unsigned int 
  1299 ;;  width           2    0        int 
  1300 ;;  c               1   22[BANK0 ] char 
  1301 ;;  d               1    0        unsigned char 
  1302 ;; Return value:  Size  Location     Type
  1303 ;;                  2  102[COMRAM] int 
  1304 ;; Registers used:
  1305 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1306 ;; Tracked objects:
  1307 ;;		On entry : 0/0
  1308 ;;		On exit  : 0/0
  1309 ;;		Unchanged: 0/0
  1310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1311 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1312 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1313 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1314 ;;      Totals:        11      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1315 ;;Total ram usage:       34 bytes
  1316 ;; Hardware stack levels used:    1
  1317 ;; Hardware stack levels required when called:    3
  1318 ;; This function calls:
  1319 ;;		___awdiv
  1320 ;;		___ftadd
  1321 ;;		___ftge
  1322 ;;		___ftmul
  1323 ;;		___ftneg
  1324 ;;		___ftsub
  1325 ;;		___fttol
  1326 ;;		___lldiv
  1327 ;;		___llmod
  1328 ;;		___lltoft
  1329 ;;		___wmul
  1330 ;;		__div_to_l_
  1331 ;;		__tdiv_to_l_
  1332 ;;		_fround
  1333 ;;		_putch
  1334 ;;		_scale
  1335 ;; This function is called by:
  1336 ;;		_main
  1337 ;; This function uses a non-reentrant model
  1338 ;;
  1339                           
  1340                           	psect	text3
  1341  00108C                     __ptext3:
  1342                           	opt stack 0
  1343  00108C                     _printf:
  1344                           	opt stack 27
  1345                           
  1346                           ;doprnt.c: 466: va_list ap;
  1347                           ;doprnt.c: 499: signed char c;
  1348                           ;doprnt.c: 501: int width;
  1349                           ;doprnt.c: 504: int prec;
  1350                           ;doprnt.c: 508: unsigned short flag;
  1351                           ;doprnt.c: 515: char d;
  1352                           ;doprnt.c: 516: double fval;
  1353                           ;doprnt.c: 517: int exp;
  1354                           ;doprnt.c: 523: union {
  1355                           ;doprnt.c: 524: unsigned long vd;
  1356                           ;doprnt.c: 525: double integ;
  1357                           ;doprnt.c: 526: } tmpval;
  1358                           ;doprnt.c: 528: unsigned long val;
  1359                           ;doprnt.c: 529: unsigned len;
  1360                           ;doprnt.c: 530: const char * cp;
  1361                           ;doprnt.c: 533: *ap = __va_start();
  1362                           
  1363                           ;incstack = 0
  1364  00108C  0E69               	movlw	low (?_printf+2)
  1365  00108E  0100               	movlb	0	; () banked
  1366  001090  6F83               	movwf	printf@ap& (0+255),b
  1367  001092  0E00               	movlw	high (?_printf+2)
  1368  001094  0100               	movlb	0	; () banked
  1369  001096  6F84               	movwf	(printf@ap+1)& (0+255),b
  1370                           
  1371                           ;doprnt.c: 536: while(c = *f++) {
  1372  001098  D351               	goto	l2663
  1373  00109A                     l2515:
  1374                           
  1375                           ; BSR set to: 0
  1376                           ;doprnt.c: 538: if(c != '%')
  1377  00109A  0E25               	movlw	37
  1378  00109C  0100               	movlb	0	; () banked
  1379  00109E  1996               	xorwf	printf@c& (0+255),w,b
  1380  0010A0  B4D8               	btfsc	status,2,c
  1381  0010A2  D005               	goto	l2519
  1382                           
  1383                           ; BSR set to: 0
  1384                           ;doprnt.c: 540: {
  1385                           ;doprnt.c: 541: (putch(c) );
  1386  0010A4  0100               	movlb	0	; () banked
  1387  0010A6  5196               	movf	printf@c& (0+255),w,b
  1388  0010A8  EC00  F017         	call	_putch
  1389                           
  1390                           ;doprnt.c: 542: continue;
  1391  0010AC  D347               	goto	l2663
  1392  0010AE                     l2519:
  1393                           
  1394                           ;doprnt.c: 543: }
  1395                           ;doprnt.c: 548: flag = 0;
  1396  0010AE  0E00               	movlw	0
  1397  0010B0  0100               	movlb	0	; () banked
  1398  0010B2  6F86               	movwf	(printf@flag+1)& (0+255),b
  1399  0010B4  0E00               	movlw	0
  1400  0010B6  6F85               	movwf	printf@flag& (0+255),b
  1401                           
  1402                           ;doprnt.c: 635: switch(c = *f++) {
  1403  0010B8  D006               	goto	l2525
  1404                           
  1405                           ; BSR set to: 0
  1406                           ;doprnt.c: 638: goto alldone;
  1407                           
  1408                           ;doprnt.c: 637: case 0:
  1409  0010BA  D34F               	goto	l262
  1410  0010BC                     l2521:
  1411                           
  1412                           ; BSR set to: 0
  1413                           ;doprnt.c: 663: flag |= 0x400;
  1414  0010BC  0100               	movlb	0	; () banked
  1415  0010BE  8586               	bsf	(printf@flag+1)& (0+255),2,b
  1416                           
  1417                           ;doprnt.c: 664: break;
  1418  0010C0  D014               	goto	l2527
  1419                           
  1420                           ; BSR set to: 0
  1421                           ;doprnt.c: 813: continue;
  1422                           
  1423                           ;doprnt.c: 802: default:
  1424  0010C2  D33C               	goto	l2663
  1425                           
  1426                           ; BSR set to: 0
  1427                           ;doprnt.c: 822: }
  1428  0010C4  D012               	goto	l2527
  1429  0010C6                     l2525:
  1430                           
  1431                           ; BSR set to: 0
  1432  0010C6  C067  FFF6         	movff	printf@f,tblptrl
  1433  0010CA  C068  FFF7         	movff	printf@f+1,tblptrh
  1434  0010CE  4A67               	infsnz	printf@f,f,c
  1435  0010D0  2A68               	incf	printf@f+1,f,c
  1436  0010D2                     	if	0	;tblptru may be non-zero
  1437  0010D2                     	endif
  1438  0010D2                     	if	0	;tblptru may be non-zero
  1439  0010D2                     	endif
  1440  0010D2  0008               	tblrd		*
  1441  0010D4  CFF5 F096          	movff	tablat,printf@c
  1442  0010D8  0100               	movlb	0	; () banked
  1443  0010DA  5196               	movf	printf@c& (0+255),w,b
  1444                           
  1445                           ; Switch size 1, requested type "space"
  1446                           ; Number of cases is 2, Range of values is 0 to 102
  1447                           ; switch strategies available:
  1448                           ; Name         Instructions Cycles
  1449                           ; simple_byte            7     4 (average)
  1450                           ;	Chosen strategy is simple_byte
  1451  0010DC  0A00               	xorlw	0	; case 0
  1452  0010DE  B4D8               	btfsc	status,2,c
  1453  0010E0  D33C               	goto	l262
  1454  0010E2  0A66               	xorlw	102	; case 102
  1455  0010E4  B4D8               	btfsc	status,2,c
  1456  0010E6  D7EA               	goto	l2521
  1457  0010E8  D329               	goto	l2663
  1458  0010EA                     l2527:
  1459                           
  1460                           ; BSR set to: 0
  1461                           ;doprnt.c: 825: if(flag & (0x700)) {
  1462  0010EA  0E07               	movlw	7
  1463  0010EC  0100               	movlb	0	; () banked
  1464  0010EE  1586               	andwf	(printf@flag+1)& (0+255),w,b
  1465  0010F0  B4D8               	btfsc	status,2,c
  1466  0010F2  D314               	goto	l2659
  1467                           
  1468                           ; BSR set to: 0
  1469                           ;doprnt.c: 829: prec = 6;
  1470  0010F4  0E00               	movlw	0
  1471  0010F6  0100               	movlb	0	; () banked
  1472  0010F8  6F88               	movwf	(printf@prec+1)& (0+255),b
  1473  0010FA  0E06               	movlw	6
  1474  0010FC  6F87               	movwf	printf@prec& (0+255),b
  1475                           
  1476                           ; BSR set to: 0
  1477                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1478  0010FE  C083  FFD9         	movff	printf@ap,fsr2l
  1479  001102  C084  FFDA         	movff	printf@ap+1,fsr2h
  1480  001106  CFDE F093          	movff	postinc2,printf@fval
  1481  00110A  CFDE F094          	movff	postinc2,printf@fval+1
  1482  00110E  CFDD F095          	movff	postdec2,printf@fval+2
  1483                           
  1484                           ; BSR set to: 0
  1485  001112  0E03               	movlw	3
  1486  001114  0100               	movlb	0	; () banked
  1487  001116  2783               	addwf	printf@ap& (0+255),f,b
  1488  001118  0E00               	movlw	0
  1489  00111A  2384               	addwfc	(printf@ap+1)& (0+255),f,b
  1490                           
  1491                           ; BSR set to: 0
  1492                           ;doprnt.c: 831: if(fval < 0.0) {
  1493  00111C  0100               	movlb	0	; () banked
  1494  00111E  AF95               	btfss	(printf@fval+2)& (0+255),7,b
  1495  001120  D012               	goto	l2541
  1496                           
  1497                           ; BSR set to: 0
  1498                           ;doprnt.c: 832: fval = -fval;
  1499  001122  C093  F00D         	movff	printf@fval,___ftneg@f1
  1500  001126  C094  F00E         	movff	printf@fval+1,___ftneg@f1+1
  1501  00112A  C095  F00F         	movff	printf@fval+2,___ftneg@f1+2
  1502  00112E  ECC1  F016         	call	___ftneg	;wreg free
  1503  001132  C00D  F093         	movff	?___ftneg,printf@fval
  1504  001136  C00E  F094         	movff	?___ftneg+1,printf@fval+1
  1505  00113A  C00F  F095         	movff	?___ftneg+2,printf@fval+2
  1506                           
  1507                           ;doprnt.c: 833: flag |= 0x03;
  1508  00113E  0E03               	movlw	3
  1509  001140  0100               	movlb	0	; () banked
  1510  001142  1385               	iorwf	printf@flag& (0+255),f,b
  1511  001144  D000               	goto	l2541
  1512  001146                     l2541:
  1513                           
  1514                           ; BSR set to: 0
  1515                           ;doprnt.c: 834: }
  1516                           ;doprnt.c: 835: exp = 0;
  1517  001146  0E00               	movlw	0
  1518  001148  0100               	movlb	0	; () banked
  1519  00114A  6F8E               	movwf	(printf@exp+1)& (0+255),b
  1520  00114C  0E00               	movlw	0
  1521  00114E  6F8D               	movwf	printf@exp& (0+255),b
  1522                           
  1523                           ; BSR set to: 0
  1524                           ;doprnt.c: 836: if( fval!=0) {
  1525  001150  0100               	movlb	0	; () banked
  1526  001152  5193               	movf	printf@fval& (0+255),w,b
  1527  001154  0100               	movlb	0	; () banked
  1528  001156  1194               	iorwf	(printf@fval+1)& (0+255),w,b
  1529  001158  0100               	movlb	0	; () banked
  1530  00115A  1195               	iorwf	(printf@fval+2)& (0+255),w,b
  1531  00115C  B4D8               	btfsc	status,2,c
  1532  00115E  D08D               	goto	l2569
  1533                           
  1534                           ; BSR set to: 0
  1535                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  1536  001160  0E82               	movlw	130
  1537  001162  6E6C               	movwf	??_printf& (0+255),c
  1538  001164  0EFF               	movlw	255
  1539  001166  6E6D               	movwf	(??_printf+1)& (0+255),c
  1540  001168  C093  F06E         	movff	printf@fval,??_printf+2
  1541  00116C  C094  F06F         	movff	printf@fval+1,??_printf+3
  1542  001170  C095  F070         	movff	printf@fval+2,??_printf+4
  1543  001174  C096  F071         	movff	printf@fval+3,??_printf+5
  1544  001178  0E10               	movlw	16
  1545  00117A  D005               	goto	u2550
  1546  00117C                     u2555:
  1547  00117C  90D8               	bcf	status,0,c
  1548  00117E  3271               	rrcf	??_printf+5,f,c
  1549  001180  3270               	rrcf	??_printf+4,f,c
  1550  001182  326F               	rrcf	??_printf+3,f,c
  1551  001184  326E               	rrcf	??_printf+2,f,c
  1552  001186                     u2550:
  1553  001186  2EE8               	decfsz	wreg,f,c
  1554  001188  D7F9               	goto	u2555
  1555  00118A  506E               	movf	??_printf+2,w,c
  1556  00118C  246C               	addwf	??_printf,w,c
  1557  00118E  0100               	movlb	0	; () banked
  1558  001190  6F8D               	movwf	printf@exp& (0+255),b
  1559  001192  0E00               	movlw	0
  1560  001194  206D               	addwfc	??_printf+1,w,c
  1561  001196  0100               	movlb	0	; () banked
  1562  001198  6F8E               	movwf	(printf@exp+1)& (0+255),b
  1563                           
  1564                           ; BSR set to: 0
  1565                           ;doprnt.c: 838: exp--;
  1566  00119A  0100               	movlb	0	; () banked
  1567  00119C  078D               	decf	printf@exp& (0+255),f,b
  1568  00119E  A0D8               	btfss	status,0,c
  1569  0011A0  078E               	decf	(printf@exp+1)& (0+255),f,b
  1570                           
  1571                           ; BSR set to: 0
  1572                           ;doprnt.c: 839: exp *= 3;
  1573  0011A2  C08D  F057         	movff	printf@exp,___wmul@multiplier
  1574  0011A6  C08E  F058         	movff	printf@exp+1,___wmul@multiplier+1
  1575  0011AA  0E00               	movlw	0
  1576  0011AC  6E5A               	movwf	___wmul@multiplicand+1,c
  1577  0011AE  0E03               	movlw	3
  1578  0011B0  6E59               	movwf	___wmul@multiplicand,c
  1579  0011B2  EC74  F016         	call	___wmul	;wreg free
  1580  0011B6  C057  F08D         	movff	?___wmul,printf@exp
  1581  0011BA  C058  F08E         	movff	?___wmul+1,printf@exp+1
  1582                           
  1583                           ;doprnt.c: 840: exp /= 10;
  1584  0011BE  C08D  F04F         	movff	printf@exp,___awdiv@dividend
  1585  0011C2  C08E  F050         	movff	printf@exp+1,___awdiv@dividend+1
  1586  0011C6  0E00               	movlw	0
  1587  0011C8  6E52               	movwf	___awdiv@divisor+1,c
  1588  0011CA  0E0A               	movlw	10
  1589  0011CC  6E51               	movwf	___awdiv@divisor,c
  1590  0011CE  EC43  F014         	call	___awdiv	;wreg free
  1591  0011D2  C04F  F08D         	movff	?___awdiv,printf@exp
  1592  0011D6  C050  F08E         	movff	?___awdiv+1,printf@exp+1
  1593                           
  1594                           ;doprnt.c: 841: if(exp < 0)
  1595  0011DA  0100               	movlb	0	; () banked
  1596  0011DC  AF8E               	btfss	(printf@exp+1)& (0+255),7,b
  1597  0011DE  D005               	goto	l2557
  1598                           
  1599                           ; BSR set to: 0
  1600                           ;doprnt.c: 842: exp--;
  1601  0011E0  0100               	movlb	0	; () banked
  1602  0011E2  078D               	decf	printf@exp& (0+255),f,b
  1603  0011E4  A0D8               	btfss	status,0,c
  1604  0011E6  078E               	decf	(printf@exp+1)& (0+255),f,b
  1605  0011E8  D000               	goto	l2557
  1606  0011EA                     l2557:
  1607                           
  1608                           ; BSR set to: 0
  1609                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  1610  0011EA  0100               	movlb	0	; () banked
  1611  0011EC  518D               	movf	printf@exp& (0+255),w,b
  1612  0011EE  0800               	sublw	0
  1613  0011F0  ECAE  F00B         	call	_scale
  1614  0011F4  C05D  F08F         	movff	?_scale,printf@tmpval
  1615  0011F8  C05E  F090         	movff	?_scale+1,printf@tmpval+1
  1616  0011FC  C05F  F091         	movff	?_scale+2,printf@tmpval+2
  1617                           
  1618                           ;doprnt.c: 847: tmpval.integ *= fval;
  1619  001200  C08F  F02B         	movff	printf@tmpval,___ftmul@f1
  1620  001204  C090  F02C         	movff	printf@tmpval+1,___ftmul@f1+1
  1621  001208  C091  F02D         	movff	printf@tmpval+2,___ftmul@f1+2
  1622  00120C  C093  F02E         	movff	printf@fval,___ftmul@f2
  1623  001210  C094  F02F         	movff	printf@fval+1,___ftmul@f2+1
  1624  001214  C095  F030         	movff	printf@fval+2,___ftmul@f2+2
  1625  001218  EC80  F012         	call	___ftmul	;wreg free
  1626  00121C  C02B  F08F         	movff	?___ftmul,printf@tmpval
  1627  001220  C02C  F090         	movff	?___ftmul+1,printf@tmpval+1
  1628  001224  C02D  F091         	movff	?___ftmul+2,printf@tmpval+2
  1629                           
  1630                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  1631  001228  C08F  F001         	movff	printf@tmpval,___ftge@ff1
  1632  00122C  C090  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1633  001230  C091  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1634  001234  0E00               	movlw	0
  1635  001236  6E04               	movwf	___ftge@ff2,c
  1636  001238  0E80               	movlw	128
  1637  00123A  6E05               	movwf	___ftge@ff2+1,c
  1638  00123C  0E3F               	movlw	63
  1639  00123E  6E06               	movwf	___ftge@ff2+2,c
  1640  001240  EC8E  F014         	call	___ftge	;wreg free
  1641  001244  B0D8               	btfsc	status,0,c
  1642  001246  D005               	goto	l2565
  1643                           
  1644                           ;doprnt.c: 849: exp--;
  1645  001248  0100               	movlb	0	; () banked
  1646  00124A  078D               	decf	printf@exp& (0+255),f,b
  1647  00124C  A0D8               	btfss	status,0,c
  1648  00124E  078E               	decf	(printf@exp+1)& (0+255),f,b
  1649  001250  D014               	goto	l2569
  1650  001252                     l2565:
  1651                           
  1652                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  1653  001252  C08F  F001         	movff	printf@tmpval,___ftge@ff1
  1654  001256  C090  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1655  00125A  C091  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1656  00125E  0E00               	movlw	0
  1657  001260  6E04               	movwf	___ftge@ff2,c
  1658  001262  0E20               	movlw	32
  1659  001264  6E05               	movwf	___ftge@ff2+1,c
  1660  001266  0E41               	movlw	65
  1661  001268  6E06               	movwf	___ftge@ff2+2,c
  1662  00126A  EC8E  F014         	call	___ftge	;wreg free
  1663  00126E  A0D8               	btfss	status,0,c
  1664  001270  D004               	goto	l2569
  1665                           
  1666                           ;doprnt.c: 851: exp++;
  1667  001272  0100               	movlb	0	; () banked
  1668  001274  4B8D               	infsnz	printf@exp& (0+255),f,b
  1669  001276  2B8E               	incf	(printf@exp+1)& (0+255),f,b
  1670                           
  1671                           ; BSR set to: 0
  1672                           
  1673                           ; BSR set to: 0
  1674  001278  D000               	goto	l2569
  1675  00127A                     l2569:
  1676                           
  1677                           ;doprnt.c: 852: }
  1678                           ;doprnt.c: 1112: if(prec <= 12)
  1679  00127A  0100               	movlb	0	; () banked
  1680  00127C  BF88               	btfsc	(printf@prec+1)& (0+255),7,b
  1681  00127E  D008               	goto	l2571
  1682  001280  0100               	movlb	0	; () banked
  1683  001282  5188               	movf	(printf@prec+1)& (0+255),w,b
  1684  001284  E11E               	bnz	l2573
  1685  001286  0E0D               	movlw	13
  1686  001288  0100               	movlb	0	; () banked
  1687  00128A  5D87               	subwf	printf@prec& (0+255),w,b
  1688  00128C  B0D8               	btfsc	status,0,c
  1689  00128E  D019               	goto	l2573
  1690  001290                     l2571:
  1691                           
  1692                           ; BSR set to: 0
  1693                           ;doprnt.c: 1113: fval += fround(prec);
  1694  001290  C093  F010         	movff	printf@fval,___ftadd@f1
  1695  001294  C094  F011         	movff	printf@fval+1,___ftadd@f1+1
  1696  001298  C095  F012         	movff	printf@fval+2,___ftadd@f1+2
  1697  00129C  0100               	movlb	0	; () banked
  1698  00129E  5187               	movf	printf@prec& (0+255),w,b
  1699  0012A0  ECDC  F00E         	call	_fround
  1700  0012A4  C05D  F013         	movff	?_fround,___ftadd@f2
  1701  0012A8  C05E  F014         	movff	?_fround+1,___ftadd@f2+1
  1702  0012AC  C05F  F015         	movff	?_fround+2,___ftadd@f2+2
  1703  0012B0  ECFE  F00F         	call	___ftadd	;wreg free
  1704  0012B4  C010  F093         	movff	?___ftadd,printf@fval
  1705  0012B8  C011  F094         	movff	?___ftadd+1,printf@fval+1
  1706  0012BC  C012  F095         	movff	?___ftadd+2,printf@fval+2
  1707  0012C0  D000               	goto	l2573
  1708  0012C2                     l2573:
  1709                           
  1710                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  1711  0012C2  0100               	movlb	0	; () banked
  1712  0012C4  BF8E               	btfsc	(printf@exp+1)& (0+255),7,b
  1713  0012C6  D008               	goto	l2575
  1714  0012C8  0100               	movlb	0	; () banked
  1715  0012CA  518E               	movf	(printf@exp+1)& (0+255),w,b
  1716  0012CC  E128               	bnz	l2581
  1717  0012CE  0E0A               	movlw	10
  1718  0012D0  0100               	movlb	0	; () banked
  1719  0012D2  5D8D               	subwf	printf@exp& (0+255),w,b
  1720  0012D4  B0D8               	btfsc	status,0,c
  1721  0012D6  D023               	goto	l2581
  1722  0012D8                     l2575:
  1723                           
  1724                           ; BSR set to: 0
  1725  0012D8  0100               	movlb	0	; () banked
  1726  0012DA  5193               	movf	printf@fval& (0+255),w,b
  1727  0012DC  0100               	movlb	0	; () banked
  1728  0012DE  1194               	iorwf	(printf@fval+1)& (0+255),w,b
  1729  0012E0  0100               	movlb	0	; () banked
  1730  0012E2  1195               	iorwf	(printf@fval+2)& (0+255),w,b
  1731  0012E4  B4D8               	btfsc	status,2,c
  1732  0012E6  D077               	goto	l2595
  1733                           
  1734                           ; BSR set to: 0
  1735  0012E8  C093  F03A         	movff	printf@fval,___fttol@f1
  1736  0012EC  C094  F03B         	movff	printf@fval+1,___fttol@f1+1
  1737  0012F0  C095  F03C         	movff	printf@fval+2,___fttol@f1+2
  1738  0012F4  ECFC  F012         	call	___fttol	;wreg free
  1739  0012F8  503A               	movf	?___fttol,w,c
  1740  0012FA  103B               	iorwf	?___fttol+1,w,c
  1741  0012FC  103C               	iorwf	?___fttol+2,w,c
  1742  0012FE  103D               	iorwf	?___fttol+3,w,c
  1743  001300  A4D8               	btfss	status,2,c
  1744  001302  D069               	goto	l2595
  1745  001304  0100               	movlb	0	; () banked
  1746  001306  BF8E               	btfsc	(printf@exp+1)& (0+255),7,b
  1747  001308  D066               	goto	l2595
  1748  00130A  0100               	movlb	0	; () banked
  1749  00130C  518E               	movf	(printf@exp+1)& (0+255),w,b
  1750  00130E  E107               	bnz	l2581
  1751  001310  0E02               	movlw	2
  1752  001312  0100               	movlb	0	; () banked
  1753  001314  5D8D               	subwf	printf@exp& (0+255),w,b
  1754  001316  B0D8               	btfsc	status,0,c
  1755  001318  D002               	goto	l2581
  1756  00131A  D05D               	goto	l2595
  1757  00131C  D000               	goto	l2581
  1758  00131E                     l2581:
  1759                           
  1760                           ; BSR set to: 0
  1761                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  1762  00131E  C08F  F001         	movff	printf@tmpval,___ftge@ff1
  1763  001322  C090  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1764  001326  C091  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1765  00132A  0E70               	movlw	112
  1766  00132C  6E04               	movwf	___ftge@ff2,c
  1767  00132E  0E89               	movlw	137
  1768  001330  6E05               	movwf	___ftge@ff2+1,c
  1769  001332  0E40               	movlw	64
  1770  001334  6E06               	movwf	___ftge@ff2+2,c
  1771  001336  EC8E  F014         	call	___ftge	;wreg free
  1772  00133A  B0D8               	btfsc	status,0,c
  1773  00133C  D003               	goto	l2585
  1774                           
  1775                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  1776  00133E  0100               	movlb	0	; () banked
  1777  001340  0EF7               	movlw	247
  1778  001342  D002               	goto	L1
  1779  001344                     l2585:
  1780                           
  1781                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  1782  001344  0100               	movlb	0	; () banked
  1783  001346  0EF8               	movlw	248
  1784  001348                     L1:
  1785  001348  278D               	addwf	printf@exp& (0+255),f,b
  1786  00134A  0EFF               	movlw	255
  1787  00134C  238E               	addwfc	(printf@exp+1)& (0+255),f,b
  1788  00134E  D000               	goto	l2587
  1789  001350                     l2587:
  1790                           
  1791                           ; BSR set to: 0
  1792                           ;doprnt.c: 1124: }
  1793                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  1794  001350  0100               	movlb	0	; () banked
  1795  001352  518D               	movf	printf@exp& (0+255),w,b
  1796  001354  ECAE  F00B         	call	_scale
  1797  001358  C05D  F08F         	movff	?_scale,printf@tmpval
  1798  00135C  C05E  F090         	movff	?_scale+1,printf@tmpval+1
  1799  001360  C05F  F091         	movff	?_scale+2,printf@tmpval+2
  1800                           
  1801                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  1802  001364  D017               	goto	l2591
  1803  001366  C093  F001         	movff	printf@fval,__div_to_l_@f1
  1804  00136A  C094  F002         	movff	printf@fval+1,__div_to_l_@f1+1
  1805  00136E  C095  F003         	movff	printf@fval+2,__div_to_l_@f1+2
  1806  001372  C08F  F004         	movff	printf@tmpval,__div_to_l_@f2
  1807  001376  C090  F005         	movff	printf@tmpval+1,__div_to_l_@f2+1
  1808  00137A  C091  F006         	movff	printf@tmpval+2,__div_to_l_@f2+2
  1809  00137E  ECFB  F011         	call	__div_to_l_	;wreg free
  1810  001382  C001  F089         	movff	?__div_to_l_,printf@val
  1811  001386  C002  F08A         	movff	?__div_to_l_+1,printf@val+1
  1812  00138A  C003  F08B         	movff	?__div_to_l_+2,printf@val+2
  1813  00138E  C004  F08C         	movff	?__div_to_l_+3,printf@val+3
  1814  001392  D017               	goto	l2593
  1815  001394                     l2591:
  1816  001394  C093  F001         	movff	printf@fval,__tdiv_to_l_@f1
  1817  001398  C094  F002         	movff	printf@fval+1,__tdiv_to_l_@f1+1
  1818  00139C  C095  F003         	movff	printf@fval+2,__tdiv_to_l_@f1+2
  1819  0013A0  C08F  F004         	movff	printf@tmpval,__tdiv_to_l_@f2
  1820  0013A4  C090  F005         	movff	printf@tmpval+1,__tdiv_to_l_@f2+1
  1821  0013A8  C091  F006         	movff	printf@tmpval+2,__tdiv_to_l_@f2+2
  1822  0013AC  EC73  F011         	call	__tdiv_to_l_	;wreg free
  1823  0013B0  C001  F089         	movff	?__tdiv_to_l_,printf@val
  1824  0013B4  C002  F08A         	movff	?__tdiv_to_l_+1,printf@val+1
  1825  0013B8  C003  F08B         	movff	?__tdiv_to_l_+2,printf@val+2
  1826  0013BC  C004  F08C         	movff	?__tdiv_to_l_+3,printf@val+3
  1827  0013C0  D000               	goto	l2593
  1828  0013C2                     l2593:
  1829                           
  1830                           ;doprnt.c: 1129: fval = 0.0;
  1831  0013C2  0E00               	movlw	0
  1832  0013C4  0100               	movlb	0	; () banked
  1833  0013C6  6F93               	movwf	printf@fval& (0+255),b
  1834  0013C8  0E00               	movlw	0
  1835  0013CA  0100               	movlb	0	; () banked
  1836  0013CC  6F94               	movwf	(printf@fval+1)& (0+255),b
  1837  0013CE  0E00               	movlw	0
  1838  0013D0  0100               	movlb	0	; () banked
  1839  0013D2  6F95               	movwf	(printf@fval+2)& (0+255),b
  1840                           
  1841                           ;doprnt.c: 1130: } else {
  1842  0013D4  D034               	goto	l2599
  1843  0013D6                     l2595:
  1844                           
  1845                           ;doprnt.c: 1131: val = (unsigned long)fval;
  1846  0013D6  C093  F03A         	movff	printf@fval,___fttol@f1
  1847  0013DA  C094  F03B         	movff	printf@fval+1,___fttol@f1+1
  1848  0013DE  C095  F03C         	movff	printf@fval+2,___fttol@f1+2
  1849  0013E2  ECFC  F012         	call	___fttol	;wreg free
  1850  0013E6  C03A  F089         	movff	?___fttol,printf@val
  1851  0013EA  C03B  F08A         	movff	?___fttol+1,printf@val+1
  1852  0013EE  C03C  F08B         	movff	?___fttol+2,printf@val+2
  1853  0013F2  C03D  F08C         	movff	?___fttol+3,printf@val+3
  1854                           
  1855                           ;doprnt.c: 1132: fval -= (double)val;
  1856  0013F6  C093  F01C         	movff	printf@fval,___ftsub@f1
  1857  0013FA  C094  F01D         	movff	printf@fval+1,___ftsub@f1+1
  1858  0013FE  C095  F01E         	movff	printf@fval+2,___ftsub@f1+2
  1859  001402  C089  F009         	movff	printf@val,___lltoft@c
  1860  001406  C08A  F00A         	movff	printf@val+1,___lltoft@c+1
  1861  00140A  C08B  F00B         	movff	printf@val+2,___lltoft@c+2
  1862  00140E  C08C  F00C         	movff	printf@val+3,___lltoft@c+3
  1863  001412  ECD0  F015         	call	___lltoft	;wreg free
  1864  001416  C009  F01F         	movff	?___lltoft,___ftsub@f2
  1865  00141A  C00A  F020         	movff	?___lltoft+1,___ftsub@f2+1
  1866  00141E  C00B  F021         	movff	?___lltoft+2,___ftsub@f2+2
  1867  001422  EC00  F016         	call	___ftsub	;wreg free
  1868  001426  C01C  F093         	movff	?___ftsub,printf@fval
  1869  00142A  C01D  F094         	movff	?___ftsub+1,printf@fval+1
  1870  00142E  C01E  F095         	movff	?___ftsub+2,printf@fval+2
  1871                           
  1872                           ;doprnt.c: 1133: exp = 0;
  1873  001432  0E00               	movlw	0
  1874  001434  0100               	movlb	0	; () banked
  1875  001436  6F8E               	movwf	(printf@exp+1)& (0+255),b
  1876  001438  0E00               	movlw	0
  1877  00143A  6F8D               	movwf	printf@exp& (0+255),b
  1878  00143C  D000               	goto	l2599
  1879  00143E                     l2599:
  1880                           
  1881                           ; BSR set to: 0
  1882                           ;doprnt.c: 1134: }
  1883                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  1884  00143E  0E01               	movlw	1
  1885  001440  0100               	movlb	0	; () banked
  1886  001442  6F96               	movwf	printf@c& (0+255),b
  1887  001444                     l2601:
  1888                           
  1889                           ; BSR set to: 0
  1890  001444  0E0A               	movlw	10
  1891  001446  0100               	movlb	0	; () banked
  1892  001448  1996               	xorwf	printf@c& (0+255),w,b
  1893  00144A  B4D8               	btfsc	status,2,c
  1894  00144C  D022               	goto	l2613
  1895  00144E  D001               	goto	l2605
  1896                           
  1897                           ; BSR set to: 0
  1898  001450  D020               	goto	l2613
  1899  001452                     l2605:
  1900                           
  1901                           ; BSR set to: 0
  1902                           ;doprnt.c: 1137: if(val < dpowers[c])
  1903  001452  0100               	movlb	0	; () banked
  1904  001454  5196               	movf	printf@c& (0+255),w,b
  1905  001456  0D04               	mullw	4
  1906  001458  0E01               	movlw	low _dpowers
  1907  00145A  24F3               	addwf	prodl,w,c
  1908  00145C  6EF6               	movwf	tblptrl,c
  1909  00145E  0E10               	movlw	high _dpowers
  1910  001460  20F4               	addwfc	prodh,w,c
  1911  001462  6EF7               	movwf	tblptrh,c
  1912  001464                     	if	0	;There are less than 3 active tblptr bytes
  1913  001464                     	endif
  1914  001464  0009               	tblrd		*+
  1915  001466  50F5               	movf	tablat,w,c
  1916  001468  0100               	movlb	0	; () banked
  1917  00146A  5D89               	subwf	printf@val& (0+255),w,b
  1918  00146C  0009               	tblrd		*+
  1919  00146E  50F5               	movf	tablat,w,c
  1920  001470  0100               	movlb	0	; () banked
  1921  001472  598A               	subwfb	(printf@val+1)& (0+255),w,b
  1922  001474  0009               	tblrd		*+
  1923  001476  50F5               	movf	tablat,w,c
  1924  001478  0100               	movlb	0	; () banked
  1925  00147A  598B               	subwfb	(printf@val+2)& (0+255),w,b
  1926  00147C  0009               	tblrd		*+
  1927  00147E  50F5               	movf	tablat,w,c
  1928  001480  0100               	movlb	0	; () banked
  1929  001482  598C               	subwfb	(printf@val+3)& (0+255),w,b
  1930  001484  A0D8               	btfss	status,0,c
  1931  001486  D005               	goto	l2613
  1932  001488  D001               	goto	l2609
  1933                           
  1934                           ; BSR set to: 0
  1935                           ;doprnt.c: 1138: break;
  1936  00148A  D003               	goto	l2613
  1937  00148C                     l2609:
  1938                           
  1939                           ; BSR set to: 0
  1940  00148C  0100               	movlb	0	; () banked
  1941  00148E  2B96               	incf	printf@c& (0+255),f,b
  1942  001490  D7D9               	goto	l2601
  1943  001492                     l2613:
  1944                           
  1945                           ; BSR set to: 0
  1946                           ;doprnt.c: 1175: {
  1947                           ;doprnt.c: 1188: if(flag & 0x03)
  1948  001492  0E03               	movlw	3
  1949  001494  0100               	movlb	0	; () banked
  1950  001496  1585               	andwf	printf@flag& (0+255),w,b
  1951  001498  6E6C               	movwf	??_printf& (0+255),c
  1952  00149A  0E00               	movlw	0
  1953  00149C  0100               	movlb	0	; () banked
  1954  00149E  1586               	andwf	(printf@flag+1)& (0+255),w,b
  1955  0014A0  6E6D               	movwf	(??_printf+1)& (0+255),c
  1956  0014A2  506C               	movf	??_printf,w,c
  1957  0014A4  106D               	iorwf	??_printf+1,w,c
  1958  0014A6  B4D8               	btfsc	status,2,c
  1959  0014A8  D04B               	goto	l2623
  1960                           
  1961                           ; BSR set to: 0
  1962                           ;doprnt.c: 1190: (putch('-') );
  1963  0014AA  0E2D               	movlw	45
  1964  0014AC  EC00  F017         	call	_putch
  1965                           
  1966                           ;doprnt.c: 1195: }
  1967                           ;doprnt.c: 1196: while(c--) {
  1968  0014B0  D047               	goto	l2623
  1969  0014B2                     l2617:
  1970                           
  1971                           ;doprnt.c: 1200: {
  1972                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  1973  0014B2  C089  F001         	movff	printf@val,___lldiv@dividend
  1974  0014B6  C08A  F002         	movff	printf@val+1,___lldiv@dividend+1
  1975  0014BA  C08B  F003         	movff	printf@val+2,___lldiv@dividend+2
  1976  0014BE  C08C  F004         	movff	printf@val+3,___lldiv@dividend+3
  1977  0014C2  0100               	movlb	0	; () banked
  1978  0014C4  5196               	movf	printf@c& (0+255),w,b
  1979  0014C6  0D04               	mullw	4
  1980  0014C8  0E01               	movlw	low _dpowers
  1981  0014CA  24F3               	addwf	prodl,w,c
  1982  0014CC  6EF6               	movwf	tblptrl,c
  1983  0014CE  0E10               	movlw	high _dpowers
  1984  0014D0  20F4               	addwfc	prodh,w,c
  1985  0014D2  6EF7               	movwf	tblptrh,c
  1986  0014D4                     	if	0	;There are less than 3 active tblptr bytes
  1987  0014D4                     	endif
  1988  0014D4  0009               	tblrd		*+
  1989  0014D6  CFF5 F005          	movff	tablat,___lldiv@divisor
  1990  0014DA  0009               	tblrd		*+
  1991  0014DC  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  1992  0014E0  0009               	tblrd		*+
  1993  0014E2  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  1994  0014E6  000A               	tblrd		*-
  1995  0014E8  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  1996  0014EC  ECD9  F014         	call	___lldiv	;wreg free
  1997  0014F0  C001  F08F         	movff	?___lldiv,printf@tmpval
  1998  0014F4  C002  F090         	movff	?___lldiv+1,printf@tmpval+1
  1999  0014F8  C003  F091         	movff	?___lldiv+2,printf@tmpval+2
  2000  0014FC  C004  F092         	movff	?___lldiv+3,printf@tmpval+3
  2001                           
  2002                           ;doprnt.c: 1202: tmpval.vd %= 10;
  2003  001500  C08F  F001         	movff	printf@tmpval,___llmod@dividend
  2004  001504  C090  F002         	movff	printf@tmpval+1,___llmod@dividend+1
  2005  001508  C091  F003         	movff	printf@tmpval+2,___llmod@dividend+2
  2006  00150C  C092  F004         	movff	printf@tmpval+3,___llmod@dividend+3
  2007  001510  0E0A               	movlw	10
  2008  001512  6E05               	movwf	___llmod@divisor,c
  2009  001514  0E00               	movlw	0
  2010  001516  6E06               	movwf	___llmod@divisor+1,c
  2011  001518  0E00               	movlw	0
  2012  00151A  6E07               	movwf	___llmod@divisor+2,c
  2013  00151C  0E00               	movlw	0
  2014  00151E  6E08               	movwf	___llmod@divisor+3,c
  2015  001520  EC60  F015         	call	___llmod	;wreg free
  2016  001524  C001  F08F         	movff	?___llmod,printf@tmpval
  2017  001528  C002  F090         	movff	?___llmod+1,printf@tmpval+1
  2018  00152C  C003  F091         	movff	?___llmod+2,printf@tmpval+2
  2019  001530  C004  F092         	movff	?___llmod+3,printf@tmpval+3
  2020                           
  2021                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
  2022  001534  0100               	movlb	0	; () banked
  2023  001536  518F               	movf	printf@tmpval& (0+255),w,b
  2024  001538  0F30               	addlw	48
  2025  00153A  EC00  F017         	call	_putch
  2026  00153E  D000               	goto	l2623
  2027  001540                     l2623:
  2028  001540  0100               	movlb	0	; () banked
  2029  001542  0796               	decf	printf@c& (0+255),f,b
  2030  001544  0100               	movlb	0	; () banked
  2031  001546  2996               	incf	printf@c& (0+255),w,b
  2032  001548  B4D8               	btfsc	status,2,c
  2033  00154A  D00A               	goto	l2629
  2034  00154C  D7B2               	goto	l2617
  2035                           
  2036                           ; BSR set to: 0
  2037                           ;doprnt.c: 1204: }
  2038                           ;doprnt.c: 1206: }
  2039                           ;doprnt.c: 1207: while(exp > 0) {
  2040  00154E  D008               	goto	l2629
  2041  001550                     l2625:
  2042                           
  2043                           ; BSR set to: 0
  2044                           ;doprnt.c: 1208: (putch('0') );
  2045  001550  0E30               	movlw	48
  2046  001552  EC00  F017         	call	_putch
  2047                           
  2048                           ;doprnt.c: 1209: exp--;
  2049  001556  0100               	movlb	0	; () banked
  2050  001558  078D               	decf	printf@exp& (0+255),f,b
  2051  00155A  A0D8               	btfss	status,0,c
  2052  00155C  078E               	decf	(printf@exp+1)& (0+255),f,b
  2053  00155E  D000               	goto	l2629
  2054  001560                     l2629:
  2055                           
  2056                           ; BSR set to: 0
  2057  001560  0100               	movlb	0	; () banked
  2058  001562  BF8E               	btfsc	(printf@exp+1)& (0+255),7,b
  2059  001564  D007               	goto	l2631
  2060  001566  0100               	movlb	0	; () banked
  2061  001568  518E               	movf	(printf@exp+1)& (0+255),w,b
  2062  00156A  E1F2               	bnz	l2625
  2063  00156C  0100               	movlb	0	; () banked
  2064  00156E  058D               	decf	printf@exp& (0+255),w,b
  2065  001570  B0D8               	btfsc	status,0,c
  2066  001572  D7EE               	goto	l2625
  2067  001574                     l2631:
  2068                           
  2069                           ; BSR set to: 0
  2070                           ;doprnt.c: 1210: }
  2071                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2072  001574  0100               	movlb	0	; () banked
  2073  001576  BF88               	btfsc	(printf@prec+1)& (0+255),7,b
  2074  001578  D00C               	goto	l251
  2075  00157A  0100               	movlb	0	; () banked
  2076  00157C  5188               	movf	(printf@prec+1)& (0+255),w,b
  2077  00157E  E105               	bnz	u2710
  2078  001580  0E09               	movlw	9
  2079  001582  0100               	movlb	0	; () banked
  2080  001584  5D87               	subwf	printf@prec& (0+255),w,b
  2081  001586  A0D8               	btfss	status,0,c
  2082  001588  D004               	goto	l251
  2083  00158A                     u2710:
  2084                           
  2085                           ; BSR set to: 0
  2086                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  2087  00158A  0E08               	movlw	8
  2088  00158C  0100               	movlb	0	; () banked
  2089  00158E  6F96               	movwf	printf@c& (0+255),b
  2090  001590  D003               	goto	l2635
  2091  001592                     l251:
  2092                           
  2093                           ; BSR set to: 0
  2094                           ;doprnt.c: 1213: else
  2095                           ;doprnt.c: 1214: c = prec;
  2096  001592  C087  F096         	movff	printf@prec,printf@c
  2097  001596  D000               	goto	l2635
  2098  001598                     l2635:
  2099                           
  2100                           ; BSR set to: 0
  2101                           ;doprnt.c: 1215: prec -= c;
  2102  001598  0100               	movlb	0	; () banked
  2103  00159A  5196               	movf	printf@c& (0+255),w,b
  2104  00159C  0100               	movlb	0	; () banked
  2105  00159E  5F87               	subwf	printf@prec& (0+255),f,b
  2106  0015A0  0E00               	movlw	0
  2107  0015A2  0100               	movlb	0	; () banked
  2108  0015A4  BF96               	btfsc	printf@c& (0+255),7,b
  2109  0015A6  0EFF               	movlw	255
  2110  0015A8  0100               	movlb	0	; () banked
  2111  0015AA  5B88               	subwfb	(printf@prec+1)& (0+255),f,b
  2112                           
  2113                           ; BSR set to: 0
  2114                           ;doprnt.c: 1219: if(c)
  2115  0015AC  0100               	movlb	0	; () banked
  2116  0015AE  5196               	movf	printf@c& (0+255),w,b
  2117  0015B0  0100               	movlb	0	; () banked
  2118  0015B2  B4D8               	btfsc	status,2,c
  2119  0015B4  D004               	goto	l2641
  2120                           
  2121                           ; BSR set to: 0
  2122                           ;doprnt.c: 1221: (putch('.') );
  2123  0015B6  0E2E               	movlw	46
  2124  0015B8  EC00  F017         	call	_putch
  2125  0015BC  D000               	goto	l2641
  2126  0015BE                     l2641:
  2127                           
  2128                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  2129  0015BE  0100               	movlb	0	; () banked
  2130  0015C0  5196               	movf	printf@c& (0+255),w,b
  2131  0015C2  ECAE  F00B         	call	_scale
  2132  0015C6  C05D  F080         	movff	?_scale,_printf$1470
  2133  0015CA  C05E  F081         	movff	?_scale+1,_printf$1470+1
  2134  0015CE  C05F  F082         	movff	?_scale+2,_printf$1470+2
  2135                           
  2136                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  2137  0015D2  C093  F02E         	movff	printf@fval,___ftmul@f2
  2138  0015D6  C094  F02F         	movff	printf@fval+1,___ftmul@f2+1
  2139  0015DA  C095  F030         	movff	printf@fval+2,___ftmul@f2+2
  2140  0015DE  C080  F02B         	movff	_printf$1470,___ftmul@f1
  2141  0015E2  C081  F02C         	movff	_printf$1470+1,___ftmul@f1+1
  2142  0015E6  C082  F02D         	movff	_printf$1470+2,___ftmul@f1+2
  2143  0015EA  EC80  F012         	call	___ftmul	;wreg free
  2144  0015EE  C02B  F03A         	movff	?___ftmul,___fttol@f1
  2145  0015F2  C02C  F03B         	movff	?___ftmul+1,___fttol@f1+1
  2146  0015F6  C02D  F03C         	movff	?___ftmul+2,___fttol@f1+2
  2147  0015FA  ECFC  F012         	call	___fttol	;wreg free
  2148  0015FE  C03A  F089         	movff	?___fttol,printf@val
  2149  001602  C03B  F08A         	movff	?___fttol+1,printf@val+1
  2150  001606  C03C  F08B         	movff	?___fttol+2,printf@val+2
  2151  00160A  C03D  F08C         	movff	?___fttol+3,printf@val+3
  2152                           
  2153                           ;doprnt.c: 1228: while(c--) {
  2154  00160E  D06E               	goto	l2651
  2155  001610                     l2645:
  2156                           
  2157                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  2158  001610  C089  F001         	movff	printf@val,___lldiv@dividend
  2159  001614  C08A  F002         	movff	printf@val+1,___lldiv@dividend+1
  2160  001618  C08B  F003         	movff	printf@val+2,___lldiv@dividend+2
  2161  00161C  C08C  F004         	movff	printf@val+3,___lldiv@dividend+3
  2162  001620  0100               	movlb	0	; () banked
  2163  001622  5196               	movf	printf@c& (0+255),w,b
  2164  001624  0D04               	mullw	4
  2165  001626  0E01               	movlw	low _dpowers
  2166  001628  24F3               	addwf	prodl,w,c
  2167  00162A  6EF6               	movwf	tblptrl,c
  2168  00162C  0E10               	movlw	high _dpowers
  2169  00162E  20F4               	addwfc	prodh,w,c
  2170  001630  6EF7               	movwf	tblptrh,c
  2171  001632                     	if	0	;There are less than 3 active tblptr bytes
  2172  001632                     	endif
  2173  001632  0009               	tblrd		*+
  2174  001634  CFF5 F005          	movff	tablat,___lldiv@divisor
  2175  001638  0009               	tblrd		*+
  2176  00163A  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  2177  00163E  0009               	tblrd		*+
  2178  001640  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  2179  001644  000A               	tblrd		*-
  2180  001646  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  2181  00164A  ECD9  F014         	call	___lldiv	;wreg free
  2182  00164E  C001  F08F         	movff	?___lldiv,printf@tmpval
  2183  001652  C002  F090         	movff	?___lldiv+1,printf@tmpval+1
  2184  001656  C003  F091         	movff	?___lldiv+2,printf@tmpval+2
  2185  00165A  C004  F092         	movff	?___lldiv+3,printf@tmpval+3
  2186                           
  2187                           ;doprnt.c: 1230: tmpval.vd %= 10;
  2188  00165E  C08F  F001         	movff	printf@tmpval,___llmod@dividend
  2189  001662  C090  F002         	movff	printf@tmpval+1,___llmod@dividend+1
  2190  001666  C091  F003         	movff	printf@tmpval+2,___llmod@dividend+2
  2191  00166A  C092  F004         	movff	printf@tmpval+3,___llmod@dividend+3
  2192  00166E  0E0A               	movlw	10
  2193  001670  6E05               	movwf	___llmod@divisor,c
  2194  001672  0E00               	movlw	0
  2195  001674  6E06               	movwf	___llmod@divisor+1,c
  2196  001676  0E00               	movlw	0
  2197  001678  6E07               	movwf	___llmod@divisor+2,c
  2198  00167A  0E00               	movlw	0
  2199  00167C  6E08               	movwf	___llmod@divisor+3,c
  2200  00167E  EC60  F015         	call	___llmod	;wreg free
  2201  001682  C001  F08F         	movff	?___llmod,printf@tmpval
  2202  001686  C002  F090         	movff	?___llmod+1,printf@tmpval+1
  2203  00168A  C003  F091         	movff	?___llmod+2,printf@tmpval+2
  2204  00168E  C004  F092         	movff	?___llmod+3,printf@tmpval+3
  2205                           
  2206                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
  2207  001692  0100               	movlb	0	; () banked
  2208  001694  518F               	movf	printf@tmpval& (0+255),w,b
  2209  001696  0F30               	addlw	48
  2210  001698  EC00  F017         	call	_putch
  2211                           
  2212                           ;doprnt.c: 1232: val %= dpowers[c];
  2213  00169C  C089  F001         	movff	printf@val,___llmod@dividend
  2214  0016A0  C08A  F002         	movff	printf@val+1,___llmod@dividend+1
  2215  0016A4  C08B  F003         	movff	printf@val+2,___llmod@dividend+2
  2216  0016A8  C08C  F004         	movff	printf@val+3,___llmod@dividend+3
  2217  0016AC  0100               	movlb	0	; () banked
  2218  0016AE  5196               	movf	printf@c& (0+255),w,b
  2219  0016B0  0D04               	mullw	4
  2220  0016B2  0E01               	movlw	low _dpowers
  2221  0016B4  24F3               	addwf	prodl,w,c
  2222  0016B6  6EF6               	movwf	tblptrl,c
  2223  0016B8  0E10               	movlw	high _dpowers
  2224  0016BA  20F4               	addwfc	prodh,w,c
  2225  0016BC  6EF7               	movwf	tblptrh,c
  2226  0016BE                     	if	0	;There are less than 3 active tblptr bytes
  2227  0016BE                     	endif
  2228  0016BE  0009               	tblrd		*+
  2229  0016C0  CFF5 F005          	movff	tablat,___llmod@divisor
  2230  0016C4  0009               	tblrd		*+
  2231  0016C6  CFF5 F006          	movff	tablat,___llmod@divisor+1
  2232  0016CA  0009               	tblrd		*+
  2233  0016CC  CFF5 F007          	movff	tablat,___llmod@divisor+2
  2234  0016D0  000A               	tblrd		*-
  2235  0016D2  CFF5 F008          	movff	tablat,___llmod@divisor+3
  2236  0016D6  EC60  F015         	call	___llmod	;wreg free
  2237  0016DA  C001  F089         	movff	?___llmod,printf@val
  2238  0016DE  C002  F08A         	movff	?___llmod+1,printf@val+1
  2239  0016E2  C003  F08B         	movff	?___llmod+2,printf@val+2
  2240  0016E6  C004  F08C         	movff	?___llmod+3,printf@val+3
  2241  0016EA  D000               	goto	l2651
  2242  0016EC                     l2651:
  2243  0016EC  0100               	movlb	0	; () banked
  2244  0016EE  0796               	decf	printf@c& (0+255),f,b
  2245  0016F0  0100               	movlb	0	; () banked
  2246  0016F2  2996               	incf	printf@c& (0+255),w,b
  2247  0016F4  B4D8               	btfsc	status,2,c
  2248  0016F6  D00A               	goto	l2657
  2249  0016F8  D78B               	goto	l2645
  2250                           
  2251                           ; BSR set to: 0
  2252                           ;doprnt.c: 1233: }
  2253                           ;doprnt.c: 1235: while(prec) {
  2254  0016FA  D008               	goto	l2657
  2255  0016FC                     l2653:
  2256                           
  2257                           ; BSR set to: 0
  2258                           ;doprnt.c: 1236: (putch('0') );
  2259  0016FC  0E30               	movlw	48
  2260  0016FE  EC00  F017         	call	_putch
  2261                           
  2262                           ;doprnt.c: 1237: prec--;
  2263  001702  0100               	movlb	0	; () banked
  2264  001704  0787               	decf	printf@prec& (0+255),f,b
  2265  001706  A0D8               	btfss	status,0,c
  2266  001708  0788               	decf	(printf@prec+1)& (0+255),f,b
  2267  00170A  D000               	goto	l2657
  2268  00170C                     l2657:
  2269                           
  2270                           ; BSR set to: 0
  2271  00170C  0100               	movlb	0	; () banked
  2272  00170E  5187               	movf	printf@prec& (0+255),w,b
  2273  001710  0100               	movlb	0	; () banked
  2274  001712  1188               	iorwf	(printf@prec+1)& (0+255),w,b
  2275  001714  B4D8               	btfsc	status,2,c
  2276  001716  D012               	goto	l2663
  2277  001718  D7F1               	goto	l2653
  2278                           
  2279                           ; BSR set to: 0
  2280                           ;doprnt.c: 1238: }
  2281                           ;doprnt.c: 1245: continue;
  2282  00171A  D010               	goto	l2663
  2283  00171C                     l2659:
  2284                           
  2285                           ; BSR set to: 0
  2286                           ;doprnt.c: 1246: }
  2287                           ;doprnt.c: 1422: {
  2288                           ;doprnt.c: 1438: if(flag & 0x03)
  2289  00171C  0E03               	movlw	3
  2290  00171E  0100               	movlb	0	; () banked
  2291  001720  1585               	andwf	printf@flag& (0+255),w,b
  2292  001722  6E6C               	movwf	??_printf& (0+255),c
  2293  001724  0E00               	movlw	0
  2294  001726  0100               	movlb	0	; () banked
  2295  001728  1586               	andwf	(printf@flag+1)& (0+255),w,b
  2296  00172A  6E6D               	movwf	(??_printf+1)& (0+255),c
  2297  00172C  506C               	movf	??_printf,w,c
  2298  00172E  106D               	iorwf	??_printf+1,w,c
  2299  001730  B4D8               	btfsc	status,2,c
  2300  001732  D004               	goto	l2663
  2301                           
  2302                           ; BSR set to: 0
  2303                           ;doprnt.c: 1439: (putch('-') );
  2304  001734  0E2D               	movlw	45
  2305  001736  EC00  F017         	call	_putch
  2306  00173A  D000               	goto	l2663
  2307  00173C                     l2663:
  2308  00173C  C067  FFF6         	movff	printf@f,tblptrl
  2309  001740  C068  FFF7         	movff	printf@f+1,tblptrh
  2310  001744  4A67               	infsnz	printf@f,f,c
  2311  001746  2A68               	incf	printf@f+1,f,c
  2312  001748                     	if	0	;tblptru may be non-zero
  2313  001748                     	endif
  2314  001748                     	if	0	;tblptru may be non-zero
  2315  001748                     	endif
  2316  001748  0008               	tblrd		*
  2317  00174A  CFF5 F096          	movff	tablat,printf@c
  2318  00174E  0100               	movlb	0	; () banked
  2319  001750  5196               	movf	printf@c& (0+255),w,b
  2320  001752  B4D8               	btfsc	status,2,c
  2321  001754  D002               	goto	l262
  2322  001756  D4A1               	goto	l2515
  2323                           
  2324                           ; BSR set to: 0
  2325  001758  D000               	goto	l262
  2326  00175A                     l262:
  2327                           
  2328                           ; BSR set to: 0
  2329  00175A  0012               	return		;funcret
  2330  00175C                     __end_of_printf:
  2331                           	opt stack 0
  2332                           tblptru	equ	0xFF8
  2333                           tblptrh	equ	0xFF7
  2334                           tblptrl	equ	0xFF6
  2335                           tablat	equ	0xFF5
  2336                           prodh	equ	0xFF4
  2337                           prodl	equ	0xFF3
  2338                           postinc0	equ	0xFEE
  2339                           wreg	equ	0xFE8
  2340                           postdec1	equ	0xFE5
  2341                           fsr1l	equ	0xFE1
  2342                           indf2	equ	0xFDF
  2343                           postinc2	equ	0xFDE
  2344                           postdec2	equ	0xFDD
  2345                           fsr2h	equ	0xFDA
  2346                           fsr2l	equ	0xFD9
  2347                           status	equ	0xFD8
  2348                           
  2349 ;; *************** function _scale *****************
  2350 ;; Defined at:
  2351 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  2352 ;; Parameters:    Size  Location     Type
  2353 ;;  scl             1    wreg     char 
  2354 ;; Auto vars:     Size  Location     Type
  2355 ;;  scl             1   98[COMRAM] char 
  2356 ;; Return value:  Size  Location     Type
  2357 ;;                  3   92[COMRAM] char 
  2358 ;; Registers used:
  2359 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2360 ;; Tracked objects:
  2361 ;;		On entry : 0/0
  2362 ;;		On exit  : 0/0
  2363 ;;		Unchanged: 0/0
  2364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2365 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2366 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2368 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2369 ;;Total ram usage:        7 bytes
  2370 ;; Hardware stack levels used:    1
  2371 ;; Hardware stack levels required when called:    2
  2372 ;; This function calls:
  2373 ;;		___awdiv
  2374 ;;		___awmod
  2375 ;;		___ftmul
  2376 ;;		___wmul
  2377 ;; This function is called by:
  2378 ;;		_printf
  2379 ;; This function uses a non-reentrant model
  2380 ;;
  2381                           
  2382                           	psect	text4
  2383  00175C                     __ptext4:
  2384                           	opt stack 0
  2385  00175C                     _scale:
  2386                           	opt stack 27
  2387                           
  2388                           ; BSR set to: 0
  2389                           ;incstack = 0
  2390                           ;scale@scl stored from wreg
  2391  00175C  6E63               	movwf	scale@scl,c
  2392                           
  2393                           ;doprnt.c: 428: if(scl < 0) {
  2394  00175E  AE63               	btfss	scale@scl,7,c
  2395  001760  D0EF               	goto	l2225
  2396                           
  2397                           ;doprnt.c: 429: scl = -scl;
  2398  001762  6C63               	negf	scale@scl,c
  2399                           
  2400                           ;doprnt.c: 430: if(scl>=110)
  2401  001764  5063               	movf	scale@scl,w,c
  2402  001766  0A80               	xorlw	128
  2403  001768  0F12               	addlw	-238
  2404  00176A  A0D8               	btfss	status,0,c
  2405  00176C  D08D               	goto	l2215
  2406                           
  2407                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2408  00176E  0E00               	movlw	0
  2409  001770  6E5A               	movwf	___wmul@multiplicand+1,c
  2410  001772  0E03               	movlw	3
  2411  001774  6E59               	movwf	___wmul@multiplicand,c
  2412  001776  0E00               	movlw	0
  2413  001778  6E52               	movwf	___awdiv@divisor+1,c
  2414  00177A  0E0A               	movlw	10
  2415  00177C  6E51               	movwf	___awdiv@divisor,c
  2416  00177E  0E00               	movlw	0
  2417  001780  6E4C               	movwf	___awmod@divisor+1,c
  2418  001782  0E64               	movlw	100
  2419  001784  6E4B               	movwf	___awmod@divisor,c
  2420  001786  5063               	movf	scale@scl,w,c
  2421  001788  6E49               	movwf	___awmod@dividend,c
  2422  00178A  6A4A               	clrf	___awmod@dividend+1,c
  2423  00178C  BE49               	btfsc	___awmod@dividend,7,c
  2424  00178E  064A               	decf	___awmod@dividend+1,f,c
  2425  001790  EC1F  F015         	call	___awmod	;wreg free
  2426  001794  C049  F04F         	movff	?___awmod,___awdiv@dividend
  2427  001798  C04A  F050         	movff	?___awmod+1,___awdiv@dividend+1
  2428  00179C  EC43  F014         	call	___awdiv	;wreg free
  2429  0017A0  0E09               	movlw	9
  2430  0017A2  244F               	addwf	?___awdiv,w,c
  2431  0017A4  6E57               	movwf	___wmul@multiplier,c
  2432  0017A6  0E00               	movlw	0
  2433  0017A8  2050               	addwfc	?___awdiv+1,w,c
  2434  0017AA  6E58               	movwf	___wmul@multiplier+1,c
  2435  0017AC  EC74  F016         	call	___wmul	;wreg free
  2436  0017B0  0E29               	movlw	low __npowers_
  2437  0017B2  2457               	addwf	?___wmul,w,c
  2438  0017B4  6EF6               	movwf	tblptrl,c
  2439  0017B6  0E10               	movlw	high __npowers_
  2440  0017B8  2058               	addwfc	?___wmul+1,w,c
  2441  0017BA  6EF7               	movwf	tblptrh,c
  2442  0017BC                     	if	0	;There are less than 3 active tblptr bytes
  2443  0017BC                     	endif
  2444  0017BC  0009               	tblrd		*+
  2445  0017BE  CFF5 F02E          	movff	tablat,___ftmul@f2
  2446  0017C2  0009               	tblrd		*+
  2447  0017C4  CFF5 F02F          	movff	tablat,___ftmul@f2+1
  2448  0017C8  000A               	tblrd		*-
  2449  0017CA  CFF5 F030          	movff	tablat,___ftmul@f2+2
  2450  0017CE  0E00               	movlw	0
  2451  0017D0  6E52               	movwf	___awdiv@divisor+1,c
  2452  0017D2  0E64               	movlw	100
  2453  0017D4  6E51               	movwf	___awdiv@divisor,c
  2454  0017D6  5063               	movf	scale@scl,w,c
  2455  0017D8  6E4F               	movwf	___awdiv@dividend,c
  2456  0017DA  6A50               	clrf	___awdiv@dividend+1,c
  2457  0017DC  BE4F               	btfsc	___awdiv@dividend,7,c
  2458  0017DE  0650               	decf	___awdiv@dividend+1,f,c
  2459  0017E0  EC43  F014         	call	___awdiv	;wreg free
  2460  0017E4  0E12               	movlw	18
  2461  0017E6  244F               	addwf	?___awdiv,w,c
  2462  0017E8  6E57               	movwf	___wmul@multiplier,c
  2463  0017EA  0E00               	movlw	0
  2464  0017EC  2050               	addwfc	?___awdiv+1,w,c
  2465  0017EE  6E58               	movwf	___wmul@multiplier+1,c
  2466  0017F0  0E00               	movlw	0
  2467  0017F2  6E5A               	movwf	___wmul@multiplicand+1,c
  2468  0017F4  0E03               	movlw	3
  2469  0017F6  6E59               	movwf	___wmul@multiplicand,c
  2470  0017F8  EC74  F016         	call	___wmul	;wreg free
  2471  0017FC  0E29               	movlw	low __npowers_
  2472  0017FE  2457               	addwf	?___wmul,w,c
  2473  001800  6EF6               	movwf	tblptrl,c
  2474  001802  0E10               	movlw	high __npowers_
  2475  001804  2058               	addwfc	?___wmul+1,w,c
  2476  001806  6EF7               	movwf	tblptrh,c
  2477  001808                     	if	0	;There are less than 3 active tblptr bytes
  2478  001808                     	endif
  2479  001808  0009               	tblrd		*+
  2480  00180A  CFF5 F02B          	movff	tablat,___ftmul@f1
  2481  00180E  0009               	tblrd		*+
  2482  001810  CFF5 F02C          	movff	tablat,___ftmul@f1+1
  2483  001814  000A               	tblrd		*-
  2484  001816  CFF5 F02D          	movff	tablat,___ftmul@f1+2
  2485  00181A  EC80  F012         	call	___ftmul	;wreg free
  2486  00181E  C02B  F060         	movff	?___ftmul,_scale$1469
  2487  001822  C02C  F061         	movff	?___ftmul+1,_scale$1469+1
  2488  001826  C02D  F062         	movff	?___ftmul+2,_scale$1469+2
  2489                           
  2490                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2491  00182A  C060  F02B         	movff	_scale$1469,___ftmul@f1
  2492  00182E  C061  F02C         	movff	_scale$1469+1,___ftmul@f1+1
  2493  001832  C062  F02D         	movff	_scale$1469+2,___ftmul@f1+2
  2494  001836  0E00               	movlw	0
  2495  001838  6E5A               	movwf	___wmul@multiplicand+1,c
  2496  00183A  0E03               	movlw	3
  2497  00183C  6E59               	movwf	___wmul@multiplicand,c
  2498  00183E  0E00               	movlw	0
  2499  001840  6E4C               	movwf	___awmod@divisor+1,c
  2500  001842  0E0A               	movlw	10
  2501  001844  6E4B               	movwf	___awmod@divisor,c
  2502  001846  5063               	movf	scale@scl,w,c
  2503  001848  6E49               	movwf	___awmod@dividend,c
  2504  00184A  6A4A               	clrf	___awmod@dividend+1,c
  2505  00184C  BE49               	btfsc	___awmod@dividend,7,c
  2506  00184E  064A               	decf	___awmod@dividend+1,f,c
  2507  001850  EC1F  F015         	call	___awmod	;wreg free
  2508  001854  C049  F057         	movff	?___awmod,___wmul@multiplier
  2509  001858  C04A  F058         	movff	?___awmod+1,___wmul@multiplier+1
  2510  00185C  EC74  F016         	call	___wmul	;wreg free
  2511  001860  0E29               	movlw	low __npowers_
  2512  001862  2457               	addwf	?___wmul,w,c
  2513  001864  6EF6               	movwf	tblptrl,c
  2514  001866  0E10               	movlw	high __npowers_
  2515  001868  2058               	addwfc	?___wmul+1,w,c
  2516  00186A  6EF7               	movwf	tblptrh,c
  2517  00186C                     	if	0	;There are less than 3 active tblptr bytes
  2518  00186C                     	endif
  2519  00186C  0009               	tblrd		*+
  2520  00186E  CFF5 F02E          	movff	tablat,___ftmul@f2
  2521  001872  0009               	tblrd		*+
  2522  001874  CFF5 F02F          	movff	tablat,___ftmul@f2+1
  2523  001878  000A               	tblrd		*-
  2524  00187A  CFF5 F030          	movff	tablat,___ftmul@f2+2
  2525  00187E  EC80  F012         	call	___ftmul	;wreg free
  2526  001882  D141               	goto	L5
  2527  001884  D15A               	goto	l206
  2528  001886  D054               	goto	l2221
  2529  001888                     l2215:
  2530                           
  2531                           ;doprnt.c: 432: else if(scl > 10)
  2532  001888  5063               	movf	scale@scl,w,c
  2533  00188A  0A80               	xorlw	128
  2534  00188C  0F75               	addlw	-139
  2535  00188E  A0D8               	btfss	status,0,c
  2536  001890  D04F               	goto	l2221
  2537                           
  2538                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  2539  001892  0E00               	movlw	0
  2540  001894  6E52               	movwf	___awdiv@divisor+1,c
  2541  001896  0E0A               	movlw	10
  2542  001898  6E51               	movwf	___awdiv@divisor,c
  2543  00189A  5063               	movf	scale@scl,w,c
  2544  00189C  6E4F               	movwf	___awdiv@dividend,c
  2545  00189E  6A50               	clrf	___awdiv@dividend+1,c
  2546  0018A0  BE4F               	btfsc	___awdiv@dividend,7,c
  2547  0018A2  0650               	decf	___awdiv@dividend+1,f,c
  2548  0018A4  EC43  F014         	call	___awdiv	;wreg free
  2549  0018A8  0E09               	movlw	9
  2550  0018AA  244F               	addwf	?___awdiv,w,c
  2551  0018AC  6E57               	movwf	___wmul@multiplier,c
  2552  0018AE  0E00               	movlw	0
  2553  0018B0  2050               	addwfc	?___awdiv+1,w,c
  2554  0018B2  6E58               	movwf	___wmul@multiplier+1,c
  2555  0018B4  0E00               	movlw	0
  2556  0018B6  6E5A               	movwf	___wmul@multiplicand+1,c
  2557  0018B8  0E03               	movlw	3
  2558  0018BA  6E59               	movwf	___wmul@multiplicand,c
  2559  0018BC  EC74  F016         	call	___wmul	;wreg free
  2560  0018C0  0E29               	movlw	low __npowers_
  2561  0018C2  2457               	addwf	?___wmul,w,c
  2562  0018C4  6EF6               	movwf	tblptrl,c
  2563  0018C6  0E10               	movlw	high __npowers_
  2564  0018C8  2058               	addwfc	?___wmul+1,w,c
  2565  0018CA  6EF7               	movwf	tblptrh,c
  2566  0018CC                     	if	0	;There are less than 3 active tblptr bytes
  2567  0018CC                     	endif
  2568  0018CC  0009               	tblrd		*+
  2569  0018CE  CFF5 F02B          	movff	tablat,___ftmul@f1
  2570  0018D2  0009               	tblrd		*+
  2571  0018D4  CFF5 F02C          	movff	tablat,___ftmul@f1+1
  2572  0018D8  000A               	tblrd		*-
  2573  0018DA  CFF5 F02D          	movff	tablat,___ftmul@f1+2
  2574  0018DE  0E00               	movlw	0
  2575  0018E0  6E5A               	movwf	___wmul@multiplicand+1,c
  2576  0018E2  0E03               	movlw	3
  2577  0018E4  6E59               	movwf	___wmul@multiplicand,c
  2578  0018E6  0E00               	movlw	0
  2579  0018E8  6E4C               	movwf	___awmod@divisor+1,c
  2580  0018EA  0E0A               	movlw	10
  2581  0018EC  6E4B               	movwf	___awmod@divisor,c
  2582  0018EE  5063               	movf	scale@scl,w,c
  2583  0018F0  6E49               	movwf	___awmod@dividend,c
  2584  0018F2  6A4A               	clrf	___awmod@dividend+1,c
  2585  0018F4  BE49               	btfsc	___awmod@dividend,7,c
  2586  0018F6  064A               	decf	___awmod@dividend+1,f,c
  2587  0018F8  EC1F  F015         	call	___awmod	;wreg free
  2588  0018FC  C049  F057         	movff	?___awmod,___wmul@multiplier
  2589  001900  C04A  F058         	movff	?___awmod+1,___wmul@multiplier+1
  2590  001904  EC74  F016         	call	___wmul	;wreg free
  2591  001908  0E29               	movlw	low __npowers_
  2592  00190A  2457               	addwf	?___wmul,w,c
  2593  00190C  6EF6               	movwf	tblptrl,c
  2594  00190E  0E10               	movlw	high __npowers_
  2595  001910  2058               	addwfc	?___wmul+1,w,c
  2596  001912  6EF7               	movwf	tblptrh,c
  2597  001914                     	if	0	;There are less than 3 active tblptr bytes
  2598  001914                     	endif
  2599  001914  0009               	tblrd		*+
  2600  001916  CFF5 F02E          	movff	tablat,___ftmul@f2
  2601  00191A  0009               	tblrd		*+
  2602  00191C  CFF5 F02F          	movff	tablat,___ftmul@f2+1
  2603  001920  000A               	tblrd		*-
  2604  001922  CFF5 F030          	movff	tablat,___ftmul@f2+2
  2605  001926  EC80  F012         	call	___ftmul	;wreg free
  2606  00192A  D0ED               	goto	L5
  2607  00192C  D106               	goto	l206
  2608  00192E  D000               	goto	l2221
  2609  001930                     l2221:
  2610                           
  2611                           ;doprnt.c: 434: return _npowers_[scl];
  2612  001930  5063               	movf	scale@scl,w,c
  2613  001932  0D03               	mullw	3
  2614  001934  0E29               	movlw	low __npowers_
  2615  001936  24F3               	addwf	prodl,w,c
  2616  001938  6EF6               	movwf	tblptrl,c
  2617  00193A  0E10               	movlw	high __npowers_
  2618  00193C  D0F2               	goto	L4
  2619  00193E  D0FD               	goto	l206
  2620  001940                     l2225:
  2621                           
  2622                           ;doprnt.c: 435: }
  2623                           ;doprnt.c: 436: if(scl>=110)
  2624  001940  5063               	movf	scale@scl,w,c
  2625  001942  0A80               	xorlw	128
  2626  001944  0F12               	addlw	-238
  2627  001946  A0D8               	btfss	status,0,c
  2628  001948  D08D               	goto	l2233
  2629                           
  2630                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2631  00194A  0E00               	movlw	0
  2632  00194C  6E5A               	movwf	___wmul@multiplicand+1,c
  2633  00194E  0E03               	movlw	3
  2634  001950  6E59               	movwf	___wmul@multiplicand,c
  2635  001952  0E00               	movlw	0
  2636  001954  6E52               	movwf	___awdiv@divisor+1,c
  2637  001956  0E0A               	movlw	10
  2638  001958  6E51               	movwf	___awdiv@divisor,c
  2639  00195A  0E00               	movlw	0
  2640  00195C  6E4C               	movwf	___awmod@divisor+1,c
  2641  00195E  0E64               	movlw	100
  2642  001960  6E4B               	movwf	___awmod@divisor,c
  2643  001962  5063               	movf	scale@scl,w,c
  2644  001964  6E49               	movwf	___awmod@dividend,c
  2645  001966  6A4A               	clrf	___awmod@dividend+1,c
  2646  001968  BE49               	btfsc	___awmod@dividend,7,c
  2647  00196A  064A               	decf	___awmod@dividend+1,f,c
  2648  00196C  EC1F  F015         	call	___awmod	;wreg free
  2649  001970  C049  F04F         	movff	?___awmod,___awdiv@dividend
  2650  001974  C04A  F050         	movff	?___awmod+1,___awdiv@dividend+1
  2651  001978  EC43  F014         	call	___awdiv	;wreg free
  2652  00197C  0E09               	movlw	9
  2653  00197E  244F               	addwf	?___awdiv,w,c
  2654  001980  6E57               	movwf	___wmul@multiplier,c
  2655  001982  0E00               	movlw	0
  2656  001984  2050               	addwfc	?___awdiv+1,w,c
  2657  001986  6E58               	movwf	___wmul@multiplier+1,c
  2658  001988  EC74  F016         	call	___wmul	;wreg free
  2659  00198C  0E50               	movlw	low __powers_
  2660  00198E  2457               	addwf	?___wmul,w,c
  2661  001990  6EF6               	movwf	tblptrl,c
  2662  001992  0E10               	movlw	high __powers_
  2663  001994  2058               	addwfc	?___wmul+1,w,c
  2664  001996  6EF7               	movwf	tblptrh,c
  2665  001998                     	if	0	;There are less than 3 active tblptr bytes
  2666  001998                     	endif
  2667  001998  0009               	tblrd		*+
  2668  00199A  CFF5 F02E          	movff	tablat,___ftmul@f2
  2669  00199E  0009               	tblrd		*+
  2670  0019A0  CFF5 F02F          	movff	tablat,___ftmul@f2+1
  2671  0019A4  000A               	tblrd		*-
  2672  0019A6  CFF5 F030          	movff	tablat,___ftmul@f2+2
  2673  0019AA  0E00               	movlw	0
  2674  0019AC  6E52               	movwf	___awdiv@divisor+1,c
  2675  0019AE  0E64               	movlw	100
  2676  0019B0  6E51               	movwf	___awdiv@divisor,c
  2677  0019B2  5063               	movf	scale@scl,w,c
  2678  0019B4  6E4F               	movwf	___awdiv@dividend,c
  2679  0019B6  6A50               	clrf	___awdiv@dividend+1,c
  2680  0019B8  BE4F               	btfsc	___awdiv@dividend,7,c
  2681  0019BA  0650               	decf	___awdiv@dividend+1,f,c
  2682  0019BC  EC43  F014         	call	___awdiv	;wreg free
  2683  0019C0  0E12               	movlw	18
  2684  0019C2  244F               	addwf	?___awdiv,w,c
  2685  0019C4  6E57               	movwf	___wmul@multiplier,c
  2686  0019C6  0E00               	movlw	0
  2687  0019C8  2050               	addwfc	?___awdiv+1,w,c
  2688  0019CA  6E58               	movwf	___wmul@multiplier+1,c
  2689  0019CC  0E00               	movlw	0
  2690  0019CE  6E5A               	movwf	___wmul@multiplicand+1,c
  2691  0019D0  0E03               	movlw	3
  2692  0019D2  6E59               	movwf	___wmul@multiplicand,c
  2693  0019D4  EC74  F016         	call	___wmul	;wreg free
  2694  0019D8  0E50               	movlw	low __powers_
  2695  0019DA  2457               	addwf	?___wmul,w,c
  2696  0019DC  6EF6               	movwf	tblptrl,c
  2697  0019DE  0E10               	movlw	high __powers_
  2698  0019E0  2058               	addwfc	?___wmul+1,w,c
  2699  0019E2  6EF7               	movwf	tblptrh,c
  2700  0019E4                     	if	0	;There are less than 3 active tblptr bytes
  2701  0019E4                     	endif
  2702  0019E4  0009               	tblrd		*+
  2703  0019E6  CFF5 F02B          	movff	tablat,___ftmul@f1
  2704  0019EA  0009               	tblrd		*+
  2705  0019EC  CFF5 F02C          	movff	tablat,___ftmul@f1+1
  2706  0019F0  000A               	tblrd		*-
  2707  0019F2  CFF5 F02D          	movff	tablat,___ftmul@f1+2
  2708  0019F6  EC80  F012         	call	___ftmul	;wreg free
  2709  0019FA  C02B  F060         	movff	?___ftmul,_scale$1469
  2710  0019FE  C02C  F061         	movff	?___ftmul+1,_scale$1469+1
  2711  001A02  C02D  F062         	movff	?___ftmul+2,_scale$1469+2
  2712                           
  2713                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2714  001A06  C060  F02B         	movff	_scale$1469,___ftmul@f1
  2715  001A0A  C061  F02C         	movff	_scale$1469+1,___ftmul@f1+1
  2716  001A0E  C062  F02D         	movff	_scale$1469+2,___ftmul@f1+2
  2717  001A12  0E00               	movlw	0
  2718  001A14  6E5A               	movwf	___wmul@multiplicand+1,c
  2719  001A16  0E03               	movlw	3
  2720  001A18  6E59               	movwf	___wmul@multiplicand,c
  2721  001A1A  0E00               	movlw	0
  2722  001A1C  6E4C               	movwf	___awmod@divisor+1,c
  2723  001A1E  0E0A               	movlw	10
  2724  001A20  6E4B               	movwf	___awmod@divisor,c
  2725  001A22  5063               	movf	scale@scl,w,c
  2726  001A24  6E49               	movwf	___awmod@dividend,c
  2727  001A26  6A4A               	clrf	___awmod@dividend+1,c
  2728  001A28  BE49               	btfsc	___awmod@dividend,7,c
  2729  001A2A  064A               	decf	___awmod@dividend+1,f,c
  2730  001A2C  EC1F  F015         	call	___awmod	;wreg free
  2731  001A30  C049  F057         	movff	?___awmod,___wmul@multiplier
  2732  001A34  C04A  F058         	movff	?___awmod+1,___wmul@multiplier+1
  2733  001A38  EC74  F016         	call	___wmul	;wreg free
  2734  001A3C  0E50               	movlw	low __powers_
  2735  001A3E  2457               	addwf	?___wmul,w,c
  2736  001A40  6EF6               	movwf	tblptrl,c
  2737  001A42  0E10               	movlw	high __powers_
  2738  001A44  2058               	addwfc	?___wmul+1,w,c
  2739  001A46  6EF7               	movwf	tblptrh,c
  2740  001A48                     	if	0	;There are less than 3 active tblptr bytes
  2741  001A48                     	endif
  2742  001A48  0009               	tblrd		*+
  2743  001A4A  CFF5 F02E          	movff	tablat,___ftmul@f2
  2744  001A4E  0009               	tblrd		*+
  2745  001A50  CFF5 F02F          	movff	tablat,___ftmul@f2+1
  2746  001A54  000A               	tblrd		*-
  2747  001A56  CFF5 F030          	movff	tablat,___ftmul@f2+2
  2748  001A5A  EC80  F012         	call	___ftmul	;wreg free
  2749  001A5E  D053               	goto	L5
  2750  001A60  D06C               	goto	l206
  2751  001A62  D059               	goto	l2239
  2752  001A64                     l2233:
  2753                           
  2754                           ;doprnt.c: 438: else if(scl > 10)
  2755  001A64  5063               	movf	scale@scl,w,c
  2756  001A66  0A80               	xorlw	128
  2757  001A68  0F75               	addlw	-139
  2758  001A6A  A0D8               	btfss	status,0,c
  2759  001A6C  D054               	goto	l2239
  2760                           
  2761                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  2762  001A6E  0E00               	movlw	0
  2763  001A70  6E52               	movwf	___awdiv@divisor+1,c
  2764  001A72  0E0A               	movlw	10
  2765  001A74  6E51               	movwf	___awdiv@divisor,c
  2766  001A76  5063               	movf	scale@scl,w,c
  2767  001A78  6E4F               	movwf	___awdiv@dividend,c
  2768  001A7A  6A50               	clrf	___awdiv@dividend+1,c
  2769  001A7C  BE4F               	btfsc	___awdiv@dividend,7,c
  2770  001A7E  0650               	decf	___awdiv@dividend+1,f,c
  2771  001A80  EC43  F014         	call	___awdiv	;wreg free
  2772  001A84  0E09               	movlw	9
  2773  001A86  244F               	addwf	?___awdiv,w,c
  2774  001A88  6E57               	movwf	___wmul@multiplier,c
  2775  001A8A  0E00               	movlw	0
  2776  001A8C  2050               	addwfc	?___awdiv+1,w,c
  2777  001A8E  6E58               	movwf	___wmul@multiplier+1,c
  2778  001A90  0E00               	movlw	0
  2779  001A92  6E5A               	movwf	___wmul@multiplicand+1,c
  2780  001A94  0E03               	movlw	3
  2781  001A96  6E59               	movwf	___wmul@multiplicand,c
  2782  001A98  EC74  F016         	call	___wmul	;wreg free
  2783  001A9C  0E50               	movlw	low __powers_
  2784  001A9E  2457               	addwf	?___wmul,w,c
  2785  001AA0  6EF6               	movwf	tblptrl,c
  2786  001AA2  0E10               	movlw	high __powers_
  2787  001AA4  2058               	addwfc	?___wmul+1,w,c
  2788  001AA6  6EF7               	movwf	tblptrh,c
  2789  001AA8                     	if	0	;There are less than 3 active tblptr bytes
  2790  001AA8                     	endif
  2791  001AA8  0009               	tblrd		*+
  2792  001AAA  CFF5 F02B          	movff	tablat,___ftmul@f1
  2793  001AAE  0009               	tblrd		*+
  2794  001AB0  CFF5 F02C          	movff	tablat,___ftmul@f1+1
  2795  001AB4  000A               	tblrd		*-
  2796  001AB6  CFF5 F02D          	movff	tablat,___ftmul@f1+2
  2797  001ABA  0E00               	movlw	0
  2798  001ABC  6E5A               	movwf	___wmul@multiplicand+1,c
  2799  001ABE  0E03               	movlw	3
  2800  001AC0  6E59               	movwf	___wmul@multiplicand,c
  2801  001AC2  0E00               	movlw	0
  2802  001AC4  6E4C               	movwf	___awmod@divisor+1,c
  2803  001AC6  0E0A               	movlw	10
  2804  001AC8  6E4B               	movwf	___awmod@divisor,c
  2805  001ACA  5063               	movf	scale@scl,w,c
  2806  001ACC  6E49               	movwf	___awmod@dividend,c
  2807  001ACE  6A4A               	clrf	___awmod@dividend+1,c
  2808  001AD0  BE49               	btfsc	___awmod@dividend,7,c
  2809  001AD2  064A               	decf	___awmod@dividend+1,f,c
  2810  001AD4  EC1F  F015         	call	___awmod	;wreg free
  2811  001AD8  C049  F057         	movff	?___awmod,___wmul@multiplier
  2812  001ADC  C04A  F058         	movff	?___awmod+1,___wmul@multiplier+1
  2813  001AE0  EC74  F016         	call	___wmul	;wreg free
  2814  001AE4  0E50               	movlw	low __powers_
  2815  001AE6  2457               	addwf	?___wmul,w,c
  2816  001AE8  6EF6               	movwf	tblptrl,c
  2817  001AEA  0E10               	movlw	high __powers_
  2818  001AEC  2058               	addwfc	?___wmul+1,w,c
  2819  001AEE  6EF7               	movwf	tblptrh,c
  2820  001AF0                     	if	0	;There are less than 3 active tblptr bytes
  2821  001AF0                     	endif
  2822  001AF0  0009               	tblrd		*+
  2823  001AF2  CFF5 F02E          	movff	tablat,___ftmul@f2
  2824  001AF6  0009               	tblrd		*+
  2825  001AF8  CFF5 F02F          	movff	tablat,___ftmul@f2+1
  2826  001AFC  000A               	tblrd		*-
  2827  001AFE  CFF5 F030          	movff	tablat,___ftmul@f2+2
  2828  001B02  EC80  F012         	call	___ftmul	;wreg free
  2829  001B06                     L5:
  2830  001B06  C02B  F05D         	movff	?___ftmul,?_scale
  2831  001B0A  C02C  F05E         	movff	?___ftmul+1,?_scale+1
  2832  001B0E  C02D  F05F         	movff	?___ftmul+2,?_scale+2
  2833  001B12  D013               	goto	l206
  2834  001B14  D000               	goto	l2239
  2835  001B16                     l2239:
  2836                           
  2837                           ;doprnt.c: 440: return _powers_[scl];
  2838  001B16  5063               	movf	scale@scl,w,c
  2839  001B18  0D03               	mullw	3
  2840  001B1A  0E50               	movlw	low __powers_
  2841  001B1C  24F3               	addwf	prodl,w,c
  2842  001B1E  6EF6               	movwf	tblptrl,c
  2843  001B20  0E10               	movlw	high __powers_
  2844  001B22                     L4:
  2845  001B22  20F4               	addwfc	prodh,w,c
  2846  001B24  6EF7               	movwf	tblptrh,c
  2847  001B26                     	if	0	;There are less than 3 active tblptr bytes
  2848  001B26                     	endif
  2849  001B26  0009               	tblrd		*+
  2850  001B28  CFF5 F05D          	movff	tablat,?_scale
  2851  001B2C  0009               	tblrd		*+
  2852  001B2E  CFF5 F05E          	movff	tablat,?_scale+1
  2853  001B32  000A               	tblrd		*-
  2854  001B34  CFF5 F05F          	movff	tablat,?_scale+2
  2855  001B38  D000               	goto	l206
  2856  001B3A                     l206:
  2857  001B3A  0012               	return		;funcret
  2858  001B3C                     __end_of_scale:
  2859                           	opt stack 0
  2860                           tblptru	equ	0xFF8
  2861                           tblptrh	equ	0xFF7
  2862                           tblptrl	equ	0xFF6
  2863                           tablat	equ	0xFF5
  2864                           prodh	equ	0xFF4
  2865                           prodl	equ	0xFF3
  2866                           postinc0	equ	0xFEE
  2867                           wreg	equ	0xFE8
  2868                           postdec1	equ	0xFE5
  2869                           fsr1l	equ	0xFE1
  2870                           indf2	equ	0xFDF
  2871                           postinc2	equ	0xFDE
  2872                           postdec2	equ	0xFDD
  2873                           fsr2h	equ	0xFDA
  2874                           fsr2l	equ	0xFD9
  2875                           status	equ	0xFD8
  2876                           
  2877 ;; *************** function _putch *****************
  2878 ;; Defined at:
  2879 ;;		line 52 in file "lab6p3.c"
  2880 ;; Parameters:    Size  Location     Type
  2881 ;;  c               1    wreg     unsigned char 
  2882 ;; Auto vars:     Size  Location     Type
  2883 ;;  c               1    0[COMRAM] unsigned char 
  2884 ;; Return value:  Size  Location     Type
  2885 ;;		None               void
  2886 ;; Registers used:
  2887 ;;		wreg
  2888 ;; Tracked objects:
  2889 ;;		On entry : 0/0
  2890 ;;		On exit  : 0/0
  2891 ;;		Unchanged: 0/0
  2892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2894 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2896 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2897 ;;Total ram usage:        1 bytes
  2898 ;; Hardware stack levels used:    1
  2899 ;; This function calls:
  2900 ;;		Nothing
  2901 ;; This function is called by:
  2902 ;;		_printf
  2903 ;; This function uses a non-reentrant model
  2904 ;;
  2905                           
  2906                           	psect	text5
  2907  002E00                     __ptext5:
  2908                           	opt stack 0
  2909  002E00                     _putch:
  2910                           	opt stack 29
  2911                           
  2912                           ;incstack = 0
  2913                           ;putch@c stored from wreg
  2914  002E00  6E01               	movwf	putch@c,c
  2915                           
  2916                           ;lab6p3.c: 54: while (!TRMT);
  2917  002E02  D000               	goto	l96
  2918  002E04                     l96:
  2919  002E04  A2AC               	btfss	4012,1,c	;volatile
  2920  002E06  D7FE               	goto	l96
  2921                           
  2922                           ;lab6p3.c: 55: TXREG = c;
  2923  002E08  C001  FFAD         	movff	putch@c,4013	;volatile
  2924  002E0C  0012               	return		;funcret
  2925  002E0E                     __end_of_putch:
  2926                           	opt stack 0
  2927                           tblptru	equ	0xFF8
  2928                           tblptrh	equ	0xFF7
  2929                           tblptrl	equ	0xFF6
  2930                           tablat	equ	0xFF5
  2931                           prodh	equ	0xFF4
  2932                           prodl	equ	0xFF3
  2933                           postinc0	equ	0xFEE
  2934                           wreg	equ	0xFE8
  2935                           postdec1	equ	0xFE5
  2936                           fsr1l	equ	0xFE1
  2937                           indf2	equ	0xFDF
  2938                           postinc2	equ	0xFDE
  2939                           postdec2	equ	0xFDD
  2940                           fsr2h	equ	0xFDA
  2941                           fsr2l	equ	0xFD9
  2942                           status	equ	0xFD8
  2943                           
  2944 ;; *************** function _fround *****************
  2945 ;; Defined at:
  2946 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  2947 ;; Parameters:    Size  Location     Type
  2948 ;;  prec            1    wreg     unsigned char 
  2949 ;; Auto vars:     Size  Location     Type
  2950 ;;  prec            1  101[COMRAM] unsigned char 
  2951 ;; Return value:  Size  Location     Type
  2952 ;;                  3   92[COMRAM] unsigned char 
  2953 ;; Registers used:
  2954 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2955 ;; Tracked objects:
  2956 ;;		On entry : 0/0
  2957 ;;		On exit  : 0/0
  2958 ;;		Unchanged: 0/0
  2959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2960 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2961 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2963 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2964 ;;Total ram usage:       10 bytes
  2965 ;; Hardware stack levels used:    1
  2966 ;; Hardware stack levels required when called:    2
  2967 ;; This function calls:
  2968 ;;		___awdiv
  2969 ;;		___awmod
  2970 ;;		___ftmul
  2971 ;;		___wmul
  2972 ;; This function is called by:
  2973 ;;		_printf
  2974 ;; This function uses a non-reentrant model
  2975 ;;
  2976                           
  2977                           	psect	text6
  2978  001DB8                     __ptext6:
  2979                           	opt stack 0
  2980  001DB8                     _fround:
  2981                           	opt stack 27
  2982                           
  2983                           ;incstack = 0
  2984                           ;fround@prec stored from wreg
  2985  001DB8  6E66               	movwf	fround@prec,c
  2986                           
  2987                           ;doprnt.c: 413: if(prec>=110)
  2988  001DBA  0E6D               	movlw	109
  2989  001DBC  6466               	cpfsgt	fround@prec,c
  2990  001DBE  D09B               	goto	l2193
  2991                           
  2992                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  2993  001DC0  0E00               	movlw	0
  2994  001DC2  6E5A               	movwf	___wmul@multiplicand+1,c
  2995  001DC4  0E03               	movlw	3
  2996  001DC6  6E59               	movwf	___wmul@multiplicand,c
  2997  001DC8  0E00               	movlw	0
  2998  001DCA  6E52               	movwf	___awdiv@divisor+1,c
  2999  001DCC  0E0A               	movlw	10
  3000  001DCE  6E51               	movwf	___awdiv@divisor,c
  3001  001DD0  0E00               	movlw	0
  3002  001DD2  6E4C               	movwf	___awmod@divisor+1,c
  3003  001DD4  0E64               	movlw	100
  3004  001DD6  6E4B               	movwf	___awmod@divisor,c
  3005  001DD8  C066  F049         	movff	fround@prec,___awmod@dividend
  3006  001DDC  6A4A               	clrf	___awmod@dividend+1,c
  3007  001DDE  EC1F  F015         	call	___awmod	;wreg free
  3008  001DE2  C049  F04F         	movff	?___awmod,___awdiv@dividend
  3009  001DE6  C04A  F050         	movff	?___awmod+1,___awdiv@dividend+1
  3010  001DEA  EC43  F014         	call	___awdiv	;wreg free
  3011  001DEE  0E09               	movlw	9
  3012  001DF0  244F               	addwf	?___awdiv,w,c
  3013  001DF2  6E57               	movwf	___wmul@multiplier,c
  3014  001DF4  0E00               	movlw	0
  3015  001DF6  2050               	addwfc	?___awdiv+1,w,c
  3016  001DF8  6E58               	movwf	___wmul@multiplier+1,c
  3017  001DFA  EC74  F016         	call	___wmul	;wreg free
  3018  001DFE  0E29               	movlw	low __npowers_
  3019  001E00  2457               	addwf	?___wmul,w,c
  3020  001E02  6EF6               	movwf	tblptrl,c
  3021  001E04  0E10               	movlw	high __npowers_
  3022  001E06  2058               	addwfc	?___wmul+1,w,c
  3023  001E08  6EF7               	movwf	tblptrh,c
  3024  001E0A                     	if	0	;There are less than 3 active tblptr bytes
  3025  001E0A                     	endif
  3026  001E0A  0009               	tblrd		*+
  3027  001E0C  CFF5 F02E          	movff	tablat,___ftmul@f2
  3028  001E10  0009               	tblrd		*+
  3029  001E12  CFF5 F02F          	movff	tablat,___ftmul@f2+1
  3030  001E16  000A               	tblrd		*-
  3031  001E18  CFF5 F030          	movff	tablat,___ftmul@f2+2
  3032  001E1C  0E00               	movlw	0
  3033  001E1E  6E52               	movwf	___awdiv@divisor+1,c
  3034  001E20  0E64               	movlw	100
  3035  001E22  6E51               	movwf	___awdiv@divisor,c
  3036  001E24  C066  F04F         	movff	fround@prec,___awdiv@dividend
  3037  001E28  6A50               	clrf	___awdiv@dividend+1,c
  3038  001E2A  EC43  F014         	call	___awdiv	;wreg free
  3039  001E2E  0E12               	movlw	18
  3040  001E30  244F               	addwf	?___awdiv,w,c
  3041  001E32  6E57               	movwf	___wmul@multiplier,c
  3042  001E34  0E00               	movlw	0
  3043  001E36  2050               	addwfc	?___awdiv+1,w,c
  3044  001E38  6E58               	movwf	___wmul@multiplier+1,c
  3045  001E3A  0E00               	movlw	0
  3046  001E3C  6E5A               	movwf	___wmul@multiplicand+1,c
  3047  001E3E  0E03               	movlw	3
  3048  001E40  6E59               	movwf	___wmul@multiplicand,c
  3049  001E42  EC74  F016         	call	___wmul	;wreg free
  3050  001E46  0E29               	movlw	low __npowers_
  3051  001E48  2457               	addwf	?___wmul,w,c
  3052  001E4A  6EF6               	movwf	tblptrl,c
  3053  001E4C  0E10               	movlw	high __npowers_
  3054  001E4E  2058               	addwfc	?___wmul+1,w,c
  3055  001E50  6EF7               	movwf	tblptrh,c
  3056  001E52                     	if	0	;There are less than 3 active tblptr bytes
  3057  001E52                     	endif
  3058  001E52  0009               	tblrd		*+
  3059  001E54  CFF5 F02B          	movff	tablat,___ftmul@f1
  3060  001E58  0009               	tblrd		*+
  3061  001E5A  CFF5 F02C          	movff	tablat,___ftmul@f1+1
  3062  001E5E  000A               	tblrd		*-
  3063  001E60  CFF5 F02D          	movff	tablat,___ftmul@f1+2
  3064  001E64  EC80  F012         	call	___ftmul	;wreg free
  3065  001E68  C02B  F063         	movff	?___ftmul,_fround$1467
  3066  001E6C  C02C  F064         	movff	?___ftmul+1,_fround$1467+1
  3067  001E70  C02D  F065         	movff	?___ftmul+2,_fround$1467+2
  3068                           
  3069                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3070  001E74  0E00               	movlw	0
  3071  001E76  6E5A               	movwf	___wmul@multiplicand+1,c
  3072  001E78  0E03               	movlw	3
  3073  001E7A  6E59               	movwf	___wmul@multiplicand,c
  3074  001E7C  0E00               	movlw	0
  3075  001E7E  6E4C               	movwf	___awmod@divisor+1,c
  3076  001E80  0E0A               	movlw	10
  3077  001E82  6E4B               	movwf	___awmod@divisor,c
  3078  001E84  C066  F049         	movff	fround@prec,___awmod@dividend
  3079  001E88  6A4A               	clrf	___awmod@dividend+1,c
  3080  001E8A  EC1F  F015         	call	___awmod	;wreg free
  3081  001E8E  C049  F057         	movff	?___awmod,___wmul@multiplier
  3082  001E92  C04A  F058         	movff	?___awmod+1,___wmul@multiplier+1
  3083  001E96  EC74  F016         	call	___wmul	;wreg free
  3084  001E9A  0E29               	movlw	low __npowers_
  3085  001E9C  2457               	addwf	?___wmul,w,c
  3086  001E9E  6EF6               	movwf	tblptrl,c
  3087  001EA0  0E10               	movlw	high __npowers_
  3088  001EA2  2058               	addwfc	?___wmul+1,w,c
  3089  001EA4  6EF7               	movwf	tblptrh,c
  3090  001EA6                     	if	0	;There are less than 3 active tblptr bytes
  3091  001EA6                     	endif
  3092  001EA6  0009               	tblrd		*+
  3093  001EA8  CFF5 F02E          	movff	tablat,___ftmul@f2
  3094  001EAC  0009               	tblrd		*+
  3095  001EAE  CFF5 F02F          	movff	tablat,___ftmul@f2+1
  3096  001EB2  000A               	tblrd		*-
  3097  001EB4  CFF5 F030          	movff	tablat,___ftmul@f2+2
  3098  001EB8  C063  F02B         	movff	_fround$1467,___ftmul@f1
  3099  001EBC  C064  F02C         	movff	_fround$1467+1,___ftmul@f1+1
  3100  001EC0  C065  F02D         	movff	_fround$1467+2,___ftmul@f1+2
  3101  001EC4  EC80  F012         	call	___ftmul	;wreg free
  3102  001EC8  C02B  F060         	movff	?___ftmul,_fround$1468
  3103  001ECC  C02C  F061         	movff	?___ftmul+1,_fround$1468+1
  3104  001ED0  C02D  F062         	movff	?___ftmul+2,_fround$1468+2
  3105                           
  3106                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3107  001ED4  C060  F02B         	movff	_fround$1468,___ftmul@f1
  3108  001ED8  C061  F02C         	movff	_fround$1468+1,___ftmul@f1+1
  3109  001EDC  C062  F02D         	movff	_fround$1468+2,___ftmul@f1+2
  3110  001EE0  0E00               	movlw	0
  3111  001EE2  6E2E               	movwf	___ftmul@f2,c
  3112  001EE4  0E00               	movlw	0
  3113  001EE6  6E2F               	movwf	___ftmul@f2+1,c
  3114  001EE8  0E3F               	movlw	63
  3115  001EEA  6E30               	movwf	___ftmul@f2+2,c
  3116  001EEC  EC80  F012         	call	___ftmul	;wreg free
  3117  001EF0  D07D               	goto	L7
  3118  001EF2  D083               	goto	l199
  3119  001EF4  D062               	goto	l2201
  3120  001EF6                     l2193:
  3121                           
  3122                           ;doprnt.c: 415: else if(prec > 10)
  3123  001EF6  0E0A               	movlw	10
  3124  001EF8  6466               	cpfsgt	fround@prec,c
  3125  001EFA  D05F               	goto	l2201
  3126                           
  3127                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3128  001EFC  0E00               	movlw	0
  3129  001EFE  6E5A               	movwf	___wmul@multiplicand+1,c
  3130  001F00  0E03               	movlw	3
  3131  001F02  6E59               	movwf	___wmul@multiplicand,c
  3132  001F04  0E00               	movlw	0
  3133  001F06  6E4C               	movwf	___awmod@divisor+1,c
  3134  001F08  0E0A               	movlw	10
  3135  001F0A  6E4B               	movwf	___awmod@divisor,c
  3136  001F0C  C066  F049         	movff	fround@prec,___awmod@dividend
  3137  001F10  6A4A               	clrf	___awmod@dividend+1,c
  3138  001F12  EC1F  F015         	call	___awmod	;wreg free
  3139  001F16  C049  F057         	movff	?___awmod,___wmul@multiplier
  3140  001F1A  C04A  F058         	movff	?___awmod+1,___wmul@multiplier+1
  3141  001F1E  EC74  F016         	call	___wmul	;wreg free
  3142  001F22  0E29               	movlw	low __npowers_
  3143  001F24  2457               	addwf	?___wmul,w,c
  3144  001F26  6EF6               	movwf	tblptrl,c
  3145  001F28  0E10               	movlw	high __npowers_
  3146  001F2A  2058               	addwfc	?___wmul+1,w,c
  3147  001F2C  6EF7               	movwf	tblptrh,c
  3148  001F2E                     	if	0	;There are less than 3 active tblptr bytes
  3149  001F2E                     	endif
  3150  001F2E  0009               	tblrd		*+
  3151  001F30  CFF5 F02E          	movff	tablat,___ftmul@f2
  3152  001F34  0009               	tblrd		*+
  3153  001F36  CFF5 F02F          	movff	tablat,___ftmul@f2+1
  3154  001F3A  000A               	tblrd		*-
  3155  001F3C  CFF5 F030          	movff	tablat,___ftmul@f2+2
  3156  001F40  0E00               	movlw	0
  3157  001F42  6E52               	movwf	___awdiv@divisor+1,c
  3158  001F44  0E0A               	movlw	10
  3159  001F46  6E51               	movwf	___awdiv@divisor,c
  3160  001F48  C066  F04F         	movff	fround@prec,___awdiv@dividend
  3161  001F4C  6A50               	clrf	___awdiv@dividend+1,c
  3162  001F4E  EC43  F014         	call	___awdiv	;wreg free
  3163  001F52  0E09               	movlw	9
  3164  001F54  244F               	addwf	?___awdiv,w,c
  3165  001F56  6E57               	movwf	___wmul@multiplier,c
  3166  001F58  0E00               	movlw	0
  3167  001F5A  2050               	addwfc	?___awdiv+1,w,c
  3168  001F5C  6E58               	movwf	___wmul@multiplier+1,c
  3169  001F5E  0E00               	movlw	0
  3170  001F60  6E5A               	movwf	___wmul@multiplicand+1,c
  3171  001F62  0E03               	movlw	3
  3172  001F64  6E59               	movwf	___wmul@multiplicand,c
  3173  001F66  EC74  F016         	call	___wmul	;wreg free
  3174  001F6A  0E29               	movlw	low __npowers_
  3175  001F6C  2457               	addwf	?___wmul,w,c
  3176  001F6E  6EF6               	movwf	tblptrl,c
  3177  001F70  0E10               	movlw	high __npowers_
  3178  001F72  2058               	addwfc	?___wmul+1,w,c
  3179  001F74  6EF7               	movwf	tblptrh,c
  3180  001F76                     	if	0	;There are less than 3 active tblptr bytes
  3181  001F76                     	endif
  3182  001F76  0009               	tblrd		*+
  3183  001F78  CFF5 F02B          	movff	tablat,___ftmul@f1
  3184  001F7C  0009               	tblrd		*+
  3185  001F7E  CFF5 F02C          	movff	tablat,___ftmul@f1+1
  3186  001F82  000A               	tblrd		*-
  3187  001F84  CFF5 F02D          	movff	tablat,___ftmul@f1+2
  3188  001F88  EC80  F012         	call	___ftmul	;wreg free
  3189  001F8C  C02B  F063         	movff	?___ftmul,_fround$1467
  3190  001F90  C02C  F064         	movff	?___ftmul+1,_fround$1467+1
  3191  001F94  C02D  F065         	movff	?___ftmul+2,_fround$1467+2
  3192                           
  3193                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3194  001F98  C063  F02B         	movff	_fround$1467,___ftmul@f1
  3195  001F9C  C064  F02C         	movff	_fround$1467+1,___ftmul@f1+1
  3196  001FA0  C065  F02D         	movff	_fround$1467+2,___ftmul@f1+2
  3197  001FA4  0E00               	movlw	0
  3198  001FA6  6E2E               	movwf	___ftmul@f2,c
  3199  001FA8  0E00               	movlw	0
  3200  001FAA  6E2F               	movwf	___ftmul@f2+1,c
  3201  001FAC  0E3F               	movlw	63
  3202  001FAE  6E30               	movwf	___ftmul@f2+2,c
  3203  001FB0  EC80  F012         	call	___ftmul	;wreg free
  3204  001FB4  D01B               	goto	L7
  3205  001FB6  D021               	goto	l199
  3206  001FB8  D000               	goto	l2201
  3207  001FBA                     l2201:
  3208                           
  3209                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  3210  001FBA  5066               	movf	fround@prec,w,c
  3211  001FBC  0D03               	mullw	3
  3212  001FBE  0E29               	movlw	low __npowers_
  3213  001FC0  24F3               	addwf	prodl,w,c
  3214  001FC2  6EF6               	movwf	tblptrl,c
  3215  001FC4  0E10               	movlw	high __npowers_
  3216  001FC6  20F4               	addwfc	prodh,w,c
  3217  001FC8  6EF7               	movwf	tblptrh,c
  3218  001FCA                     	if	0	;There are less than 3 active tblptr bytes
  3219  001FCA                     	endif
  3220  001FCA  0009               	tblrd		*+
  3221  001FCC  CFF5 F02B          	movff	tablat,___ftmul@f1
  3222  001FD0  0009               	tblrd		*+
  3223  001FD2  CFF5 F02C          	movff	tablat,___ftmul@f1+1
  3224  001FD6  000A               	tblrd		*-
  3225  001FD8  CFF5 F02D          	movff	tablat,___ftmul@f1+2
  3226  001FDC  0E00               	movlw	0
  3227  001FDE  6E2E               	movwf	___ftmul@f2,c
  3228  001FE0  0E00               	movlw	0
  3229  001FE2  6E2F               	movwf	___ftmul@f2+1,c
  3230  001FE4  0E3F               	movlw	63
  3231  001FE6  6E30               	movwf	___ftmul@f2+2,c
  3232  001FE8  EC80  F012         	call	___ftmul	;wreg free
  3233  001FEC                     L7:
  3234  001FEC  C02B  F05D         	movff	?___ftmul,?_fround
  3235  001FF0  C02C  F05E         	movff	?___ftmul+1,?_fround+1
  3236  001FF4  C02D  F05F         	movff	?___ftmul+2,?_fround+2
  3237  001FF8  D000               	goto	l199
  3238  001FFA                     l199:
  3239  001FFA  0012               	return		;funcret
  3240  001FFC                     __end_of_fround:
  3241                           	opt stack 0
  3242                           tblptru	equ	0xFF8
  3243                           tblptrh	equ	0xFF7
  3244                           tblptrl	equ	0xFF6
  3245                           tablat	equ	0xFF5
  3246                           prodh	equ	0xFF4
  3247                           prodl	equ	0xFF3
  3248                           postinc0	equ	0xFEE
  3249                           wreg	equ	0xFE8
  3250                           postdec1	equ	0xFE5
  3251                           fsr1l	equ	0xFE1
  3252                           indf2	equ	0xFDF
  3253                           postinc2	equ	0xFDE
  3254                           postdec2	equ	0xFDD
  3255                           fsr2h	equ	0xFDA
  3256                           fsr2l	equ	0xFD9
  3257                           status	equ	0xFD8
  3258                           
  3259 ;; *************** function ___wmul *****************
  3260 ;; Defined at:
  3261 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  3262 ;; Parameters:    Size  Location     Type
  3263 ;;  multiplier      2   86[COMRAM] unsigned int 
  3264 ;;  multiplicand    2   88[COMRAM] unsigned int 
  3265 ;; Auto vars:     Size  Location     Type
  3266 ;;  product         2   90[COMRAM] unsigned int 
  3267 ;; Return value:  Size  Location     Type
  3268 ;;                  2   86[COMRAM] unsigned int 
  3269 ;; Registers used:
  3270 ;;		wreg, status,2, status,0, prodl, prodh
  3271 ;; Tracked objects:
  3272 ;;		On entry : 0/0
  3273 ;;		On exit  : 0/0
  3274 ;;		Unchanged: 0/0
  3275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3276 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3277 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3279 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3280 ;;Total ram usage:        6 bytes
  3281 ;; Hardware stack levels used:    1
  3282 ;; This function calls:
  3283 ;;		Nothing
  3284 ;; This function is called by:
  3285 ;;		_fround
  3286 ;;		_scale
  3287 ;;		_printf
  3288 ;; This function uses a non-reentrant model
  3289 ;;
  3290                           
  3291                           	psect	text7
  3292  002CE8                     __ptext7:
  3293                           	opt stack 0
  3294  002CE8                     ___wmul:
  3295                           	opt stack 28
  3296                           
  3297                           ;incstack = 0
  3298  002CE8  5057               	movf	___wmul@multiplier,w,c
  3299  002CEA  0259               	mulwf	___wmul@multiplicand,c
  3300  002CEC  CFF3 F05B          	movff	prodl,___wmul@product
  3301  002CF0  CFF4 F05C          	movff	prodh,___wmul@product+1
  3302  002CF4  5057               	movf	___wmul@multiplier,w,c
  3303  002CF6  025A               	mulwf	___wmul@multiplicand+1,c
  3304  002CF8  50F3               	movf	prodl,w,c
  3305  002CFA  265C               	addwf	___wmul@product+1,f,c
  3306  002CFC  5058               	movf	___wmul@multiplier+1,w,c
  3307  002CFE  0259               	mulwf	___wmul@multiplicand,c
  3308  002D00  50F3               	movf	prodl,w,c
  3309  002D02  265C               	addwf	___wmul@product+1,f,c
  3310  002D04  C05B  F057         	movff	___wmul@product,?___wmul
  3311  002D08  C05C  F058         	movff	___wmul@product+1,?___wmul+1
  3312  002D0C  D000               	goto	l298
  3313  002D0E                     l298:
  3314  002D0E  0012               	return		;funcret
  3315  002D10                     __end_of___wmul:
  3316                           	opt stack 0
  3317                           tblptru	equ	0xFF8
  3318                           tblptrh	equ	0xFF7
  3319                           tblptrl	equ	0xFF6
  3320                           tablat	equ	0xFF5
  3321                           prodh	equ	0xFF4
  3322                           prodl	equ	0xFF3
  3323                           postinc0	equ	0xFEE
  3324                           wreg	equ	0xFE8
  3325                           postdec1	equ	0xFE5
  3326                           fsr1l	equ	0xFE1
  3327                           indf2	equ	0xFDF
  3328                           postinc2	equ	0xFDE
  3329                           postdec2	equ	0xFDD
  3330                           fsr2h	equ	0xFDA
  3331                           fsr2l	equ	0xFD9
  3332                           status	equ	0xFD8
  3333                           
  3334 ;; *************** function ___ftmul *****************
  3335 ;; Defined at:
  3336 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  3337 ;; Parameters:    Size  Location     Type
  3338 ;;  f1              3   42[COMRAM] float 
  3339 ;;  f2              3   45[COMRAM] float 
  3340 ;; Auto vars:     Size  Location     Type
  3341 ;;  f3_as_produc    3   52[COMRAM] unsigned um
  3342 ;;  sign            1   56[COMRAM] unsigned char 
  3343 ;;  cntr            1   55[COMRAM] unsigned char 
  3344 ;;  exp             1   51[COMRAM] unsigned char 
  3345 ;; Return value:  Size  Location     Type
  3346 ;;                  3   42[COMRAM] float 
  3347 ;; Registers used:
  3348 ;;		wreg, status,2, status,0, cstack
  3349 ;; Tracked objects:
  3350 ;;		On entry : 0/0
  3351 ;;		On exit  : 0/0
  3352 ;;		Unchanged: 0/0
  3353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3354 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3355 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3356 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3357 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3358 ;;Total ram usage:       15 bytes
  3359 ;; Hardware stack levels used:    1
  3360 ;; Hardware stack levels required when called:    1
  3361 ;; This function calls:
  3362 ;;		___ftpack
  3363 ;; This function is called by:
  3364 ;;		_main
  3365 ;;		_fround
  3366 ;;		_scale
  3367 ;;		_printf
  3368 ;; This function uses a non-reentrant model
  3369 ;;
  3370                           
  3371                           	psect	text8
  3372  002500                     __ptext8:
  3373                           	opt stack 0
  3374  002500                     ___ftmul:
  3375                           	opt stack 27
  3376                           
  3377                           ;incstack = 0
  3378  002500  C02D  F031         	movff	___ftmul@f1+2,??___ftmul
  3379  002504  6A32               	clrf	(??___ftmul+1)& (0+255),c
  3380  002506  6A33               	clrf	(??___ftmul+2)& (0+255),c
  3381  002508  342C               	rlcf	___ftmul@f1+1,w,c
  3382  00250A  3631               	rlcf	??___ftmul& (0+255),f,c
  3383  00250C  E301               	bnc	u1761
  3384  00250E  8032               	bsf	(??___ftmul+1)& (0+255),0,c
  3385  002510                     u1761:
  3386  002510  5031               	movf	??___ftmul,w,c
  3387  002512  6E34               	movwf	___ftmul@exp,c
  3388  002514  5034               	movf	___ftmul@exp,w,c
  3389  002516  A4D8               	btfss	status,2,c
  3390  002518  D002               	goto	l1989
  3391  00251A  D00E               	goto	l1991
  3392  00251C  D06C               	goto	l727
  3393  00251E                     l1989:
  3394  00251E  C030  F031         	movff	___ftmul@f2+2,??___ftmul
  3395  002522  6A32               	clrf	(??___ftmul+1)& (0+255),c
  3396  002524  6A33               	clrf	(??___ftmul+2)& (0+255),c
  3397  002526  342F               	rlcf	___ftmul@f2+1,w,c
  3398  002528  3631               	rlcf	??___ftmul& (0+255),f,c
  3399  00252A  E301               	bnc	u1781
  3400  00252C  8032               	bsf	(??___ftmul+1)& (0+255),0,c
  3401  00252E                     u1781:
  3402  00252E  5031               	movf	??___ftmul,w,c
  3403  002530  6E39               	movwf	___ftmul@sign,c
  3404  002532  5039               	movf	___ftmul@sign,w,c
  3405  002534  A4D8               	btfss	status,2,c
  3406  002536  D007               	goto	l1995
  3407  002538                     l1991:
  3408  002538  0E00               	movlw	0
  3409  00253A  6E2B               	movwf	?___ftmul,c
  3410  00253C  0E00               	movlw	0
  3411  00253E  6E2C               	movwf	?___ftmul+1,c
  3412  002540  0E00               	movlw	0
  3413  002542  6E2D               	movwf	?___ftmul+2,c
  3414  002544  D058               	goto	l727
  3415  002546                     l1995:
  3416  002546  5039               	movf	___ftmul@sign,w,c
  3417  002548  0F7B               	addlw	123
  3418  00254A  2634               	addwf	___ftmul@exp,f,c
  3419  00254C  C02D  F039         	movff	___ftmul@f1+2,___ftmul@sign
  3420  002550  5030               	movf	___ftmul@f2+2,w,c
  3421  002552  1A39               	xorwf	___ftmul@sign,f,c
  3422  002554  0E80               	movlw	128
  3423  002556  1639               	andwf	___ftmul@sign,f,c
  3424  002558  8E2C               	bsf	___ftmul@f1+1,7,c
  3425  00255A  8E2F               	bsf	___ftmul@f2+1,7,c
  3426  00255C  0EFF               	movlw	255
  3427  00255E  162E               	andwf	___ftmul@f2,f,c
  3428  002560  0EFF               	movlw	255
  3429  002562  162F               	andwf	___ftmul@f2+1,f,c
  3430  002564  0E00               	movlw	0
  3431  002566  1630               	andwf	___ftmul@f2+2,f,c
  3432  002568  0E00               	movlw	0
  3433  00256A  6E35               	movwf	___ftmul@f3_as_product,c
  3434  00256C  0E00               	movlw	0
  3435  00256E  6E36               	movwf	___ftmul@f3_as_product+1,c
  3436  002570  0E00               	movlw	0
  3437  002572  6E37               	movwf	___ftmul@f3_as_product+2,c
  3438  002574  0E07               	movlw	7
  3439  002576  6E38               	movwf	___ftmul@cntr,c
  3440  002578  D000               	goto	l2009
  3441  00257A                     l2009:
  3442  00257A  A02B               	btfss	___ftmul@f1,0,c
  3443  00257C  D007               	goto	l2013
  3444  00257E  502E               	movf	___ftmul@f2,w,c
  3445  002580  2635               	addwf	___ftmul@f3_as_product,f,c
  3446  002582  502F               	movf	___ftmul@f2+1,w,c
  3447  002584  2236               	addwfc	___ftmul@f3_as_product+1,f,c
  3448  002586  5030               	movf	___ftmul@f2+2,w,c
  3449  002588  2237               	addwfc	___ftmul@f3_as_product+2,f,c
  3450  00258A  D000               	goto	l2013
  3451  00258C                     l2013:
  3452  00258C  90D8               	bcf	status,0,c
  3453  00258E  322D               	rrcf	___ftmul@f1+2,f,c
  3454  002590  322C               	rrcf	___ftmul@f1+1,f,c
  3455  002592  322B               	rrcf	___ftmul@f1,f,c
  3456  002594  90D8               	bcf	status,0,c
  3457  002596  362E               	rlcf	___ftmul@f2,f,c
  3458  002598  362F               	rlcf	___ftmul@f2+1,f,c
  3459  00259A  3630               	rlcf	___ftmul@f2+2,f,c
  3460  00259C  2E38               	decfsz	___ftmul@cntr,f,c
  3461  00259E  D7ED               	goto	l2009
  3462  0025A0  D000               	goto	l2017
  3463  0025A2                     l2017:
  3464  0025A2  0E09               	movlw	9
  3465  0025A4  6E38               	movwf	___ftmul@cntr,c
  3466  0025A6  D000               	goto	l2019
  3467  0025A8                     l2019:
  3468  0025A8  A02B               	btfss	___ftmul@f1,0,c
  3469  0025AA  D007               	goto	l2023
  3470  0025AC  502E               	movf	___ftmul@f2,w,c
  3471  0025AE  2635               	addwf	___ftmul@f3_as_product,f,c
  3472  0025B0  502F               	movf	___ftmul@f2+1,w,c
  3473  0025B2  2236               	addwfc	___ftmul@f3_as_product+1,f,c
  3474  0025B4  5030               	movf	___ftmul@f2+2,w,c
  3475  0025B6  2237               	addwfc	___ftmul@f3_as_product+2,f,c
  3476  0025B8  D000               	goto	l2023
  3477  0025BA                     l2023:
  3478  0025BA  90D8               	bcf	status,0,c
  3479  0025BC  322D               	rrcf	___ftmul@f1+2,f,c
  3480  0025BE  322C               	rrcf	___ftmul@f1+1,f,c
  3481  0025C0  322B               	rrcf	___ftmul@f1,f,c
  3482  0025C2  90D8               	bcf	status,0,c
  3483  0025C4  3237               	rrcf	___ftmul@f3_as_product+2,f,c
  3484  0025C6  3236               	rrcf	___ftmul@f3_as_product+1,f,c
  3485  0025C8  3235               	rrcf	___ftmul@f3_as_product,f,c
  3486  0025CA  2E38               	decfsz	___ftmul@cntr,f,c
  3487  0025CC  D7ED               	goto	l2019
  3488  0025CE  D000               	goto	l2027
  3489  0025D0                     l2027:
  3490  0025D0  C035  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  3491  0025D4  C036  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3492  0025D8  C037  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3493  0025DC  C034  F004         	movff	___ftmul@exp,___ftpack@exp
  3494  0025E0  C039  F005         	movff	___ftmul@sign,___ftpack@sign
  3495  0025E4  ECE0  F013         	call	___ftpack	;wreg free
  3496  0025E8  C001  F02B         	movff	?___ftpack,?___ftmul
  3497  0025EC  C002  F02C         	movff	?___ftpack+1,?___ftmul+1
  3498  0025F0  C003  F02D         	movff	?___ftpack+2,?___ftmul+2
  3499  0025F4  D000               	goto	l727
  3500  0025F6                     l727:
  3501  0025F6  0012               	return		;funcret
  3502  0025F8                     __end_of___ftmul:
  3503                           	opt stack 0
  3504                           tblptru	equ	0xFF8
  3505                           tblptrh	equ	0xFF7
  3506                           tblptrl	equ	0xFF6
  3507                           tablat	equ	0xFF5
  3508                           prodh	equ	0xFF4
  3509                           prodl	equ	0xFF3
  3510                           postinc0	equ	0xFEE
  3511                           wreg	equ	0xFE8
  3512                           postdec1	equ	0xFE5
  3513                           fsr1l	equ	0xFE1
  3514                           indf2	equ	0xFDF
  3515                           postinc2	equ	0xFDE
  3516                           postdec2	equ	0xFDD
  3517                           fsr2h	equ	0xFDA
  3518                           fsr2l	equ	0xFD9
  3519                           status	equ	0xFD8
  3520                           
  3521 ;; *************** function ___awmod *****************
  3522 ;; Defined at:
  3523 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
  3524 ;; Parameters:    Size  Location     Type
  3525 ;;  dividend        2   72[COMRAM] int 
  3526 ;;  divisor         2   74[COMRAM] int 
  3527 ;; Auto vars:     Size  Location     Type
  3528 ;;  sign            1   77[COMRAM] unsigned char 
  3529 ;;  counter         1   76[COMRAM] unsigned char 
  3530 ;; Return value:  Size  Location     Type
  3531 ;;                  2   72[COMRAM] int 
  3532 ;; Registers used:
  3533 ;;		wreg, status,2, status,0
  3534 ;; Tracked objects:
  3535 ;;		On entry : 0/0
  3536 ;;		On exit  : 0/0
  3537 ;;		Unchanged: 0/0
  3538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3539 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3540 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3542 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3543 ;;Total ram usage:        6 bytes
  3544 ;; Hardware stack levels used:    1
  3545 ;; This function calls:
  3546 ;;		Nothing
  3547 ;; This function is called by:
  3548 ;;		_main
  3549 ;;		_fround
  3550 ;;		_scale
  3551 ;; This function uses a non-reentrant model
  3552 ;;
  3553                           
  3554                           	psect	text9
  3555  002A3E                     __ptext9:
  3556                           	opt stack 0
  3557  002A3E                     ___awmod:
  3558                           	opt stack 28
  3559                           
  3560                           ;incstack = 0
  3561  002A3E  0E00               	movlw	0
  3562  002A40  6E4E               	movwf	___awmod@sign,c
  3563  002A42  AE4A               	btfss	___awmod@dividend+1,7,c
  3564  002A44  D007               	goto	l2083
  3565  002A46  6C49               	negf	___awmod@dividend,c
  3566  002A48  1E4A               	comf	___awmod@dividend+1,f,c
  3567  002A4A  B0D8               	btfsc	status,0,c
  3568  002A4C  2A4A               	incf	___awmod@dividend+1,f,c
  3569  002A4E  0E01               	movlw	1
  3570  002A50  6E4E               	movwf	___awmod@sign,c
  3571  002A52  D000               	goto	l2083
  3572  002A54                     l2083:
  3573  002A54  AE4C               	btfss	___awmod@divisor+1,7,c
  3574  002A56  D005               	goto	l2087
  3575  002A58  6C4B               	negf	___awmod@divisor,c
  3576  002A5A  1E4C               	comf	___awmod@divisor+1,f,c
  3577  002A5C  B0D8               	btfsc	status,0,c
  3578  002A5E  2A4C               	incf	___awmod@divisor+1,f,c
  3579  002A60  D000               	goto	l2087
  3580  002A62                     l2087:
  3581  002A62  504B               	movf	___awmod@divisor,w,c
  3582  002A64  104C               	iorwf	___awmod@divisor+1,w,c
  3583  002A66  B4D8               	btfsc	status,2,c
  3584  002A68  D01D               	goto	l2103
  3585  002A6A  0E01               	movlw	1
  3586  002A6C  6E4D               	movwf	___awmod@counter,c
  3587  002A6E  D005               	goto	l2093
  3588  002A70                     l2091:
  3589  002A70  90D8               	bcf	status,0,c
  3590  002A72  364B               	rlcf	___awmod@divisor,f,c
  3591  002A74  364C               	rlcf	___awmod@divisor+1,f,c
  3592  002A76  2A4D               	incf	___awmod@counter,f,c
  3593  002A78  D000               	goto	l2093
  3594  002A7A                     l2093:
  3595  002A7A  BE4C               	btfsc	___awmod@divisor+1,7,c
  3596  002A7C  D002               	goto	l2095
  3597  002A7E  D7F8               	goto	l2091
  3598  002A80  D000               	goto	l2095
  3599  002A82                     l2095:
  3600  002A82  504B               	movf	___awmod@divisor,w,c
  3601  002A84  5C49               	subwf	___awmod@dividend,w,c
  3602  002A86  504C               	movf	___awmod@divisor+1,w,c
  3603  002A88  584A               	subwfb	___awmod@dividend+1,w,c
  3604  002A8A  A0D8               	btfss	status,0,c
  3605  002A8C  D005               	goto	l2099
  3606  002A8E  504B               	movf	___awmod@divisor,w,c
  3607  002A90  5E49               	subwf	___awmod@dividend,f,c
  3608  002A92  504C               	movf	___awmod@divisor+1,w,c
  3609  002A94  5A4A               	subwfb	___awmod@dividend+1,f,c
  3610  002A96  D000               	goto	l2099
  3611  002A98                     l2099:
  3612  002A98  90D8               	bcf	status,0,c
  3613  002A9A  324C               	rrcf	___awmod@divisor+1,f,c
  3614  002A9C  324B               	rrcf	___awmod@divisor,f,c
  3615  002A9E  2E4D               	decfsz	___awmod@counter,f,c
  3616  002AA0  D7F0               	goto	l2095
  3617  002AA2  D000               	goto	l2103
  3618  002AA4                     l2103:
  3619  002AA4  504E               	movf	___awmod@sign,w,c
  3620  002AA6  B4D8               	btfsc	status,2,c
  3621  002AA8  D005               	goto	l2107
  3622  002AAA  6C49               	negf	___awmod@dividend,c
  3623  002AAC  1E4A               	comf	___awmod@dividend+1,f,c
  3624  002AAE  B0D8               	btfsc	status,0,c
  3625  002AB0  2A4A               	incf	___awmod@dividend+1,f,c
  3626  002AB2  D000               	goto	l2107
  3627  002AB4                     l2107:
  3628  002AB4  C049  F049         	movff	___awmod@dividend,?___awmod
  3629  002AB8  C04A  F04A         	movff	___awmod@dividend+1,?___awmod+1
  3630  002ABC  D000               	goto	l504
  3631  002ABE                     l504:
  3632  002ABE  0012               	return		;funcret
  3633  002AC0                     __end_of___awmod:
  3634                           	opt stack 0
  3635                           tblptru	equ	0xFF8
  3636                           tblptrh	equ	0xFF7
  3637                           tblptrl	equ	0xFF6
  3638                           tablat	equ	0xFF5
  3639                           prodh	equ	0xFF4
  3640                           prodl	equ	0xFF3
  3641                           postinc0	equ	0xFEE
  3642                           wreg	equ	0xFE8
  3643                           postdec1	equ	0xFE5
  3644                           fsr1l	equ	0xFE1
  3645                           indf2	equ	0xFDF
  3646                           postinc2	equ	0xFDE
  3647                           postdec2	equ	0xFDD
  3648                           fsr2h	equ	0xFDA
  3649                           fsr2l	equ	0xFD9
  3650                           status	equ	0xFD8
  3651                           
  3652 ;; *************** function __tdiv_to_l_ *****************
  3653 ;; Defined at:
  3654 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdivl.c"
  3655 ;; Parameters:    Size  Location     Type
  3656 ;;  f1              3    0[COMRAM] float 
  3657 ;;  f2              3    3[COMRAM] float 
  3658 ;; Auto vars:     Size  Location     Type
  3659 ;;  quot            4    9[COMRAM] unsigned long 
  3660 ;;  exp1            1   14[COMRAM] unsigned char 
  3661 ;;  cntr            1   13[COMRAM] unsigned char 
  3662 ;; Return value:  Size  Location     Type
  3663 ;;                  4    0[COMRAM] unsigned long 
  3664 ;; Registers used:
  3665 ;;		wreg, status,2, status,0
  3666 ;; Tracked objects:
  3667 ;;		On entry : 0/0
  3668 ;;		On exit  : 0/0
  3669 ;;		Unchanged: 0/0
  3670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3671 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3672 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3673 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3674 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3675 ;;Total ram usage:       15 bytes
  3676 ;; Hardware stack levels used:    1
  3677 ;; This function calls:
  3678 ;;		Nothing
  3679 ;; This function is called by:
  3680 ;;		_printf
  3681 ;; This function uses a non-reentrant model
  3682 ;;
  3683                           
  3684                           	psect	text10
  3685  0022E6                     __ptext10:
  3686                           	opt stack 0
  3687  0022E6                     __tdiv_to_l_:
  3688                           	opt stack 29
  3689                           
  3690                           ;incstack = 0
  3691  0022E6  C003  F007         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  3692  0022EA  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3693  0022EC  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3694  0022EE  3402               	rlcf	__tdiv_to_l_@f1+1,w,c
  3695  0022F0  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3696  0022F2  E301               	bnc	u2121
  3697  0022F4  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3698  0022F6                     u2121:
  3699  0022F6  5007               	movf	??__tdiv_to_l_,w,c
  3700  0022F8  6E0F               	movwf	__tdiv_to_l_@exp1,c
  3701  0022FA  500F               	movf	__tdiv_to_l_@exp1,w,c
  3702  0022FC  A4D8               	btfss	status,2,c
  3703  0022FE  D002               	goto	l2249
  3704  002300  D05D               	goto	l2291
  3705  002302  D078               	goto	l703
  3706  002304                     l2249:
  3707  002304  C006  F007         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  3708  002308  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3709  00230A  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3710  00230C  3405               	rlcf	__tdiv_to_l_@f2+1,w,c
  3711  00230E  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3712  002310  E301               	bnc	u2141
  3713  002312  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3714  002314                     u2141:
  3715  002314  5007               	movf	??__tdiv_to_l_,w,c
  3716  002316  6E0E               	movwf	__tdiv_to_l_@cntr,c
  3717  002318  500E               	movf	__tdiv_to_l_@cntr,w,c
  3718  00231A  A4D8               	btfss	status,2,c
  3719  00231C  D002               	goto	l2255
  3720  00231E  D04E               	goto	l2291
  3721  002320  D069               	goto	l703
  3722  002322                     l2255:
  3723  002322  8E02               	bsf	__tdiv_to_l_@f1+1,7,c
  3724  002324  0EFF               	movlw	255
  3725  002326  1601               	andwf	__tdiv_to_l_@f1,f,c
  3726  002328  0EFF               	movlw	255
  3727  00232A  1602               	andwf	__tdiv_to_l_@f1+1,f,c
  3728  00232C  0E00               	movlw	0
  3729  00232E  1603               	andwf	__tdiv_to_l_@f1+2,f,c
  3730  002330  8E05               	bsf	__tdiv_to_l_@f2+1,7,c
  3731  002332  0EFF               	movlw	255
  3732  002334  1604               	andwf	__tdiv_to_l_@f2,f,c
  3733  002336  0EFF               	movlw	255
  3734  002338  1605               	andwf	__tdiv_to_l_@f2+1,f,c
  3735  00233A  0E00               	movlw	0
  3736  00233C  1606               	andwf	__tdiv_to_l_@f2+2,f,c
  3737  00233E  0E00               	movlw	0
  3738  002340  6E0A               	movwf	__tdiv_to_l_@quot,c
  3739  002342  0E00               	movlw	0
  3740  002344  6E0B               	movwf	__tdiv_to_l_@quot+1,c
  3741  002346  0E00               	movlw	0
  3742  002348  6E0C               	movwf	__tdiv_to_l_@quot+2,c
  3743  00234A  0E00               	movlw	0
  3744  00234C  6E0D               	movwf	__tdiv_to_l_@quot+3,c
  3745  00234E  0E7F               	movlw	127
  3746  002350  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  3747  002352  500E               	movf	__tdiv_to_l_@cntr,w,c
  3748  002354  0F98               	addlw	152
  3749  002356  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  3750  002358  0E18               	movlw	24
  3751  00235A  6E0E               	movwf	__tdiv_to_l_@cntr,c
  3752  00235C                     l705:
  3753  00235C  90D8               	bcf	status,0,c
  3754  00235E  360A               	rlcf	__tdiv_to_l_@quot,f,c
  3755  002360  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  3756  002362  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  3757  002364  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  3758  002366  5004               	movf	__tdiv_to_l_@f2,w,c
  3759  002368  5C01               	subwf	__tdiv_to_l_@f1,w,c
  3760  00236A  5005               	movf	__tdiv_to_l_@f2+1,w,c
  3761  00236C  5802               	subwfb	__tdiv_to_l_@f1+1,w,c
  3762  00236E  5006               	movf	__tdiv_to_l_@f2+2,w,c
  3763  002370  5803               	subwfb	__tdiv_to_l_@f1+2,w,c
  3764  002372  A0D8               	btfss	status,0,c
  3765  002374  D007               	goto	l706
  3766  002376  5004               	movf	__tdiv_to_l_@f2,w,c
  3767  002378  5E01               	subwf	__tdiv_to_l_@f1,f,c
  3768  00237A  5005               	movf	__tdiv_to_l_@f2+1,w,c
  3769  00237C  5A02               	subwfb	__tdiv_to_l_@f1+1,f,c
  3770  00237E  5006               	movf	__tdiv_to_l_@f2+2,w,c
  3771  002380  5A03               	subwfb	__tdiv_to_l_@f1+2,f,c
  3772  002382  800A               	bsf	__tdiv_to_l_@quot,0,c
  3773  002384                     l706:
  3774  002384  90D8               	bcf	status,0,c
  3775  002386  3601               	rlcf	__tdiv_to_l_@f1,f,c
  3776  002388  3602               	rlcf	__tdiv_to_l_@f1+1,f,c
  3777  00238A  3603               	rlcf	__tdiv_to_l_@f1+2,f,c
  3778  00238C  2E0E               	decfsz	__tdiv_to_l_@cntr,f,c
  3779  00238E  D7E6               	goto	l705
  3780  002390  D000               	goto	l2277
  3781  002392                     l2277:
  3782  002392  AE0F               	btfss	__tdiv_to_l_@exp1,7,c
  3783  002394  D010               	goto	l2289
  3784  002396  500F               	movf	__tdiv_to_l_@exp1,w,c
  3785  002398  0A80               	xorlw	128
  3786  00239A  0F97               	addlw	151
  3787  00239C  B0D8               	btfsc	status,0,c
  3788  00239E  D003               	goto	l2285
  3789  0023A0  D00D               	goto	l2291
  3790  0023A2  D028               	goto	l703
  3791  0023A4  D000               	goto	l2285
  3792  0023A6                     l2285:
  3793  0023A6  90D8               	bcf	status,0,c
  3794  0023A8  320D               	rrcf	__tdiv_to_l_@quot+3,f,c
  3795  0023AA  320C               	rrcf	__tdiv_to_l_@quot+2,f,c
  3796  0023AC  320B               	rrcf	__tdiv_to_l_@quot+1,f,c
  3797  0023AE  320A               	rrcf	__tdiv_to_l_@quot,f,c
  3798  0023B0  3E0F               	incfsz	__tdiv_to_l_@exp1,f,c
  3799  0023B2  D7F9               	goto	l2285
  3800  0023B4  D017               	goto	l712
  3801  0023B6                     l2289:
  3802  0023B6  0E17               	movlw	23
  3803  0023B8  640F               	cpfsgt	__tdiv_to_l_@exp1,c
  3804  0023BA  D011               	goto	l2297
  3805  0023BC                     l2291:
  3806  0023BC  0E00               	movlw	0
  3807  0023BE  6E01               	movwf	?__tdiv_to_l_,c
  3808  0023C0  0E00               	movlw	0
  3809  0023C2  6E02               	movwf	?__tdiv_to_l_+1,c
  3810  0023C4  0E00               	movlw	0
  3811  0023C6  6E03               	movwf	?__tdiv_to_l_+2,c
  3812  0023C8  0E00               	movlw	0
  3813  0023CA  6E04               	movwf	?__tdiv_to_l_+3,c
  3814  0023CC  D013               	goto	l703
  3815  0023CE  D007               	goto	l2297
  3816  0023D0                     l2295:
  3817  0023D0  90D8               	bcf	status,0,c
  3818  0023D2  360A               	rlcf	__tdiv_to_l_@quot,f,c
  3819  0023D4  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  3820  0023D6  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  3821  0023D8  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  3822  0023DA  060F               	decf	__tdiv_to_l_@exp1,f,c
  3823  0023DC  D000               	goto	l2297
  3824  0023DE                     l2297:
  3825  0023DE  500F               	movf	__tdiv_to_l_@exp1,w,c
  3826  0023E0  A4D8               	btfss	status,2,c
  3827  0023E2  D7F6               	goto	l2295
  3828  0023E4                     l712:
  3829  0023E4  C00A  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  3830  0023E8  C00B  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  3831  0023EC  C00C  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  3832  0023F0  C00D  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  3833  0023F4                     l703:
  3834  0023F4  0012               	return		;funcret
  3835  0023F6                     __end_of__tdiv_to_l_:
  3836                           	opt stack 0
  3837                           tblptru	equ	0xFF8
  3838                           tblptrh	equ	0xFF7
  3839                           tblptrl	equ	0xFF6
  3840                           tablat	equ	0xFF5
  3841                           prodh	equ	0xFF4
  3842                           prodl	equ	0xFF3
  3843                           postinc0	equ	0xFEE
  3844                           wreg	equ	0xFE8
  3845                           postdec1	equ	0xFE5
  3846                           fsr1l	equ	0xFE1
  3847                           indf2	equ	0xFDF
  3848                           postinc2	equ	0xFDE
  3849                           postdec2	equ	0xFDD
  3850                           fsr2h	equ	0xFDA
  3851                           fsr2l	equ	0xFD9
  3852                           status	equ	0xFD8
  3853                           
  3854 ;; *************** function __div_to_l_ *****************
  3855 ;; Defined at:
  3856 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fldivl.c"
  3857 ;; Parameters:    Size  Location     Type
  3858 ;;  f1              3    0[COMRAM] unsigned long 
  3859 ;;  f2              3    3[COMRAM] unsigned long 
  3860 ;; Auto vars:     Size  Location     Type
  3861 ;;  quot            4    6[COMRAM] unsigned long 
  3862 ;;  exp1            1   11[COMRAM] unsigned char 
  3863 ;;  cntr            1   10[COMRAM] unsigned char 
  3864 ;; Return value:  Size  Location     Type
  3865 ;;                  4    0[COMRAM] unsigned long 
  3866 ;; Registers used:
  3867 ;;		wreg, status,2, status,0
  3868 ;; Tracked objects:
  3869 ;;		On entry : 0/0
  3870 ;;		On exit  : 0/0
  3871 ;;		Unchanged: 0/0
  3872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3873 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3874 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3876 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3877 ;;Total ram usage:       12 bytes
  3878 ;; Hardware stack levels used:    1
  3879 ;; This function calls:
  3880 ;;		Nothing
  3881 ;; This function is called by:
  3882 ;;		_printf
  3883 ;; This function uses a non-reentrant model
  3884 ;;
  3885                           
  3886                           	psect	text11
  3887  0023F6                     __ptext11:
  3888                           	opt stack 0
  3889  0023F6                     __div_to_l_:
  3890                           	opt stack 29
  3891                           
  3892                           ;incstack = 0
  3893  0023F6  3403               	rlcf	__div_to_l_@f1+2,w,c
  3894  0023F8  3404               	rlcf	__div_to_l_@f1+3,w,c
  3895  0023FA  6E0C               	movwf	__div_to_l_@exp1,c
  3896  0023FC  500C               	movf	__div_to_l_@exp1,w,c
  3897  0023FE  A4D8               	btfss	status,2,c
  3898  002400  D002               	goto	l2305
  3899  002402  D061               	goto	l2351
  3900  002404  D07C               	goto	l582
  3901  002406                     l2305:
  3902  002406  3406               	rlcf	__div_to_l_@f2+2,w,c
  3903  002408  3407               	rlcf	__div_to_l_@f2+3,w,c
  3904  00240A  6E0B               	movwf	__div_to_l_@cntr,c
  3905  00240C  500B               	movf	__div_to_l_@cntr,w,c
  3906  00240E  A4D8               	btfss	status,2,c
  3907  002410  D002               	goto	l2311
  3908  002412  D059               	goto	l2351
  3909  002414  D074               	goto	l582
  3910  002416                     l2311:
  3911  002416  8E03               	bsf	__div_to_l_@f1+2,7,c
  3912  002418  0EFF               	movlw	255
  3913  00241A  1601               	andwf	__div_to_l_@f1,f,c
  3914  00241C  0EFF               	movlw	255
  3915  00241E  1602               	andwf	__div_to_l_@f1+1,f,c
  3916  002420  0EFF               	movlw	255
  3917  002422  1603               	andwf	__div_to_l_@f1+2,f,c
  3918  002424  0E00               	movlw	0
  3919  002426  1604               	andwf	__div_to_l_@f1+3,f,c
  3920  002428  8E06               	bsf	__div_to_l_@f2+2,7,c
  3921  00242A  0EFF               	movlw	255
  3922  00242C  1604               	andwf	__div_to_l_@f2,f,c
  3923  00242E  0EFF               	movlw	255
  3924  002430  1605               	andwf	__div_to_l_@f2+1,f,c
  3925  002432  0EFF               	movlw	255
  3926  002434  1606               	andwf	__div_to_l_@f2+2,f,c
  3927  002436  0E00               	movlw	0
  3928  002438  1607               	andwf	__div_to_l_@f2+3,f,c
  3929  00243A  0E00               	movlw	0
  3930  00243C  6E07               	movwf	__div_to_l_@quot,c
  3931  00243E  0E00               	movlw	0
  3932  002440  6E08               	movwf	__div_to_l_@quot+1,c
  3933  002442  0E00               	movlw	0
  3934  002444  6E09               	movwf	__div_to_l_@quot+2,c
  3935  002446  0E00               	movlw	0
  3936  002448  6E0A               	movwf	__div_to_l_@quot+3,c
  3937  00244A  0E7F               	movlw	127
  3938  00244C  5E0C               	subwf	__div_to_l_@exp1,f,c
  3939  00244E  500B               	movf	__div_to_l_@cntr,w,c
  3940  002450  0FA0               	addlw	160
  3941  002452  5E0C               	subwf	__div_to_l_@exp1,f,c
  3942  002454  0E20               	movlw	32
  3943  002456  6E0B               	movwf	__div_to_l_@cntr,c
  3944  002458  D000               	goto	l2325
  3945  00245A                     l2325:
  3946  00245A  90D8               	bcf	status,0,c
  3947  00245C  3607               	rlcf	__div_to_l_@quot,f,c
  3948  00245E  3608               	rlcf	__div_to_l_@quot+1,f,c
  3949  002460  3609               	rlcf	__div_to_l_@quot+2,f,c
  3950  002462  360A               	rlcf	__div_to_l_@quot+3,f,c
  3951  002464  5004               	movf	__div_to_l_@f2,w,c
  3952  002466  5C01               	subwf	__div_to_l_@f1,w,c
  3953  002468  5005               	movf	__div_to_l_@f2+1,w,c
  3954  00246A  5802               	subwfb	__div_to_l_@f1+1,w,c
  3955  00246C  5006               	movf	__div_to_l_@f2+2,w,c
  3956  00246E  5803               	subwfb	__div_to_l_@f1+2,w,c
  3957  002470  5007               	movf	__div_to_l_@f2+3,w,c
  3958  002472  5804               	subwfb	__div_to_l_@f1+3,w,c
  3959  002474  A0D8               	btfss	status,0,c
  3960  002476  D00A               	goto	l2333
  3961  002478  5004               	movf	__div_to_l_@f2,w,c
  3962  00247A  5E01               	subwf	__div_to_l_@f1,f,c
  3963  00247C  5005               	movf	__div_to_l_@f2+1,w,c
  3964  00247E  5A02               	subwfb	__div_to_l_@f1+1,f,c
  3965  002480  5006               	movf	__div_to_l_@f2+2,w,c
  3966  002482  5A03               	subwfb	__div_to_l_@f1+2,f,c
  3967  002484  5007               	movf	__div_to_l_@f2+3,w,c
  3968  002486  5A04               	subwfb	__div_to_l_@f1+3,f,c
  3969  002488  8007               	bsf	__div_to_l_@quot,0,c
  3970  00248A  D000               	goto	l2333
  3971  00248C                     l2333:
  3972  00248C  90D8               	bcf	status,0,c
  3973  00248E  3601               	rlcf	__div_to_l_@f1,f,c
  3974  002490  3602               	rlcf	__div_to_l_@f1+1,f,c
  3975  002492  3603               	rlcf	__div_to_l_@f1+2,f,c
  3976  002494  3604               	rlcf	__div_to_l_@f1+3,f,c
  3977  002496  2E0B               	decfsz	__div_to_l_@cntr,f,c
  3978  002498  D7E0               	goto	l2325
  3979  00249A  D000               	goto	l2337
  3980  00249C                     l2337:
  3981  00249C  AE0C               	btfss	__div_to_l_@exp1,7,c
  3982  00249E  D010               	goto	l2349
  3983  0024A0  500C               	movf	__div_to_l_@exp1,w,c
  3984  0024A2  0A80               	xorlw	128
  3985  0024A4  0F9F               	addlw	159
  3986  0024A6  B0D8               	btfsc	status,0,c
  3987  0024A8  D003               	goto	l2345
  3988  0024AA  D00D               	goto	l2351
  3989  0024AC  D028               	goto	l582
  3990  0024AE  D000               	goto	l2345
  3991  0024B0                     l2345:
  3992  0024B0  90D8               	bcf	status,0,c
  3993  0024B2  320A               	rrcf	__div_to_l_@quot+3,f,c
  3994  0024B4  3209               	rrcf	__div_to_l_@quot+2,f,c
  3995  0024B6  3208               	rrcf	__div_to_l_@quot+1,f,c
  3996  0024B8  3207               	rrcf	__div_to_l_@quot,f,c
  3997  0024BA  3E0C               	incfsz	__div_to_l_@exp1,f,c
  3998  0024BC  D7F9               	goto	l2345
  3999  0024BE  D017               	goto	l591
  4000  0024C0                     l2349:
  4001  0024C0  0E1F               	movlw	31
  4002  0024C2  640C               	cpfsgt	__div_to_l_@exp1,c
  4003  0024C4  D011               	goto	l2357
  4004  0024C6                     l2351:
  4005  0024C6  0E00               	movlw	0
  4006  0024C8  6E01               	movwf	?__div_to_l_,c
  4007  0024CA  0E00               	movlw	0
  4008  0024CC  6E02               	movwf	?__div_to_l_+1,c
  4009  0024CE  0E00               	movlw	0
  4010  0024D0  6E03               	movwf	?__div_to_l_+2,c
  4011  0024D2  0E00               	movlw	0
  4012  0024D4  6E04               	movwf	?__div_to_l_+3,c
  4013  0024D6  D013               	goto	l582
  4014  0024D8  D007               	goto	l2357
  4015  0024DA                     l2355:
  4016  0024DA  90D8               	bcf	status,0,c
  4017  0024DC  3607               	rlcf	__div_to_l_@quot,f,c
  4018  0024DE  3608               	rlcf	__div_to_l_@quot+1,f,c
  4019  0024E0  3609               	rlcf	__div_to_l_@quot+2,f,c
  4020  0024E2  360A               	rlcf	__div_to_l_@quot+3,f,c
  4021  0024E4  060C               	decf	__div_to_l_@exp1,f,c
  4022  0024E6  D000               	goto	l2357
  4023  0024E8                     l2357:
  4024  0024E8  500C               	movf	__div_to_l_@exp1,w,c
  4025  0024EA  A4D8               	btfss	status,2,c
  4026  0024EC  D7F6               	goto	l2355
  4027  0024EE                     l591:
  4028  0024EE  C007  F001         	movff	__div_to_l_@quot,?__div_to_l_
  4029  0024F2  C008  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  4030  0024F6  C009  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  4031  0024FA  C00A  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  4032  0024FE                     l582:
  4033  0024FE  0012               	return		;funcret
  4034  002500                     __end_of__div_to_l_:
  4035                           	opt stack 0
  4036                           tblptru	equ	0xFF8
  4037                           tblptrh	equ	0xFF7
  4038                           tblptrl	equ	0xFF6
  4039                           tablat	equ	0xFF5
  4040                           prodh	equ	0xFF4
  4041                           prodl	equ	0xFF3
  4042                           postinc0	equ	0xFEE
  4043                           wreg	equ	0xFE8
  4044                           postdec1	equ	0xFE5
  4045                           fsr1l	equ	0xFE1
  4046                           indf2	equ	0xFDF
  4047                           postinc2	equ	0xFDE
  4048                           postdec2	equ	0xFDD
  4049                           fsr2h	equ	0xFDA
  4050                           fsr2l	equ	0xFD9
  4051                           status	equ	0xFD8
  4052                           
  4053 ;; *************** function ___lltoft *****************
  4054 ;; Defined at:
  4055 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lltoft.c"
  4056 ;; Parameters:    Size  Location     Type
  4057 ;;  c               4    8[COMRAM] unsigned long 
  4058 ;; Auto vars:     Size  Location     Type
  4059 ;;  exp             1   16[COMRAM] unsigned char 
  4060 ;; Return value:  Size  Location     Type
  4061 ;;                  3    8[COMRAM] float 
  4062 ;; Registers used:
  4063 ;;		wreg, status,2, status,0, cstack
  4064 ;; Tracked objects:
  4065 ;;		On entry : 0/0
  4066 ;;		On exit  : 0/0
  4067 ;;		Unchanged: 0/0
  4068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4069 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4070 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4071 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4072 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4073 ;;Total ram usage:        9 bytes
  4074 ;; Hardware stack levels used:    1
  4075 ;; Hardware stack levels required when called:    1
  4076 ;; This function calls:
  4077 ;;		___ftpack
  4078 ;; This function is called by:
  4079 ;;		_printf
  4080 ;; This function uses a non-reentrant model
  4081 ;;
  4082                           
  4083                           	psect	text12
  4084  002BA0                     __ptext12:
  4085                           	opt stack 0
  4086  002BA0                     ___lltoft:
  4087                           	opt stack 28
  4088                           
  4089                           ;incstack = 0
  4090  002BA0  0E8E               	movlw	142
  4091  002BA2  6E11               	movwf	___lltoft@exp,c
  4092  002BA4  D007               	goto	l2477
  4093  002BA6                     l2475:
  4094  002BA6  90D8               	bcf	status,0,c
  4095  002BA8  320C               	rrcf	___lltoft@c+3,f,c
  4096  002BAA  320B               	rrcf	___lltoft@c+2,f,c
  4097  002BAC  320A               	rrcf	___lltoft@c+1,f,c
  4098  002BAE  3209               	rrcf	___lltoft@c,f,c
  4099  002BB0  2A11               	incf	___lltoft@exp,f,c
  4100  002BB2  D000               	goto	l2477
  4101  002BB4                     l2477:
  4102  002BB4  0E00               	movlw	0
  4103  002BB6  1409               	andwf	___lltoft@c,w,c
  4104  002BB8  6E0D               	movwf	??___lltoft& (0+255),c
  4105  002BBA  0E00               	movlw	0
  4106  002BBC  140A               	andwf	___lltoft@c+1,w,c
  4107  002BBE  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  4108  002BC0  0E00               	movlw	0
  4109  002BC2  140B               	andwf	___lltoft@c+2,w,c
  4110  002BC4  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  4111  002BC6  0EFF               	movlw	255
  4112  002BC8  140C               	andwf	___lltoft@c+3,w,c
  4113  002BCA  6E10               	movwf	(??___lltoft+3)& (0+255),c
  4114  002BCC  500D               	movf	??___lltoft,w,c
  4115  002BCE  100E               	iorwf	??___lltoft+1,w,c
  4116  002BD0  100F               	iorwf	??___lltoft+2,w,c
  4117  002BD2  1010               	iorwf	??___lltoft+3,w,c
  4118  002BD4  A4D8               	btfss	status,2,c
  4119  002BD6  D7E7               	goto	l2475
  4120  002BD8  C009  F001         	movff	___lltoft@c,___ftpack@arg
  4121  002BDC  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  4122  002BE0  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  4123  002BE4  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  4124  002BE8  0E00               	movlw	0
  4125  002BEA  6E05               	movwf	___ftpack@sign,c
  4126  002BEC  ECE0  F013         	call	___ftpack	;wreg free
  4127  002BF0  C001  F009         	movff	?___ftpack,?___lltoft
  4128  002BF4  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  4129  002BF8  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  4130  002BFC  D000               	goto	l817
  4131  002BFE                     l817:
  4132  002BFE  0012               	return		;funcret
  4133  002C00                     __end_of___lltoft:
  4134                           	opt stack 0
  4135                           tblptru	equ	0xFF8
  4136                           tblptrh	equ	0xFF7
  4137                           tblptrl	equ	0xFF6
  4138                           tablat	equ	0xFF5
  4139                           prodh	equ	0xFF4
  4140                           prodl	equ	0xFF3
  4141                           postinc0	equ	0xFEE
  4142                           wreg	equ	0xFE8
  4143                           postdec1	equ	0xFE5
  4144                           fsr1l	equ	0xFE1
  4145                           indf2	equ	0xFDF
  4146                           postinc2	equ	0xFDE
  4147                           postdec2	equ	0xFDD
  4148                           fsr2h	equ	0xFDA
  4149                           fsr2l	equ	0xFD9
  4150                           status	equ	0xFD8
  4151                           
  4152 ;; *************** function ___llmod *****************
  4153 ;; Defined at:
  4154 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  4155 ;; Parameters:    Size  Location     Type
  4156 ;;  dividend        4    0[COMRAM] unsigned long 
  4157 ;;  divisor         4    4[COMRAM] unsigned long 
  4158 ;; Auto vars:     Size  Location     Type
  4159 ;;  counter         1    8[COMRAM] unsigned char 
  4160 ;; Return value:  Size  Location     Type
  4161 ;;                  4    0[COMRAM] unsigned long 
  4162 ;; Registers used:
  4163 ;;		wreg, status,2, status,0
  4164 ;; Tracked objects:
  4165 ;;		On entry : 0/0
  4166 ;;		On exit  : 0/0
  4167 ;;		Unchanged: 0/0
  4168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4169 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4170 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4172 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4173 ;;Total ram usage:        9 bytes
  4174 ;; Hardware stack levels used:    1
  4175 ;; This function calls:
  4176 ;;		Nothing
  4177 ;; This function is called by:
  4178 ;;		_printf
  4179 ;; This function uses a non-reentrant model
  4180 ;;
  4181                           
  4182                           	psect	text13
  4183  002AC0                     __ptext13:
  4184                           	opt stack 0
  4185  002AC0                     ___llmod:
  4186                           	opt stack 29
  4187                           
  4188                           ;incstack = 0
  4189  002AC0  5005               	movf	___llmod@divisor,w,c
  4190  002AC2  1006               	iorwf	___llmod@divisor+1,w,c
  4191  002AC4  1007               	iorwf	___llmod@divisor+2,w,c
  4192  002AC6  1008               	iorwf	___llmod@divisor+3,w,c
  4193  002AC8  B4D8               	btfsc	status,2,c
  4194  002ACA  D029               	goto	l797
  4195  002ACC  0E01               	movlw	1
  4196  002ACE  6E09               	movwf	___llmod@counter,c
  4197  002AD0  D007               	goto	l2463
  4198  002AD2                     l2461:
  4199  002AD2  90D8               	bcf	status,0,c
  4200  002AD4  3605               	rlcf	___llmod@divisor,f,c
  4201  002AD6  3606               	rlcf	___llmod@divisor+1,f,c
  4202  002AD8  3607               	rlcf	___llmod@divisor+2,f,c
  4203  002ADA  3608               	rlcf	___llmod@divisor+3,f,c
  4204  002ADC  2A09               	incf	___llmod@counter,f,c
  4205  002ADE  D000               	goto	l2463
  4206  002AE0                     l2463:
  4207  002AE0  BE08               	btfsc	___llmod@divisor+3,7,c
  4208  002AE2  D002               	goto	l2465
  4209  002AE4  D7F6               	goto	l2461
  4210  002AE6  D000               	goto	l2465
  4211  002AE8                     l2465:
  4212  002AE8  5005               	movf	___llmod@divisor,w,c
  4213  002AEA  5C01               	subwf	___llmod@dividend,w,c
  4214  002AEC  5006               	movf	___llmod@divisor+1,w,c
  4215  002AEE  5802               	subwfb	___llmod@dividend+1,w,c
  4216  002AF0  5007               	movf	___llmod@divisor+2,w,c
  4217  002AF2  5803               	subwfb	___llmod@dividend+2,w,c
  4218  002AF4  5008               	movf	___llmod@divisor+3,w,c
  4219  002AF6  5804               	subwfb	___llmod@dividend+3,w,c
  4220  002AF8  A0D8               	btfss	status,0,c
  4221  002AFA  D009               	goto	l2469
  4222  002AFC  5005               	movf	___llmod@divisor,w,c
  4223  002AFE  5E01               	subwf	___llmod@dividend,f,c
  4224  002B00  5006               	movf	___llmod@divisor+1,w,c
  4225  002B02  5A02               	subwfb	___llmod@dividend+1,f,c
  4226  002B04  5007               	movf	___llmod@divisor+2,w,c
  4227  002B06  5A03               	subwfb	___llmod@dividend+2,f,c
  4228  002B08  5008               	movf	___llmod@divisor+3,w,c
  4229  002B0A  5A04               	subwfb	___llmod@dividend+3,f,c
  4230  002B0C  D000               	goto	l2469
  4231  002B0E                     l2469:
  4232  002B0E  90D8               	bcf	status,0,c
  4233  002B10  3208               	rrcf	___llmod@divisor+3,f,c
  4234  002B12  3207               	rrcf	___llmod@divisor+2,f,c
  4235  002B14  3206               	rrcf	___llmod@divisor+1,f,c
  4236  002B16  3205               	rrcf	___llmod@divisor,f,c
  4237  002B18  2E09               	decfsz	___llmod@counter,f,c
  4238  002B1A  D7E6               	goto	l2465
  4239  002B1C  D000               	goto	l797
  4240  002B1E                     l797:
  4241  002B1E  C001  F001         	movff	___llmod@dividend,?___llmod
  4242  002B22  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  4243  002B26  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  4244  002B2A  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  4245  002B2E  0012               	return		;funcret
  4246  002B30                     __end_of___llmod:
  4247                           	opt stack 0
  4248                           tblptru	equ	0xFF8
  4249                           tblptrh	equ	0xFF7
  4250                           tblptrl	equ	0xFF6
  4251                           tablat	equ	0xFF5
  4252                           prodh	equ	0xFF4
  4253                           prodl	equ	0xFF3
  4254                           postinc0	equ	0xFEE
  4255                           wreg	equ	0xFE8
  4256                           postdec1	equ	0xFE5
  4257                           fsr1l	equ	0xFE1
  4258                           indf2	equ	0xFDF
  4259                           postinc2	equ	0xFDE
  4260                           postdec2	equ	0xFDD
  4261                           fsr2h	equ	0xFDA
  4262                           fsr2l	equ	0xFD9
  4263                           status	equ	0xFD8
  4264                           
  4265 ;; *************** function ___lldiv *****************
  4266 ;; Defined at:
  4267 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
  4268 ;; Parameters:    Size  Location     Type
  4269 ;;  dividend        4    0[COMRAM] unsigned long 
  4270 ;;  divisor         4    4[COMRAM] unsigned long 
  4271 ;; Auto vars:     Size  Location     Type
  4272 ;;  quotient        4    8[COMRAM] unsigned long 
  4273 ;;  counter         1   12[COMRAM] unsigned char 
  4274 ;; Return value:  Size  Location     Type
  4275 ;;                  4    0[COMRAM] unsigned long 
  4276 ;; Registers used:
  4277 ;;		wreg, status,2, status,0
  4278 ;; Tracked objects:
  4279 ;;		On entry : 0/0
  4280 ;;		On exit  : 0/0
  4281 ;;		Unchanged: 0/0
  4282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4283 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4284 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4286 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4287 ;;Total ram usage:       13 bytes
  4288 ;; Hardware stack levels used:    1
  4289 ;; This function calls:
  4290 ;;		Nothing
  4291 ;; This function is called by:
  4292 ;;		_printf
  4293 ;; This function uses a non-reentrant model
  4294 ;;
  4295                           
  4296                           	psect	text14
  4297  0029B2                     __ptext14:
  4298                           	opt stack 0
  4299  0029B2                     ___lldiv:
  4300                           	opt stack 29
  4301                           
  4302                           ;incstack = 0
  4303  0029B2  0E00               	movlw	0
  4304  0029B4  6E09               	movwf	___lldiv@quotient,c
  4305  0029B6  0E00               	movlw	0
  4306  0029B8  6E0A               	movwf	___lldiv@quotient+1,c
  4307  0029BA  0E00               	movlw	0
  4308  0029BC  6E0B               	movwf	___lldiv@quotient+2,c
  4309  0029BE  0E00               	movlw	0
  4310  0029C0  6E0C               	movwf	___lldiv@quotient+3,c
  4311  0029C2  5005               	movf	___lldiv@divisor,w,c
  4312  0029C4  1006               	iorwf	___lldiv@divisor+1,w,c
  4313  0029C6  1007               	iorwf	___lldiv@divisor+2,w,c
  4314  0029C8  1008               	iorwf	___lldiv@divisor+3,w,c
  4315  0029CA  B4D8               	btfsc	status,2,c
  4316  0029CC  D02F               	goto	l787
  4317  0029CE  0E01               	movlw	1
  4318  0029D0  6E0D               	movwf	___lldiv@counter,c
  4319  0029D2  D007               	goto	l2443
  4320  0029D4                     l2441:
  4321  0029D4  90D8               	bcf	status,0,c
  4322  0029D6  3605               	rlcf	___lldiv@divisor,f,c
  4323  0029D8  3606               	rlcf	___lldiv@divisor+1,f,c
  4324  0029DA  3607               	rlcf	___lldiv@divisor+2,f,c
  4325  0029DC  3608               	rlcf	___lldiv@divisor+3,f,c
  4326  0029DE  2A0D               	incf	___lldiv@counter,f,c
  4327  0029E0  D000               	goto	l2443
  4328  0029E2                     l2443:
  4329  0029E2  BE08               	btfsc	___lldiv@divisor+3,7,c
  4330  0029E4  D002               	goto	l2445
  4331  0029E6  D7F6               	goto	l2441
  4332  0029E8  D000               	goto	l2445
  4333  0029EA                     l2445:
  4334  0029EA  90D8               	bcf	status,0,c
  4335  0029EC  3609               	rlcf	___lldiv@quotient,f,c
  4336  0029EE  360A               	rlcf	___lldiv@quotient+1,f,c
  4337  0029F0  360B               	rlcf	___lldiv@quotient+2,f,c
  4338  0029F2  360C               	rlcf	___lldiv@quotient+3,f,c
  4339  0029F4  5005               	movf	___lldiv@divisor,w,c
  4340  0029F6  5C01               	subwf	___lldiv@dividend,w,c
  4341  0029F8  5006               	movf	___lldiv@divisor+1,w,c
  4342  0029FA  5802               	subwfb	___lldiv@dividend+1,w,c
  4343  0029FC  5007               	movf	___lldiv@divisor+2,w,c
  4344  0029FE  5803               	subwfb	___lldiv@dividend+2,w,c
  4345  002A00  5008               	movf	___lldiv@divisor+3,w,c
  4346  002A02  5804               	subwfb	___lldiv@dividend+3,w,c
  4347  002A04  A0D8               	btfss	status,0,c
  4348  002A06  D00A               	goto	l2453
  4349  002A08  5005               	movf	___lldiv@divisor,w,c
  4350  002A0A  5E01               	subwf	___lldiv@dividend,f,c
  4351  002A0C  5006               	movf	___lldiv@divisor+1,w,c
  4352  002A0E  5A02               	subwfb	___lldiv@dividend+1,f,c
  4353  002A10  5007               	movf	___lldiv@divisor+2,w,c
  4354  002A12  5A03               	subwfb	___lldiv@dividend+2,f,c
  4355  002A14  5008               	movf	___lldiv@divisor+3,w,c
  4356  002A16  5A04               	subwfb	___lldiv@dividend+3,f,c
  4357  002A18  8009               	bsf	___lldiv@quotient,0,c
  4358  002A1A  D000               	goto	l2453
  4359  002A1C                     l2453:
  4360  002A1C  90D8               	bcf	status,0,c
  4361  002A1E  3208               	rrcf	___lldiv@divisor+3,f,c
  4362  002A20  3207               	rrcf	___lldiv@divisor+2,f,c
  4363  002A22  3206               	rrcf	___lldiv@divisor+1,f,c
  4364  002A24  3205               	rrcf	___lldiv@divisor,f,c
  4365  002A26  2E0D               	decfsz	___lldiv@counter,f,c
  4366  002A28  D7E0               	goto	l2445
  4367  002A2A  D000               	goto	l787
  4368  002A2C                     l787:
  4369  002A2C  C009  F001         	movff	___lldiv@quotient,?___lldiv
  4370  002A30  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  4371  002A34  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  4372  002A38  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  4373  002A3C  0012               	return		;funcret
  4374  002A3E                     __end_of___lldiv:
  4375                           	opt stack 0
  4376                           tblptru	equ	0xFF8
  4377                           tblptrh	equ	0xFF7
  4378                           tblptrl	equ	0xFF6
  4379                           tablat	equ	0xFF5
  4380                           prodh	equ	0xFF4
  4381                           prodl	equ	0xFF3
  4382                           postinc0	equ	0xFEE
  4383                           wreg	equ	0xFE8
  4384                           postdec1	equ	0xFE5
  4385                           fsr1l	equ	0xFE1
  4386                           indf2	equ	0xFDF
  4387                           postinc2	equ	0xFDE
  4388                           postdec2	equ	0xFDD
  4389                           fsr2h	equ	0xFDA
  4390                           fsr2l	equ	0xFD9
  4391                           status	equ	0xFD8
  4392                           
  4393 ;; *************** function ___fttol *****************
  4394 ;; Defined at:
  4395 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
  4396 ;; Parameters:    Size  Location     Type
  4397 ;;  f1              3   57[COMRAM] float 
  4398 ;; Auto vars:     Size  Location     Type
  4399 ;;  lval            4   67[COMRAM] unsigned long 
  4400 ;;  exp1            1   71[COMRAM] unsigned char 
  4401 ;;  sign1           1   66[COMRAM] unsigned char 
  4402 ;; Return value:  Size  Location     Type
  4403 ;;                  4   57[COMRAM] long 
  4404 ;; Registers used:
  4405 ;;		wreg, status,2, status,0
  4406 ;; Tracked objects:
  4407 ;;		On entry : 0/0
  4408 ;;		On exit  : 0/0
  4409 ;;		Unchanged: 0/0
  4410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4411 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4412 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4413 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4414 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4415 ;;Total ram usage:       15 bytes
  4416 ;; Hardware stack levels used:    1
  4417 ;; This function calls:
  4418 ;;		Nothing
  4419 ;; This function is called by:
  4420 ;;		_main
  4421 ;;		_printf
  4422 ;; This function uses a non-reentrant model
  4423 ;;
  4424                           
  4425                           	psect	text15
  4426  0025F8                     __ptext15:
  4427                           	opt stack 0
  4428  0025F8                     ___fttol:
  4429                           	opt stack 29
  4430                           
  4431                           ;incstack = 0
  4432  0025F8  C03C  F03E         	movff	___fttol@f1+2,??___fttol
  4433  0025FC  6A3F               	clrf	(??___fttol+1)& (0+255),c
  4434  0025FE  6A40               	clrf	(??___fttol+2)& (0+255),c
  4435  002600  343B               	rlcf	___fttol@f1+1,w,c
  4436  002602  363E               	rlcf	??___fttol& (0+255),f,c
  4437  002604  E301               	bnc	u2331
  4438  002606  803F               	bsf	(??___fttol+1)& (0+255),0,c
  4439  002608                     u2331:
  4440  002608  503E               	movf	??___fttol,w,c
  4441  00260A  6E48               	movwf	___fttol@exp1,c
  4442  00260C  5048               	movf	___fttol@exp1,w,c
  4443  00260E  A4D8               	btfss	status,2,c
  4444  002610  D002               	goto	l2395
  4445  002612  D039               	goto	l2419
  4446  002614  D063               	goto	l748
  4447  002616                     l2395:
  4448  002616  0E17               	movlw	23
  4449  002618  6E3E               	movwf	??___fttol& (0+255),c
  4450  00261A  C03A  F03F         	movff	___fttol@f1,??___fttol+1
  4451  00261E  C03B  F040         	movff	___fttol@f1+1,??___fttol+2
  4452  002622  C03C  F041         	movff	___fttol@f1+2,??___fttol+3
  4453  002626  283E               	incf	??___fttol,w,c
  4454  002628  6E42               	movwf	(??___fttol+4)& (0+255),c
  4455  00262A  D004               	goto	u2350
  4456  00262C                     u2355:
  4457  00262C  90D8               	bcf	status,0,c
  4458  00262E  3241               	rrcf	??___fttol+3,f,c
  4459  002630  3240               	rrcf	??___fttol+2,f,c
  4460  002632  323F               	rrcf	??___fttol+1,f,c
  4461  002634                     u2350:
  4462  002634  2E42               	decfsz	(??___fttol+4)& (0+255),f,c
  4463  002636  D7FA               	goto	u2355
  4464  002638  503F               	movf	??___fttol+1,w,c
  4465  00263A  6E43               	movwf	___fttol@sign1,c
  4466  00263C  8E3B               	bsf	___fttol@f1+1,7,c
  4467  00263E  0EFF               	movlw	255
  4468  002640  163A               	andwf	___fttol@f1,f,c
  4469  002642  0EFF               	movlw	255
  4470  002644  163B               	andwf	___fttol@f1+1,f,c
  4471  002646  0E00               	movlw	0
  4472  002648  163C               	andwf	___fttol@f1+2,f,c
  4473  00264A  503A               	movf	___fttol@f1,w,c
  4474  00264C  6E44               	movwf	___fttol@lval,c
  4475  00264E  503B               	movf	___fttol@f1+1,w,c
  4476  002650  6E45               	movwf	___fttol@lval+1,c
  4477  002652  503C               	movf	___fttol@f1+2,w,c
  4478  002654  6E46               	movwf	___fttol@lval+2,c
  4479  002656  6A47               	clrf	___fttol@lval+3,c
  4480  002658  0E8E               	movlw	142
  4481  00265A  5E48               	subwf	___fttol@exp1,f,c
  4482  00265C  AE48               	btfss	___fttol@exp1,7,c
  4483  00265E  D010               	goto	l2417
  4484  002660  5048               	movf	___fttol@exp1,w,c
  4485  002662  0A80               	xorlw	128
  4486  002664  0F8F               	addlw	143
  4487  002666  B0D8               	btfsc	status,0,c
  4488  002668  D003               	goto	l2413
  4489  00266A  D00D               	goto	l2419
  4490  00266C  D037               	goto	l748
  4491  00266E  D000               	goto	l2413
  4492  002670                     l2413:
  4493  002670  90D8               	bcf	status,0,c
  4494  002672  3247               	rrcf	___fttol@lval+3,f,c
  4495  002674  3246               	rrcf	___fttol@lval+2,f,c
  4496  002676  3245               	rrcf	___fttol@lval+1,f,c
  4497  002678  3244               	rrcf	___fttol@lval,f,c
  4498  00267A  3E48               	incfsz	___fttol@exp1,f,c
  4499  00267C  D7F9               	goto	l2413
  4500  00267E  D019               	goto	l2427
  4501  002680                     l2417:
  4502  002680  0E17               	movlw	23
  4503  002682  6448               	cpfsgt	___fttol@exp1,c
  4504  002684  D011               	goto	l2425
  4505  002686                     l2419:
  4506  002686  0E00               	movlw	0
  4507  002688  6E3A               	movwf	?___fttol,c
  4508  00268A  0E00               	movlw	0
  4509  00268C  6E3B               	movwf	?___fttol+1,c
  4510  00268E  0E00               	movlw	0
  4511  002690  6E3C               	movwf	?___fttol+2,c
  4512  002692  0E00               	movlw	0
  4513  002694  6E3D               	movwf	?___fttol+3,c
  4514  002696  D022               	goto	l748
  4515  002698  D007               	goto	l2425
  4516  00269A                     l2423:
  4517  00269A  90D8               	bcf	status,0,c
  4518  00269C  3644               	rlcf	___fttol@lval,f,c
  4519  00269E  3645               	rlcf	___fttol@lval+1,f,c
  4520  0026A0  3646               	rlcf	___fttol@lval+2,f,c
  4521  0026A2  3647               	rlcf	___fttol@lval+3,f,c
  4522  0026A4  0648               	decf	___fttol@exp1,f,c
  4523  0026A6  D000               	goto	l2425
  4524  0026A8                     l2425:
  4525  0026A8  5048               	movf	___fttol@exp1,w,c
  4526  0026AA  B4D8               	btfsc	status,2,c
  4527  0026AC  D002               	goto	l2427
  4528  0026AE  D7F5               	goto	l2423
  4529  0026B0  D000               	goto	l2427
  4530  0026B2                     l2427:
  4531  0026B2  5043               	movf	___fttol@sign1,w,c
  4532  0026B4  B4D8               	btfsc	status,2,c
  4533  0026B6  D009               	goto	l2431
  4534  0026B8  1E47               	comf	___fttol@lval+3,f,c
  4535  0026BA  1E46               	comf	___fttol@lval+2,f,c
  4536  0026BC  1E45               	comf	___fttol@lval+1,f,c
  4537  0026BE  6C44               	negf	___fttol@lval,c
  4538  0026C0  0E00               	movlw	0
  4539  0026C2  2245               	addwfc	___fttol@lval+1,f,c
  4540  0026C4  2246               	addwfc	___fttol@lval+2,f,c
  4541  0026C6  2247               	addwfc	___fttol@lval+3,f,c
  4542  0026C8  D000               	goto	l2431
  4543  0026CA                     l2431:
  4544  0026CA  C044  F03A         	movff	___fttol@lval,?___fttol
  4545  0026CE  C045  F03B         	movff	___fttol@lval+1,?___fttol+1
  4546  0026D2  C046  F03C         	movff	___fttol@lval+2,?___fttol+2
  4547  0026D6  C047  F03D         	movff	___fttol@lval+3,?___fttol+3
  4548  0026DA  D000               	goto	l748
  4549  0026DC                     l748:
  4550  0026DC  0012               	return		;funcret
  4551  0026DE                     __end_of___fttol:
  4552                           	opt stack 0
  4553                           tblptru	equ	0xFF8
  4554                           tblptrh	equ	0xFF7
  4555                           tblptrl	equ	0xFF6
  4556                           tablat	equ	0xFF5
  4557                           prodh	equ	0xFF4
  4558                           prodl	equ	0xFF3
  4559                           postinc0	equ	0xFEE
  4560                           wreg	equ	0xFE8
  4561                           postdec1	equ	0xFE5
  4562                           fsr1l	equ	0xFE1
  4563                           indf2	equ	0xFDF
  4564                           postinc2	equ	0xFDE
  4565                           postdec2	equ	0xFDD
  4566                           fsr2h	equ	0xFDA
  4567                           fsr2l	equ	0xFD9
  4568                           status	equ	0xFD8
  4569                           
  4570 ;; *************** function ___ftsub *****************
  4571 ;; Defined at:
  4572 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftsub.c"
  4573 ;; Parameters:    Size  Location     Type
  4574 ;;  f1              3   27[COMRAM] float 
  4575 ;;  f2              3   30[COMRAM] float 
  4576 ;; Auto vars:     Size  Location     Type
  4577 ;;		None
  4578 ;; Return value:  Size  Location     Type
  4579 ;;                  3   27[COMRAM] float 
  4580 ;; Registers used:
  4581 ;;		wreg, status,2, status,0, cstack
  4582 ;; Tracked objects:
  4583 ;;		On entry : 0/0
  4584 ;;		On exit  : 0/0
  4585 ;;		Unchanged: 0/0
  4586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4587 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4590 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4591 ;;Total ram usage:        6 bytes
  4592 ;; Hardware stack levels used:    1
  4593 ;; Hardware stack levels required when called:    2
  4594 ;; This function calls:
  4595 ;;		___ftadd
  4596 ;; This function is called by:
  4597 ;;		_printf
  4598 ;; This function uses a non-reentrant model
  4599 ;;
  4600                           
  4601                           	psect	text16
  4602  002C00                     __ptext16:
  4603                           	opt stack 0
  4604  002C00                     ___ftsub:
  4605                           	opt stack 27
  4606                           
  4607                           ;incstack = 0
  4608  002C00  501F               	movf	___ftsub@f2,w,c
  4609  002C02  1020               	iorwf	___ftsub@f2+1,w,c
  4610  002C04  1021               	iorwf	___ftsub@f2+2,w,c
  4611  002C06  B4D8               	btfsc	status,2,c
  4612  002C08  D007               	goto	l2363
  4613  002C0A  0E00               	movlw	0
  4614  002C0C  1A1F               	xorwf	___ftsub@f2,f,c
  4615  002C0E  0E00               	movlw	0
  4616  002C10  1A20               	xorwf	___ftsub@f2+1,f,c
  4617  002C12  0E80               	movlw	128
  4618  002C14  1A21               	xorwf	___ftsub@f2+2,f,c
  4619  002C16  D000               	goto	l2363
  4620  002C18                     l2363:
  4621  002C18  C01C  F010         	movff	___ftsub@f1,___ftadd@f1
  4622  002C1C  C01D  F011         	movff	___ftsub@f1+1,___ftadd@f1+1
  4623  002C20  C01E  F012         	movff	___ftsub@f1+2,___ftadd@f1+2
  4624  002C24  C01F  F013         	movff	___ftsub@f2,___ftadd@f2
  4625  002C28  C020  F014         	movff	___ftsub@f2+1,___ftadd@f2+1
  4626  002C2C  C021  F015         	movff	___ftsub@f2+2,___ftadd@f2+2
  4627  002C30  ECFE  F00F         	call	___ftadd	;wreg free
  4628  002C34  C010  F01C         	movff	?___ftadd,?___ftsub
  4629  002C38  C011  F01D         	movff	?___ftadd+1,?___ftsub+1
  4630  002C3C  C012  F01E         	movff	?___ftadd+2,?___ftsub+2
  4631  002C40  D000               	goto	l744
  4632  002C42                     l744:
  4633  002C42  0012               	return		;funcret
  4634  002C44                     __end_of___ftsub:
  4635                           	opt stack 0
  4636                           tblptru	equ	0xFF8
  4637                           tblptrh	equ	0xFF7
  4638                           tblptrl	equ	0xFF6
  4639                           tablat	equ	0xFF5
  4640                           prodh	equ	0xFF4
  4641                           prodl	equ	0xFF3
  4642                           postinc0	equ	0xFEE
  4643                           wreg	equ	0xFE8
  4644                           postdec1	equ	0xFE5
  4645                           fsr1l	equ	0xFE1
  4646                           indf2	equ	0xFDF
  4647                           postinc2	equ	0xFDE
  4648                           postdec2	equ	0xFDD
  4649                           fsr2h	equ	0xFDA
  4650                           fsr2l	equ	0xFD9
  4651                           status	equ	0xFD8
  4652                           
  4653 ;; *************** function ___ftadd *****************
  4654 ;; Defined at:
  4655 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftadd.c"
  4656 ;; Parameters:    Size  Location     Type
  4657 ;;  f1              3   15[COMRAM] float 
  4658 ;;  f2              3   18[COMRAM] float 
  4659 ;; Auto vars:     Size  Location     Type
  4660 ;;  exp1            1   26[COMRAM] unsigned char 
  4661 ;;  exp2            1   25[COMRAM] unsigned char 
  4662 ;;  sign            1   24[COMRAM] unsigned char 
  4663 ;; Return value:  Size  Location     Type
  4664 ;;                  3   15[COMRAM] float 
  4665 ;; Registers used:
  4666 ;;		wreg, status,2, status,0, cstack
  4667 ;; Tracked objects:
  4668 ;;		On entry : 0/0
  4669 ;;		On exit  : 0/0
  4670 ;;		Unchanged: 0/0
  4671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4672 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4673 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4674 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4675 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4676 ;;Total ram usage:       12 bytes
  4677 ;; Hardware stack levels used:    1
  4678 ;; Hardware stack levels required when called:    1
  4679 ;; This function calls:
  4680 ;;		___ftpack
  4681 ;; This function is called by:
  4682 ;;		_main
  4683 ;;		_printf
  4684 ;;		___ftsub
  4685 ;; This function uses a non-reentrant model
  4686 ;;
  4687                           
  4688                           	psect	text17
  4689  001FFC                     __ptext17:
  4690                           	opt stack 0
  4691  001FFC                     ___ftadd:
  4692                           	opt stack 27
  4693                           
  4694                           ;incstack = 0
  4695  001FFC  C012  F016         	movff	___ftadd@f1+2,??___ftadd
  4696  002000  6A17               	clrf	(??___ftadd+1)& (0+255),c
  4697  002002  6A18               	clrf	(??___ftadd+2)& (0+255),c
  4698  002004  3411               	rlcf	___ftadd@f1+1,w,c
  4699  002006  3616               	rlcf	??___ftadd& (0+255),f,c
  4700  002008  E301               	bnc	u1551
  4701  00200A  8017               	bsf	(??___ftadd+1)& (0+255),0,c
  4702  00200C                     u1551:
  4703  00200C  5016               	movf	??___ftadd,w,c
  4704  00200E  6E1B               	movwf	___ftadd@exp1,c
  4705  002010  C015  F016         	movff	___ftadd@f2+2,??___ftadd
  4706  002014  6A17               	clrf	(??___ftadd+1)& (0+255),c
  4707  002016  6A18               	clrf	(??___ftadd+2)& (0+255),c
  4708  002018  3414               	rlcf	___ftadd@f2+1,w,c
  4709  00201A  3616               	rlcf	??___ftadd& (0+255),f,c
  4710  00201C  E301               	bnc	u1561
  4711  00201E  8017               	bsf	(??___ftadd+1)& (0+255),0,c
  4712  002020                     u1561:
  4713  002020  5016               	movf	??___ftadd,w,c
  4714  002022  6E1A               	movwf	___ftadd@exp2,c
  4715  002024  501B               	movf	___ftadd@exp1,w,c
  4716  002026  B4D8               	btfsc	status,2,c
  4717  002028  D00B               	goto	l663
  4718  00202A  501A               	movf	___ftadd@exp2,w,c
  4719  00202C  5C1B               	subwf	___ftadd@exp1,w,c
  4720  00202E  B0D8               	btfsc	status,0,c
  4721  002030  D00E               	goto	l1921
  4722  002032  501B               	movf	___ftadd@exp1,w,c
  4723  002034  0800               	sublw	0
  4724  002036  241A               	addwf	___ftadd@exp2,w,c
  4725  002038  6E16               	movwf	??___ftadd& (0+255),c
  4726  00203A  0E18               	movlw	24
  4727  00203C  6416               	cpfsgt	??___ftadd,c
  4728  00203E  D007               	goto	l1921
  4729  002040                     l663:
  4730  002040  C013  F010         	movff	___ftadd@f2,?___ftadd
  4731  002044  C014  F011         	movff	___ftadd@f2+1,?___ftadd+1
  4732  002048  C015  F012         	movff	___ftadd@f2+2,?___ftadd+2
  4733  00204C  D0B8               	goto	l664
  4734  00204E                     l1921:
  4735  00204E  501A               	movf	___ftadd@exp2,w,c
  4736  002050  B4D8               	btfsc	status,2,c
  4737  002052  D00B               	goto	l667
  4738  002054  501B               	movf	___ftadd@exp1,w,c
  4739  002056  5C1A               	subwf	___ftadd@exp2,w,c
  4740  002058  B0D8               	btfsc	status,0,c
  4741  00205A  D00E               	goto	l1927
  4742  00205C  501A               	movf	___ftadd@exp2,w,c
  4743  00205E  0800               	sublw	0
  4744  002060  241B               	addwf	___ftadd@exp1,w,c
  4745  002062  6E16               	movwf	??___ftadd& (0+255),c
  4746  002064  0E18               	movlw	24
  4747  002066  6416               	cpfsgt	??___ftadd,c
  4748  002068  D007               	goto	l1927
  4749  00206A                     l667:
  4750  00206A  C010  F010         	movff	___ftadd@f1,?___ftadd
  4751  00206E  C011  F011         	movff	___ftadd@f1+1,?___ftadd+1
  4752  002072  C012  F012         	movff	___ftadd@f1+2,?___ftadd+2
  4753  002076  D0A3               	goto	l664
  4754  002078                     l1927:
  4755  002078  0E06               	movlw	6
  4756  00207A  6E19               	movwf	___ftadd@sign,c
  4757  00207C  AE12               	btfss	___ftadd@f1+2,7,c
  4758  00207E  D002               	goto	l1933
  4759  002080  8E19               	bsf	___ftadd@sign,7,c
  4760  002082  D000               	goto	l1933
  4761  002084                     l1933:
  4762  002084  BE15               	btfsc	___ftadd@f2+2,7,c
  4763  002086  8C19               	bsf	___ftadd@sign,6,c
  4764  002088  8E11               	bsf	___ftadd@f1+1,7,c
  4765  00208A  0EFF               	movlw	255
  4766  00208C  1610               	andwf	___ftadd@f1,f,c
  4767  00208E  0EFF               	movlw	255
  4768  002090  1611               	andwf	___ftadd@f1+1,f,c
  4769  002092  0E00               	movlw	0
  4770  002094  1612               	andwf	___ftadd@f1+2,f,c
  4771  002096  8E14               	bsf	___ftadd@f2+1,7,c
  4772  002098  0EFF               	movlw	255
  4773  00209A  1613               	andwf	___ftadd@f2,f,c
  4774  00209C  0EFF               	movlw	255
  4775  00209E  1614               	andwf	___ftadd@f2+1,f,c
  4776  0020A0  0E00               	movlw	0
  4777  0020A2  1615               	andwf	___ftadd@f2+2,f,c
  4778  0020A4  501A               	movf	___ftadd@exp2,w,c
  4779  0020A6  5C1B               	subwf	___ftadd@exp1,w,c
  4780  0020A8  B0D8               	btfsc	status,0,c
  4781  0020AA  D01E               	goto	l1953
  4782  0020AC                     l1943:
  4783  0020AC  90D8               	bcf	status,0,c
  4784  0020AE  3613               	rlcf	___ftadd@f2,f,c
  4785  0020B0  3614               	rlcf	___ftadd@f2+1,f,c
  4786  0020B2  3615               	rlcf	___ftadd@f2+2,f,c
  4787  0020B4  061A               	decf	___ftadd@exp2,f,c
  4788  0020B6  501B               	movf	___ftadd@exp1,w,c
  4789  0020B8  181A               	xorwf	___ftadd@exp2,w,c
  4790  0020BA  B4D8               	btfsc	status,2,c
  4791  0020BC  D00F               	goto	l1951
  4792  0020BE  0619               	decf	___ftadd@sign,f,c
  4793  0020C0  C019  F016         	movff	___ftadd@sign,??___ftadd
  4794  0020C4  0E07               	movlw	7
  4795  0020C6  1616               	andwf	??___ftadd,f,c
  4796  0020C8  B4D8               	btfsc	status,2,c
  4797  0020CA  D008               	goto	l1951
  4798  0020CC  D7EF               	goto	l1943
  4799  0020CE  D006               	goto	l1951
  4800  0020D0                     l1949:
  4801  0020D0  90D8               	bcf	status,0,c
  4802  0020D2  3212               	rrcf	___ftadd@f1+2,f,c
  4803  0020D4  3211               	rrcf	___ftadd@f1+1,f,c
  4804  0020D6  3210               	rrcf	___ftadd@f1,f,c
  4805  0020D8  2A1B               	incf	___ftadd@exp1,f,c
  4806  0020DA  D000               	goto	l1951
  4807  0020DC                     l1951:
  4808  0020DC  501A               	movf	___ftadd@exp2,w,c
  4809  0020DE  181B               	xorwf	___ftadd@exp1,w,c
  4810  0020E0  B4D8               	btfsc	status,2,c
  4811  0020E2  D024               	goto	l678
  4812  0020E4  D7F5               	goto	l1949
  4813  0020E6  D022               	goto	l678
  4814  0020E8                     l1953:
  4815  0020E8  501B               	movf	___ftadd@exp1,w,c
  4816  0020EA  5C1A               	subwf	___ftadd@exp2,w,c
  4817  0020EC  B0D8               	btfsc	status,0,c
  4818  0020EE  D01E               	goto	l678
  4819  0020F0                     l1955:
  4820  0020F0  90D8               	bcf	status,0,c
  4821  0020F2  3610               	rlcf	___ftadd@f1,f,c
  4822  0020F4  3611               	rlcf	___ftadd@f1+1,f,c
  4823  0020F6  3612               	rlcf	___ftadd@f1+2,f,c
  4824  0020F8  061B               	decf	___ftadd@exp1,f,c
  4825  0020FA  501B               	movf	___ftadd@exp1,w,c
  4826  0020FC  181A               	xorwf	___ftadd@exp2,w,c
  4827  0020FE  B4D8               	btfsc	status,2,c
  4828  002100  D00F               	goto	l1963
  4829  002102  0619               	decf	___ftadd@sign,f,c
  4830  002104  C019  F016         	movff	___ftadd@sign,??___ftadd
  4831  002108  0E07               	movlw	7
  4832  00210A  1616               	andwf	??___ftadd,f,c
  4833  00210C  B4D8               	btfsc	status,2,c
  4834  00210E  D008               	goto	l1963
  4835  002110  D7EF               	goto	l1955
  4836  002112  D006               	goto	l1963
  4837  002114                     l1961:
  4838  002114  90D8               	bcf	status,0,c
  4839  002116  3215               	rrcf	___ftadd@f2+2,f,c
  4840  002118  3214               	rrcf	___ftadd@f2+1,f,c
  4841  00211A  3213               	rrcf	___ftadd@f2,f,c
  4842  00211C  2A1A               	incf	___ftadd@exp2,f,c
  4843  00211E  D000               	goto	l1963
  4844  002120                     l1963:
  4845  002120  501A               	movf	___ftadd@exp2,w,c
  4846  002122  181B               	xorwf	___ftadd@exp1,w,c
  4847  002124  B4D8               	btfsc	status,2,c
  4848  002126  D002               	goto	l678
  4849  002128  D7F5               	goto	l1961
  4850  00212A  D000               	goto	l678
  4851  00212C                     l678:
  4852  00212C  AE19               	btfss	___ftadd@sign,7,c
  4853  00212E  D00C               	goto	l687
  4854  002130  0EFF               	movlw	255
  4855  002132  1A10               	xorwf	___ftadd@f1,f,c
  4856  002134  0EFF               	movlw	255
  4857  002136  1A11               	xorwf	___ftadd@f1+1,f,c
  4858  002138  0EFF               	movlw	255
  4859  00213A  1A12               	xorwf	___ftadd@f1+2,f,c
  4860  00213C  0E01               	movlw	1
  4861  00213E  2610               	addwf	___ftadd@f1,f,c
  4862  002140  0E00               	movlw	0
  4863  002142  2211               	addwfc	___ftadd@f1+1,f,c
  4864  002144  0E00               	movlw	0
  4865  002146  2212               	addwfc	___ftadd@f1+2,f,c
  4866  002148                     l687:
  4867  002148  AC19               	btfss	___ftadd@sign,6,c
  4868  00214A  D00D               	goto	l1969
  4869  00214C  0EFF               	movlw	255
  4870  00214E  1A13               	xorwf	___ftadd@f2,f,c
  4871  002150  0EFF               	movlw	255
  4872  002152  1A14               	xorwf	___ftadd@f2+1,f,c
  4873  002154  0EFF               	movlw	255
  4874  002156  1A15               	xorwf	___ftadd@f2+2,f,c
  4875  002158  0E01               	movlw	1
  4876  00215A  2613               	addwf	___ftadd@f2,f,c
  4877  00215C  0E00               	movlw	0
  4878  00215E  2214               	addwfc	___ftadd@f2+1,f,c
  4879  002160  0E00               	movlw	0
  4880  002162  2215               	addwfc	___ftadd@f2+2,f,c
  4881  002164  D000               	goto	l1969
  4882  002166                     l1969:
  4883  002166  0E00               	movlw	0
  4884  002168  6E19               	movwf	___ftadd@sign,c
  4885  00216A  5010               	movf	___ftadd@f1,w,c
  4886  00216C  2613               	addwf	___ftadd@f2,f,c
  4887  00216E  5011               	movf	___ftadd@f1+1,w,c
  4888  002170  2214               	addwfc	___ftadd@f2+1,f,c
  4889  002172  5012               	movf	___ftadd@f1+2,w,c
  4890  002174  2215               	addwfc	___ftadd@f2+2,f,c
  4891  002176  AE15               	btfss	___ftadd@f2+2,7,c
  4892  002178  D00F               	goto	l1979
  4893  00217A  0EFF               	movlw	255
  4894  00217C  1A13               	xorwf	___ftadd@f2,f,c
  4895  00217E  0EFF               	movlw	255
  4896  002180  1A14               	xorwf	___ftadd@f2+1,f,c
  4897  002182  0EFF               	movlw	255
  4898  002184  1A15               	xorwf	___ftadd@f2+2,f,c
  4899  002186  0E01               	movlw	1
  4900  002188  2613               	addwf	___ftadd@f2,f,c
  4901  00218A  0E00               	movlw	0
  4902  00218C  2214               	addwfc	___ftadd@f2+1,f,c
  4903  00218E  0E00               	movlw	0
  4904  002190  2215               	addwfc	___ftadd@f2+2,f,c
  4905  002192  0E01               	movlw	1
  4906  002194  6E19               	movwf	___ftadd@sign,c
  4907  002196  D000               	goto	l1979
  4908  002198                     l1979:
  4909  002198  C013  F001         	movff	___ftadd@f2,___ftpack@arg
  4910  00219C  C014  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  4911  0021A0  C015  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  4912  0021A4  C01B  F004         	movff	___ftadd@exp1,___ftpack@exp
  4913  0021A8  C019  F005         	movff	___ftadd@sign,___ftpack@sign
  4914  0021AC  ECE0  F013         	call	___ftpack	;wreg free
  4915  0021B0  C001  F010         	movff	?___ftpack,?___ftadd
  4916  0021B4  C002  F011         	movff	?___ftpack+1,?___ftadd+1
  4917  0021B8  C003  F012         	movff	?___ftpack+2,?___ftadd+2
  4918  0021BC  D000               	goto	l664
  4919  0021BE                     l664:
  4920  0021BE  0012               	return		;funcret
  4921  0021C0                     __end_of___ftadd:
  4922                           	opt stack 0
  4923                           tblptru	equ	0xFF8
  4924                           tblptrh	equ	0xFF7
  4925                           tblptrl	equ	0xFF6
  4926                           tablat	equ	0xFF5
  4927                           prodh	equ	0xFF4
  4928                           prodl	equ	0xFF3
  4929                           postinc0	equ	0xFEE
  4930                           wreg	equ	0xFE8
  4931                           postdec1	equ	0xFE5
  4932                           fsr1l	equ	0xFE1
  4933                           indf2	equ	0xFDF
  4934                           postinc2	equ	0xFDE
  4935                           postdec2	equ	0xFDD
  4936                           fsr2h	equ	0xFDA
  4937                           fsr2l	equ	0xFD9
  4938                           status	equ	0xFD8
  4939                           
  4940 ;; *************** function ___ftneg *****************
  4941 ;; Defined at:
  4942 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftneg.c"
  4943 ;; Parameters:    Size  Location     Type
  4944 ;;  f1              3   12[COMRAM] float 
  4945 ;; Auto vars:     Size  Location     Type
  4946 ;;		None
  4947 ;; Return value:  Size  Location     Type
  4948 ;;                  3   12[COMRAM] float 
  4949 ;; Registers used:
  4950 ;;		wreg, status,2, status,0
  4951 ;; Tracked objects:
  4952 ;;		On entry : 0/0
  4953 ;;		On exit  : 0/0
  4954 ;;		Unchanged: 0/0
  4955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4956 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4959 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4960 ;;Total ram usage:        3 bytes
  4961 ;; Hardware stack levels used:    1
  4962 ;; This function calls:
  4963 ;;		Nothing
  4964 ;; This function is called by:
  4965 ;;		_main
  4966 ;;		_printf
  4967 ;; This function uses a non-reentrant model
  4968 ;;
  4969                           
  4970                           	psect	text18
  4971  002D82                     __ptext18:
  4972                           	opt stack 0
  4973  002D82                     ___ftneg:
  4974                           	opt stack 29
  4975                           
  4976                           ;incstack = 0
  4977  002D82  500D               	movf	___ftneg@f1,w,c
  4978  002D84  100E               	iorwf	___ftneg@f1+1,w,c
  4979  002D86  100F               	iorwf	___ftneg@f1+2,w,c
  4980  002D88  B4D8               	btfsc	status,2,c
  4981  002D8A  D006               	goto	l737
  4982  002D8C  0E00               	movlw	0
  4983  002D8E  1A0D               	xorwf	___ftneg@f1,f,c
  4984  002D90  0E00               	movlw	0
  4985  002D92  1A0E               	xorwf	___ftneg@f1+1,f,c
  4986  002D94  0E80               	movlw	128
  4987  002D96  1A0F               	xorwf	___ftneg@f1+2,f,c
  4988  002D98                     l737:
  4989  002D98  C00D  F00D         	movff	___ftneg@f1,?___ftneg
  4990  002D9C  C00E  F00E         	movff	___ftneg@f1+1,?___ftneg+1
  4991  002DA0  C00F  F00F         	movff	___ftneg@f1+2,?___ftneg+2
  4992  002DA4  0012               	return		;funcret
  4993  002DA6                     __end_of___ftneg:
  4994                           	opt stack 0
  4995                           tblptru	equ	0xFF8
  4996                           tblptrh	equ	0xFF7
  4997                           tblptrl	equ	0xFF6
  4998                           tablat	equ	0xFF5
  4999                           prodh	equ	0xFF4
  5000                           prodl	equ	0xFF3
  5001                           postinc0	equ	0xFEE
  5002                           wreg	equ	0xFE8
  5003                           postdec1	equ	0xFE5
  5004                           fsr1l	equ	0xFE1
  5005                           indf2	equ	0xFDF
  5006                           postinc2	equ	0xFDE
  5007                           postdec2	equ	0xFDD
  5008                           fsr2h	equ	0xFDA
  5009                           fsr2l	equ	0xFD9
  5010                           status	equ	0xFD8
  5011                           
  5012 ;; *************** function _init_UART *****************
  5013 ;; Defined at:
  5014 ;;		line 44 in file "lab6p3.c"
  5015 ;; Parameters:    Size  Location     Type
  5016 ;;		None
  5017 ;; Auto vars:     Size  Location     Type
  5018 ;;		None
  5019 ;; Return value:  Size  Location     Type
  5020 ;;		None               void
  5021 ;; Registers used:
  5022 ;;		wreg, status,2, cstack
  5023 ;; Tracked objects:
  5024 ;;		On entry : 0/0
  5025 ;;		On exit  : 0/0
  5026 ;;		Unchanged: 0/0
  5027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5032 ;;Total ram usage:        0 bytes
  5033 ;; Hardware stack levels used:    1
  5034 ;; Hardware stack levels required when called:    1
  5035 ;; This function calls:
  5036 ;;		_OpenUSART
  5037 ;; This function is called by:
  5038 ;;		_main
  5039 ;; This function uses a non-reentrant model
  5040 ;;
  5041                           
  5042                           	psect	text19
  5043  002DC6                     __ptext19:
  5044                           	opt stack 0
  5045  002DC6                     _init_UART:
  5046                           	opt stack 29
  5047                           
  5048                           ;lab6p3.c: 46: OpenUSART (0b01111111 & 0b10111111 &
  5049                           ;lab6p3.c: 47: 0b11111110 & 0b11111101 & 0b11111111 &
  5050                           ;lab6p3.c: 48: 0b11111111, 25);
  5051                           
  5052                           ;incstack = 0
  5053  002DC6  0E00               	movlw	0
  5054  002DC8  6E02               	movwf	OpenUSART@spbrg+1,c
  5055  002DCA  0E19               	movlw	25
  5056  002DCC  6E01               	movwf	OpenUSART@spbrg,c
  5057  002DCE  0E3C               	movlw	60
  5058  002DD0  EC98  F015         	call	_OpenUSART
  5059                           
  5060                           ;lab6p3.c: 49: OSCCON = 0x60;
  5061  002DD4  0E60               	movlw	96
  5062  002DD6  6ED3               	movwf	4051,c	;volatile
  5063  002DD8  0012               	return		;funcret
  5064  002DDA                     __end_of_init_UART:
  5065                           	opt stack 0
  5066                           tblptru	equ	0xFF8
  5067                           tblptrh	equ	0xFF7
  5068                           tblptrl	equ	0xFF6
  5069                           tablat	equ	0xFF5
  5070                           prodh	equ	0xFF4
  5071                           prodl	equ	0xFF3
  5072                           postinc0	equ	0xFEE
  5073                           wreg	equ	0xFE8
  5074                           postdec1	equ	0xFE5
  5075                           fsr1l	equ	0xFE1
  5076                           indf2	equ	0xFDF
  5077                           postinc2	equ	0xFDE
  5078                           postdec2	equ	0xFDD
  5079                           fsr2h	equ	0xFDA
  5080                           fsr2l	equ	0xFD9
  5081                           status	equ	0xFD8
  5082                           
  5083 ;; *************** function _OpenUSART *****************
  5084 ;; Defined at:
  5085 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\uopen.c"
  5086 ;; Parameters:    Size  Location     Type
  5087 ;;  config          1    wreg     unsigned char 
  5088 ;;  spbrg           2    0[COMRAM] unsigned int 
  5089 ;; Auto vars:     Size  Location     Type
  5090 ;;  config          1    2[COMRAM] unsigned char 
  5091 ;; Return value:  Size  Location     Type
  5092 ;;		None               void
  5093 ;; Registers used:
  5094 ;;		wreg, status,2
  5095 ;; Tracked objects:
  5096 ;;		On entry : 0/0
  5097 ;;		On exit  : 0/0
  5098 ;;		Unchanged: 0/0
  5099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5100 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5101 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5103 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5104 ;;Total ram usage:        3 bytes
  5105 ;; Hardware stack levels used:    1
  5106 ;; This function calls:
  5107 ;;		Nothing
  5108 ;; This function is called by:
  5109 ;;		_init_UART
  5110 ;; This function uses a non-reentrant model
  5111 ;;
  5112                           
  5113                           	psect	text20
  5114  002B30                     __ptext20:
  5115                           	opt stack 0
  5116  002B30                     _OpenUSART:
  5117                           	opt stack 29
  5118                           
  5119                           ;incstack = 0
  5120                           ;OpenUSART@config stored from wreg
  5121  002B30  6E03               	movwf	OpenUSART@config,c
  5122  002B32  0E00               	movlw	0
  5123  002B34  6EAC               	movwf	4012,c	;volatile
  5124  002B36  0E00               	movlw	0
  5125  002B38  6EAB               	movwf	4011,c	;volatile
  5126  002B3A  A003               	btfss	OpenUSART@config,0,c
  5127  002B3C  D002               	goto	l2117
  5128  002B3E  88AC               	bsf	4012,4,c	;volatile
  5129  002B40  D000               	goto	l2117
  5130  002B42                     l2117:
  5131  002B42  A203               	btfss	OpenUSART@config,1,c
  5132  002B44  D003               	goto	l2121
  5133  002B46  8CAC               	bsf	4012,6,c	;volatile
  5134  002B48  8CAB               	bsf	4011,6,c	;volatile
  5135  002B4A  D000               	goto	l2121
  5136  002B4C                     l2121:
  5137  002B4C  A403               	btfss	OpenUSART@config,2,c
  5138  002B4E  D002               	goto	l2125
  5139  002B50  8EAC               	bsf	4012,7,c	;volatile
  5140  002B52  D000               	goto	l2125
  5141  002B54                     l2125:
  5142  002B54  A603               	btfss	OpenUSART@config,3,c
  5143  002B56  D002               	goto	l286
  5144  002B58  88AB               	bsf	4011,4,c	;volatile
  5145  002B5A  D002               	goto	l2129
  5146  002B5C                     l286:
  5147  002B5C  8AAB               	bsf	4011,5,c	;volatile
  5148  002B5E  D000               	goto	l2129
  5149  002B60                     l2129:
  5150  002B60  B803               	btfsc	OpenUSART@config,4,c
  5151  002B62  84AC               	bsf	4012,2,c	;volatile
  5152  002B64  989E               	bcf	3998,4,c	;volatile
  5153  002B66  AA03               	btfss	OpenUSART@config,5,c
  5154  002B68  D002               	goto	l2137
  5155  002B6A  86AB               	bsf	4011,3,c	;volatile
  5156  002B6C  D000               	goto	l2137
  5157  002B6E                     l2137:
  5158  002B6E  AC03               	btfss	OpenUSART@config,6,c
  5159  002B70  D002               	goto	l290
  5160  002B72  8A9D               	bsf	3997,5,c	;volatile
  5161  002B74  D001               	goto	l291
  5162  002B76                     l290:
  5163  002B76  9A9D               	bcf	3997,5,c	;volatile
  5164  002B78                     l291:
  5165  002B78  9A9E               	bcf	3998,5,c	;volatile
  5166  002B7A  AE03               	btfss	OpenUSART@config,7,c
  5167  002B7C  D002               	goto	l292
  5168  002B7E  889D               	bsf	3997,4,c	;volatile
  5169  002B80  D001               	goto	l293
  5170  002B82                     l292:
  5171  002B82  989D               	bcf	3997,4,c	;volatile
  5172  002B84                     l293:
  5173  002B84  C001  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  5174  002B88  5002               	movf	OpenUSART@spbrg+1,w,c
  5175  002B8A  6EB0               	movwf	4016,c	;volatile
  5176  002B8C  8AAC               	bsf	4012,5,c	;volatile
  5177  002B8E  8EAB               	bsf	4011,7,c	;volatile
  5178  002B90  9C94               	bcf	3988,6,c	;volatile
  5179  002B92  8E94               	bsf	3988,7,c	;volatile
  5180  002B94  B8AC               	btfsc	4012,4,c	;volatile
  5181  002B96  BEAC               	btfsc	4012,7,c	;volatile
  5182  002B98  D002               	goto	l295
  5183  002B9A  8C94               	bsf	3988,6,c	;volatile
  5184  002B9C  D000               	goto	l295
  5185  002B9E                     l295:
  5186  002B9E  0012               	return		;funcret
  5187  002BA0                     __end_of_OpenUSART:
  5188                           	opt stack 0
  5189                           tblptru	equ	0xFF8
  5190                           tblptrh	equ	0xFF7
  5191                           tblptrl	equ	0xFF6
  5192                           tablat	equ	0xFF5
  5193                           prodh	equ	0xFF4
  5194                           prodl	equ	0xFF3
  5195                           postinc0	equ	0xFEE
  5196                           wreg	equ	0xFE8
  5197                           postdec1	equ	0xFE5
  5198                           fsr1l	equ	0xFE1
  5199                           indf2	equ	0xFDF
  5200                           postinc2	equ	0xFDE
  5201                           postdec2	equ	0xFDD
  5202                           fsr2h	equ	0xFDA
  5203                           fsr2l	equ	0xFD9
  5204                           status	equ	0xFD8
  5205                           
  5206 ;; *************** function _get_full_ADC *****************
  5207 ;; Defined at:
  5208 ;;		line 148 in file "lab6p3.c"
  5209 ;; Parameters:    Size  Location     Type
  5210 ;;		None
  5211 ;; Auto vars:     Size  Location     Type
  5212 ;;  result          2    4[COMRAM] int 
  5213 ;; Return value:  Size  Location     Type
  5214 ;;                  2    0[COMRAM] unsigned int 
  5215 ;; Registers used:
  5216 ;;		wreg, status,2, status,0
  5217 ;; Tracked objects:
  5218 ;;		On entry : 0/0
  5219 ;;		On exit  : 0/0
  5220 ;;		Unchanged: 0/0
  5221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5222 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5223 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5224 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5225 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5226 ;;Total ram usage:        6 bytes
  5227 ;; Hardware stack levels used:    1
  5228 ;; This function calls:
  5229 ;;		Nothing
  5230 ;; This function is called by:
  5231 ;;		_main
  5232 ;; This function uses a non-reentrant model
  5233 ;;
  5234                           
  5235                           	psect	text21
  5236  002D10                     __ptext21:
  5237                           	opt stack 0
  5238  002D10                     _get_full_ADC:
  5239                           	opt stack 30
  5240                           
  5241                           ;lab6p3.c: 150: int result;
  5242                           ;lab6p3.c: 151: ADCON0bits.GO=1;
  5243                           
  5244                           ;incstack = 0
  5245  002D10  82C2               	bsf	4034,1,c	;volatile
  5246                           
  5247                           ;lab6p3.c: 152: while(ADCON0bits.DONE==1);
  5248  002D12  D000               	goto	l138
  5249  002D14                     l138:
  5250  002D14  B2C2               	btfsc	4034,1,c	;volatile
  5251  002D16  D7FE               	goto	l138
  5252                           
  5253                           ;lab6p3.c: 153: result = (ADRESH * 0x100) + ADRESL;
  5254  002D18  50C4               	movf	4036,w,c	;volatile
  5255  002D1A  6E04               	movwf	(??_get_full_ADC+1)& (0+255),c
  5256  002D1C  6A03               	clrf	??_get_full_ADC& (0+255),c
  5257  002D1E  50C3               	movf	4035,w,c	;volatile
  5258  002D20  2403               	addwf	??_get_full_ADC,w,c
  5259  002D22  6E05               	movwf	get_full_ADC@result,c
  5260  002D24  0E00               	movlw	0
  5261  002D26  2004               	addwfc	??_get_full_ADC+1,w,c
  5262  002D28  6E06               	movwf	get_full_ADC@result+1,c
  5263                           
  5264                           ;lab6p3.c: 155: return result;
  5265  002D2A  C005  F001         	movff	get_full_ADC@result,?_get_full_ADC
  5266  002D2E  C006  F002         	movff	get_full_ADC@result+1,?_get_full_ADC+1
  5267  002D32  D000               	goto	l141
  5268  002D34                     l141:
  5269  002D34  0012               	return		;funcret
  5270  002D36                     __end_of_get_full_ADC:
  5271                           	opt stack 0
  5272                           tblptru	equ	0xFF8
  5273                           tblptrh	equ	0xFF7
  5274                           tblptrl	equ	0xFF6
  5275                           tablat	equ	0xFF5
  5276                           prodh	equ	0xFF4
  5277                           prodl	equ	0xFF3
  5278                           postinc0	equ	0xFEE
  5279                           wreg	equ	0xFE8
  5280                           postdec1	equ	0xFE5
  5281                           fsr1l	equ	0xFE1
  5282                           indf2	equ	0xFDF
  5283                           postinc2	equ	0xFDE
  5284                           postdec2	equ	0xFDD
  5285                           fsr2h	equ	0xFDA
  5286                           fsr2l	equ	0xFD9
  5287                           status	equ	0xFD8
  5288                           
  5289 ;; *************** function _display_D2 *****************
  5290 ;; Defined at:
  5291 ;;		line 123 in file "lab6p3.c"
  5292 ;; Parameters:    Size  Location     Type
  5293 ;;  T               3    9[COMRAM] float 
  5294 ;; Auto vars:     Size  Location     Type
  5295 ;;		None
  5296 ;; Return value:  Size  Location     Type
  5297 ;;		None               void
  5298 ;; Registers used:
  5299 ;;		wreg, status,2, status,0, cstack
  5300 ;; Tracked objects:
  5301 ;;		On entry : 0/0
  5302 ;;		On exit  : 0/0
  5303 ;;		Unchanged: 0/0
  5304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5305 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5308 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5309 ;;Total ram usage:        3 bytes
  5310 ;; Hardware stack levels used:    1
  5311 ;; Hardware stack levels required when called:    1
  5312 ;; This function calls:
  5313 ;;		_SET_D2_BLUE
  5314 ;;		_SET_D2_GREEN
  5315 ;;		_SET_D2_OFF
  5316 ;;		_SET_D2_PURPLE
  5317 ;;		_SET_D2_RED
  5318 ;;		_SET_D2_WHITE
  5319 ;;		___ftge
  5320 ;; This function is called by:
  5321 ;;		_main
  5322 ;; This function uses a non-reentrant model
  5323 ;;
  5324                           
  5325                           	psect	text22
  5326  0021C0                     __ptext22:
  5327                           	opt stack 0
  5328  0021C0                     _display_D2:
  5329                           	opt stack 29
  5330                           
  5331                           ;lab6p3.c: 125: if(T > 0.2) SET_D2_OFF();
  5332                           
  5333                           ;incstack = 0
  5334  0021C0  0ECD               	movlw	205
  5335  0021C2  6E01               	movwf	___ftge@ff1,c
  5336  0021C4  0E4C               	movlw	76
  5337  0021C6  6E02               	movwf	___ftge@ff1+1,c
  5338  0021C8  0E3E               	movlw	62
  5339  0021CA  6E03               	movwf	___ftge@ff1+2,c
  5340  0021CC  C00A  F004         	movff	display_D2@T,___ftge@ff2
  5341  0021D0  C00B  F005         	movff	display_D2@T+1,___ftge@ff2+1
  5342  0021D4  C00C  F006         	movff	display_D2@T+2,___ftge@ff2+2
  5343  0021D8  EC8E  F014         	call	___ftge	;wreg free
  5344  0021DC  B0D8               	btfsc	status,0,c
  5345  0021DE  D003               	goto	l2683
  5346  0021E0  EC25  F017         	call	_SET_D2_OFF	;wreg free
  5347  0021E4  D07F               	goto	l129
  5348  0021E6                     l2683:
  5349                           
  5350                           ;lab6p3.c: 126: else if (T >= 0.15 && T <= 0.2) SET_D2_WHITE();
  5351  0021E6  C00A  F001         	movff	display_D2@T,___ftge@ff1
  5352  0021EA  C00B  F002         	movff	display_D2@T+1,___ftge@ff1+1
  5353  0021EE  C00C  F003         	movff	display_D2@T+2,___ftge@ff1+2
  5354  0021F2  0E9A               	movlw	154
  5355  0021F4  6E04               	movwf	___ftge@ff2,c
  5356  0021F6  0E19               	movlw	25
  5357  0021F8  6E05               	movwf	___ftge@ff2+1,c
  5358  0021FA  0E3E               	movlw	62
  5359  0021FC  6E06               	movwf	___ftge@ff2+2,c
  5360  0021FE  EC8E  F014         	call	___ftge	;wreg free
  5361  002202  A0D8               	btfss	status,0,c
  5362  002204  D013               	goto	l2689
  5363  002206  0ECD               	movlw	205
  5364  002208  6E01               	movwf	___ftge@ff1,c
  5365  00220A  0E4C               	movlw	76
  5366  00220C  6E02               	movwf	___ftge@ff1+1,c
  5367  00220E  0E3E               	movlw	62
  5368  002210  6E03               	movwf	___ftge@ff1+2,c
  5369  002212  C00A  F004         	movff	display_D2@T,___ftge@ff2
  5370  002216  C00B  F005         	movff	display_D2@T+1,___ftge@ff2+1
  5371  00221A  C00C  F006         	movff	display_D2@T+2,___ftge@ff2+2
  5372  00221E  EC8E  F014         	call	___ftge	;wreg free
  5373  002222  A0D8               	btfss	status,0,c
  5374  002224  D003               	goto	l2689
  5375  002226  EC19  F017         	call	_SET_D2_WHITE	;wreg free
  5376  00222A  D05C               	goto	l129
  5377  00222C                     l2689:
  5378                           
  5379                           ;lab6p3.c: 127: else if (T >= 0.1 && T < 0.15) SET_D2_BLUE();
  5380  00222C  C00A  F001         	movff	display_D2@T,___ftge@ff1
  5381  002230  C00B  F002         	movff	display_D2@T+1,___ftge@ff1+1
  5382  002234  C00C  F003         	movff	display_D2@T+2,___ftge@ff1+2
  5383  002238  0ECD               	movlw	205
  5384  00223A  6E04               	movwf	___ftge@ff2,c
  5385  00223C  0ECC               	movlw	204
  5386  00223E  6E05               	movwf	___ftge@ff2+1,c
  5387  002240  0E3D               	movlw	61
  5388  002242  6E06               	movwf	___ftge@ff2+2,c
  5389  002244  EC8E  F014         	call	___ftge	;wreg free
  5390  002248  A0D8               	btfss	status,0,c
  5391  00224A  D013               	goto	l2695
  5392  00224C  C00A  F001         	movff	display_D2@T,___ftge@ff1
  5393  002250  C00B  F002         	movff	display_D2@T+1,___ftge@ff1+1
  5394  002254  C00C  F003         	movff	display_D2@T+2,___ftge@ff1+2
  5395  002258  0E9A               	movlw	154
  5396  00225A  6E04               	movwf	___ftge@ff2,c
  5397  00225C  0E19               	movlw	25
  5398  00225E  6E05               	movwf	___ftge@ff2+1,c
  5399  002260  0E3E               	movlw	62
  5400  002262  6E06               	movwf	___ftge@ff2+2,c
  5401  002264  EC8E  F014         	call	___ftge	;wreg free
  5402  002268  B0D8               	btfsc	status,0,c
  5403  00226A  D003               	goto	l2695
  5404  00226C  EC2D  F017         	call	_SET_D2_BLUE	;wreg free
  5405  002270  D039               	goto	l129
  5406  002272                     l2695:
  5407                           
  5408                           ;lab6p3.c: 128: else if (T >= 0.07 && T < 0.1) SET_D2_GREEN();
  5409  002272  C00A  F001         	movff	display_D2@T,___ftge@ff1
  5410  002276  C00B  F002         	movff	display_D2@T+1,___ftge@ff1+1
  5411  00227A  C00C  F003         	movff	display_D2@T+2,___ftge@ff1+2
  5412  00227E  0E5C               	movlw	92
  5413  002280  6E04               	movwf	___ftge@ff2,c
  5414  002282  0E8F               	movlw	143
  5415  002284  6E05               	movwf	___ftge@ff2+1,c
  5416  002286  0E3D               	movlw	61
  5417  002288  6E06               	movwf	___ftge@ff2+2,c
  5418  00228A  EC8E  F014         	call	___ftge	;wreg free
  5419  00228E  A0D8               	btfss	status,0,c
  5420  002290  D013               	goto	l2701
  5421  002292  C00A  F001         	movff	display_D2@T,___ftge@ff1
  5422  002296  C00B  F002         	movff	display_D2@T+1,___ftge@ff1+1
  5423  00229A  C00C  F003         	movff	display_D2@T+2,___ftge@ff1+2
  5424  00229E  0ECD               	movlw	205
  5425  0022A0  6E04               	movwf	___ftge@ff2,c
  5426  0022A2  0ECC               	movlw	204
  5427  0022A4  6E05               	movwf	___ftge@ff2+1,c
  5428  0022A6  0E3D               	movlw	61
  5429  0022A8  6E06               	movwf	___ftge@ff2+2,c
  5430  0022AA  EC8E  F014         	call	___ftge	;wreg free
  5431  0022AE  B0D8               	btfsc	status,0,c
  5432  0022B0  D003               	goto	l2701
  5433  0022B2  EC29  F017         	call	_SET_D2_GREEN	;wreg free
  5434  0022B6  D016               	goto	l129
  5435  0022B8                     l2701:
  5436                           
  5437                           ;lab6p3.c: 129: else if (T < 0.07) SET_D2_RED();
  5438  0022B8  C00A  F001         	movff	display_D2@T,___ftge@ff1
  5439  0022BC  C00B  F002         	movff	display_D2@T+1,___ftge@ff1+1
  5440  0022C0  C00C  F003         	movff	display_D2@T+2,___ftge@ff1+2
  5441  0022C4  0E5C               	movlw	92
  5442  0022C6  6E04               	movwf	___ftge@ff2,c
  5443  0022C8  0E8F               	movlw	143
  5444  0022CA  6E05               	movwf	___ftge@ff2+1,c
  5445  0022CC  0E3D               	movlw	61
  5446  0022CE  6E06               	movwf	___ftge@ff2+2,c
  5447  0022D0  EC8E  F014         	call	___ftge	;wreg free
  5448  0022D4  B0D8               	btfsc	status,0,c
  5449  0022D6  D003               	goto	l2705
  5450  0022D8  EC1D  F017         	call	_SET_D2_RED	;wreg free
  5451  0022DC  D003               	goto	l129
  5452  0022DE                     l2705:
  5453                           
  5454                           ;lab6p3.c: 130: else SET_D2_PURPLE();
  5455  0022DE  EC21  F017         	call	_SET_D2_PURPLE	;wreg free
  5456  0022E2  D000               	goto	l129
  5457  0022E4                     l129:
  5458  0022E4  0012               	return		;funcret
  5459  0022E6                     __end_of_display_D2:
  5460                           	opt stack 0
  5461                           tblptru	equ	0xFF8
  5462                           tblptrh	equ	0xFF7
  5463                           tblptrl	equ	0xFF6
  5464                           tablat	equ	0xFF5
  5465                           prodh	equ	0xFF4
  5466                           prodl	equ	0xFF3
  5467                           postinc0	equ	0xFEE
  5468                           wreg	equ	0xFE8
  5469                           postdec1	equ	0xFE5
  5470                           fsr1l	equ	0xFE1
  5471                           indf2	equ	0xFDF
  5472                           postinc2	equ	0xFDE
  5473                           postdec2	equ	0xFDD
  5474                           fsr2h	equ	0xFDA
  5475                           fsr2l	equ	0xFD9
  5476                           status	equ	0xFD8
  5477                           
  5478 ;; *************** function _SET_D2_WHITE *****************
  5479 ;; Defined at:
  5480 ;;		line 216 in file "lab6p3.c"
  5481 ;; Parameters:    Size  Location     Type
  5482 ;;		None
  5483 ;; Auto vars:     Size  Location     Type
  5484 ;;		None
  5485 ;; Return value:  Size  Location     Type
  5486 ;;		None               void
  5487 ;; Registers used:
  5488 ;;		None
  5489 ;; Tracked objects:
  5490 ;;		On entry : 0/0
  5491 ;;		On exit  : 0/0
  5492 ;;		Unchanged: 0/0
  5493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5498 ;;Total ram usage:        0 bytes
  5499 ;; Hardware stack levels used:    1
  5500 ;; This function calls:
  5501 ;;		Nothing
  5502 ;; This function is called by:
  5503 ;;		_display_D2
  5504 ;; This function uses a non-reentrant model
  5505 ;;
  5506                           
  5507                           	psect	text23
  5508  002E32                     __ptext23:
  5509                           	opt stack 0
  5510  002E32                     _SET_D2_WHITE:
  5511                           	opt stack 29
  5512                           
  5513                           ;lab6p3.c: 218: PORTEbits.RE0 = 1;
  5514                           
  5515                           ;incstack = 0
  5516  002E32  8084               	bsf	3972,0,c	;volatile
  5517                           
  5518                           ;lab6p3.c: 219: PORTEbits.RE1 = 1;
  5519  002E34  8284               	bsf	3972,1,c	;volatile
  5520                           
  5521                           ;lab6p3.c: 220: PORTEbits.RE2 = 1;
  5522  002E36  8484               	bsf	3972,2,c	;volatile
  5523  002E38  0012               	return		;funcret
  5524  002E3A                     __end_of_SET_D2_WHITE:
  5525                           	opt stack 0
  5526                           tblptru	equ	0xFF8
  5527                           tblptrh	equ	0xFF7
  5528                           tblptrl	equ	0xFF6
  5529                           tablat	equ	0xFF5
  5530                           prodh	equ	0xFF4
  5531                           prodl	equ	0xFF3
  5532                           postinc0	equ	0xFEE
  5533                           wreg	equ	0xFE8
  5534                           postdec1	equ	0xFE5
  5535                           fsr1l	equ	0xFE1
  5536                           indf2	equ	0xFDF
  5537                           postinc2	equ	0xFDE
  5538                           postdec2	equ	0xFDD
  5539                           fsr2h	equ	0xFDA
  5540                           fsr2l	equ	0xFD9
  5541                           status	equ	0xFD8
  5542                           
  5543 ;; *************** function _SET_D2_RED *****************
  5544 ;; Defined at:
  5545 ;;		line 168 in file "lab6p3.c"
  5546 ;; Parameters:    Size  Location     Type
  5547 ;;		None
  5548 ;; Auto vars:     Size  Location     Type
  5549 ;;		None
  5550 ;; Return value:  Size  Location     Type
  5551 ;;		None               void
  5552 ;; Registers used:
  5553 ;;		None
  5554 ;; Tracked objects:
  5555 ;;		On entry : 0/0
  5556 ;;		On exit  : 0/0
  5557 ;;		Unchanged: 0/0
  5558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5563 ;;Total ram usage:        0 bytes
  5564 ;; Hardware stack levels used:    1
  5565 ;; This function calls:
  5566 ;;		Nothing
  5567 ;; This function is called by:
  5568 ;;		_display_D2
  5569 ;; This function uses a non-reentrant model
  5570 ;;
  5571                           
  5572                           	psect	text24
  5573  002E3A                     __ptext24:
  5574                           	opt stack 0
  5575  002E3A                     _SET_D2_RED:
  5576                           	opt stack 29
  5577                           
  5578                           ;lab6p3.c: 170: PORTEbits.RE0 = 1;
  5579                           
  5580                           ;incstack = 0
  5581  002E3A  8084               	bsf	3972,0,c	;volatile
  5582                           
  5583                           ;lab6p3.c: 171: PORTEbits.RE1 = 0;
  5584  002E3C  9284               	bcf	3972,1,c	;volatile
  5585                           
  5586                           ;lab6p3.c: 172: PORTEbits.RE2 = 0;
  5587  002E3E  9484               	bcf	3972,2,c	;volatile
  5588  002E40  0012               	return		;funcret
  5589  002E42                     __end_of_SET_D2_RED:
  5590                           	opt stack 0
  5591                           tblptru	equ	0xFF8
  5592                           tblptrh	equ	0xFF7
  5593                           tblptrl	equ	0xFF6
  5594                           tablat	equ	0xFF5
  5595                           prodh	equ	0xFF4
  5596                           prodl	equ	0xFF3
  5597                           postinc0	equ	0xFEE
  5598                           wreg	equ	0xFE8
  5599                           postdec1	equ	0xFE5
  5600                           fsr1l	equ	0xFE1
  5601                           indf2	equ	0xFDF
  5602                           postinc2	equ	0xFDE
  5603                           postdec2	equ	0xFDD
  5604                           fsr2h	equ	0xFDA
  5605                           fsr2l	equ	0xFD9
  5606                           status	equ	0xFD8
  5607                           
  5608 ;; *************** function _SET_D2_PURPLE *****************
  5609 ;; Defined at:
  5610 ;;		line 200 in file "lab6p3.c"
  5611 ;; Parameters:    Size  Location     Type
  5612 ;;		None
  5613 ;; Auto vars:     Size  Location     Type
  5614 ;;		None
  5615 ;; Return value:  Size  Location     Type
  5616 ;;		None               void
  5617 ;; Registers used:
  5618 ;;		None
  5619 ;; Tracked objects:
  5620 ;;		On entry : 0/0
  5621 ;;		On exit  : 0/0
  5622 ;;		Unchanged: 0/0
  5623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5628 ;;Total ram usage:        0 bytes
  5629 ;; Hardware stack levels used:    1
  5630 ;; This function calls:
  5631 ;;		Nothing
  5632 ;; This function is called by:
  5633 ;;		_display_D2
  5634 ;; This function uses a non-reentrant model
  5635 ;;
  5636                           
  5637                           	psect	text25
  5638  002E42                     __ptext25:
  5639                           	opt stack 0
  5640  002E42                     _SET_D2_PURPLE:
  5641                           	opt stack 29
  5642                           
  5643                           ;lab6p3.c: 202: PORTEbits.RE0 = 1;
  5644                           
  5645                           ;incstack = 0
  5646  002E42  8084               	bsf	3972,0,c	;volatile
  5647                           
  5648                           ;lab6p3.c: 203: PORTEbits.RE1 = 0;
  5649  002E44  9284               	bcf	3972,1,c	;volatile
  5650                           
  5651                           ;lab6p3.c: 204: PORTEbits.RE2 = 1;
  5652  002E46  8484               	bsf	3972,2,c	;volatile
  5653  002E48  0012               	return		;funcret
  5654  002E4A                     __end_of_SET_D2_PURPLE:
  5655                           	opt stack 0
  5656                           tblptru	equ	0xFF8
  5657                           tblptrh	equ	0xFF7
  5658                           tblptrl	equ	0xFF6
  5659                           tablat	equ	0xFF5
  5660                           prodh	equ	0xFF4
  5661                           prodl	equ	0xFF3
  5662                           postinc0	equ	0xFEE
  5663                           wreg	equ	0xFE8
  5664                           postdec1	equ	0xFE5
  5665                           fsr1l	equ	0xFE1
  5666                           indf2	equ	0xFDF
  5667                           postinc2	equ	0xFDE
  5668                           postdec2	equ	0xFDD
  5669                           fsr2h	equ	0xFDA
  5670                           fsr2l	equ	0xFD9
  5671                           status	equ	0xFD8
  5672                           
  5673 ;; *************** function _SET_D2_OFF *****************
  5674 ;; Defined at:
  5675 ;;		line 224 in file "lab6p3.c"
  5676 ;; Parameters:    Size  Location     Type
  5677 ;;		None
  5678 ;; Auto vars:     Size  Location     Type
  5679 ;;		None
  5680 ;; Return value:  Size  Location     Type
  5681 ;;		None               void
  5682 ;; Registers used:
  5683 ;;		None
  5684 ;; Tracked objects:
  5685 ;;		On entry : 0/0
  5686 ;;		On exit  : 0/0
  5687 ;;		Unchanged: 0/0
  5688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5693 ;;Total ram usage:        0 bytes
  5694 ;; Hardware stack levels used:    1
  5695 ;; This function calls:
  5696 ;;		Nothing
  5697 ;; This function is called by:
  5698 ;;		_display_D2
  5699 ;; This function uses a non-reentrant model
  5700 ;;
  5701                           
  5702                           	psect	text26
  5703  002E4A                     __ptext26:
  5704                           	opt stack 0
  5705  002E4A                     _SET_D2_OFF:
  5706                           	opt stack 29
  5707                           
  5708                           ;lab6p3.c: 226: PORTEbits.RE0 = 0;
  5709                           
  5710                           ;incstack = 0
  5711  002E4A  9084               	bcf	3972,0,c	;volatile
  5712                           
  5713                           ;lab6p3.c: 227: PORTEbits.RE1 = 0;
  5714  002E4C  9284               	bcf	3972,1,c	;volatile
  5715                           
  5716                           ;lab6p3.c: 228: PORTEbits.RE2 = 0;
  5717  002E4E  9484               	bcf	3972,2,c	;volatile
  5718  002E50  0012               	return		;funcret
  5719  002E52                     __end_of_SET_D2_OFF:
  5720                           	opt stack 0
  5721                           tblptru	equ	0xFF8
  5722                           tblptrh	equ	0xFF7
  5723                           tblptrl	equ	0xFF6
  5724                           tablat	equ	0xFF5
  5725                           prodh	equ	0xFF4
  5726                           prodl	equ	0xFF3
  5727                           postinc0	equ	0xFEE
  5728                           wreg	equ	0xFE8
  5729                           postdec1	equ	0xFE5
  5730                           fsr1l	equ	0xFE1
  5731                           indf2	equ	0xFDF
  5732                           postinc2	equ	0xFDE
  5733                           postdec2	equ	0xFDD
  5734                           fsr2h	equ	0xFDA
  5735                           fsr2l	equ	0xFD9
  5736                           status	equ	0xFD8
  5737                           
  5738 ;; *************** function _SET_D2_GREEN *****************
  5739 ;; Defined at:
  5740 ;;		line 176 in file "lab6p3.c"
  5741 ;; Parameters:    Size  Location     Type
  5742 ;;		None
  5743 ;; Auto vars:     Size  Location     Type
  5744 ;;		None
  5745 ;; Return value:  Size  Location     Type
  5746 ;;		None               void
  5747 ;; Registers used:
  5748 ;;		None
  5749 ;; Tracked objects:
  5750 ;;		On entry : 0/0
  5751 ;;		On exit  : 0/0
  5752 ;;		Unchanged: 0/0
  5753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5758 ;;Total ram usage:        0 bytes
  5759 ;; Hardware stack levels used:    1
  5760 ;; This function calls:
  5761 ;;		Nothing
  5762 ;; This function is called by:
  5763 ;;		_display_D2
  5764 ;; This function uses a non-reentrant model
  5765 ;;
  5766                           
  5767                           	psect	text27
  5768  002E52                     __ptext27:
  5769                           	opt stack 0
  5770  002E52                     _SET_D2_GREEN:
  5771                           	opt stack 29
  5772                           
  5773                           ;lab6p3.c: 178: PORTEbits.RE0 = 0;
  5774                           
  5775                           ;incstack = 0
  5776  002E52  9084               	bcf	3972,0,c	;volatile
  5777                           
  5778                           ;lab6p3.c: 179: PORTEbits.RE1 = 1;
  5779  002E54  8284               	bsf	3972,1,c	;volatile
  5780                           
  5781                           ;lab6p3.c: 180: PORTEbits.RE2 = 0;
  5782  002E56  9484               	bcf	3972,2,c	;volatile
  5783  002E58  0012               	return		;funcret
  5784  002E5A                     __end_of_SET_D2_GREEN:
  5785                           	opt stack 0
  5786                           tblptru	equ	0xFF8
  5787                           tblptrh	equ	0xFF7
  5788                           tblptrl	equ	0xFF6
  5789                           tablat	equ	0xFF5
  5790                           prodh	equ	0xFF4
  5791                           prodl	equ	0xFF3
  5792                           postinc0	equ	0xFEE
  5793                           wreg	equ	0xFE8
  5794                           postdec1	equ	0xFE5
  5795                           fsr1l	equ	0xFE1
  5796                           indf2	equ	0xFDF
  5797                           postinc2	equ	0xFDE
  5798                           postdec2	equ	0xFDD
  5799                           fsr2h	equ	0xFDA
  5800                           fsr2l	equ	0xFD9
  5801                           status	equ	0xFD8
  5802                           
  5803 ;; *************** function _SET_D2_BLUE *****************
  5804 ;; Defined at:
  5805 ;;		line 192 in file "lab6p3.c"
  5806 ;; Parameters:    Size  Location     Type
  5807 ;;		None
  5808 ;; Auto vars:     Size  Location     Type
  5809 ;;		None
  5810 ;; Return value:  Size  Location     Type
  5811 ;;		None               void
  5812 ;; Registers used:
  5813 ;;		None
  5814 ;; Tracked objects:
  5815 ;;		On entry : 0/0
  5816 ;;		On exit  : 0/0
  5817 ;;		Unchanged: 0/0
  5818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5823 ;;Total ram usage:        0 bytes
  5824 ;; Hardware stack levels used:    1
  5825 ;; This function calls:
  5826 ;;		Nothing
  5827 ;; This function is called by:
  5828 ;;		_display_D2
  5829 ;; This function uses a non-reentrant model
  5830 ;;
  5831                           
  5832                           	psect	text28
  5833  002E5A                     __ptext28:
  5834                           	opt stack 0
  5835  002E5A                     _SET_D2_BLUE:
  5836                           	opt stack 29
  5837                           
  5838                           ;lab6p3.c: 194: PORTEbits.RE0 = 0;
  5839                           
  5840                           ;incstack = 0
  5841  002E5A  9084               	bcf	3972,0,c	;volatile
  5842                           
  5843                           ;lab6p3.c: 195: PORTEbits.RE1 = 0;
  5844  002E5C  9284               	bcf	3972,1,c	;volatile
  5845                           
  5846                           ;lab6p3.c: 196: PORTEbits.RE2 = 1;
  5847  002E5E  8484               	bsf	3972,2,c	;volatile
  5848  002E60  0012               	return		;funcret
  5849  002E62                     __end_of_SET_D2_BLUE:
  5850                           	opt stack 0
  5851                           tblptru	equ	0xFF8
  5852                           tblptrh	equ	0xFF7
  5853                           tblptrl	equ	0xFF6
  5854                           tablat	equ	0xFF5
  5855                           prodh	equ	0xFF4
  5856                           prodl	equ	0xFF3
  5857                           postinc0	equ	0xFEE
  5858                           wreg	equ	0xFE8
  5859                           postdec1	equ	0xFE5
  5860                           fsr1l	equ	0xFE1
  5861                           indf2	equ	0xFDF
  5862                           postinc2	equ	0xFDE
  5863                           postdec2	equ	0xFDD
  5864                           fsr2h	equ	0xFDA
  5865                           fsr2l	equ	0xFD9
  5866                           status	equ	0xFD8
  5867                           
  5868 ;; *************** function _display_D1 *****************
  5869 ;; Defined at:
  5870 ;;		line 114 in file "lab6p3.c"
  5871 ;; Parameters:    Size  Location     Type
  5872 ;;  R               2   86[COMRAM] int 
  5873 ;; Auto vars:     Size  Location     Type
  5874 ;;  range           2   88[COMRAM] int 
  5875 ;; Return value:  Size  Location     Type
  5876 ;;		None               void
  5877 ;; Registers used:
  5878 ;;		wreg, status,2, status,0, cstack
  5879 ;; Tracked objects:
  5880 ;;		On entry : 0/0
  5881 ;;		On exit  : 0/0
  5882 ;;		Unchanged: 0/0
  5883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5884 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5885 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5887 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5888 ;;Total ram usage:        4 bytes
  5889 ;; Hardware stack levels used:    1
  5890 ;; Hardware stack levels required when called:    1
  5891 ;; This function calls:
  5892 ;;		___awdiv
  5893 ;; This function is called by:
  5894 ;;		_main
  5895 ;; This function uses a non-reentrant model
  5896 ;;
  5897                           
  5898                           	psect	text29
  5899  002C44                     __ptext29:
  5900                           	opt stack 0
  5901  002C44                     _display_D1:
  5902                           	opt stack 29
  5903                           
  5904                           ;lab6p3.c: 116: int range = R/10;
  5905                           
  5906                           ;incstack = 0
  5907  002C44  C057  F04F         	movff	display_D1@R,___awdiv@dividend
  5908  002C48  C058  F050         	movff	display_D1@R+1,___awdiv@dividend+1
  5909  002C4C  0E00               	movlw	0
  5910  002C4E  6E52               	movwf	___awdiv@divisor+1,c
  5911  002C50  0E0A               	movlw	10
  5912  002C52  6E51               	movwf	___awdiv@divisor,c
  5913  002C54  EC43  F014         	call	___awdiv	;wreg free
  5914  002C58  C04F  F059         	movff	?___awdiv,display_D1@range
  5915  002C5C  C050  F05A         	movff	?___awdiv+1,display_D1@range+1
  5916                           
  5917                           ;lab6p3.c: 117: if(range > 7)
  5918  002C60  BE5A               	btfsc	display_D1@range+1,7,c
  5919  002C62  D00B               	goto	l2677
  5920  002C64  505A               	movf	display_D1@range+1,w,c
  5921  002C66  E104               	bnz	u2780
  5922  002C68  0E08               	movlw	8
  5923  002C6A  5C59               	subwf	display_D1@range,w,c
  5924  002C6C  A0D8               	btfss	status,0,c
  5925  002C6E  D005               	goto	l2677
  5926  002C70                     u2780:
  5927                           
  5928                           ;lab6p3.c: 118: range = 7;
  5929  002C70  0E00               	movlw	0
  5930  002C72  6E5A               	movwf	display_D1@range+1,c
  5931  002C74  0E07               	movlw	7
  5932  002C76  6E59               	movwf	display_D1@range,c
  5933  002C78  D000               	goto	l2677
  5934  002C7A                     l2677:
  5935                           
  5936                           ;lab6p3.c: 119: PORTC = range<<2;
  5937  002C7A  4459               	rlncf	display_D1@range,w,c
  5938  002C7C  46E8               	rlncf	wreg,f,c
  5939  002C7E  0BFC               	andlw	252
  5940  002C80  6E82               	movwf	3970,c	;volatile
  5941  002C82  0012               	return		;funcret
  5942  002C84                     __end_of_display_D1:
  5943                           	opt stack 0
  5944                           tblptru	equ	0xFF8
  5945                           tblptrh	equ	0xFF7
  5946                           tblptrl	equ	0xFF6
  5947                           tablat	equ	0xFF5
  5948                           prodh	equ	0xFF4
  5949                           prodl	equ	0xFF3
  5950                           postinc0	equ	0xFEE
  5951                           wreg	equ	0xFE8
  5952                           postdec1	equ	0xFE5
  5953                           fsr1l	equ	0xFE1
  5954                           indf2	equ	0xFDF
  5955                           postinc2	equ	0xFDE
  5956                           postdec2	equ	0xFDD
  5957                           fsr2h	equ	0xFDA
  5958                           fsr2l	equ	0xFD9
  5959                           status	equ	0xFD8
  5960                           
  5961 ;; *************** function ___awdiv *****************
  5962 ;; Defined at:
  5963 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  5964 ;; Parameters:    Size  Location     Type
  5965 ;;  dividend        2   78[COMRAM] int 
  5966 ;;  divisor         2   80[COMRAM] int 
  5967 ;; Auto vars:     Size  Location     Type
  5968 ;;  quotient        2   84[COMRAM] int 
  5969 ;;  sign            1   83[COMRAM] unsigned char 
  5970 ;;  counter         1   82[COMRAM] unsigned char 
  5971 ;; Return value:  Size  Location     Type
  5972 ;;                  2   78[COMRAM] int 
  5973 ;; Registers used:
  5974 ;;		wreg, status,2, status,0
  5975 ;; Tracked objects:
  5976 ;;		On entry : 0/0
  5977 ;;		On exit  : 0/0
  5978 ;;		Unchanged: 0/0
  5979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5980 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5981 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5983 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5984 ;;Total ram usage:        8 bytes
  5985 ;; Hardware stack levels used:    1
  5986 ;; This function calls:
  5987 ;;		Nothing
  5988 ;; This function is called by:
  5989 ;;		_display_D1
  5990 ;;		_fround
  5991 ;;		_scale
  5992 ;;		_printf
  5993 ;; This function uses a non-reentrant model
  5994 ;;
  5995                           
  5996                           	psect	text30
  5997  002886                     __ptext30:
  5998                           	opt stack 0
  5999  002886                     ___awdiv:
  6000                           	opt stack 28
  6001                           
  6002                           ;incstack = 0
  6003  002886  0E00               	movlw	0
  6004  002888  6E54               	movwf	___awdiv@sign,c
  6005  00288A  AE52               	btfss	___awdiv@divisor+1,7,c
  6006  00288C  D007               	goto	l2039
  6007  00288E  6C51               	negf	___awdiv@divisor,c
  6008  002890  1E52               	comf	___awdiv@divisor+1,f,c
  6009  002892  B0D8               	btfsc	status,0,c
  6010  002894  2A52               	incf	___awdiv@divisor+1,f,c
  6011  002896  0E01               	movlw	1
  6012  002898  6E54               	movwf	___awdiv@sign,c
  6013  00289A  D000               	goto	l2039
  6014  00289C                     l2039:
  6015  00289C  AE50               	btfss	___awdiv@dividend+1,7,c
  6016  00289E  D007               	goto	l2045
  6017  0028A0  6C4F               	negf	___awdiv@dividend,c
  6018  0028A2  1E50               	comf	___awdiv@dividend+1,f,c
  6019  0028A4  B0D8               	btfsc	status,0,c
  6020  0028A6  2A50               	incf	___awdiv@dividend+1,f,c
  6021  0028A8  0E01               	movlw	1
  6022  0028AA  1A54               	xorwf	___awdiv@sign,f,c
  6023  0028AC  D000               	goto	l2045
  6024  0028AE                     l2045:
  6025  0028AE  0E00               	movlw	0
  6026  0028B0  6E56               	movwf	___awdiv@quotient+1,c
  6027  0028B2  0E00               	movlw	0
  6028  0028B4  6E55               	movwf	___awdiv@quotient,c
  6029  0028B6  5051               	movf	___awdiv@divisor,w,c
  6030  0028B8  1052               	iorwf	___awdiv@divisor+1,w,c
  6031  0028BA  B4D8               	btfsc	status,2,c
  6032  0028BC  D021               	goto	l2067
  6033  0028BE  0E01               	movlw	1
  6034  0028C0  6E53               	movwf	___awdiv@counter,c
  6035  0028C2  D005               	goto	l2053
  6036  0028C4                     l2051:
  6037  0028C4  90D8               	bcf	status,0,c
  6038  0028C6  3651               	rlcf	___awdiv@divisor,f,c
  6039  0028C8  3652               	rlcf	___awdiv@divisor+1,f,c
  6040  0028CA  2A53               	incf	___awdiv@counter,f,c
  6041  0028CC  D000               	goto	l2053
  6042  0028CE                     l2053:
  6043  0028CE  BE52               	btfsc	___awdiv@divisor+1,7,c
  6044  0028D0  D002               	goto	l2055
  6045  0028D2  D7F8               	goto	l2051
  6046  0028D4  D000               	goto	l2055
  6047  0028D6                     l2055:
  6048  0028D6  90D8               	bcf	status,0,c
  6049  0028D8  3655               	rlcf	___awdiv@quotient,f,c
  6050  0028DA  3656               	rlcf	___awdiv@quotient+1,f,c
  6051  0028DC  5051               	movf	___awdiv@divisor,w,c
  6052  0028DE  5C4F               	subwf	___awdiv@dividend,w,c
  6053  0028E0  5052               	movf	___awdiv@divisor+1,w,c
  6054  0028E2  5850               	subwfb	___awdiv@dividend+1,w,c
  6055  0028E4  A0D8               	btfss	status,0,c
  6056  0028E6  D006               	goto	l2063
  6057  0028E8  5051               	movf	___awdiv@divisor,w,c
  6058  0028EA  5E4F               	subwf	___awdiv@dividend,f,c
  6059  0028EC  5052               	movf	___awdiv@divisor+1,w,c
  6060  0028EE  5A50               	subwfb	___awdiv@dividend+1,f,c
  6061  0028F0  8055               	bsf	___awdiv@quotient,0,c
  6062  0028F2  D000               	goto	l2063
  6063  0028F4                     l2063:
  6064  0028F4  90D8               	bcf	status,0,c
  6065  0028F6  3252               	rrcf	___awdiv@divisor+1,f,c
  6066  0028F8  3251               	rrcf	___awdiv@divisor,f,c
  6067  0028FA  2E53               	decfsz	___awdiv@counter,f,c
  6068  0028FC  D7EC               	goto	l2055
  6069  0028FE  D000               	goto	l2067
  6070  002900                     l2067:
  6071  002900  5054               	movf	___awdiv@sign,w,c
  6072  002902  B4D8               	btfsc	status,2,c
  6073  002904  D005               	goto	l2071
  6074  002906  6C55               	negf	___awdiv@quotient,c
  6075  002908  1E56               	comf	___awdiv@quotient+1,f,c
  6076  00290A  B0D8               	btfsc	status,0,c
  6077  00290C  2A56               	incf	___awdiv@quotient+1,f,c
  6078  00290E  D000               	goto	l2071
  6079  002910                     l2071:
  6080  002910  C055  F04F         	movff	___awdiv@quotient,?___awdiv
  6081  002914  C056  F050         	movff	___awdiv@quotient+1,?___awdiv+1
  6082  002918  D000               	goto	l491
  6083  00291A                     l491:
  6084  00291A  0012               	return		;funcret
  6085  00291C                     __end_of___awdiv:
  6086                           	opt stack 0
  6087                           tblptru	equ	0xFF8
  6088                           tblptrh	equ	0xFF7
  6089                           tblptrl	equ	0xFF6
  6090                           tablat	equ	0xFF5
  6091                           prodh	equ	0xFF4
  6092                           prodl	equ	0xFF3
  6093                           postinc0	equ	0xFEE
  6094                           wreg	equ	0xFE8
  6095                           postdec1	equ	0xFE5
  6096                           fsr1l	equ	0xFE1
  6097                           indf2	equ	0xFDF
  6098                           postinc2	equ	0xFDE
  6099                           postdec2	equ	0xFDD
  6100                           fsr2h	equ	0xFDA
  6101                           fsr2l	equ	0xFD9
  6102                           status	equ	0xFD8
  6103                           
  6104 ;; *************** function _check_buzzer *****************
  6105 ;; Defined at:
  6106 ;;		line 232 in file "lab6p3.c"
  6107 ;; Parameters:    Size  Location     Type
  6108 ;;  r               3    9[COMRAM] float 
  6109 ;; Auto vars:     Size  Location     Type
  6110 ;;		None
  6111 ;; Return value:  Size  Location     Type
  6112 ;;		None               void
  6113 ;; Registers used:
  6114 ;;		wreg, status,2, status,0, cstack
  6115 ;; Tracked objects:
  6116 ;;		On entry : 0/0
  6117 ;;		On exit  : 0/0
  6118 ;;		Unchanged: 0/0
  6119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6120 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6123 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6124 ;;Total ram usage:        3 bytes
  6125 ;; Hardware stack levels used:    1
  6126 ;; Hardware stack levels required when called:    1
  6127 ;; This function calls:
  6128 ;;		___ftge
  6129 ;;		_activate_buzzer
  6130 ;;		_deactivate_buzzer
  6131 ;; This function is called by:
  6132 ;;		_main
  6133 ;; This function uses a non-reentrant model
  6134 ;;
  6135                           
  6136                           	psect	text31
  6137  002CBA                     __ptext31:
  6138                           	opt stack 0
  6139  002CBA                     _check_buzzer:
  6140                           	opt stack 29
  6141                           
  6142                           ;lab6p3.c: 234: if(r<0.07)
  6143                           
  6144                           ;incstack = 0
  6145  002CBA  C00A  F001         	movff	check_buzzer@r,___ftge@ff1
  6146  002CBE  C00B  F002         	movff	check_buzzer@r+1,___ftge@ff1+1
  6147  002CC2  C00C  F003         	movff	check_buzzer@r+2,___ftge@ff1+2
  6148  002CC6  0E5C               	movlw	92
  6149  002CC8  6E04               	movwf	___ftge@ff2,c
  6150  002CCA  0E8F               	movlw	143
  6151  002CCC  6E05               	movwf	___ftge@ff2+1,c
  6152  002CCE  0E3D               	movlw	61
  6153  002CD0  6E06               	movwf	___ftge@ff2+2,c
  6154  002CD2  EC8E  F014         	call	___ftge	;wreg free
  6155  002CD6  B0D8               	btfsc	status,0,c
  6156  002CD8  D003               	goto	l2669
  6157                           
  6158                           ;lab6p3.c: 235: activate_buzzer();
  6159  002CDA  ECF7  F016         	call	_activate_buzzer	;wreg free
  6160  002CDE  D003               	goto	l173
  6161  002CE0                     l2669:
  6162                           
  6163                           ;lab6p3.c: 236: else
  6164                           ;lab6p3.c: 237: deactivate_buzzer();
  6165  002CE0  EC31  F017         	call	_deactivate_buzzer	;wreg free
  6166  002CE4  D000               	goto	l173
  6167  002CE6                     l173:
  6168  002CE6  0012               	return		;funcret
  6169  002CE8                     __end_of_check_buzzer:
  6170                           	opt stack 0
  6171                           tblptru	equ	0xFF8
  6172                           tblptrh	equ	0xFF7
  6173                           tblptrl	equ	0xFF6
  6174                           tablat	equ	0xFF5
  6175                           prodh	equ	0xFF4
  6176                           prodl	equ	0xFF3
  6177                           postinc0	equ	0xFEE
  6178                           wreg	equ	0xFE8
  6179                           postdec1	equ	0xFE5
  6180                           fsr1l	equ	0xFE1
  6181                           indf2	equ	0xFDF
  6182                           postinc2	equ	0xFDE
  6183                           postdec2	equ	0xFDD
  6184                           fsr2h	equ	0xFDA
  6185                           fsr2l	equ	0xFD9
  6186                           status	equ	0xFD8
  6187                           
  6188 ;; *************** function _deactivate_buzzer *****************
  6189 ;; Defined at:
  6190 ;;		line 250 in file "lab6p3.c"
  6191 ;; Parameters:    Size  Location     Type
  6192 ;;		None
  6193 ;; Auto vars:     Size  Location     Type
  6194 ;;		None
  6195 ;; Return value:  Size  Location     Type
  6196 ;;		None               void
  6197 ;; Registers used:
  6198 ;;		wreg, status,2
  6199 ;; Tracked objects:
  6200 ;;		On entry : 0/0
  6201 ;;		On exit  : 0/0
  6202 ;;		Unchanged: 0/0
  6203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6208 ;;Total ram usage:        0 bytes
  6209 ;; Hardware stack levels used:    1
  6210 ;; This function calls:
  6211 ;;		Nothing
  6212 ;; This function is called by:
  6213 ;;		_check_buzzer
  6214 ;; This function uses a non-reentrant model
  6215 ;;
  6216                           
  6217                           	psect	text32
  6218  002E62                     __ptext32:
  6219                           	opt stack 0
  6220  002E62                     _deactivate_buzzer:
  6221                           	opt stack 29
  6222                           
  6223                           ;lab6p3.c: 252: CCP2CON = 0x0;
  6224                           
  6225                           ;incstack = 0
  6226  002E62  0E00               	movlw	0
  6227  002E64  6EBA               	movwf	4026,c	;volatile
  6228                           
  6229                           ;lab6p3.c: 253: PORTCbits.RC1 = 0;
  6230  002E66  9282               	bcf	3970,1,c	;volatile
  6231  002E68  0012               	return		;funcret
  6232  002E6A                     __end_of_deactivate_buzzer:
  6233                           	opt stack 0
  6234                           tblptru	equ	0xFF8
  6235                           tblptrh	equ	0xFF7
  6236                           tblptrl	equ	0xFF6
  6237                           tablat	equ	0xFF5
  6238                           prodh	equ	0xFF4
  6239                           prodl	equ	0xFF3
  6240                           postinc0	equ	0xFEE
  6241                           wreg	equ	0xFE8
  6242                           postdec1	equ	0xFE5
  6243                           fsr1l	equ	0xFE1
  6244                           indf2	equ	0xFDF
  6245                           postinc2	equ	0xFDE
  6246                           postdec2	equ	0xFDD
  6247                           fsr2h	equ	0xFDA
  6248                           fsr2l	equ	0xFD9
  6249                           status	equ	0xFD8
  6250                           
  6251 ;; *************** function _activate_buzzer *****************
  6252 ;; Defined at:
  6253 ;;		line 241 in file "lab6p3.c"
  6254 ;; Parameters:    Size  Location     Type
  6255 ;;		None
  6256 ;; Auto vars:     Size  Location     Type
  6257 ;;		None
  6258 ;; Return value:  Size  Location     Type
  6259 ;;		None               void
  6260 ;; Registers used:
  6261 ;;		wreg, status,2
  6262 ;; Tracked objects:
  6263 ;;		On entry : 0/0
  6264 ;;		On exit  : 0/0
  6265 ;;		Unchanged: 0/0
  6266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6271 ;;Total ram usage:        0 bytes
  6272 ;; Hardware stack levels used:    1
  6273 ;; This function calls:
  6274 ;;		Nothing
  6275 ;; This function is called by:
  6276 ;;		_check_buzzer
  6277 ;; This function uses a non-reentrant model
  6278 ;;
  6279                           
  6280                           	psect	text33
  6281  002DEE                     __ptext33:
  6282                           	opt stack 0
  6283  002DEE                     _activate_buzzer:
  6284                           	opt stack 29
  6285                           
  6286                           ;lab6p3.c: 243: PR2 = 0b1111101;
  6287                           
  6288                           ;incstack = 0
  6289  002DEE  0E7D               	movlw	125
  6290  002DF0  6ECB               	movwf	4043,c	;volatile
  6291                           
  6292                           ;lab6p3.c: 244: T2CON = 0b00000101;
  6293  002DF2  0E05               	movlw	5
  6294  002DF4  6ECA               	movwf	4042,c	;volatile
  6295                           
  6296                           ;lab6p3.c: 245: CCPR2L = 0b01001010;
  6297  002DF6  0E4A               	movlw	74
  6298  002DF8  6EBB               	movwf	4027,c	;volatile
  6299                           
  6300                           ;lab6p3.c: 246: CCP2CON = 0b00111100;
  6301  002DFA  0E3C               	movlw	60
  6302  002DFC  6EBA               	movwf	4026,c	;volatile
  6303  002DFE  0012               	return		;funcret
  6304  002E00                     __end_of_activate_buzzer:
  6305                           	opt stack 0
  6306                           tblptru	equ	0xFF8
  6307                           tblptrh	equ	0xFF7
  6308                           tblptrl	equ	0xFF6
  6309                           tablat	equ	0xFF5
  6310                           prodh	equ	0xFF4
  6311                           prodl	equ	0xFF3
  6312                           postinc0	equ	0xFEE
  6313                           wreg	equ	0xFE8
  6314                           postdec1	equ	0xFE5
  6315                           fsr1l	equ	0xFE1
  6316                           indf2	equ	0xFDF
  6317                           postinc2	equ	0xFDE
  6318                           postdec2	equ	0xFDD
  6319                           fsr2h	equ	0xFDA
  6320                           fsr2l	equ	0xFD9
  6321                           status	equ	0xFD8
  6322                           
  6323 ;; *************** function ___ftge *****************
  6324 ;; Defined at:
  6325 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftge.c"
  6326 ;; Parameters:    Size  Location     Type
  6327 ;;  ff1             3    0[COMRAM] float 
  6328 ;;  ff2             3    3[COMRAM] float 
  6329 ;; Auto vars:     Size  Location     Type
  6330 ;;		None
  6331 ;; Return value:  Size  Location     Type
  6332 ;;		None               void
  6333 ;; Registers used:
  6334 ;;		wreg, status,2, status,0
  6335 ;; Tracked objects:
  6336 ;;		On entry : 0/0
  6337 ;;		On exit  : 0/0
  6338 ;;		Unchanged: 0/0
  6339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6340 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6342 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6343 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6344 ;;Total ram usage:        9 bytes
  6345 ;; Hardware stack levels used:    1
  6346 ;; This function calls:
  6347 ;;		Nothing
  6348 ;; This function is called by:
  6349 ;;		_main
  6350 ;;		_display_D2
  6351 ;;		_check_buzzer
  6352 ;;		_printf
  6353 ;; This function uses a non-reentrant model
  6354 ;;
  6355                           
  6356                           	psect	text34
  6357  00291C                     __ptext34:
  6358                           	opt stack 0
  6359  00291C                     ___ftge:
  6360                           	opt stack 29
  6361                           
  6362                           ;incstack = 0
  6363  00291C  AE03               	btfss	___ftge@ff1+2,7,c
  6364  00291E  D017               	goto	l2371
  6365  002920  C001  F007         	movff	___ftge@ff1,??___ftge
  6366  002924  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  6367  002928  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  6368  00292C  1E07               	comf	??___ftge,f,c
  6369  00292E  1E08               	comf	??___ftge+1,f,c
  6370  002930  1E09               	comf	??___ftge+2,f,c
  6371  002932  2A07               	incf	??___ftge,f,c
  6372  002934  0E00               	movlw	0
  6373  002936  2208               	addwfc	??___ftge+1,f,c
  6374  002938  2209               	addwfc	??___ftge+2,f,c
  6375  00293A  0E00               	movlw	0
  6376  00293C  2407               	addwf	??___ftge,w,c
  6377  00293E  6E01               	movwf	___ftge@ff1,c
  6378  002940  0E00               	movlw	0
  6379  002942  2008               	addwfc	??___ftge+1,w,c
  6380  002944  6E02               	movwf	___ftge@ff1+1,c
  6381  002946  0E80               	movlw	128
  6382  002948  2009               	addwfc	??___ftge+2,w,c
  6383  00294A  6E03               	movwf	___ftge@ff1+2,c
  6384  00294C  D000               	goto	l2371
  6385  00294E                     l2371:
  6386  00294E  AE06               	btfss	___ftge@ff2+2,7,c
  6387  002950  D017               	goto	l2375
  6388  002952  C004  F007         	movff	___ftge@ff2,??___ftge
  6389  002956  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  6390  00295A  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  6391  00295E  1E07               	comf	??___ftge,f,c
  6392  002960  1E08               	comf	??___ftge+1,f,c
  6393  002962  1E09               	comf	??___ftge+2,f,c
  6394  002964  2A07               	incf	??___ftge,f,c
  6395  002966  0E00               	movlw	0
  6396  002968  2208               	addwfc	??___ftge+1,f,c
  6397  00296A  2209               	addwfc	??___ftge+2,f,c
  6398  00296C  0E00               	movlw	0
  6399  00296E  2407               	addwf	??___ftge,w,c
  6400  002970  6E04               	movwf	___ftge@ff2,c
  6401  002972  0E00               	movlw	0
  6402  002974  2008               	addwfc	??___ftge+1,w,c
  6403  002976  6E05               	movwf	___ftge@ff2+1,c
  6404  002978  0E80               	movlw	128
  6405  00297A  2009               	addwfc	??___ftge+2,w,c
  6406  00297C  6E06               	movwf	___ftge@ff2+2,c
  6407  00297E  D000               	goto	l2375
  6408  002980                     l2375:
  6409  002980  0E00               	movlw	0
  6410  002982  1A01               	xorwf	___ftge@ff1,f,c
  6411  002984  0E00               	movlw	0
  6412  002986  1A02               	xorwf	___ftge@ff1+1,f,c
  6413  002988  0E80               	movlw	128
  6414  00298A  1A03               	xorwf	___ftge@ff1+2,f,c
  6415  00298C  0E00               	movlw	0
  6416  00298E  1A04               	xorwf	___ftge@ff2,f,c
  6417  002990  0E00               	movlw	0
  6418  002992  1A05               	xorwf	___ftge@ff2+1,f,c
  6419  002994  0E80               	movlw	128
  6420  002996  1A06               	xorwf	___ftge@ff2+2,f,c
  6421  002998  5004               	movf	___ftge@ff2,w,c
  6422  00299A  5C01               	subwf	___ftge@ff1,w,c
  6423  00299C  5005               	movf	___ftge@ff2+1,w,c
  6424  00299E  5802               	subwfb	___ftge@ff1+1,w,c
  6425  0029A0  5006               	movf	___ftge@ff2+2,w,c
  6426  0029A2  5803               	subwfb	___ftge@ff1+2,w,c
  6427  0029A4  B0D8               	btfsc	status,0,c
  6428  0029A6  D002               	goto	l2381
  6429  0029A8  90D8               	bcf	status,0,c
  6430  0029AA  D002               	goto	l721
  6431  0029AC                     l2381:
  6432  0029AC  80D8               	bsf	status,0,c
  6433  0029AE  D000               	goto	l721
  6434  0029B0                     l721:
  6435  0029B0  0012               	return		;funcret
  6436  0029B2                     __end_of___ftge:
  6437                           	opt stack 0
  6438                           tblptru	equ	0xFF8
  6439                           tblptrh	equ	0xFF7
  6440                           tblptrl	equ	0xFF6
  6441                           tablat	equ	0xFF5
  6442                           prodh	equ	0xFF4
  6443                           prodl	equ	0xFF3
  6444                           postinc0	equ	0xFEE
  6445                           wreg	equ	0xFE8
  6446                           postdec1	equ	0xFE5
  6447                           fsr1l	equ	0xFE1
  6448                           indf2	equ	0xFDF
  6449                           postinc2	equ	0xFDE
  6450                           postdec2	equ	0xFDD
  6451                           fsr2h	equ	0xFDA
  6452                           fsr2l	equ	0xFD9
  6453                           status	equ	0xFD8
  6454                           
  6455 ;; *************** function ___lwtoft *****************
  6456 ;; Defined at:
  6457 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtoft.c"
  6458 ;; Parameters:    Size  Location     Type
  6459 ;;  c               2    8[COMRAM] unsigned int 
  6460 ;; Auto vars:     Size  Location     Type
  6461 ;;		None
  6462 ;; Return value:  Size  Location     Type
  6463 ;;                  3    8[COMRAM] float 
  6464 ;; Registers used:
  6465 ;;		wreg, status,2, status,0, cstack
  6466 ;; Tracked objects:
  6467 ;;		On entry : 0/0
  6468 ;;		On exit  : 0/0
  6469 ;;		Unchanged: 0/0
  6470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6471 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6474 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6475 ;;Total ram usage:        3 bytes
  6476 ;; Hardware stack levels used:    1
  6477 ;; Hardware stack levels required when called:    1
  6478 ;; This function calls:
  6479 ;;		___ftpack
  6480 ;; This function is called by:
  6481 ;;		_main
  6482 ;; This function uses a non-reentrant model
  6483 ;;
  6484                           
  6485                           	psect	text35
  6486  002D36                     __ptext35:
  6487                           	opt stack 0
  6488  002D36                     ___lwtoft:
  6489                           	opt stack 29
  6490                           
  6491                           ;incstack = 0
  6492  002D36  C009  F001         	movff	___lwtoft@c,___ftpack@arg
  6493  002D3A  C00A  F002         	movff	___lwtoft@c+1,___ftpack@arg+1
  6494  002D3E  6A03               	clrf	___ftpack@arg+2,c
  6495  002D40  0E8E               	movlw	142
  6496  002D42  6E04               	movwf	___ftpack@exp,c
  6497  002D44  0E00               	movlw	0
  6498  002D46  6E05               	movwf	___ftpack@sign,c
  6499  002D48  ECE0  F013         	call	___ftpack	;wreg free
  6500  002D4C  C001  F009         	movff	?___ftpack,?___lwtoft
  6501  002D50  C002  F00A         	movff	?___ftpack+1,?___lwtoft+1
  6502  002D54  C003  F00B         	movff	?___ftpack+2,?___lwtoft+2
  6503  002D58  D000               	goto	l877
  6504  002D5A                     l877:
  6505  002D5A  0012               	return		;funcret
  6506  002D5C                     __end_of___lwtoft:
  6507                           	opt stack 0
  6508                           tblptru	equ	0xFF8
  6509                           tblptrh	equ	0xFF7
  6510                           tblptrl	equ	0xFF6
  6511                           tablat	equ	0xFF5
  6512                           prodh	equ	0xFF4
  6513                           prodl	equ	0xFF3
  6514                           postinc0	equ	0xFEE
  6515                           wreg	equ	0xFE8
  6516                           postdec1	equ	0xFE5
  6517                           fsr1l	equ	0xFE1
  6518                           indf2	equ	0xFDF
  6519                           postinc2	equ	0xFDE
  6520                           postdec2	equ	0xFDD
  6521                           fsr2h	equ	0xFDA
  6522                           fsr2l	equ	0xFD9
  6523                           status	equ	0xFD8
  6524                           
  6525 ;; *************** function ___lbtoft *****************
  6526 ;; Defined at:
  6527 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lbtoft.c"
  6528 ;; Parameters:    Size  Location     Type
  6529 ;;  c               1    wreg     unsigned char 
  6530 ;; Auto vars:     Size  Location     Type
  6531 ;;  c               1   11[COMRAM] unsigned char 
  6532 ;; Return value:  Size  Location     Type
  6533 ;;                  3    8[COMRAM] float 
  6534 ;; Registers used:
  6535 ;;		wreg, status,2, status,0, cstack
  6536 ;; Tracked objects:
  6537 ;;		On entry : 0/0
  6538 ;;		On exit  : 0/0
  6539 ;;		Unchanged: 0/0
  6540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6541 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6542 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6544 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6545 ;;Total ram usage:        4 bytes
  6546 ;; Hardware stack levels used:    1
  6547 ;; Hardware stack levels required when called:    1
  6548 ;; This function calls:
  6549 ;;		___ftpack
  6550 ;; This function is called by:
  6551 ;;		_main
  6552 ;; This function uses a non-reentrant model
  6553 ;;
  6554                           
  6555                           	psect	text36
  6556  002D5C                     __ptext36:
  6557                           	opt stack 0
  6558  002D5C                     ___lbtoft:
  6559                           	opt stack 29
  6560                           
  6561                           ;incstack = 0
  6562                           ;___lbtoft@c stored from wreg
  6563  002D5C  6E0C               	movwf	___lbtoft@c,c
  6564  002D5E  500C               	movf	___lbtoft@c,w,c
  6565  002D60  6E01               	movwf	___ftpack@arg,c
  6566  002D62  6A02               	clrf	___ftpack@arg+1,c
  6567  002D64  6A03               	clrf	___ftpack@arg+2,c
  6568  002D66  0E8E               	movlw	142
  6569  002D68  6E04               	movwf	___ftpack@exp,c
  6570  002D6A  0E00               	movlw	0
  6571  002D6C  6E05               	movwf	___ftpack@sign,c
  6572  002D6E  ECE0  F013         	call	___ftpack	;wreg free
  6573  002D72  C001  F009         	movff	?___ftpack,?___lbtoft
  6574  002D76  C002  F00A         	movff	?___ftpack+1,?___lbtoft+1
  6575  002D7A  C003  F00B         	movff	?___ftpack+2,?___lbtoft+2
  6576  002D7E  D000               	goto	l784
  6577  002D80                     l784:
  6578  002D80  0012               	return		;funcret
  6579  002D82                     __end_of___lbtoft:
  6580                           	opt stack 0
  6581                           tblptru	equ	0xFF8
  6582                           tblptrh	equ	0xFF7
  6583                           tblptrl	equ	0xFF6
  6584                           tablat	equ	0xFF5
  6585                           prodh	equ	0xFF4
  6586                           prodl	equ	0xFF3
  6587                           postinc0	equ	0xFEE
  6588                           wreg	equ	0xFE8
  6589                           postdec1	equ	0xFE5
  6590                           fsr1l	equ	0xFE1
  6591                           indf2	equ	0xFDF
  6592                           postinc2	equ	0xFDE
  6593                           postdec2	equ	0xFDD
  6594                           fsr2h	equ	0xFDA
  6595                           fsr2l	equ	0xFD9
  6596                           status	equ	0xFD8
  6597                           
  6598 ;; *************** function ___ftdiv *****************
  6599 ;; Defined at:
  6600 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  6601 ;; Parameters:    Size  Location     Type
  6602 ;;  f1              3   27[COMRAM] float 
  6603 ;;  f2              3   30[COMRAM] float 
  6604 ;; Auto vars:     Size  Location     Type
  6605 ;;  f3              3   37[COMRAM] float 
  6606 ;;  sign            1   41[COMRAM] unsigned char 
  6607 ;;  exp             1   40[COMRAM] unsigned char 
  6608 ;;  cntr            1   36[COMRAM] unsigned char 
  6609 ;; Return value:  Size  Location     Type
  6610 ;;                  3   27[COMRAM] float 
  6611 ;; Registers used:
  6612 ;;		wreg, status,2, status,0, cstack
  6613 ;; Tracked objects:
  6614 ;;		On entry : 0/0
  6615 ;;		On exit  : 0/0
  6616 ;;		Unchanged: 0/0
  6617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6618 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6619 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6620 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6621 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6622 ;;Total ram usage:       15 bytes
  6623 ;; Hardware stack levels used:    1
  6624 ;; Hardware stack levels required when called:    1
  6625 ;; This function calls:
  6626 ;;		___ftpack
  6627 ;; This function is called by:
  6628 ;;		_main
  6629 ;; This function uses a non-reentrant model
  6630 ;;
  6631                           
  6632                           	psect	text37
  6633  0026DE                     __ptext37:
  6634                           	opt stack 0
  6635  0026DE                     ___ftdiv:
  6636                           	opt stack 29
  6637                           
  6638                           ;incstack = 0
  6639  0026DE  C01E  F022         	movff	___ftdiv@f1+2,??___ftdiv
  6640  0026E2  6A23               	clrf	(??___ftdiv+1)& (0+255),c
  6641  0026E4  6A24               	clrf	(??___ftdiv+2)& (0+255),c
  6642  0026E6  341D               	rlcf	___ftdiv@f1+1,w,c
  6643  0026E8  3622               	rlcf	??___ftdiv& (0+255),f,c
  6644  0026EA  E301               	bnc	u2871
  6645  0026EC  8023               	bsf	(??___ftdiv+1)& (0+255),0,c
  6646  0026EE                     u2871:
  6647  0026EE  5022               	movf	??___ftdiv,w,c
  6648  0026F0  6E29               	movwf	___ftdiv@exp,c
  6649  0026F2  5029               	movf	___ftdiv@exp,w,c
  6650  0026F4  A4D8               	btfss	status,2,c
  6651  0026F6  D002               	goto	l2713
  6652  0026F8  D00E               	goto	l2715
  6653  0026FA  D061               	goto	l695
  6654  0026FC                     l2713:
  6655  0026FC  C021  F022         	movff	___ftdiv@f2+2,??___ftdiv
  6656  002700  6A23               	clrf	(??___ftdiv+1)& (0+255),c
  6657  002702  6A24               	clrf	(??___ftdiv+2)& (0+255),c
  6658  002704  3420               	rlcf	___ftdiv@f2+1,w,c
  6659  002706  3622               	rlcf	??___ftdiv& (0+255),f,c
  6660  002708  E301               	bnc	u2891
  6661  00270A  8023               	bsf	(??___ftdiv+1)& (0+255),0,c
  6662  00270C                     u2891:
  6663  00270C  5022               	movf	??___ftdiv,w,c
  6664  00270E  6E2A               	movwf	___ftdiv@sign,c
  6665  002710  502A               	movf	___ftdiv@sign,w,c
  6666  002712  A4D8               	btfss	status,2,c
  6667  002714  D007               	goto	l2719
  6668  002716                     l2715:
  6669  002716  0E00               	movlw	0
  6670  002718  6E1C               	movwf	?___ftdiv,c
  6671  00271A  0E00               	movlw	0
  6672  00271C  6E1D               	movwf	?___ftdiv+1,c
  6673  00271E  0E00               	movlw	0
  6674  002720  6E1E               	movwf	?___ftdiv+2,c
  6675  002722  D04D               	goto	l695
  6676  002724                     l2719:
  6677  002724  0E00               	movlw	0
  6678  002726  6E26               	movwf	___ftdiv@f3,c
  6679  002728  0E00               	movlw	0
  6680  00272A  6E27               	movwf	___ftdiv@f3+1,c
  6681  00272C  0E00               	movlw	0
  6682  00272E  6E28               	movwf	___ftdiv@f3+2,c
  6683  002730  502A               	movf	___ftdiv@sign,w,c
  6684  002732  0F89               	addlw	137
  6685  002734  5E29               	subwf	___ftdiv@exp,f,c
  6686  002736  C01E  F02A         	movff	___ftdiv@f1+2,___ftdiv@sign
  6687  00273A  5021               	movf	___ftdiv@f2+2,w,c
  6688  00273C  1A2A               	xorwf	___ftdiv@sign,f,c
  6689  00273E  0E80               	movlw	128
  6690  002740  162A               	andwf	___ftdiv@sign,f,c
  6691  002742  8E1D               	bsf	___ftdiv@f1+1,7,c
  6692  002744  0EFF               	movlw	255
  6693  002746  161C               	andwf	___ftdiv@f1,f,c
  6694  002748  0EFF               	movlw	255
  6695  00274A  161D               	andwf	___ftdiv@f1+1,f,c
  6696  00274C  0E00               	movlw	0
  6697  00274E  161E               	andwf	___ftdiv@f1+2,f,c
  6698  002750  8E20               	bsf	___ftdiv@f2+1,7,c
  6699  002752  0EFF               	movlw	255
  6700  002754  161F               	andwf	___ftdiv@f2,f,c
  6701  002756  0EFF               	movlw	255
  6702  002758  1620               	andwf	___ftdiv@f2+1,f,c
  6703  00275A  0E00               	movlw	0
  6704  00275C  1621               	andwf	___ftdiv@f2+2,f,c
  6705  00275E  0E18               	movlw	24
  6706  002760  6E25               	movwf	___ftdiv@cntr,c
  6707  002762  D000               	goto	l2739
  6708  002764                     l2739:
  6709  002764  90D8               	bcf	status,0,c
  6710  002766  3626               	rlcf	___ftdiv@f3,f,c
  6711  002768  3627               	rlcf	___ftdiv@f3+1,f,c
  6712  00276A  3628               	rlcf	___ftdiv@f3+2,f,c
  6713  00276C  501F               	movf	___ftdiv@f2,w,c
  6714  00276E  5C1C               	subwf	___ftdiv@f1,w,c
  6715  002770  5020               	movf	___ftdiv@f2+1,w,c
  6716  002772  581D               	subwfb	___ftdiv@f1+1,w,c
  6717  002774  5021               	movf	___ftdiv@f2+2,w,c
  6718  002776  581E               	subwfb	___ftdiv@f1+2,w,c
  6719  002778  A0D8               	btfss	status,0,c
  6720  00277A  D007               	goto	l698
  6721  00277C  501F               	movf	___ftdiv@f2,w,c
  6722  00277E  5E1C               	subwf	___ftdiv@f1,f,c
  6723  002780  5020               	movf	___ftdiv@f2+1,w,c
  6724  002782  5A1D               	subwfb	___ftdiv@f1+1,f,c
  6725  002784  5021               	movf	___ftdiv@f2+2,w,c
  6726  002786  5A1E               	subwfb	___ftdiv@f1+2,f,c
  6727  002788  8026               	bsf	___ftdiv@f3,0,c
  6728  00278A                     l698:
  6729  00278A  90D8               	bcf	status,0,c
  6730  00278C  361C               	rlcf	___ftdiv@f1,f,c
  6731  00278E  361D               	rlcf	___ftdiv@f1+1,f,c
  6732  002790  361E               	rlcf	___ftdiv@f1+2,f,c
  6733  002792  2E25               	decfsz	___ftdiv@cntr,f,c
  6734  002794  D7E7               	goto	l2739
  6735  002796  D000               	goto	l2749
  6736  002798                     l2749:
  6737  002798  C026  F001         	movff	___ftdiv@f3,___ftpack@arg
  6738  00279C  C027  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  6739  0027A0  C028  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  6740  0027A4  C029  F004         	movff	___ftdiv@exp,___ftpack@exp
  6741  0027A8  C02A  F005         	movff	___ftdiv@sign,___ftpack@sign
  6742  0027AC  ECE0  F013         	call	___ftpack	;wreg free
  6743  0027B0  C001  F01C         	movff	?___ftpack,?___ftdiv
  6744  0027B4  C002  F01D         	movff	?___ftpack+1,?___ftdiv+1
  6745  0027B8  C003  F01E         	movff	?___ftpack+2,?___ftdiv+2
  6746  0027BC  D000               	goto	l695
  6747  0027BE                     l695:
  6748  0027BE  0012               	return		;funcret
  6749  0027C0                     __end_of___ftdiv:
  6750                           	opt stack 0
  6751                           tblptru	equ	0xFF8
  6752                           tblptrh	equ	0xFF7
  6753                           tblptrl	equ	0xFF6
  6754                           tablat	equ	0xFF5
  6755                           prodh	equ	0xFF4
  6756                           prodl	equ	0xFF3
  6757                           postinc0	equ	0xFEE
  6758                           wreg	equ	0xFE8
  6759                           postdec1	equ	0xFE5
  6760                           fsr1l	equ	0xFE1
  6761                           indf2	equ	0xFDF
  6762                           postinc2	equ	0xFDE
  6763                           postdec2	equ	0xFDD
  6764                           fsr2h	equ	0xFDA
  6765                           fsr2l	equ	0xFD9
  6766                           status	equ	0xFD8
  6767                           
  6768 ;; *************** function ___ftpack *****************
  6769 ;; Defined at:
  6770 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  6771 ;; Parameters:    Size  Location     Type
  6772 ;;  arg             3    0[COMRAM] unsigned um
  6773 ;;  exp             1    3[COMRAM] unsigned char 
  6774 ;;  sign            1    4[COMRAM] unsigned char 
  6775 ;; Auto vars:     Size  Location     Type
  6776 ;;		None
  6777 ;; Return value:  Size  Location     Type
  6778 ;;                  3    0[COMRAM] float 
  6779 ;; Registers used:
  6780 ;;		wreg, status,2, status,0
  6781 ;; Tracked objects:
  6782 ;;		On entry : 0/0
  6783 ;;		On exit  : 0/0
  6784 ;;		Unchanged: 0/0
  6785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6786 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6788 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6789 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6790 ;;Total ram usage:        8 bytes
  6791 ;; Hardware stack levels used:    1
  6792 ;; This function calls:
  6793 ;;		Nothing
  6794 ;; This function is called by:
  6795 ;;		___ftadd
  6796 ;;		___ftdiv
  6797 ;;		___ftmul
  6798 ;;		___lbtoft
  6799 ;;		___lltoft
  6800 ;;		___lwtoft
  6801 ;; This function uses a non-reentrant model
  6802 ;;
  6803                           
  6804                           	psect	text38
  6805  0027C0                     __ptext38:
  6806                           	opt stack 0
  6807  0027C0                     ___ftpack:
  6808                           	opt stack 27
  6809                           
  6810                           ;incstack = 0
  6811  0027C0  5004               	movf	___ftpack@exp,w,c
  6812  0027C2  B4D8               	btfsc	status,2,c
  6813  0027C4  D005               	goto	l1875
  6814  0027C6  5001               	movf	___ftpack@arg,w,c
  6815  0027C8  1002               	iorwf	___ftpack@arg+1,w,c
  6816  0027CA  1003               	iorwf	___ftpack@arg+2,w,c
  6817  0027CC  A4D8               	btfss	status,2,c
  6818  0027CE  D00E               	goto	l1881
  6819  0027D0                     l1875:
  6820  0027D0  0E00               	movlw	0
  6821  0027D2  6E01               	movwf	?___ftpack,c
  6822  0027D4  0E00               	movlw	0
  6823  0027D6  6E02               	movwf	?___ftpack+1,c
  6824  0027D8  0E00               	movlw	0
  6825  0027DA  6E03               	movwf	?___ftpack+2,c
  6826  0027DC  D053               	goto	l623
  6827  0027DE  D006               	goto	l1881
  6828  0027E0                     l1879:
  6829  0027E0  2A04               	incf	___ftpack@exp,f,c
  6830  0027E2  90D8               	bcf	status,0,c
  6831  0027E4  3203               	rrcf	___ftpack@arg+2,f,c
  6832  0027E6  3202               	rrcf	___ftpack@arg+1,f,c
  6833  0027E8  3201               	rrcf	___ftpack@arg,f,c
  6834  0027EA  D000               	goto	l1881
  6835  0027EC                     l1881:
  6836  0027EC  0E00               	movlw	0
  6837  0027EE  1401               	andwf	___ftpack@arg,w,c
  6838  0027F0  6E06               	movwf	??___ftpack& (0+255),c
  6839  0027F2  0E00               	movlw	0
  6840  0027F4  1402               	andwf	___ftpack@arg+1,w,c
  6841  0027F6  6E07               	movwf	(??___ftpack+1)& (0+255),c
  6842  0027F8  0EFE               	movlw	254
  6843  0027FA  1403               	andwf	___ftpack@arg+2,w,c
  6844  0027FC  6E08               	movwf	(??___ftpack+2)& (0+255),c
  6845  0027FE  5006               	movf	??___ftpack,w,c
  6846  002800  1007               	iorwf	??___ftpack+1,w,c
  6847  002802  1008               	iorwf	??___ftpack+2,w,c
  6848  002804  B4D8               	btfsc	status,2,c
  6849  002806  D00E               	goto	l1887
  6850  002808  D7EB               	goto	l1879
  6851  00280A  D00C               	goto	l1887
  6852  00280C                     l1883:
  6853  00280C  2A04               	incf	___ftpack@exp,f,c
  6854  00280E  0E01               	movlw	1
  6855  002810  2601               	addwf	___ftpack@arg,f,c
  6856  002812  0E00               	movlw	0
  6857  002814  2202               	addwfc	___ftpack@arg+1,f,c
  6858  002816  0E00               	movlw	0
  6859  002818  2203               	addwfc	___ftpack@arg+2,f,c
  6860  00281A  90D8               	bcf	status,0,c
  6861  00281C  3203               	rrcf	___ftpack@arg+2,f,c
  6862  00281E  3202               	rrcf	___ftpack@arg+1,f,c
  6863  002820  3201               	rrcf	___ftpack@arg,f,c
  6864  002822  D000               	goto	l1887
  6865  002824                     l1887:
  6866  002824  0E00               	movlw	0
  6867  002826  1401               	andwf	___ftpack@arg,w,c
  6868  002828  6E06               	movwf	??___ftpack& (0+255),c
  6869  00282A  0E00               	movlw	0
  6870  00282C  1402               	andwf	___ftpack@arg+1,w,c
  6871  00282E  6E07               	movwf	(??___ftpack+1)& (0+255),c
  6872  002830  0EFF               	movlw	255
  6873  002832  1403               	andwf	___ftpack@arg+2,w,c
  6874  002834  6E08               	movwf	(??___ftpack+2)& (0+255),c
  6875  002836  5006               	movf	??___ftpack,w,c
  6876  002838  1007               	iorwf	??___ftpack+1,w,c
  6877  00283A  1008               	iorwf	??___ftpack+2,w,c
  6878  00283C  B4D8               	btfsc	status,2,c
  6879  00283E  D008               	goto	l1891
  6880  002840  D7E5               	goto	l1883
  6881  002842  D006               	goto	l1891
  6882  002844                     l1889:
  6883  002844  0604               	decf	___ftpack@exp,f,c
  6884  002846  90D8               	bcf	status,0,c
  6885  002848  3601               	rlcf	___ftpack@arg,f,c
  6886  00284A  3602               	rlcf	___ftpack@arg+1,f,c
  6887  00284C  3603               	rlcf	___ftpack@arg+2,f,c
  6888  00284E  D000               	goto	l1891
  6889  002850                     l1891:
  6890  002850  BE02               	btfsc	___ftpack@arg+1,7,c
  6891  002852  D004               	goto	l634
  6892  002854  0E02               	movlw	2
  6893  002856  6004               	cpfslt	___ftpack@exp,c
  6894  002858  D7F5               	goto	l1889
  6895  00285A  D000               	goto	l634
  6896  00285C                     l634:
  6897  00285C  B004               	btfsc	___ftpack@exp,0,c
  6898  00285E  D002               	goto	l1897
  6899  002860  9E02               	bcf	___ftpack@arg+1,7,c
  6900  002862  D000               	goto	l1897
  6901  002864                     l1897:
  6902  002864  90D8               	bcf	status,0,c
  6903  002866  3204               	rrcf	___ftpack@exp,f,c
  6904  002868  5004               	movf	___ftpack@exp,w,c
  6905  00286A  1203               	iorwf	___ftpack@arg+2,f,c
  6906  00286C  5005               	movf	___ftpack@sign,w,c
  6907  00286E  B4D8               	btfsc	status,2,c
  6908  002870  D002               	goto	l1903
  6909  002872  8E03               	bsf	___ftpack@arg+2,7,c
  6910  002874  D000               	goto	l1903
  6911  002876                     l1903:
  6912  002876  C001  F001         	movff	___ftpack@arg,?___ftpack
  6913  00287A  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  6914  00287E  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  6915  002882  D000               	goto	l623
  6916  002884                     l623:
  6917  002884  0012               	return		;funcret
  6918  002886                     __end_of___ftpack:
  6919                           	opt stack 0
  6920                           tblptru	equ	0xFF8
  6921                           tblptrh	equ	0xFF7
  6922                           tblptrl	equ	0xFF6
  6923                           tablat	equ	0xFF5
  6924                           prodh	equ	0xFF4
  6925                           prodl	equ	0xFF3
  6926                           postinc0	equ	0xFEE
  6927                           wreg	equ	0xFE8
  6928                           postdec1	equ	0xFE5
  6929                           fsr1l	equ	0xFE1
  6930                           indf2	equ	0xFDF
  6931                           postinc2	equ	0xFDE
  6932                           postdec2	equ	0xFDD
  6933                           fsr2h	equ	0xFDA
  6934                           fsr2l	equ	0xFD9
  6935                           status	equ	0xFD8
  6936                           
  6937 ;; *************** function _Init_TRIS *****************
  6938 ;; Defined at:
  6939 ;;		line 158 in file "lab6p3.c"
  6940 ;; Parameters:    Size  Location     Type
  6941 ;;		None
  6942 ;; Auto vars:     Size  Location     Type
  6943 ;;		None
  6944 ;; Return value:  Size  Location     Type
  6945 ;;		None               void
  6946 ;; Registers used:
  6947 ;;		wreg, status,2
  6948 ;; Tracked objects:
  6949 ;;		On entry : 0/0
  6950 ;;		On exit  : 0/0
  6951 ;;		Unchanged: 0/0
  6952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6957 ;;Total ram usage:        0 bytes
  6958 ;; Hardware stack levels used:    1
  6959 ;; This function calls:
  6960 ;;		Nothing
  6961 ;; This function is called by:
  6962 ;;		_main
  6963 ;; This function uses a non-reentrant model
  6964 ;;
  6965                           
  6966                           	psect	text39
  6967  002DDA                     __ptext39:
  6968                           	opt stack 0
  6969  002DDA                     _Init_TRIS:
  6970                           	opt stack 30
  6971                           
  6972                           ;lab6p3.c: 160: TRISA =0xFF;
  6973                           
  6974                           ;incstack = 0
  6975  002DDA  6892               	setf	3986,c	;volatile
  6976                           
  6977                           ;lab6p3.c: 161: TRISB =0x00;
  6978  002DDC  0E00               	movlw	0
  6979  002DDE  6E93               	movwf	3987,c	;volatile
  6980                           
  6981                           ;lab6p3.c: 162: TRISC = 0x00;
  6982  002DE0  0E00               	movlw	0
  6983  002DE2  6E94               	movwf	3988,c	;volatile
  6984                           
  6985                           ;lab6p3.c: 163: TRISD = 0x00;
  6986  002DE4  0E00               	movlw	0
  6987  002DE6  6E95               	movwf	3989,c	;volatile
  6988                           
  6989                           ;lab6p3.c: 164: TRISE = 0x00;
  6990  002DE8  0E00               	movlw	0
  6991  002DEA  6E96               	movwf	3990,c	;volatile
  6992  002DEC  0012               	return		;funcret
  6993  002DEE                     __end_of_Init_TRIS:
  6994                           	opt stack 0
  6995                           tblptru	equ	0xFF8
  6996                           tblptrh	equ	0xFF7
  6997                           tblptrl	equ	0xFF6
  6998                           tablat	equ	0xFF5
  6999                           prodh	equ	0xFF4
  7000                           prodl	equ	0xFF3
  7001                           postinc0	equ	0xFEE
  7002                           wreg	equ	0xFE8
  7003                           postdec1	equ	0xFE5
  7004                           fsr1l	equ	0xFE1
  7005                           indf2	equ	0xFDF
  7006                           postinc2	equ	0xFDE
  7007                           postdec2	equ	0xFDD
  7008                           fsr2h	equ	0xFDA
  7009                           fsr2l	equ	0xFD9
  7010                           status	equ	0xFD8
  7011                           
  7012 ;; *************** function _Init_ADC *****************
  7013 ;; Defined at:
  7014 ;;		line 139 in file "lab6p3.c"
  7015 ;; Parameters:    Size  Location     Type
  7016 ;;		None
  7017 ;; Auto vars:     Size  Location     Type
  7018 ;;		None
  7019 ;; Return value:  Size  Location     Type
  7020 ;;		None               void
  7021 ;; Registers used:
  7022 ;;		wreg, status,2
  7023 ;; Tracked objects:
  7024 ;;		On entry : 0/0
  7025 ;;		On exit  : 0/0
  7026 ;;		Unchanged: 0/0
  7027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7032 ;;Total ram usage:        0 bytes
  7033 ;; Hardware stack levels used:    1
  7034 ;; This function calls:
  7035 ;;		Nothing
  7036 ;; This function is called by:
  7037 ;;		_main
  7038 ;; This function uses a non-reentrant model
  7039 ;;
  7040                           
  7041                           	psect	text40
  7042  002E0E                     __ptext40:
  7043                           	opt stack 0
  7044  002E0E                     _Init_ADC:
  7045                           	opt stack 30
  7046                           
  7047                           ;lab6p3.c: 141: ADCON0=0x01;
  7048                           
  7049                           ;incstack = 0
  7050  002E0E  0E01               	movlw	1
  7051  002E10  6EC2               	movwf	4034,c	;volatile
  7052                           
  7053                           ;lab6p3.c: 142: ADCON1=0x1A ;
  7054  002E12  0E1A               	movlw	26
  7055  002E14  6EC1               	movwf	4033,c	;volatile
  7056                           
  7057                           ;lab6p3.c: 144: ADCON2=0xA9;
  7058  002E16  0EA9               	movlw	169
  7059  002E18  6EC0               	movwf	4032,c	;volatile
  7060  002E1A  0012               	return		;funcret
  7061  002E1C                     __end_of_Init_ADC:
  7062                           	opt stack 0
  7063                           tblptru	equ	0xFF8
  7064                           tblptrh	equ	0xFF7
  7065                           tblptrl	equ	0xFF6
  7066                           tablat	equ	0xFF5
  7067                           prodh	equ	0xFF4
  7068                           prodl	equ	0xFF3
  7069                           postinc0	equ	0xFEE
  7070                           wreg	equ	0xFE8
  7071                           postdec1	equ	0xFE5
  7072                           fsr1l	equ	0xFE1
  7073                           indf2	equ	0xFDF
  7074                           postinc2	equ	0xFDE
  7075                           postdec2	equ	0xFDD
  7076                           fsr2h	equ	0xFDA
  7077                           fsr2l	equ	0xFD9
  7078                           status	equ	0xFD8
  7079                           tblptru	equ	0xFF8
  7080                           tblptrh	equ	0xFF7
  7081                           tblptrl	equ	0xFF6
  7082                           tablat	equ	0xFF5
  7083                           prodh	equ	0xFF4
  7084                           prodl	equ	0xFF3
  7085                           postinc0	equ	0xFEE
  7086                           wreg	equ	0xFE8
  7087                           postdec1	equ	0xFE5
  7088                           fsr1l	equ	0xFE1
  7089                           indf2	equ	0xFDF
  7090                           postinc2	equ	0xFDE
  7091                           postdec2	equ	0xFDD
  7092                           fsr2h	equ	0xFDA
  7093                           fsr2l	equ	0xFD9
  7094                           status	equ	0xFD8
  7095                           
  7096                           	psect	rparam
  7097  0000                     tblptru	equ	0xFF8
  7098                           tblptrh	equ	0xFF7
  7099                           tblptrl	equ	0xFF6
  7100                           tablat	equ	0xFF5
  7101                           prodh	equ	0xFF4
  7102                           prodl	equ	0xFF3
  7103                           postinc0	equ	0xFEE
  7104                           wreg	equ	0xFE8
  7105                           postdec1	equ	0xFE5
  7106                           fsr1l	equ	0xFE1
  7107                           indf2	equ	0xFDF
  7108                           postinc2	equ	0xFDE
  7109                           postdec2	equ	0xFDD
  7110                           fsr2h	equ	0xFDA
  7111                           fsr2l	equ	0xFD9
  7112                           status	equ	0xFD8


Data Sizes:
    Strings     19
    Constant    118
    Data        10
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    119     127
    BANK0           128     23      33
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_1(CODE[19]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_fround
    _scale->___wmul
    _fround->___wmul
    ___wmul->___awdiv
    ___ftmul->___ftdiv
    ___awmod->___fttol
    ___lltoft->___ftpack
    ___fttol->___ftmul
    ___ftsub->___ftadd
    ___ftadd->___ftneg
    ___ftneg->___lbtoft
    _init_UART->_OpenUSART
    _display_D2->___ftge
    _display_D1->___awdiv
    ___awdiv->___awmod
    _check_buzzer->___ftge
    ___lwtoft->___ftpack
    ___lbtoft->___ftpack
    ___ftdiv->___ftadd

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   61495
                                            113 COMRAM     6     6      0
                           _Init_ADC
                          _Init_TRIS
                            ___awmod
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lbtoft
                           ___lwtoft
                       _check_buzzer
                         _display_D1
                         _display_D2
                       _get_full_ADC
                          _init_UART
                             _printf
                      _select_ADC_CH
                         _wait_1_sec
 ---------------------------------------------------------------------------------
 (1) _wait_1_sec                                           2     2      0      46
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _select_ADC_CH                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _printf                                              42    37      5   39202
                                            102 COMRAM    11     6      5
                                              0 BANK0     23    23      0
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               10     7      3    9053
                                             92 COMRAM     7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                            ___fttol (ARG)
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13    10      3    8855
                                             92 COMRAM    10     7      3
                            ___awdiv
                            ___awmod
                            ___ftadd (ARG)
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1855
                                             86 COMRAM     6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3887
                                             42 COMRAM    15     9      6
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1356
                                             72 COMRAM     6     2      4
                            ___ftmul (ARG)
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         15     9      6     409
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          12     6      6     552
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    1907
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     477
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     374
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     676
                                             57 COMRAM    15    11      4
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3382
                                             27 COMRAM     6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    3129
                                             15 COMRAM    12     6      6
                            ___ftneg (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     204
                                             12 COMRAM     3     0      3
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_UART                                            0     0      0     273
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     273
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _get_full_ADC                                         6     4      2      23
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _display_D2                                           3     0      3    1743
                                              9 COMRAM     3     0      3
                        _SET_D2_BLUE
                       _SET_D2_GREEN
                         _SET_D2_OFF
                      _SET_D2_PURPLE
                         _SET_D2_RED
                       _SET_D2_WHITE
                             ___ftge
 ---------------------------------------------------------------------------------
 (2) _SET_D2_WHITE                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SET_D2_RED                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SET_D2_PURPLE                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SET_D2_OFF                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SET_D2_GREEN                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SET_D2_BLUE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display_D1                                           4     2      2    1587
                                             86 COMRAM     4     2      2
                            ___awdiv
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1466
                                             78 COMRAM     8     4      4
                            ___awmod (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _check_buzzer                                         3     0      3    1589
                                              9 COMRAM     3     0      3
                             ___ftge
                    _activate_buzzer
                  _deactivate_buzzer
 ---------------------------------------------------------------------------------
 (2) _deactivate_buzzer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _activate_buzzer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6    1514
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    1860
                                              8 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___lbtoft                                             4     1      3    1807
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    2463
                                             27 COMRAM    15     9      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1785
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _Init_TRIS                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init_ADC
   _Init_TRIS
   ___awmod
     ___ftmul (ARG)
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___fttol (ARG)
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftdiv (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
   ___ftadd
     ___ftneg (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lbtoft (ARG)
       ___ftpack
   ___ftdiv
     ___ftadd (ARG)
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftneg (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___ftge
   ___ftmul
     ___ftadd (ARG)
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftdiv (ARG)
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftneg (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lbtoft (ARG)
       ___ftpack
   ___ftneg
     ___lbtoft (ARG)
       ___ftpack
   ___fttol
     ___ftadd (ARG)
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftdiv (ARG)
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftneg (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___lbtoft (ARG)
       ___ftpack
   ___lbtoft
     ___ftpack
   ___lwtoft
     ___ftpack
   _check_buzzer
     ___ftge
     _activate_buzzer
     _deactivate_buzzer
   _display_D1
     ___awdiv
       ___awmod (ARG)
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftdiv (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftdiv (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftdiv (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
     ___fttol (ARG)
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftdiv (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
   _display_D2
     _SET_D2_BLUE
     _SET_D2_GREEN
     _SET_D2_OFF
     _SET_D2_PURPLE
     _SET_D2_RED
     _SET_D2_WHITE
     ___ftge
   _get_full_ADC
   _init_UART
     _OpenUSART
   _printf
     ___awdiv
       ___awmod (ARG)
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftdiv (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftdiv (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftdiv (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
     ___ftadd
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftge
     ___ftmul
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftneg
       ___lbtoft (ARG)
         ___ftpack
     ___ftsub
       ___ftadd
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftdiv (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
     ___lldiv
     ___llmod
     ___lltoft
       ___ftpack
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
           ___ftmul (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftdiv (ARG)
                 ___ftadd (ARG)
                   ___ftneg (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftdiv (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
       ___awmod (ARG)
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftdiv (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftdiv (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftdiv (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
           ___ftmul (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftdiv (ARG)
                 ___ftadd (ARG)
                   ___ftneg (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftdiv (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
       ___awmod
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftdiv (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftdiv (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftdiv (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
             ___ftmul (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftdiv (ARG)
                 ___ftadd (ARG)
                   ___ftneg (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___fttol (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftdiv (ARG)
                 ___ftadd (ARG)
                   ___ftneg (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___ftadd (ARG)
                   ___ftneg (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftdiv (ARG)
                   ___ftadd (ARG)
                     ___ftneg (ARG)
                       ___lbtoft (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                   ___ftneg (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
           ___ftmul (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
         ___awmod (ARG)
           ___ftmul (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftdiv (ARG)
                 ___ftadd (ARG)
                   ___ftneg (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftdiv (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
     _putch
     _scale
       ___awdiv
         ___awmod (ARG)
           ___ftmul (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftdiv (ARG)
                 ___ftadd (ARG)
                   ___ftneg (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftdiv (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
       ___awmod
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftdiv (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftdiv (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
       ___ftmul
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftdiv (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftdiv (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftdiv (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
             ___ftmul (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftdiv (ARG)
                 ___ftadd (ARG)
                   ___ftneg (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___fttol (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftdiv (ARG)
                 ___ftadd (ARG)
                   ___ftneg (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___ftadd (ARG)
                   ___ftneg (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftdiv (ARG)
                   ___ftadd (ARG)
                     ___ftneg (ARG)
                       ___lbtoft (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                   ___ftneg (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
           ___ftmul (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
         ___awmod (ARG)
           ___ftmul (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftdiv (ARG)
                 ___ftadd (ARG)
                   ___ftneg (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftdiv (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
   _select_ADC_CH
   _wait_1_sec

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     17      21       5       25.8%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     77      7F       1      100.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A0      34        0.0%
DATA                 0      0      A0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Oct 09 15:46:40 2025

                         _R 0078                          l96 2E04                ___awdiv@sign 0054  
       ___wmul@multiplicand 0059                ___ftadd@exp1 001B                ___ftadd@exp2 001A  
              ___ftadd@sign 0019                         l104 2DC4                         l141 2D34  
                       l206 1B3A                         l129 22E4                         l138 2D14  
                       l251 1592                         l173 2CE6                         l262 175A  
                       l504 2ABE                         l290 2B76                         l291 2B78  
                       l292 2B82                         l293 2B84                         l286 2B5C  
                       l623 2884                         l295 2B9E                         l703 23F4  
                       l199 1FFA                         l712 23E4                         l721 29B0  
                       l705 235C                         l634 285C                         l706 2384  
                       l298 2D0E                         l491 291A                         l582 24FE  
                       l663 2040                         l591 24EE                         l727 25F6  
                       l664 21BE                         l744 2C42                         l737 2D98  
                       l817 2BFE                         l667 206A                         l748 26DC  
                       l678 212C                         l695 27BE                         l687 2148  
                       l784 2D80                         l698 278A                         l787 2A2C  
                       l877 2D5A                         l797 2B1E                         _PR2 000FCB  
      __end_of_check_buzzer 2CE8                ___awmod@sign 004E                         prod 000FF3  
                       wreg 000FE8                __CFG_LVP$OFF 000000           ??_activate_buzzer 0001  
              ___ftdiv@cntr 0025                ___ftdiv@sign 002A                __CFG_WDT$OFF 000000  
                      l2013 258C                        l2103 2AA4                        l2023 25BA  
                      l2121 2B4C                        l2017 25A2                        l2009 257A  
                      l2201 1FBA                        l2051 28C4                        l2107 2AB4  
                      l2027 25D0                        l2019 25A8                        l2053 28CE  
                      l2045 28AE                        l2125 2B54                        l2117 2B42  
                      l2221 1930                        l2071 2910                        l2063 28F4  
                      l2055 28D6                        l2039 289C                        l2311 2416  
                      l2215 1888                        l2137 2B6E                        l2129 2B60  
                      l2305 2406                        l2233 1A64                        l2225 1940  
                      l2067 2900                        l2091 2A70                        l2083 2A54  
                      l2413 2670                        l2333 248C                        l2325 245A  
                      l2093 2A7A                        l2431 26CA                        l2423 269A  
                      l2351 24C6                        l2255 2322                        l2095 2A82  
                      l2087 2A62                        l2239 1B16                        l2425 26A8  
                      l2417 2680                        l2441 29D4                        l2345 24B0  
                      l2337 249C                        l2249 2304                        l2193 1EF6  
                      l2601 1444                        l2521 10BC                        l2371 294E  
                      l2363 2C18                        l2419 2686                        l2427 26B2  
                      l2443 29E2                        l2355 24DA                        l2291 23BC  
                      l2099 2A98                        l2515 109A                        l2381 29AC  
                      l2701 22B8                        l2453 2A1C                        l2445 29EA  
                      l2461 2AD2                        l2357 24E8                        l2349 24C0  
                      l2285 23A6                        l2277 2392                        l2613 1492  
                      l2605 1452                        l2541 1146                        l2525 10C6  
                      l1903 2876                        l2375 2980                        l2463 2AE0  
                      l2295 23D0                        l2631 1574                        l2623 1540  
                      l2527 10EA                        l2519 10AE                        l2713 26FC  
                      l2705 22DE                        l1921 204E                        l2465 2AE8  
                      l2297 23DE                        l2289 23B6                        l2641 15BE  
                      l2625 1550                        l2617 14B2                        l2609 148C  
                      l2715 2716                        l2395 2616                        l2475 2BA6  
                      l2651 16EC                        l2635 1598                        l2571 1290  
                      l1933 2084                        l2469 2B0E                        l2477 2BB4  
                      l2653 16FC                        l2645 1610                        l2629 1560  
                      l2581 131E                        l2573 12C2                        l2565 1252  
                      l2557 11EA                        l2493 2DBC                        l2719 2724  
                      l1951 20DC                        l1943 20AC                        l1927 2078  
                      l2591 1394                        l2575 12D8                        l2663 173C  
                      l1881 27EC                        l1961 2114                        l1953 20E8  
                      l2657 170C                        l2593 13C2                        l2585 1344  
                      l2569 127A                        l2489 2DAE                        l1891 2850  
                      l1883 280C                        l1875 27D0                        l2739 2764  
                      l2683 21E6                        l1963 2120                        l1955 20F0  
                      l2587 1350                        l2595 13D6                        l2659 171C  
                      l2749 2798                        l2669 2CE0                        l2677 2C7A  
                      l1949 20D0                        l2765 1B50                        l1887 2824  
                      l1879 27E0                        l2695 2272                        l1991 2538  
                      l2599 143E                        l2791 1D5E                        l2783 1CDA  
                      l1897 2864                        l1889 2844                        l2689 222C  
                      l1969 2166                        l1979 2198                        l1995 2546  
                      l1989 251E                        STR_1 1077                        u2121 22F6  
                      u2141 2314                        u2331 2608                        u2350 2634  
                      u1551 200C                        u1561 2020                        u2355 262C  
                      u2710 158A                        u2550 1186                        u1761 2510  
                      u2555 117C                printf@tmpval 008F                        u1781 252E  
                      u2780 2C70                        u2871 26EE                        u2891 270C  
                      _TRMT 007D61                 display_D1@R 0057                 display_D2@T 000A  
                      _main 1B3C                ___ftpack@arg 0001                ___ftpack@exp 0004  
            ??_get_full_ADC 0003                        fsr2h 000FDA                        fsr1l 000FE1  
                      indf2 000FDF                        fsr2l 000FD9                        _volt 007B  
                      prodh 000FF4                        prodl 000FF3                        start 0000  
              ___ftmul@cntr 0038                ___param_bank 000010                ___ftmul@sign 0039  
              ___fttol@exp1 0048                ___fttol@lval 0044                 ?_SET_D2_OFF 0001  
               ?_SET_D2_RED 0001                       ?_main 0001             __end_of___awdiv 291C  
           __end_of___ftadd 21C0             __end_of___awmod 2AC0             __end_of___ftdiv 27C0  
           __end_of___ftneg 2DA6             __end_of___lldiv 2A3E             __end_of___ftmul 25F8  
           ___awdiv@divisor 0051             __end_of___llmod 2B30             __end_of___ftsub 2C44  
           __end_of___fttol 26DE                       _T2CON 000FCA             ___awdiv@counter 0053  
                     _RCSTA 000FAB                       _SPBRG 000FAF                       _PORTB 000F81  
                     _PORTC 000F82                       _PORTD 000F83                       _TRISA 000F92  
                     _TRISB 000F93                       _TRISC 000F94                       _TRISD 000F95  
                     _TRISE 000F96                       _TXREG 000FAD                       _TXSTA 000FAC  
              ___lltoft@exp 0011             __end_of_dpowers 1029                       _scale 175C  
             ___ftpack@sign 0005                       main@L 0074                       main@U 0077  
                     _putch 2E00              __CFG_BOREN$OFF 000000                       tablat 000FF5  
                     status 000FD8       __end_of_select_ADC_CH 2E28             __initialization 2C84  
              __end_of_main 1DB8            __end_of_Init_ADC 2E1C                      ??_main 0072  
             ___fttol@sign1 0043               __activetblptr 000002       __end_of_SET_D2_PURPLE 2E4A  
      __size_of__tdiv_to_l_ 0110                ?_SET_D2_BLUE 0001                      _ADCON0 000FC2  
                    _ADCON1 000FC1                      _ADCON2 000FC0            ___llmod@dividend 0001  
                    ?_scale 005D                      _ADRESH 000FC4                      _ADRESL 000FC3  
                    _CCPR2L 000FBB            ___awdiv@dividend 004F                      ?_putch 0001  
          __end_of___ftpack 2886            __end_of___lbtoft 2D82            __end_of___lltoft 2C00  
          __end_of___lwtoft 2D5C                      _OSCCON 000FD3          __size_of_Init_TRIS 0014  
                    _SPBRGH 000FB0         __size_of_SET_D2_OFF 0008         __size_of_SET_D2_RED 0008  
          __end_of__powers_ 1077          __size_of_OpenUSART 0070                      ___ftge 291C  
                    ___wmul 2CE8                   ??___awdiv 0053                   ??___ftadd 0016  
                 ??___awmod 004D                   ??___ftdiv 0022                   ??___ftneg 0010  
                 ??___lldiv 0009                   ??___ftmul 0031                   ??___llmod 0009  
                 ??___ftsub 0022                   ??___fttol 003E       __size_of_check_buzzer 002E  
                    _fround 1DB8                      clear_0 2C8A            ___awdiv@quotient 0055  
           ___awmod@divisor 004B             ___awmod@counter 004D                      _printf 108C  
     ___ftmul@f3_as_product 0035        __end_of_get_full_ADC 2D36                __mediumconst 0000  
                    tblptrh 000FF7                      tblptrl 000FF6                      tblptru 000FF8  
                    putch@c 0001                  __accesstop 0080     __end_of__initialization 2CB0  
                ___ftadd@f1 0010                  ___ftadd@f2 0013                  ___ftge@ff1 0001  
                ___ftge@ff2 0004               ___rparam_used 000001                  ___ftdiv@f1 001C  
                ___ftdiv@f2 001F                  ___ftdiv@f3 0026                _check_buzzer 2CBA  
                ___ftneg@f1 000D                  ___lbtoft@c 000C                  ___ftmul@f1 002B  
                ___ftmul@f2 002E                  ___ftsub@f1 001C                  ___ftsub@f2 001F  
                ___fttol@f1 003A              __pcstackCOMRAM 0001                __pidataBANK0 2E28  
                ___lltoft@c 0009               __end_of_scale 1B3C               __end_of_putch 2E0E  
           _activate_buzzer 2DEE           __end_of_Init_TRIS 2DEE                  ___lwtoft@c 0009  
                __div_to_l_ 23F6           __end_of_OpenUSART 2BA0               check_buzzer@r 000A  
           __div_to_l_@exp1 000C             __div_to_l_@cntr 000B                     ??_scale 0060  
           __div_to_l_@quot 0007                     ??_putch 0001                   ?_Init_ADC 0001  
        __size_of_init_UART 0014               __div_to_l_@f1 0001               __div_to_l_@f2 0004  
                   ?___ftge 0001                     ?___wmul 0057               ?_SET_D2_GREEN 0001  
             ?_SET_D2_WHITE 0001                     _CCP2CON 000FBA                     ?_fround 005D  
                 ?___ftpack 0001                   ?___lbtoft 0009                     ?_printf 0067  
              ??_SET_D2_OFF 0001                ??_SET_D2_RED 0001                   ?___lltoft 0009  
                 ?___lwtoft 0009                  _display_D1 2C44                  _display_D2 21C0  
      __size_of_SET_D2_BLUE 0008                  ??_Init_ADC 0001          __end_of_SET_D2_OFF 2E52  
        __end_of_SET_D2_RED 2E42           __end_of__npowers_ 1050                     __Hparam 0000  
                _scale$1469 0060                     __Lparam 0000     __end_of_activate_buzzer 2E00  
            ??_SET_D2_GREEN 0001             __size_of___ftge 0096                     ___awdiv 2886  
                   ___ftadd 1FFC                     ___awmod 2A3E                     ___ftdiv 26DE  
            ??_SET_D2_WHITE 0001                     ___ftneg 2D82                     ___lldiv 29B2  
           __size_of___wmul 0028                     ___ftmul 2500                     ___llmod 2AC0  
                   ___ftsub 2C00                     ___fttol 25F8                 wait_1_sec@j 0001  
     __size_of_get_full_ADC 0026                __psmallconst 1000                     __pcinit 2C84  
                ??___ftpack 0006                  ??___lbtoft 000C             __size_of_fround 0244  
                   __ramtop 1000                  ??___lltoft 000D                     __ptext0 1B3C  
                   __ptext1 2DA6                     __ptext2 2E1C                     __ptext3 108C  
                   __ptext4 175C                     __ptext5 2E00                     __ptext6 1DB8  
                   __ptext7 2CE8                     __ptext8 2500                     __ptext9 2A3E  
           __size_of_printf 06D0           __end_of_init_UART 2DDA                  ??___lwtoft 000C  
               ?__div_to_l_ 0001                     _dpowers 1001            ___awmod@dividend 0049  
      end_of_initialization 2CB0               __Lmediumconst 0000                _get_full_ADC 2D10  
                _wait_1_sec 2DA6             ___lldiv@divisor 0005             ___lldiv@counter 000D  
                 _RCSTAbits 000FAB                     printf@c 0096                     printf@f 0067  
                   postdec1 000FE5                     postdec2 000FDD                     postinc0 000FEE  
                   postinc2 000FDE              __tdiv_to_l_@f1 0001              __tdiv_to_l_@f2 0004  
             ??__tdiv_to_l_ 0007                   _PORTCbits 000F82                   _PORTDbits 000F83  
                 _PORTEbits 000F84      __size_of_select_ADC_CH 000C                   _TRISCbits 000F94  
               ?_display_D1 0057                 ?_display_D2 000A                 ___ftdiv@exp 0029  
                 _TXSTAbits 000FAC          get_full_ADC@result 0005      __size_of_SET_D2_PURPLE 0008  
       __size_of__div_to_l_ 010A                 ___ftmul@exp 0034            ?_activate_buzzer 0001  
            __end_of___ftge 29B2              __end_of___wmul 2D10              __end_of_fround 1FFC  
            __end_of_printf 175C         start_initialization 2C84                   _Init_TRIS 2DDA  
       __end_of__tdiv_to_l_ 23F6        __end_of_SET_D2_GREEN 2E5A        __end_of_SET_D2_WHITE 2E3A  
                 _OpenUSART 2B30             ___llmod@divisor 0005            __CFG_OSC$INTIO67 000000  
         __size_of_Init_ADC 000E             ___llmod@counter 0009               _select_ADC_CH 2E1C  
               ?_wait_1_sec 0001                    ??___ftge 0007                    ??___wmul 005B  
       __size_of_display_D1 0040         __size_of_display_D2 0126                 __pdataBANK0 0097  
                  ??_fround 0060                    ??_printf 006C                  fround@prec 0066  
         __size_of___ftpack 00C6           __size_of___lbtoft 0026               _SET_D2_PURPLE 2E42  
         __size_of___lltoft 0060                 __pbssCOMRAM 0078           __size_of___lwtoft 0026  
                ?_Init_TRIS 0001               __pcstackBANK0 0080                  ?_OpenUSART 0001  
            ?_select_ADC_CH 0001                    ?___awdiv 004F                    ?___ftadd 0010  
                  ?___awmod 0049                    ?___ftdiv 001C                    ?___ftneg 000D  
                  ?___lldiv 0001                    ?___ftmul 002B                    ?___llmod 0001  
                  ?___ftsub 001C                   __npowers_ 1029                    ?___fttol 003A  
               __tdiv_to_l_ 22E6                ??__div_to_l_ 0007              ?_SET_D2_PURPLE 0001  
               __smallconst 1000         __size_of_wait_1_sec 0020                   _init_UART 2DC6  
             ??_SET_D2_BLUE 0001              __size_of_scale 03E0           _deactivate_buzzer 2E62  
            __size_of_putch 000E                    _LED_7seg 0097          ?_deactivate_buzzer 0001  
            ___wmul@product 005B                    _PIE1bits 000F9D                    _PIR1bits 000F9E  
        __end_of__div_to_l_ 2500         ??_deactivate_buzzer 0001                   main@L_558 0076  
                 main@U_557 0075                  _ADCON0bits 000FC2           ___wmul@multiplier 0057  
                printf@flag 0085                  printf@fval 0093                  printf@prec 0087  
     __size_of_SET_D2_GREEN 0008       __size_of_SET_D2_WHITE 0008                 ??_Init_TRIS 0001  
                ?_init_UART 0001                ??_display_D1 0059                ??_display_D2 000D  
 __end_of_deactivate_buzzer 2E6A             display_D1@range 0059                   copy_data0 2CA4  
           ??_select_ADC_CH 0001                    _Init_ADC 2E0E                 ??_OpenUSART 0003  
       __end_of_SET_D2_BLUE 2E62             OpenUSART@config 0003               ?_check_buzzer 000A  
                  __Hrparam 0000                    __Lrparam 0000                _SET_D2_GREEN 2E52  
          __size_of___awdiv 0096          __end_of_display_D1 2C84          __end_of_display_D2 22E6  
          __size_of___ftadd 01C4            __size_of___awmod 0082            __size_of___ftdiv 00E2  
          __size_of___ftneg 0024            __size_of___lldiv 008C            __size_of___ftmul 00F8  
              _SET_D2_WHITE 2E32            __size_of___llmod 0070            __size_of___ftsub 0044  
          __size_of___fttol 00E6                    ___ftpack 27C0             ??_SET_D2_PURPLE 0001  
                  ___lbtoft 2D5C                 _fround$1467 0063                 _fround$1468 0060  
                  ___lltoft 2BA0                    ___lwtoft 2D36                    __ptext10 22E6  
                  __ptext11 23F6                    __ptext20 2B30                    __ptext12 2BA0  
                  __ptext21 2D10                    __ptext13 2AC0                    __ptext30 2886  
                  __ptext22 21C0                    __ptext14 29B2                    __ptext31 2CBA  
                  __ptext23 2E32                    __ptext15 25F8                    __ptext40 2E0E  
                  __ptext32 2E62                    __ptext24 2E3A                    __ptext16 2C00  
                  __ptext33 2DEE                    __ptext25 2E42                    __ptext17 1FFC  
                  __ptext34 291C                    __ptext26 2E4A                    __ptext18 2D82  
                  __ptext35 2D36                    __ptext27 2E52                    __ptext19 2DC6  
                  __ptext36 2D5C                    __ptext28 2E5A                    __ptext37 26DE  
                  __ptext29 2C44                    __ptext38 27C0                    __ptext39 2DDA  
                  __powers_ 1050               __size_of_main 027C              ??_check_buzzer 000D  
              ??_wait_1_sec 0001                    _num_step 007E                   printf@exp 008D  
                 printf@val 0089    __size_of_activate_buzzer 0012              OpenUSART@spbrg 0001  
               ??_init_UART 0004          __end_of_wait_1_sec 2DC6  __size_of_deactivate_buzzer 0008  
               _SET_D2_BLUE 2E5A                    scale@scl 0063            __tdiv_to_l_@exp1 000F  
          __tdiv_to_l_@cntr 000E            __tdiv_to_l_@quot 000A            ___lldiv@dividend 0001  
       select_ADC_CH@AN_pin 0001                    printf@ap 0083                ?__tdiv_to_l_ 0001  
                _SET_D2_OFF 2E4A                  _SET_D2_RED 2E3A                 _printf$1470 0080  
          ___lldiv@quotient 0009               ?_get_full_ADC 0001  
