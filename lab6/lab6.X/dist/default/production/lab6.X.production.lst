

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Oct 14 18:01:22 2025

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1
    25                           	psect	text17,global,reloc=2,class=CODE,delta=1
    26                           	psect	text18,global,reloc=2,class=CODE,delta=1
    27                           	psect	text19,global,reloc=2,class=CODE,delta=1
    28                           	psect	text20,global,reloc=2,class=CODE,delta=1
    29                           	psect	text21,global,reloc=2,class=CODE,delta=1
    30                           	psect	text22,global,reloc=2,class=CODE,delta=1
    31                           	psect	text23,global,reloc=2,class=CODE,delta=1
    32                           	psect	text24,global,reloc=2,class=CODE,delta=1
    33                           	psect	text25,global,reloc=2,class=CODE,delta=1
    34                           	psect	text26,global,reloc=2,class=CODE,delta=1
    35                           	psect	text27,global,reloc=2,class=CODE,delta=1
    36                           	psect	text28,global,reloc=2,class=CODE,delta=1
    37                           	psect	text29,global,reloc=2,class=CODE,delta=1
    38                           	psect	text30,global,reloc=2,class=CODE,delta=1
    39                           	psect	text31,global,reloc=2,class=CODE,delta=1
    40                           	psect	text32,global,reloc=2,class=CODE,delta=1
    41                           	psect	text33,global,reloc=2,class=CODE,delta=1
    42                           	psect	text34,global,reloc=2,class=CODE,delta=1
    43                           	psect	text35,global,reloc=2,class=CODE,delta=1
    44                           	psect	text36,global,reloc=2,class=CODE,delta=1
    45                           	psect	text37,global,reloc=2,class=CODE,delta=1
    46                           	psect	text38,global,reloc=2,class=CODE,delta=1
    47                           	psect	text39,global,reloc=2,class=CODE,delta=1
    48                           	psect	text40,global,reloc=2,class=CODE,delta=1
    49                           	psect	text41,global,reloc=2,class=CODE,delta=1
    50                           	psect	text42,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    53  0000                     
    54                           	psect	smallconst
    55  001000                     __psmallconst:
    56                           	opt stack 0
    57  001000  00                 	db	0
    58  001001                     _dpowers:
    59                           	opt stack 0
    60  001001  0001               	dw	1
    61  001003  0000               	dw	0
    62  001005  000A               	dw	10
    63  001007  0000               	dw	0
    64  001009  0064               	dw	100
    65  00100B  0000               	dw	0
    66  00100D  03E8               	dw	1000
    67  00100F  0000               	dw	0
    68  001011  2710               	dw	10000
    69  001013  0000               	dw	0
    70  001015  86A0               	dw	34464
    71  001017  0001               	dw	1
    72  001019  4240               	dw	16960
    73  00101B  000F               	dw	15
    74  00101D  9680               	dw	38528
    75  00101F  0098               	dw	152
    76  001021  E100               	dw	57600
    77  001023  05F5               	dw	1525
    78  001025  CA00               	dw	51712
    79  001027  3B9A               	dw	15258
    80  001029                     __end_of_dpowers:
    81                           	opt stack 0
    82  001029                     __npowers_:
    83                           	opt stack 0
    84  001029  00                 	db	0
    85  00102A  80                 	db	128
    86  00102B  3F                 	db	63
    87  00102C  CD                 	db	205
    88  00102D  CC                 	db	204
    89  00102E  3D                 	db	61
    90  00102F  D7                 	db	215
    91  001030  23                 	db	35
    92  001031  3C                 	db	60
    93  001032  12                 	db	18
    94  001033  83                 	db	131
    95  001034  3A                 	db	58
    96  001035  B7                 	db	183
    97  001036  D1                 	db	209
    98  001037  38                 	db	56
    99  001038  C6                 	db	198
   100  001039  27                 	db	39
   101  00103A  37                 	db	55
   102  00103B  38                 	db	56
   103  00103C  86                 	db	134
   104  00103D  35                 	db	53
   105  00103E  C0                 	db	192
   106  00103F  D6                 	db	214
   107  001040  33                 	db	51
   108  001041  CC                 	db	204
   109  001042  2B                 	db	43
   110  001043  32                 	db	50
   111  001044  70                 	db	112
   112  001045  89                 	db	137
   113  001046  30                 	db	48
   114  001047  E7                 	db	231
   115  001048  DB                 	db	219
   116  001049  2E                 	db	46
   117  00104A  E5                 	db	229
   118  00104B  3C                 	db	60
   119  00104C  1E                 	db	30
   120  00104D  42                 	db	66
   121  00104E  A2                 	db	162
   122  00104F  0D                 	db	13
   123  001050                     __end_of__npowers_:
   124                           	opt stack 0
   125  001050                     __powers_:
   126                           	opt stack 0
   127  001050  00                 	db	0
   128  001051  80                 	db	128
   129  001052  3F                 	db	63
   130  001053  00                 	db	0
   131  001054  20                 	db	32
   132  001055  41                 	db	65
   133  001056  00                 	db	0
   134  001057  C8                 	db	200
   135  001058  42                 	db	66
   136  001059  00                 	db	0
   137  00105A  7A                 	db	122
   138  00105B  44                 	db	68
   139  00105C  40                 	db	64
   140  00105D  1C                 	db	28
   141  00105E  46                 	db	70
   142  00105F  50                 	db	80
   143  001060  C3                 	db	195
   144  001061  47                 	db	71
   145  001062  24                 	db	36
   146  001063  74                 	db	116
   147  001064  49                 	db	73
   148  001065  97                 	db	151
   149  001066  18                 	db	24
   150  001067  4B                 	db	75
   151  001068  BC                 	db	188
   152  001069  BE                 	db	190
   153  00106A  4C                 	db	76
   154  00106B  6B                 	db	107
   155  00106C  6E                 	db	110
   156  00106D  4E                 	db	78
   157  00106E  03                 	db	3
   158  00106F  15                 	db	21
   159  001070  50                 	db	80
   160  001071  79                 	db	121
   161  001072  AD                 	db	173
   162  001073  60                 	db	96
   163  001074  F3                 	db	243
   164  001075  49                 	db	73
   165  001076  71                 	db	113
   166  001077                     __end_of__powers_:
   167                           	opt stack 0
   168  001077                     _seven_seg_table:
   169                           	opt stack 0
   170  001077  FF                 	db	255
   171  001078  4F                 	db	79
   172  001079  12                 	db	18
   173  00107A  06                 	db	6
   174  00107B  4C                 	db	76
   175  00107C  24                 	db	36
   176  00107D  20                 	db	32
   177  00107E  0F                 	db	15
   178  00107F  00                 	db	0
   179  001080  04                 	db	4
   180  001081                     __end_of_seven_seg_table:
   181                           	opt stack 0
   182  0000                     _ADCON0	set	4034
   183  0000                     _ADCON0bits	set	4034
   184  0000                     _ADCON1	set	4033
   185  0000                     _ADCON2	set	4032
   186  0000                     _ADRESH	set	4036
   187  0000                     _ADRESL	set	4035
   188  0000                     _CCP2CON	set	4026
   189  0000                     _CCPR2L	set	4027
   190  0000                     _INTCONbits	set	4082
   191  0000                     _OSCCON	set	4051
   192  0000                     _PIE1bits	set	3997
   193  0000                     _PIR1bits	set	3998
   194  0000                     _PORTAbits	set	3968
   195  0000                     _PORTB	set	3969
   196  0000                     _PORTBbits	set	3969
   197  0000                     _PORTCbits	set	3970
   198  0000                     _PORTD	set	3971
   199  0000                     _PORTEbits	set	3972
   200  0000                     _PR2	set	4043
   201  0000                     _RCSTA	set	4011
   202  0000                     _RCSTAbits	set	4011
   203  0000                     _SPBRG	set	4015
   204  0000                     _SPBRGH	set	4016
   205  0000                     _T0CON	set	4053
   206  0000                     _T0CONbits	set	4053
   207  0000                     _T2CON	set	4042
   208  0000                     _TMR0H	set	4055
   209  0000                     _TMR0L	set	4054
   210  0000                     _TRISA	set	3986
   211  0000                     _TRISB	set	3987
   212  0000                     _TRISC	set	3988
   213  0000                     _TRISCbits	set	3988
   214  0000                     _TRISD	set	3989
   215  0000                     _TRISE	set	3990
   216  0000                     _TXSTA	set	4012
   217  0000                     _TXSTAbits	set	4012
   218  001081                     STR_1:
   219  001081  0D                 	db	13
   220  001082  0A                 	db	10
   221  001083  56                 	db	86	;'V'
   222  001084  6F                 	db	111	;'o'
   223  001085  6C                 	db	108	;'l'
   224  001086  74                 	db	116	;'t'
   225  001087  61                 	db	97	;'a'
   226  001088  67                 	db	103	;'g'
   227  001089  65                 	db	101	;'e'
   228  00108A  3A                 	db	58	;':'
   229  00108B  20                 	db	32
   230  00108C  25                 	db	37
   231  00108D  2E                 	db	46
   232  00108E  32                 	db	50	;'2'
   233  00108F  66                 	db	102	;'f'
   234  001090  20                 	db	32
   235  001091  6D                 	db	109	;'m'
   236  001092  56                 	db	86	;'V'
   237  001093  0D                 	db	13
   238  001094  0A                 	db	10
   239  001095  00                 	db	0
   240  001096                     STR_2:
   241  001096  53                 	db	83	;'S'
   242  001097  77                 	db	119	;'w'
   243  001098  69                 	db	105	;'i'
   244  001099  74                 	db	116	;'t'
   245  00109A  63                 	db	99	;'c'
   246  00109B  68                 	db	104	;'h'
   247  00109C  20                 	db	32
   248  00109D  53                 	db	83	;'S'
   249  00109E  74                 	db	116	;'t'
   250  00109F  61                 	db	97	;'a'
   251  0010A0  74                 	db	116	;'t'
   252  0010A1  75                 	db	117	;'u'
   253  0010A2  73                 	db	115	;'s'
   254  0010A3  3A                 	db	58	;':'
   255  0010A4  0D                 	db	13
   256  0010A5  0A                 	db	10
   257  0010A6  00                 	db	0
   258  0010A7                     STR_9:
   259  0010A7  20                 	db	32
   260  0010A8  20                 	db	32
   261  0010A9  4E                 	db	78	;'N'
   262  0010AA  53                 	db	83	;'S'
   263  0010AB  4C                 	db	76	;'L'
   264  0010AC  54                 	db	84	;'T'
   265  0010AD  5F                 	db	95	;'_'
   266  0010AE  53                 	db	83	;'S'
   267  0010AF  57                 	db	87	;'W'
   268  0010B0  20                 	db	32
   269  0010B1  3A                 	db	58	;':'
   270  0010B2  20                 	db	32
   271  0010B3  25                 	db	37
   272  0010B4  73                 	db	115	;'s'
   273  0010B5  0D                 	db	13
   274  0010B6  0A                 	db	10
   275  0010B7  00                 	db	0
   276  0010B8                     STR_12:
   277  0010B8  20                 	db	32
   278  0010B9  20                 	db	32
   279  0010BA  45                 	db	69	;'E'
   280  0010BB  57                 	db	87	;'W'
   281  0010BC  4C                 	db	76	;'L'
   282  0010BD  54                 	db	84	;'T'
   283  0010BE  5F                 	db	95	;'_'
   284  0010BF  53                 	db	83	;'S'
   285  0010C0  57                 	db	87	;'W'
   286  0010C1  20                 	db	32
   287  0010C2  3A                 	db	58	;':'
   288  0010C3  20                 	db	32
   289  0010C4  25                 	db	37
   290  0010C5  73                 	db	115	;'s'
   291  0010C6  0D                 	db	13
   292  0010C7  0A                 	db	10
   293  0010C8  00                 	db	0
   294  0010C9                     STR_3:
   295  0010C9  20                 	db	32
   296  0010CA  20                 	db	32
   297  0010CB  4E                 	db	78	;'N'
   298  0010CC  53                 	db	83	;'S'
   299  0010CD  50                 	db	80	;'P'
   300  0010CE  45                 	db	69	;'E'
   301  0010CF  44                 	db	68	;'D'
   302  0010D0  5F                 	db	95	;'_'
   303  0010D1  53                 	db	83	;'S'
   304  0010D2  57                 	db	87	;'W'
   305  0010D3  3A                 	db	58	;':'
   306  0010D4  20                 	db	32
   307  0010D5  25                 	db	37
   308  0010D6  73                 	db	115	;'s'
   309  0010D7  0D                 	db	13
   310  0010D8  0A                 	db	10
   311  0010D9  00                 	db	0
   312  0010DA                     STR_6:
   313  0010DA  20                 	db	32
   314  0010DB  20                 	db	32
   315  0010DC  45                 	db	69	;'E'
   316  0010DD  57                 	db	87	;'W'
   317  0010DE  50                 	db	80	;'P'
   318  0010DF  45                 	db	69	;'E'
   319  0010E0  44                 	db	68	;'D'
   320  0010E1  5F                 	db	95	;'_'
   321  0010E2  53                 	db	83	;'S'
   322  0010E3  57                 	db	87	;'W'
   323  0010E4  3A                 	db	58	;':'
   324  0010E5  20                 	db	32
   325  0010E6  25                 	db	37
   326  0010E7  73                 	db	115	;'s'
   327  0010E8  0D                 	db	13
   328  0010E9  0A                 	db	10
   329  0010EA  00                 	db	0
   330  0010EB                     STR_15:
   331  0010EB  28                 	db	40
   332  0010EC  6E                 	db	110	;'n'
   333  0010ED  75                 	db	117	;'u'
   334  0010EE  6C                 	db	108	;'l'
   335  0010EF  6C                 	db	108	;'l'
   336  0010F0  29                 	db	41
   337  0010F1  00                 	db	0
   338  0010F2                     STR_5:
   339  0010F2  4F                 	db	79	;'O'
   340  0010F3  46                 	db	70	;'F'
   341  0010F4  46                 	db	70	;'F'
   342  0010F5  00                 	db	0
   343  0010F6                     STR_4:
   344  0010F6  4F                 	db	79	;'O'
   345  0010F7  4E                 	db	78	;'N'
   346  0010F8  00                 	db	0
   347  0000                     
   348                           ; #config settings
   349  0010F9  00                 	db	0	; dummy byte at the end
   350  0000                     
   351                           	psect	cinit
   352  002F42                     __pcinit:
   353                           	opt stack 0
   354  002F42                     start_initialization:
   355                           	opt stack 0
   356  002F42                     __initialization:
   357                           	opt stack 0
   358  002F42                     end_of_initialization:
   359                           	opt stack 0
   360  002F42                     __end_of__initialization:
   361                           	opt stack 0
   362  002F42  0100               	movlb	0
   363  002F44  EFF3  F014         	goto	_main	;jump to C main() function
   364                           
   365                           	psect	cstackCOMRAM
   366  000001                     __pcstackCOMRAM:
   367                           	opt stack 0
   368  000001                     ??_isdigit:
   369  000001                     ?_get_full_ADC:
   370                           	opt stack 0
   371  000001                     ?___awmod:
   372                           	opt stack 0
   373  000001                     ?___ftpack:
   374                           	opt stack 0
   375  000001                     ?___ftneg:
   376                           	opt stack 0
   377  000001                     ?__tdiv_to_l_:
   378                           	opt stack 0
   379  000001                     ?__div_to_l_:
   380                           	opt stack 0
   381  000001                     ?___lldiv:
   382                           	opt stack 0
   383  000001                     ?___llmod:
   384                           	opt stack 0
   385  000001                     Wait_N_Seconds@seconds:
   386                           	opt stack 0
   387  000001                     set_NS@color:
   388                           	opt stack 0
   389  000001                     set_NSLT@color:
   390                           	opt stack 0
   391  000001                     set_EW@color:
   392                           	opt stack 0
   393  000001                     set_EWLT@color:
   394                           	opt stack 0
   395  000001                     PED_Control@num_sec:
   396                           	opt stack 0
   397  000001                     OpenUSART@spbrg:
   398                           	opt stack 0
   399  000001                     ___awmod@dividend:
   400                           	opt stack 0
   401  000001                     __div_to_l_@f1:
   402                           	opt stack 0
   403  000001                     ___ftpack@arg:
   404                           	opt stack 0
   405  000001                     __tdiv_to_l_@f1:
   406                           	opt stack 0
   407  000001                     ___ftge@ff1:
   408                           	opt stack 0
   409  000001                     ___ftneg@f1:
   410                           	opt stack 0
   411  000001                     ___lldiv@dividend:
   412                           	opt stack 0
   413  000001                     ___llmod@dividend:
   414                           	opt stack 0
   415                           
   416                           ; 4 bytes @ 0x0
   417  000001                     	ds	1
   418  000002                     ??_PED_Control:
   419  000002                     Wait_N_Seconds@I:
   420                           	opt stack 0
   421  000002                     _isdigit$1557:
   422                           	opt stack 0
   423                           
   424                           ; 1 bytes @ 0x1
   425  000002                     	ds	1
   426  000003                     ??_get_full_ADC:
   427  000003                     PED_Control@direction:
   428                           	opt stack 0
   429  000003                     OpenUSART@config:
   430                           	opt stack 0
   431  000003                     isdigit@c:
   432                           	opt stack 0
   433  000003                     ___awmod@divisor:
   434                           	opt stack 0
   435                           
   436                           ; 2 bytes @ 0x2
   437  000003                     	ds	1
   438  000004                     ___ftpack@exp:
   439                           	opt stack 0
   440  000004                     PED_Control@i:
   441                           	opt stack 0
   442  000004                     __div_to_l_@f2:
   443                           	opt stack 0
   444  000004                     __tdiv_to_l_@f2:
   445                           	opt stack 0
   446  000004                     ___ftge@ff2:
   447                           	opt stack 0
   448                           
   449                           ; 3 bytes @ 0x3
   450  000004                     	ds	1
   451  000005                     ___awmod@counter:
   452                           	opt stack 0
   453  000005                     ___ftpack@sign:
   454                           	opt stack 0
   455  000005                     ___lldiv@divisor:
   456                           	opt stack 0
   457  000005                     ___llmod@divisor:
   458                           	opt stack 0
   459                           
   460                           ; 4 bytes @ 0x4
   461  000005                     	ds	1
   462  000006                     ??___ftpack:
   463  000006                     ___awmod@sign:
   464                           	opt stack 0
   465  000006                     PED_Control@j:
   466                           	opt stack 0
   467                           
   468                           ; 2 bytes @ 0x5
   469  000006                     	ds	1
   470  000007                     ??__tdiv_to_l_:
   471  000007                     ??___ftge:
   472  000007                     ?___awdiv:
   473                           	opt stack 0
   474  000007                     ___awdiv@dividend:
   475                           	opt stack 0
   476  000007                     __div_to_l_@quot:
   477                           	opt stack 0
   478                           
   479                           ; 4 bytes @ 0x6
   480  000007                     	ds	1
   481  000008                     
   482                           ; 0 bytes @ 0x7
   483  000008                     	ds	1
   484  000009                     ?___lltoft:
   485                           	opt stack 0
   486  000009                     ?___lwtoft:
   487                           	opt stack 0
   488  000009                     ___llmod@counter:
   489                           	opt stack 0
   490  000009                     ___awdiv@divisor:
   491                           	opt stack 0
   492  000009                     ___lwtoft@c:
   493                           	opt stack 0
   494  000009                     ___lldiv@quotient:
   495                           	opt stack 0
   496  000009                     ___lltoft@c:
   497                           	opt stack 0
   498                           
   499                           ; 4 bytes @ 0x8
   500  000009                     	ds	1
   501  00000A                     __tdiv_to_l_@quot:
   502                           	opt stack 0
   503                           
   504                           ; 4 bytes @ 0x9
   505  00000A                     	ds	1
   506  00000B                     ___awdiv@counter:
   507                           	opt stack 0
   508  00000B                     __div_to_l_@cntr:
   509                           	opt stack 0
   510                           
   511                           ; 1 bytes @ 0xA
   512  00000B                     	ds	1
   513  00000C                     ___awdiv@sign:
   514                           	opt stack 0
   515  00000C                     __div_to_l_@exp1:
   516                           	opt stack 0
   517                           
   518                           ; 1 bytes @ 0xB
   519  00000C                     	ds	1
   520  00000D                     ??___lltoft:
   521  00000D                     ___lldiv@counter:
   522                           	opt stack 0
   523  00000D                     ___awdiv@quotient:
   524                           	opt stack 0
   525                           
   526                           ; 2 bytes @ 0xC
   527  00000D                     	ds	1
   528  00000E                     __tdiv_to_l_@cntr:
   529                           	opt stack 0
   530                           
   531                           ; 1 bytes @ 0xD
   532  00000E                     	ds	1
   533  00000F                     ?___wmul:
   534                           	opt stack 0
   535  00000F                     __tdiv_to_l_@exp1:
   536                           	opt stack 0
   537  00000F                     ___wmul@multiplier:
   538                           	opt stack 0
   539                           
   540                           ; 2 bytes @ 0xE
   541  00000F                     	ds	2
   542  000011                     ___lltoft@exp:
   543                           	opt stack 0
   544  000011                     ___wmul@multiplicand:
   545                           	opt stack 0
   546                           
   547                           ; 2 bytes @ 0x10
   548  000011                     	ds	2
   549  000013                     ___wmul@product:
   550                           	opt stack 0
   551                           
   552                           ; 2 bytes @ 0x12
   553  000013                     	ds	2
   554  000015                     ?___ftmul:
   555                           	opt stack 0
   556  000015                     ___ftmul@f1:
   557                           	opt stack 0
   558                           
   559                           ; 3 bytes @ 0x14
   560  000015                     	ds	3
   561  000018                     ___ftmul@f2:
   562                           	opt stack 0
   563                           
   564                           ; 3 bytes @ 0x17
   565  000018                     	ds	3
   566  00001B                     ??___ftmul:
   567                           
   568                           ; 0 bytes @ 0x1A
   569  00001B                     	ds	3
   570  00001E                     ___ftmul@exp:
   571                           	opt stack 0
   572                           
   573                           ; 1 bytes @ 0x1D
   574  00001E                     	ds	1
   575  00001F                     ___ftmul@f3_as_product:
   576                           	opt stack 0
   577                           
   578                           ; 3 bytes @ 0x1E
   579  00001F                     	ds	3
   580  000022                     ___ftmul@cntr:
   581                           	opt stack 0
   582                           
   583                           ; 1 bytes @ 0x21
   584  000022                     	ds	1
   585  000023                     ___ftmul@sign:
   586                           	opt stack 0
   587                           
   588                           ; 1 bytes @ 0x22
   589  000023                     	ds	1
   590  000024                     ?_fround:
   591                           	opt stack 0
   592  000024                     ?_scale:
   593                           	opt stack 0
   594                           
   595                           ; 3 bytes @ 0x23
   596  000024                     	ds	3
   597  000027                     _fround$1824:
   598                           	opt stack 0
   599  000027                     _scale$1825:
   600                           	opt stack 0
   601                           
   602                           ; 3 bytes @ 0x26
   603  000027                     	ds	3
   604  00002A                     scale@scl:
   605                           	opt stack 0
   606  00002A                     _fround$1823:
   607                           	opt stack 0
   608                           
   609                           ; 3 bytes @ 0x29
   610  00002A                     	ds	1
   611  00002B                     ?___fttol:
   612                           	opt stack 0
   613  00002B                     ___fttol@f1:
   614                           	opt stack 0
   615                           
   616                           ; 3 bytes @ 0x2A
   617  00002B                     	ds	2
   618  00002D                     fround@prec:
   619                           	opt stack 0
   620                           
   621                           ; 1 bytes @ 0x2C
   622  00002D                     	ds	1
   623  00002E                     ?___ftadd:
   624                           	opt stack 0
   625  00002E                     ___ftadd@f1:
   626                           	opt stack 0
   627                           
   628                           ; 3 bytes @ 0x2D
   629  00002E                     	ds	1
   630  00002F                     ??___fttol:
   631                           
   632                           ; 0 bytes @ 0x2E
   633  00002F                     	ds	2
   634  000031                     ___ftadd@f2:
   635                           	opt stack 0
   636                           
   637                           ; 3 bytes @ 0x30
   638  000031                     	ds	3
   639  000034                     ??___ftadd:
   640  000034                     ___fttol@sign1:
   641                           	opt stack 0
   642                           
   643                           ; 1 bytes @ 0x33
   644  000034                     	ds	1
   645  000035                     ___fttol@lval:
   646                           	opt stack 0
   647                           
   648                           ; 4 bytes @ 0x34
   649  000035                     	ds	2
   650  000037                     ___ftadd@sign:
   651                           	opt stack 0
   652                           
   653                           ; 1 bytes @ 0x36
   654  000037                     	ds	1
   655  000038                     ___ftadd@exp2:
   656                           	opt stack 0
   657                           
   658                           ; 1 bytes @ 0x37
   659  000038                     	ds	1
   660  000039                     ___ftadd@exp1:
   661                           	opt stack 0
   662  000039                     ___fttol@exp1:
   663                           	opt stack 0
   664                           
   665                           ; 1 bytes @ 0x38
   666  000039                     	ds	1
   667  00003A                     ?___ftsub:
   668                           	opt stack 0
   669  00003A                     ___ftsub@f1:
   670                           	opt stack 0
   671                           
   672                           ; 3 bytes @ 0x39
   673  00003A                     	ds	3
   674  00003D                     ___ftsub@f2:
   675                           	opt stack 0
   676                           
   677                           ; 3 bytes @ 0x3C
   678  00003D                     	ds	3
   679  000040                     ?_printf:
   680                           	opt stack 0
   681  000040                     printf@f:
   682                           	opt stack 0
   683                           
   684                           ; 2 bytes @ 0x3F
   685  000040                     	ds	5
   686  000045                     ??_printf:
   687                           
   688                           ; 0 bytes @ 0x44
   689  000045                     	ds	6
   690  00004B                     _printf$1826:
   691                           	opt stack 0
   692                           
   693                           ; 3 bytes @ 0x4A
   694  00004B                     	ds	3
   695  00004E                     printf@ap:
   696                           	opt stack 0
   697                           
   698                           ; 2 bytes @ 0x4D
   699  00004E                     	ds	2
   700  000050                     printf@len:
   701                           	opt stack 0
   702                           
   703                           ; 2 bytes @ 0x4F
   704  000050                     	ds	2
   705  000052                     printf@cp:
   706                           	opt stack 0
   707                           
   708                           ; 2 bytes @ 0x51
   709  000052                     	ds	2
   710  000054                     printf@flag:
   711                           	opt stack 0
   712                           
   713                           ; 2 bytes @ 0x53
   714  000054                     	ds	2
   715  000056                     printf@val:
   716                           	opt stack 0
   717                           
   718                           ; 4 bytes @ 0x55
   719  000056                     	ds	4
   720  00005A                     printf@exp:
   721                           	opt stack 0
   722                           
   723                           ; 2 bytes @ 0x59
   724  00005A                     	ds	2
   725  00005C                     printf@tmpval:
   726                           	opt stack 0
   727                           
   728                           ; 4 bytes @ 0x5B
   729  00005C                     	ds	4
   730  000060                     printf@fval:
   731                           	opt stack 0
   732                           
   733                           ; 3 bytes @ 0x5F
   734  000060                     	ds	3
   735  000063                     printf@prec:
   736                           	opt stack 0
   737                           
   738                           ; 2 bytes @ 0x62
   739  000063                     	ds	2
   740  000065                     printf@c:
   741                           	opt stack 0
   742                           
   743                           ; 1 bytes @ 0x64
   744  000065                     	ds	1
   745  000066                     UART_Report_Status@voltage_mv:
   746                           	opt stack 0
   747                           
   748                           ; 3 bytes @ 0x65
   749  000066                     	ds	3
   750  000069                     _UART_Report_Status$971:
   751                           	opt stack 0
   752                           
   753                           ; 2 bytes @ 0x68
   754  000069                     	ds	2
   755  00006B                     _UART_Report_Status$976:
   756                           	opt stack 0
   757                           
   758                           ; 2 bytes @ 0x6A
   759  00006B                     	ds	2
   760  00006D                     _UART_Report_Status$981:
   761                           	opt stack 0
   762                           
   763                           ; 2 bytes @ 0x6C
   764  00006D                     	ds	2
   765  00006F                     _UART_Report_Status$986:
   766                           	opt stack 0
   767                           
   768                           ; 2 bytes @ 0x6E
   769  00006F                     	ds	2
   770  000071                     main@adc_value:
   771                           	opt stack 0
   772                           
   773                           ; 2 bytes @ 0x70
   774  000071                     	ds	2
   775  000073                     main@voltage_v:
   776                           	opt stack 0
   777                           
   778                           ; 3 bytes @ 0x72
   779  000073                     	ds	3
   780                           
   781 ;;
   782 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   783 ;;
   784 ;; *************** function _main *****************
   785 ;; Defined at:
   786 ;;		line 432 in file "lab6.c"
   787 ;; Parameters:    Size  Location     Type
   788 ;;		None
   789 ;; Auto vars:     Size  Location     Type
   790 ;;  voltage_v       3  114[COMRAM] float 
   791 ;;  adc_value       2  112[COMRAM] unsigned int 
   792 ;; Return value:  Size  Location     Type
   793 ;;                  2  201[None  ] int 
   794 ;; Registers used:
   795 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   796 ;; Tracked objects:
   797 ;;		On entry : 0/0
   798 ;;		On exit  : 0/0
   799 ;;		Unchanged: 0/0
   800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   802 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   804 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   805 ;;Total ram usage:        5 bytes
   806 ;; Hardware stack levels required when called:    5
   807 ;; This function calls:
   808 ;;		_Day_Mode
   809 ;;		_Init_ADC
   810 ;;		_Init_TRIS
   811 ;;		_Init_UART
   812 ;;		_Night_Mode
   813 ;;		_UART_Report_Status
   814 ;;		___ftge
   815 ;;		___ftmul
   816 ;;		___lwtoft
   817 ;;		_get_full_ADC
   818 ;; This function is called by:
   819 ;;		Startup code after reset
   820 ;; This function uses a non-reentrant model
   821 ;;
   822                           
   823                           	psect	text0
   824  0029E6                     __ptext0:
   825                           	opt stack 0
   826  0029E6                     _main:
   827                           	opt stack 26
   828                           
   829                           ;lab6.c: 434: Init_TRIS();
   830                           
   831                           ;incstack = 0
   832  0029E6  EC70  F017         	call	_Init_TRIS	;wreg free
   833                           
   834                           ;lab6.c: 435: Init_UART();
   835  0029EA  EC48  F017         	call	_Init_UART	;wreg free
   836                           
   837                           ;lab6.c: 436: Init_ADC();
   838  0029EE  EC8F  F017         	call	_Init_ADC	;wreg free
   839  0029F2  D000               	goto	l3004
   840  0029F4                     l3004:
   841                           
   842                           ;lab6.c: 439: {
   843                           ;lab6.c: 441: unsigned int adc_value = get_full_ADC();
   844  0029F4  EC39  F017         	call	_get_full_ADC	;wreg free
   845  0029F8  C001  F071         	movff	?_get_full_ADC,main@adc_value
   846  0029FC  C002  F072         	movff	?_get_full_ADC+1,main@adc_value+1
   847                           
   848                           ;lab6.c: 443: float voltage_v = adc_value * 0.0048828;
   849  002A00  C071  F009         	movff	main@adc_value,___lwtoft@c
   850  002A04  C072  F00A         	movff	main@adc_value+1,___lwtoft@c+1
   851  002A08  EC03  F017         	call	___lwtoft	;wreg free
   852  002A0C  C009  F015         	movff	?___lwtoft,___ftmul@f1
   853  002A10  C00A  F016         	movff	?___lwtoft+1,___ftmul@f1+1
   854  002A14  C00B  F017         	movff	?___lwtoft+2,___ftmul@f1+2
   855  002A18  0E00               	movlw	0
   856  002A1A  6E18               	movwf	___ftmul@f2,c
   857  002A1C  0EA0               	movlw	160
   858  002A1E  6E19               	movwf	___ftmul@f2+1,c
   859  002A20  0E3B               	movlw	59
   860  002A22  6E1A               	movwf	___ftmul@f2+2,c
   861  002A24  EC96  F011         	call	___ftmul	;wreg free
   862  002A28  C015  F073         	movff	?___ftmul,main@voltage_v
   863  002A2C  C016  F074         	movff	?___ftmul+1,main@voltage_v+1
   864  002A30  C017  F075         	movff	?___ftmul+2,main@voltage_v+2
   865                           
   866                           ;lab6.c: 444: UART_Report_Status(voltage_v);
   867  002A34  C073  F066         	movff	main@voltage_v,UART_Report_Status@voltage_mv
   868  002A38  C074  F067         	movff	main@voltage_v+1,UART_Report_Status@voltage_mv+1
   869  002A3C  C075  F068         	movff	main@voltage_v+2,UART_Report_Status@voltage_mv+2
   870  002A40  EC85  F012         	call	_UART_Report_Status	;wreg free
   871                           
   872                           ;lab6.c: 446: if(voltage_v < 2.50){
   873  002A44  C073  F001         	movff	main@voltage_v,___ftge@ff1
   874  002A48  C074  F002         	movff	main@voltage_v+1,___ftge@ff1+1
   875  002A4C  C075  F003         	movff	main@voltage_v+2,___ftge@ff1+2
   876  002A50  0E00               	movlw	0
   877  002A52  6E04               	movwf	___ftge@ff2,c
   878  002A54  0E20               	movlw	32
   879  002A56  6E05               	movwf	___ftge@ff2+1,c
   880  002A58  0E40               	movlw	64
   881  002A5A  6E06               	movwf	___ftge@ff2+2,c
   882  002A5C  ECA8  F014         	call	___ftge	;wreg free
   883  002A60  B0D8               	btfsc	status,0,c
   884  002A62  D003               	goto	l3014
   885                           
   886                           ;lab6.c: 448: Day_Mode();
   887  002A64  EC4F  F013         	call	_Day_Mode	;wreg free
   888                           
   889                           ;lab6.c: 449: }
   890  002A68  D7C5               	goto	l3004
   891  002A6A                     l3014:
   892                           
   893                           ;lab6.c: 450: else{
   894                           ;lab6.c: 451: Night_Mode();
   895  002A6A  EC09  F014         	call	_Night_Mode	;wreg free
   896  002A6E  D7C2               	goto	l3004
   897  002A70  EF00  F000         	goto	start
   898  002A74                     __end_of_main:
   899                           	opt stack 0
   900                           status	equ	0xFD8
   901                           
   902 ;; *************** function _get_full_ADC *****************
   903 ;; Defined at:
   904 ;;		line 419 in file "lab6.c"
   905 ;; Parameters:    Size  Location     Type
   906 ;;		None
   907 ;; Auto vars:     Size  Location     Type
   908 ;;		None
   909 ;; Return value:  Size  Location     Type
   910 ;;                  2    0[COMRAM] unsigned int 
   911 ;; Registers used:
   912 ;;		wreg, status,2, status,0
   913 ;; Tracked objects:
   914 ;;		On entry : 0/0
   915 ;;		On exit  : 0/0
   916 ;;		Unchanged: 0/0
   917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   918 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   920 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   921 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   922 ;;Total ram usage:        4 bytes
   923 ;; Hardware stack levels used:    1
   924 ;; This function calls:
   925 ;;		Nothing
   926 ;; This function is called by:
   927 ;;		_main
   928 ;; This function uses a non-reentrant model
   929 ;;
   930                           
   931                           	psect	text1
   932  002E72                     __ptext1:
   933                           	opt stack 0
   934  002E72                     _get_full_ADC:
   935                           	opt stack 30
   936                           
   937                           ;lab6.c: 420: ADCON0bits.GO = 1;
   938                           
   939                           ;incstack = 0
   940  002E72  82C2               	bsf	4034,1,c	;volatile
   941                           
   942                           ;lab6.c: 421: while (ADCON0bits.DONE == 1);
   943  002E74  D000               	goto	l193
   944  002E76                     l193:
   945  002E76  B2C2               	btfsc	4034,1,c	;volatile
   946  002E78  D7FE               	goto	l193
   947                           
   948                           ;lab6.c: 422: return (ADRESH << 8) + ADRESL;
   949  002E7A  50C4               	movf	4036,w,c	;volatile
   950  002E7C  6E04               	movwf	(??_get_full_ADC+1)& (0+255),c
   951  002E7E  6A03               	clrf	??_get_full_ADC& (0+255),c
   952  002E80  50C3               	movf	4035,w,c	;volatile
   953  002E82  2403               	addwf	??_get_full_ADC,w,c
   954  002E84  6E01               	movwf	?_get_full_ADC,c
   955  002E86  0E00               	movlw	0
   956  002E88  2004               	addwfc	??_get_full_ADC+1,w,c
   957  002E8A  6E02               	movwf	?_get_full_ADC+1,c
   958  002E8C  D000               	goto	l196
   959  002E8E                     l196:
   960  002E8E  0012               	return		;funcret
   961  002E90                     __end_of_get_full_ADC:
   962                           	opt stack 0
   963                           status	equ	0xFD8
   964                           
   965 ;; *************** function ___lwtoft *****************
   966 ;; Defined at:
   967 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtoft.c"
   968 ;; Parameters:    Size  Location     Type
   969 ;;  c               2    8[COMRAM] unsigned int 
   970 ;; Auto vars:     Size  Location     Type
   971 ;;		None
   972 ;; Return value:  Size  Location     Type
   973 ;;                  3    8[COMRAM] float 
   974 ;; Registers used:
   975 ;;		wreg, status,2, status,0, cstack
   976 ;; Tracked objects:
   977 ;;		On entry : 0/0
   978 ;;		On exit  : 0/0
   979 ;;		Unchanged: 0/0
   980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   981 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   984 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   985 ;;Total ram usage:        3 bytes
   986 ;; Hardware stack levels used:    1
   987 ;; Hardware stack levels required when called:    1
   988 ;; This function calls:
   989 ;;		___ftpack
   990 ;; This function is called by:
   991 ;;		_main
   992 ;; This function uses a non-reentrant model
   993 ;;
   994                           
   995                           	psect	text2
   996  002E06                     __ptext2:
   997                           	opt stack 0
   998  002E06                     ___lwtoft:
   999                           	opt stack 29
  1000                           
  1001                           ;incstack = 0
  1002  002E06  C009  F001         	movff	___lwtoft@c,___ftpack@arg
  1003  002E0A  C00A  F002         	movff	___lwtoft@c+1,___ftpack@arg+1
  1004  002E0E  6A03               	clrf	___ftpack@arg+2,c
  1005  002E10  0E8E               	movlw	142
  1006  002E12  6E04               	movwf	___ftpack@exp,c
  1007  002E14  0E00               	movlw	0
  1008  002E16  6E05               	movwf	___ftpack@sign,c
  1009  002E18  ECEC  F012         	call	___ftpack	;wreg free
  1010  002E1C  C001  F009         	movff	?___ftpack,?___lwtoft
  1011  002E20  C002  F00A         	movff	?___ftpack+1,?___lwtoft+1
  1012  002E24  C003  F00B         	movff	?___ftpack+2,?___lwtoft+2
  1013  002E28  D000               	goto	l931
  1014  002E2A                     l931:
  1015  002E2A  0012               	return		;funcret
  1016  002E2C                     __end_of___lwtoft:
  1017                           	opt stack 0
  1018                           status	equ	0xFD8
  1019                           
  1020 ;; *************** function _UART_Report_Status *****************
  1021 ;; Defined at:
  1022 ;;		line 249 in file "lab6.c"
  1023 ;; Parameters:    Size  Location     Type
  1024 ;;  voltage_mv      3  101[COMRAM] float 
  1025 ;; Auto vars:     Size  Location     Type
  1026 ;;		None
  1027 ;; Return value:  Size  Location     Type
  1028 ;;		None               void
  1029 ;; Registers used:
  1030 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1031 ;; Tracked objects:
  1032 ;;		On entry : 0/0
  1033 ;;		On exit  : 0/0
  1034 ;;		Unchanged: 0/0
  1035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1036 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1037 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1039 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1040 ;;Total ram usage:       11 bytes
  1041 ;; Hardware stack levels used:    1
  1042 ;; Hardware stack levels required when called:    4
  1043 ;; This function calls:
  1044 ;;		_printf
  1045 ;; This function is called by:
  1046 ;;		_main
  1047 ;; This function uses a non-reentrant model
  1048 ;;
  1049                           
  1050                           	psect	text3
  1051  00250A                     __ptext3:
  1052                           	opt stack 0
  1053  00250A                     _UART_Report_Status:
  1054                           	opt stack 26
  1055                           
  1056                           ;lab6.c: 251: printf("\r\nVoltage: %.2f mV\r\n", voltage_mv);
  1057                           
  1058                           ;incstack = 0
  1059  00250A  0E81               	movlw	low STR_1
  1060  00250C  6E40               	movwf	printf@f,c
  1061  00250E  0E10               	movlw	high STR_1
  1062  002510  6E41               	movwf	printf@f+1,c
  1063  002512  C066  F042         	movff	UART_Report_Status@voltage_mv,?_printf+2
  1064  002516  C067  F043         	movff	UART_Report_Status@voltage_mv+1,?_printf+3
  1065  00251A  C068  F044         	movff	UART_Report_Status@voltage_mv+2,?_printf+4
  1066  00251E  EC7D  F008         	call	_printf	;wreg free
  1067                           
  1068                           ;lab6.c: 253: printf("Switch Status:\r\n");
  1069  002522  0E96               	movlw	low STR_2
  1070  002524  6E40               	movwf	printf@f,c
  1071  002526  0E10               	movlw	high STR_2
  1072  002528  6E41               	movwf	printf@f+1,c
  1073  00252A  EC7D  F008         	call	_printf	;wreg free
  1074                           
  1075                           ;lab6.c: 254: printf("  NSPED_SW: %s\r\n", (PORTAbits.RA3 ? "ON" : "OFF"));
  1076  00252E  B680               	btfsc	3968,3,c	;volatile
  1077  002530  D004               	goto	l2920
  1078  002532  0EF2               	movlw	low STR_5
  1079  002534  6E69               	movwf	_UART_Report_Status$971,c
  1080  002536  0E10               	movlw	high STR_5
  1081  002538  D003               	goto	L1
  1082  00253A                     l2920:
  1083  00253A  0EF6               	movlw	low STR_4
  1084  00253C  6E69               	movwf	_UART_Report_Status$971,c
  1085  00253E  0E10               	movlw	high STR_4
  1086  002540                     L1:
  1087  002540  6E6A               	movwf	_UART_Report_Status$971+1,c
  1088  002542  D000               	goto	l2922
  1089  002544                     l2922:
  1090  002544  0EC9               	movlw	low STR_3
  1091  002546  6E40               	movwf	printf@f,c
  1092  002548  0E10               	movlw	high STR_3
  1093  00254A  6E41               	movwf	printf@f+1,c
  1094  00254C  C069  F042         	movff	_UART_Report_Status$971,?_printf+2
  1095  002550  C06A  F043         	movff	_UART_Report_Status$971+1,?_printf+3
  1096  002554  EC7D  F008         	call	_printf	;wreg free
  1097                           
  1098                           ;lab6.c: 255: printf("  EWPED_SW: %s\r\n", (PORTAbits.RA4 ? "ON" : "OFF"));
  1099  002558  B880               	btfsc	3968,4,c	;volatile
  1100  00255A  D004               	goto	l2928
  1101  00255C  0EF2               	movlw	low STR_5
  1102  00255E  6E6B               	movwf	_UART_Report_Status$976,c
  1103  002560  0E10               	movlw	high STR_5
  1104  002562  D003               	goto	L2
  1105  002564                     l2928:
  1106  002564  0EF6               	movlw	low STR_4
  1107  002566  6E6B               	movwf	_UART_Report_Status$976,c
  1108  002568  0E10               	movlw	high STR_4
  1109  00256A                     L2:
  1110  00256A  6E6C               	movwf	_UART_Report_Status$976+1,c
  1111  00256C  D000               	goto	l2930
  1112  00256E                     l2930:
  1113  00256E  0EDA               	movlw	low STR_6
  1114  002570  6E40               	movwf	printf@f,c
  1115  002572  0E10               	movlw	high STR_6
  1116  002574  6E41               	movwf	printf@f+1,c
  1117  002576  C06B  F042         	movff	_UART_Report_Status$976,?_printf+2
  1118  00257A  C06C  F043         	movff	_UART_Report_Status$976+1,?_printf+3
  1119  00257E  EC7D  F008         	call	_printf	;wreg free
  1120                           
  1121                           ;lab6.c: 256: printf("  NSLT_SW : %s\r\n", (PORTAbits.RA5 ? "ON" : "OFF"));
  1122  002582  BA80               	btfsc	3968,5,c	;volatile
  1123  002584  D004               	goto	l2936
  1124  002586  0EF2               	movlw	low STR_5
  1125  002588  6E6D               	movwf	_UART_Report_Status$981,c
  1126  00258A  0E10               	movlw	high STR_5
  1127  00258C  D003               	goto	L3
  1128  00258E                     l2936:
  1129  00258E  0EF6               	movlw	low STR_4
  1130  002590  6E6D               	movwf	_UART_Report_Status$981,c
  1131  002592  0E10               	movlw	high STR_4
  1132  002594                     L3:
  1133  002594  6E6E               	movwf	_UART_Report_Status$981+1,c
  1134  002596  D000               	goto	l2938
  1135  002598                     l2938:
  1136  002598  0EA7               	movlw	low STR_9
  1137  00259A  6E40               	movwf	printf@f,c
  1138  00259C  0E10               	movlw	high STR_9
  1139  00259E  6E41               	movwf	printf@f+1,c
  1140  0025A0  C06D  F042         	movff	_UART_Report_Status$981,?_printf+2
  1141  0025A4  C06E  F043         	movff	_UART_Report_Status$981+1,?_printf+3
  1142  0025A8  EC7D  F008         	call	_printf	;wreg free
  1143                           
  1144                           ;lab6.c: 257: printf("  EWLT_SW : %s\r\n", (PORTCbits.RC0 ? "ON" : "OFF"));
  1145  0025AC  B082               	btfsc	3970,0,c	;volatile
  1146  0025AE  D004               	goto	l2944
  1147  0025B0  0EF2               	movlw	low STR_5
  1148  0025B2  6E6F               	movwf	_UART_Report_Status$986,c
  1149  0025B4  0E10               	movlw	high STR_5
  1150  0025B6  D003               	goto	L4
  1151  0025B8                     l2944:
  1152  0025B8  0EF6               	movlw	low STR_4
  1153  0025BA  6E6F               	movwf	_UART_Report_Status$986,c
  1154  0025BC  0E10               	movlw	high STR_4
  1155  0025BE                     L4:
  1156  0025BE  6E70               	movwf	_UART_Report_Status$986+1,c
  1157  0025C0  D000               	goto	l2946
  1158  0025C2                     l2946:
  1159  0025C2  0EB8               	movlw	low STR_12
  1160  0025C4  6E40               	movwf	printf@f,c
  1161  0025C6  0E10               	movlw	high STR_12
  1162  0025C8  6E41               	movwf	printf@f+1,c
  1163  0025CA  C06F  F042         	movff	_UART_Report_Status$986,?_printf+2
  1164  0025CE  C070  F043         	movff	_UART_Report_Status$986+1,?_printf+3
  1165  0025D2  EC7D  F008         	call	_printf	;wreg free
  1166  0025D6  0012               	return		;funcret
  1167  0025D8                     __end_of_UART_Report_Status:
  1168                           	opt stack 0
  1169                           status	equ	0xFD8
  1170                           
  1171 ;; *************** function _printf *****************
  1172 ;; Defined at:
  1173 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  1174 ;; Parameters:    Size  Location     Type
  1175 ;;  f               2   63[COMRAM] PTR const unsigned char 
  1176 ;;		 -> STR_12(17), STR_9(17), STR_6(17), STR_3(17), 
  1177 ;;		 -> STR_2(17), STR_1(21), 
  1178 ;; Auto vars:     Size  Location     Type
  1179 ;;  tmpval          4   91[COMRAM] struct .
  1180 ;;  val             4   85[COMRAM] unsigned long 
  1181 ;;  fval            3   95[COMRAM] unsigned long 
  1182 ;;  prec            2   98[COMRAM] int 
  1183 ;;  exp             2   89[COMRAM] int 
  1184 ;;  flag            2   83[COMRAM] unsigned short 
  1185 ;;  cp              2   81[COMRAM] PTR const unsigned char 
  1186 ;;		 -> STR_15(7), STR_14(4), STR_13(3), STR_11(4), 
  1187 ;;		 -> STR_10(3), STR_8(4), STR_7(3), STR_5(4), 
  1188 ;;		 -> STR_4(3), 
  1189 ;;  len             2   79[COMRAM] unsigned int 
  1190 ;;  ap              2   77[COMRAM] PTR void [1]
  1191 ;;		 -> ?_printf(2), 
  1192 ;;  width           2    0        int 
  1193 ;;  c               1  100[COMRAM] char 
  1194 ;;  d               1    0        unsigned char 
  1195 ;; Return value:  Size  Location     Type
  1196 ;;                  2   63[COMRAM] int 
  1197 ;; Registers used:
  1198 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1199 ;; Tracked objects:
  1200 ;;		On entry : 0/0
  1201 ;;		On exit  : 0/0
  1202 ;;		Unchanged: 0/0
  1203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1204 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1205 ;;      Locals:        27       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1206 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1207 ;;      Totals:        38       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1208 ;;Total ram usage:       38 bytes
  1209 ;; Hardware stack levels used:    1
  1210 ;; Hardware stack levels required when called:    3
  1211 ;; This function calls:
  1212 ;;		___awdiv
  1213 ;;		___ftadd
  1214 ;;		___ftge
  1215 ;;		___ftmul
  1216 ;;		___ftneg
  1217 ;;		___ftsub
  1218 ;;		___fttol
  1219 ;;		___lldiv
  1220 ;;		___llmod
  1221 ;;		___lltoft
  1222 ;;		___wmul
  1223 ;;		__div_to_l_
  1224 ;;		__tdiv_to_l_
  1225 ;;		_fround
  1226 ;;		_isdigit
  1227 ;;		_putch
  1228 ;;		_scale
  1229 ;; This function is called by:
  1230 ;;		_UART_Report_Status
  1231 ;; This function uses a non-reentrant model
  1232 ;;
  1233                           
  1234                           	psect	text4
  1235  0010FA                     __ptext4:
  1236                           	opt stack 0
  1237  0010FA                     _printf:
  1238                           	opt stack 26
  1239                           
  1240                           ;doprnt.c: 466: va_list ap;
  1241                           ;doprnt.c: 499: signed char c;
  1242                           ;doprnt.c: 501: int width;
  1243                           ;doprnt.c: 504: int prec;
  1244                           ;doprnt.c: 508: unsigned short flag;
  1245                           ;doprnt.c: 515: char d;
  1246                           ;doprnt.c: 516: double fval;
  1247                           ;doprnt.c: 517: int exp;
  1248                           ;doprnt.c: 523: union {
  1249                           ;doprnt.c: 524: unsigned long vd;
  1250                           ;doprnt.c: 525: double integ;
  1251                           ;doprnt.c: 526: } tmpval;
  1252                           ;doprnt.c: 528: unsigned long val;
  1253                           ;doprnt.c: 529: unsigned len;
  1254                           ;doprnt.c: 530: const char * cp;
  1255                           ;doprnt.c: 533: *ap = __va_start();
  1256                           
  1257                           ;incstack = 0
  1258  0010FA  0E42               	movlw	low (?_printf+2)
  1259  0010FC  6E4E               	movwf	printf@ap,c
  1260  0010FE  0E00               	movlw	high (?_printf+2)
  1261  001100  6E4F               	movwf	printf@ap+1,c
  1262                           
  1263                           ;doprnt.c: 536: while(c = *f++) {
  1264  001102  D3D0               	goto	l2900
  1265  001104                     l2694:
  1266                           
  1267                           ;doprnt.c: 538: if(c != '%')
  1268  001104  0E25               	movlw	37
  1269  001106  1865               	xorwf	printf@c,w,c
  1270  001108  B4D8               	btfsc	status,2,c
  1271  00110A  D004               	goto	l2698
  1272                           
  1273                           ;doprnt.c: 540: {
  1274                           ;doprnt.c: 541: (putch(c) );
  1275  00110C  5065               	movf	printf@c,w,c
  1276  00110E  ECA8  F017         	call	_putch
  1277                           
  1278                           ;doprnt.c: 542: continue;
  1279  001112  D3C8               	goto	l2900
  1280  001114                     l2698:
  1281                           
  1282                           ;doprnt.c: 543: }
  1283                           ;doprnt.c: 548: flag = 0;
  1284  001114  0E00               	movlw	0
  1285  001116  6E55               	movwf	printf@flag+1,c
  1286  001118  0E00               	movlw	0
  1287  00111A  6E54               	movwf	printf@flag,c
  1288                           
  1289                           ;doprnt.c: 611: if(*f == '.') {
  1290  00111C  C040  FFF6         	movff	printf@f,tblptrl
  1291  001120  C041  FFF7         	movff	printf@f+1,tblptrh
  1292  001124                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1293  001124  6AF8               	clrf	tblptru,c
  1294  001126                     	endif
  1295  001126                     	if	0	;tblptru may be non-zero
  1296  001126                     	endif
  1297  001126  0008               	tblrd		*
  1298  001128  50F5               	movf	tablat,w,c
  1299  00112A  0A2E               	xorlw	46
  1300  00112C  A4D8               	btfss	status,2,c
  1301  00112E  D032               	goto	l2712
  1302                           
  1303                           ;doprnt.c: 612: flag |= 0x4000;
  1304  001130  8C55               	bsf	printf@flag+1,6,c
  1305                           
  1306                           ;doprnt.c: 613: f++;
  1307  001132  4A40               	infsnz	printf@f,f,c
  1308  001134  2A41               	incf	printf@f+1,f,c
  1309                           
  1310                           ;doprnt.c: 620: {
  1311                           ;doprnt.c: 621: prec = 0;
  1312  001136  0E00               	movlw	0
  1313  001138  6E64               	movwf	printf@prec+1,c
  1314  00113A  0E00               	movlw	0
  1315  00113C  6E63               	movwf	printf@prec,c
  1316                           
  1317                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  1318  00113E  D01D               	goto	l2710
  1319  001140                     l2706:
  1320                           
  1321                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  1322  001140  C063  F00F         	movff	printf@prec,___wmul@multiplier
  1323  001144  C064  F010         	movff	printf@prec+1,___wmul@multiplier+1
  1324  001148  0E00               	movlw	0
  1325  00114A  6E12               	movwf	___wmul@multiplicand+1,c
  1326  00114C  0E0A               	movlw	10
  1327  00114E  6E11               	movwf	___wmul@multiplicand,c
  1328  001150  ECEF  F016         	call	___wmul	;wreg free
  1329  001154  C040  FFF6         	movff	printf@f,tblptrl
  1330  001158  C041  FFF7         	movff	printf@f+1,tblptrh
  1331  00115C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1332  00115C  6AF8               	clrf	tblptru,c
  1333  00115E                     	endif
  1334  00115E                     	if	0	;tblptru may be non-zero
  1335  00115E                     	endif
  1336  00115E  0008               	tblrd		*
  1337  001160  50F5               	movf	tablat,w,c
  1338  001162  260F               	addwf	?___wmul,f,c
  1339  001164  0E00               	movlw	0
  1340  001166  2210               	addwfc	?___wmul+1,f,c
  1341  001168  0ED0               	movlw	208
  1342  00116A  240F               	addwf	?___wmul,w,c
  1343  00116C  6E63               	movwf	printf@prec,c
  1344  00116E  0EFF               	movlw	255
  1345  001170  2010               	addwfc	?___wmul+1,w,c
  1346  001172  6E64               	movwf	printf@prec+1,c
  1347  001174  4A40               	infsnz	printf@f,f,c
  1348  001176  2A41               	incf	printf@f+1,f,c
  1349  001178  D000               	goto	l2710
  1350  00117A                     l2710:
  1351  00117A  C040  FFF6         	movff	printf@f,tblptrl
  1352  00117E  C041  FFF7         	movff	printf@f+1,tblptrh
  1353  001182                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1354  001182  6AF8               	clrf	tblptru,c
  1355  001184                     	endif
  1356  001184                     	if	0	;tblptru may be non-zero
  1357  001184                     	endif
  1358  001184  0008               	tblrd		*
  1359  001186  50F5               	movf	tablat,w,c
  1360  001188  EC28  F017         	call	_isdigit
  1361  00118C  A0D8               	btfss	status,0,c
  1362  00118E  D05E               	goto	l2746
  1363  001190  D7D7               	goto	l2706
  1364                           
  1365                           ;doprnt.c: 624: }
  1366                           ;doprnt.c: 625: } else {
  1367  001192  D05C               	goto	l2746
  1368  001194                     l2712:
  1369                           
  1370                           ;doprnt.c: 626: prec = 0;
  1371  001194  0E00               	movlw	0
  1372  001196  6E64               	movwf	printf@prec+1,c
  1373  001198  0E00               	movlw	0
  1374  00119A  6E63               	movwf	printf@prec,c
  1375                           
  1376                           ;doprnt.c: 628: flag |= 0x1000;
  1377  00119C  8855               	bsf	printf@flag+1,4,c
  1378                           
  1379                           ;doprnt.c: 630: }
  1380                           ;doprnt.c: 635: switch(c = *f++) {
  1381  00119E  D056               	goto	l2746
  1382                           
  1383                           ;doprnt.c: 638: goto alldone;
  1384                           
  1385                           ;doprnt.c: 637: case 0:
  1386  0011A0  D390               	goto	l311
  1387  0011A2                     l2716:
  1388                           
  1389                           ;doprnt.c: 663: flag |= 0x400;
  1390  0011A2  8455               	bsf	printf@flag+1,2,c
  1391                           
  1392                           ;doprnt.c: 664: break;
  1393  0011A4  D068               	goto	l2748
  1394  0011A6                     l2718:
  1395                           
  1396                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  1397  0011A6  C04E  FFD9         	movff	printf@ap,fsr2l
  1398  0011AA  C04F  FFDA         	movff	printf@ap+1,fsr2h
  1399  0011AE  CFDE F052          	movff	postinc2,printf@cp
  1400  0011B2  CFDD F053          	movff	postdec2,printf@cp+1
  1401  0011B6  0E02               	movlw	2
  1402  0011B8  264E               	addwf	printf@ap,f,c
  1403  0011BA  0E00               	movlw	0
  1404  0011BC  224F               	addwfc	printf@ap+1,f,c
  1405                           
  1406                           ;doprnt.c: 740: if(!cp)
  1407  0011BE  5052               	movf	printf@cp,w,c
  1408  0011C0  1053               	iorwf	printf@cp+1,w,c
  1409  0011C2  A4D8               	btfss	status,2,c
  1410  0011C4  D005               	goto	l2726
  1411                           
  1412                           ;doprnt.c: 741: cp = "(null)";
  1413  0011C6  0EEB               	movlw	low STR_15
  1414  0011C8  6E52               	movwf	printf@cp,c
  1415  0011CA  0E10               	movlw	high STR_15
  1416  0011CC  6E53               	movwf	printf@cp+1,c
  1417  0011CE  D000               	goto	l2726
  1418  0011D0                     l2726:
  1419                           
  1420                           ;doprnt.c: 745: len = 0;
  1421  0011D0  0E00               	movlw	0
  1422  0011D2  6E51               	movwf	printf@len+1,c
  1423  0011D4  0E00               	movlw	0
  1424  0011D6  6E50               	movwf	printf@len,c
  1425                           
  1426                           ;doprnt.c: 746: while(cp[len])
  1427  0011D8  D003               	goto	l2730
  1428  0011DA                     l2728:
  1429                           
  1430                           ;doprnt.c: 747: len++;
  1431  0011DA  4A50               	infsnz	printf@len,f,c
  1432  0011DC  2A51               	incf	printf@len+1,f,c
  1433  0011DE  D000               	goto	l2730
  1434  0011E0                     l2730:
  1435  0011E0  5050               	movf	printf@len,w,c
  1436  0011E2  2452               	addwf	printf@cp,w,c
  1437  0011E4  6E45               	movwf	??_printf& (0+255),c
  1438  0011E6  5051               	movf	printf@len+1,w,c
  1439  0011E8  2053               	addwfc	printf@cp+1,w,c
  1440  0011EA  6E46               	movwf	(??_printf+1)& (0+255),c
  1441  0011EC  C045  FFF6         	movff	??_printf,tblptrl
  1442  0011F0  C046  FFF7         	movff	??_printf+1,tblptrh
  1443  0011F4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1444  0011F4  6AF8               	clrf	tblptru,c
  1445  0011F6                     	endif
  1446  0011F6                     	if	0	;tblptru may be non-zero
  1447  0011F6                     	endif
  1448  0011F6  0008               	tblrd		*
  1449  0011F8  50F5               	movf	tablat,w,c
  1450  0011FA  0900               	iorlw	0
  1451  0011FC  A4D8               	btfss	status,2,c
  1452  0011FE  D7ED               	goto	l2728
  1453                           
  1454                           ;doprnt.c: 753: if(prec && prec < len)
  1455  001200  5063               	movf	printf@prec,w,c
  1456  001202  1064               	iorwf	printf@prec+1,w,c
  1457  001204  B4D8               	btfsc	status,2,c
  1458  001206  D017               	goto	l2742
  1459  001208  5050               	movf	printf@len,w,c
  1460  00120A  5C63               	subwf	printf@prec,w,c
  1461  00120C  5051               	movf	printf@len+1,w,c
  1462  00120E  5864               	subwfb	printf@prec+1,w,c
  1463  001210  B0D8               	btfsc	status,0,c
  1464  001212  D011               	goto	l2742
  1465                           
  1466                           ;doprnt.c: 754: len = prec;
  1467  001214  C063  F050         	movff	printf@prec,printf@len
  1468  001218  C064  F051         	movff	printf@prec+1,printf@len+1
  1469                           
  1470                           ;doprnt.c: 767: while(len--)
  1471  00121C  D00C               	goto	l2742
  1472  00121E                     l2738:
  1473                           
  1474                           ;doprnt.c: 768: (putch(*cp++) );
  1475  00121E  C052  FFF6         	movff	printf@cp,tblptrl
  1476  001222  C053  FFF7         	movff	printf@cp+1,tblptrh
  1477  001226                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1478  001226  6AF8               	clrf	tblptru,c
  1479  001228                     	endif
  1480  001228                     	if	0	;tblptru may be non-zero
  1481  001228                     	endif
  1482  001228  0008               	tblrd		*
  1483  00122A  50F5               	movf	tablat,w,c
  1484  00122C  ECA8  F017         	call	_putch
  1485  001230  4A52               	infsnz	printf@cp,f,c
  1486  001232  2A53               	incf	printf@cp+1,f,c
  1487  001234  D000               	goto	l2742
  1488  001236                     l2742:
  1489  001236  0650               	decf	printf@len,f,c
  1490  001238  A0D8               	btfss	status,0,c
  1491  00123A  0651               	decf	printf@len+1,f,c
  1492  00123C  2850               	incf	printf@len,w,c
  1493  00123E  E1EF               	bnz	l2738
  1494  001240  2851               	incf	printf@len+1,w,c
  1495  001242  B4D8               	btfsc	status,2,c
  1496  001244  D32F               	goto	l2900
  1497  001246  D7EB               	goto	l2738
  1498                           
  1499                           ;doprnt.c: 813: continue;
  1500                           
  1501                           ;doprnt.c: 802: default:
  1502                           
  1503                           ;doprnt.c: 774: continue;
  1504  001248  D32D               	goto	l2900
  1505                           
  1506                           ;doprnt.c: 822: }
  1507  00124A  D015               	goto	l2748
  1508  00124C                     l2746:
  1509  00124C  C040  FFF6         	movff	printf@f,tblptrl
  1510  001250  C041  FFF7         	movff	printf@f+1,tblptrh
  1511  001254  4A40               	infsnz	printf@f,f,c
  1512  001256  2A41               	incf	printf@f+1,f,c
  1513  001258                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1514  001258  6AF8               	clrf	tblptru,c
  1515  00125A                     	endif
  1516  00125A                     	if	0	;tblptru may be non-zero
  1517  00125A                     	endif
  1518  00125A  0008               	tblrd		*
  1519  00125C  CFF5 F065          	movff	tablat,printf@c
  1520  001260  5065               	movf	printf@c,w,c
  1521                           
  1522                           ; Switch size 1, requested type "space"
  1523                           ; Number of cases is 3, Range of values is 0 to 115
  1524                           ; switch strategies available:
  1525                           ; Name         Instructions Cycles
  1526                           ; simple_byte           10     6 (average)
  1527                           ;	Chosen strategy is simple_byte
  1528  001262  0A00               	xorlw	0	; case 0
  1529  001264  B4D8               	btfsc	status,2,c
  1530  001266  D32D               	goto	l311
  1531  001268  0A66               	xorlw	102	; case 102
  1532  00126A  B4D8               	btfsc	status,2,c
  1533  00126C  D79A               	goto	l2716
  1534  00126E  0A15               	xorlw	21	; case 115
  1535  001270  B4D8               	btfsc	status,2,c
  1536  001272  D799               	goto	l2718
  1537  001274  D317               	goto	l2900
  1538  001276                     l2748:
  1539                           
  1540                           ;doprnt.c: 825: if(flag & (0x700)) {
  1541  001276  0E07               	movlw	7
  1542  001278  1455               	andwf	printf@flag+1,w,c
  1543  00127A  B4D8               	btfsc	status,2,c
  1544  00127C  D2D9               	goto	l2882
  1545                           
  1546                           ;doprnt.c: 827: if(flag & 0x1000)
  1547  00127E  A855               	btfss	printf@flag+1,4,c
  1548  001280  D005               	goto	l2754
  1549                           
  1550                           ;doprnt.c: 829: prec = 6;
  1551  001282  0E00               	movlw	0
  1552  001284  6E64               	movwf	printf@prec+1,c
  1553  001286  0E06               	movlw	6
  1554  001288  6E63               	movwf	printf@prec,c
  1555  00128A  D000               	goto	l2754
  1556  00128C                     l2754:
  1557                           
  1558                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1559  00128C  C04E  FFD9         	movff	printf@ap,fsr2l
  1560  001290  C04F  FFDA         	movff	printf@ap+1,fsr2h
  1561  001294  CFDE F060          	movff	postinc2,printf@fval
  1562  001298  CFDE F061          	movff	postinc2,printf@fval+1
  1563  00129C  CFDD F062          	movff	postdec2,printf@fval+2
  1564  0012A0  0E03               	movlw	3
  1565  0012A2  264E               	addwf	printf@ap,f,c
  1566  0012A4  0E00               	movlw	0
  1567  0012A6  224F               	addwfc	printf@ap+1,f,c
  1568                           
  1569                           ;doprnt.c: 831: if(fval < 0.0) {
  1570  0012A8  AE62               	btfss	printf@fval+2,7,c
  1571  0012AA  D011               	goto	l2764
  1572                           
  1573                           ;doprnt.c: 832: fval = -fval;
  1574  0012AC  C060  F001         	movff	printf@fval,___ftneg@f1
  1575  0012B0  C061  F002         	movff	printf@fval+1,___ftneg@f1+1
  1576  0012B4  C062  F003         	movff	printf@fval+2,___ftneg@f1+2
  1577  0012B8  EC16  F017         	call	___ftneg	;wreg free
  1578  0012BC  C001  F060         	movff	?___ftneg,printf@fval
  1579  0012C0  C002  F061         	movff	?___ftneg+1,printf@fval+1
  1580  0012C4  C003  F062         	movff	?___ftneg+2,printf@fval+2
  1581                           
  1582                           ;doprnt.c: 833: flag |= 0x03;
  1583  0012C8  0E03               	movlw	3
  1584  0012CA  1254               	iorwf	printf@flag,f,c
  1585  0012CC  D000               	goto	l2764
  1586  0012CE                     l2764:
  1587                           
  1588                           ;doprnt.c: 834: }
  1589                           ;doprnt.c: 835: exp = 0;
  1590  0012CE  0E00               	movlw	0
  1591  0012D0  6E5B               	movwf	printf@exp+1,c
  1592  0012D2  0E00               	movlw	0
  1593  0012D4  6E5A               	movwf	printf@exp,c
  1594                           
  1595                           ;doprnt.c: 836: if( fval!=0) {
  1596  0012D6  5060               	movf	printf@fval,w,c
  1597  0012D8  1061               	iorwf	printf@fval+1,w,c
  1598  0012DA  1062               	iorwf	printf@fval+2,w,c
  1599  0012DC  B4D8               	btfsc	status,2,c
  1600  0012DE  D085               	goto	l2792
  1601                           
  1602                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  1603  0012E0  0E82               	movlw	130
  1604  0012E2  6E45               	movwf	??_printf& (0+255),c
  1605  0012E4  0EFF               	movlw	255
  1606  0012E6  6E46               	movwf	(??_printf+1)& (0+255),c
  1607  0012E8  C060  F047         	movff	printf@fval,??_printf+2
  1608  0012EC  C061  F048         	movff	printf@fval+1,??_printf+3
  1609  0012F0  C062  F049         	movff	printf@fval+2,??_printf+4
  1610  0012F4  C063  F04A         	movff	printf@fval+3,??_printf+5
  1611  0012F8  0E10               	movlw	16
  1612  0012FA  D005               	goto	u2810
  1613  0012FC                     u2815:
  1614  0012FC  90D8               	bcf	status,0,c
  1615  0012FE  324A               	rrcf	??_printf+5,f,c
  1616  001300  3249               	rrcf	??_printf+4,f,c
  1617  001302  3248               	rrcf	??_printf+3,f,c
  1618  001304  3247               	rrcf	??_printf+2,f,c
  1619  001306                     u2810:
  1620  001306  2EE8               	decfsz	wreg,f,c
  1621  001308  D7F9               	goto	u2815
  1622  00130A  5047               	movf	??_printf+2,w,c
  1623  00130C  2445               	addwf	??_printf,w,c
  1624  00130E  6E5A               	movwf	printf@exp,c
  1625  001310  0E00               	movlw	0
  1626  001312  2046               	addwfc	??_printf+1,w,c
  1627  001314  6E5B               	movwf	printf@exp+1,c
  1628                           
  1629                           ;doprnt.c: 838: exp--;
  1630  001316  065A               	decf	printf@exp,f,c
  1631  001318  A0D8               	btfss	status,0,c
  1632  00131A  065B               	decf	printf@exp+1,f,c
  1633                           
  1634                           ;doprnt.c: 839: exp *= 3;
  1635  00131C  C05A  F00F         	movff	printf@exp,___wmul@multiplier
  1636  001320  C05B  F010         	movff	printf@exp+1,___wmul@multiplier+1
  1637  001324  0E00               	movlw	0
  1638  001326  6E12               	movwf	___wmul@multiplicand+1,c
  1639  001328  0E03               	movlw	3
  1640  00132A  6E11               	movwf	___wmul@multiplicand,c
  1641  00132C  ECEF  F016         	call	___wmul	;wreg free
  1642  001330  C00F  F05A         	movff	?___wmul,printf@exp
  1643  001334  C010  F05B         	movff	?___wmul+1,printf@exp+1
  1644                           
  1645                           ;doprnt.c: 840: exp /= 10;
  1646  001338  C05A  F007         	movff	printf@exp,___awdiv@dividend
  1647  00133C  C05B  F008         	movff	printf@exp+1,___awdiv@dividend+1
  1648  001340  0E00               	movlw	0
  1649  001342  6E0A               	movwf	___awdiv@divisor+1,c
  1650  001344  0E0A               	movlw	10
  1651  001346  6E09               	movwf	___awdiv@divisor,c
  1652  001348  EC5D  F014         	call	___awdiv	;wreg free
  1653  00134C  C007  F05A         	movff	?___awdiv,printf@exp
  1654  001350  C008  F05B         	movff	?___awdiv+1,printf@exp+1
  1655                           
  1656                           ;doprnt.c: 841: if(exp < 0)
  1657  001354  AE5B               	btfss	printf@exp+1,7,c
  1658  001356  D004               	goto	l2780
  1659                           
  1660                           ;doprnt.c: 842: exp--;
  1661  001358  065A               	decf	printf@exp,f,c
  1662  00135A  A0D8               	btfss	status,0,c
  1663  00135C  065B               	decf	printf@exp+1,f,c
  1664  00135E  D000               	goto	l2780
  1665  001360                     l2780:
  1666                           
  1667                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  1668  001360  505A               	movf	printf@exp,w,c
  1669  001362  0800               	sublw	0
  1670  001364  EC62  F00C         	call	_scale
  1671  001368  C024  F05C         	movff	?_scale,printf@tmpval
  1672  00136C  C025  F05D         	movff	?_scale+1,printf@tmpval+1
  1673  001370  C026  F05E         	movff	?_scale+2,printf@tmpval+2
  1674                           
  1675                           ;doprnt.c: 847: tmpval.integ *= fval;
  1676  001374  C05C  F015         	movff	printf@tmpval,___ftmul@f1
  1677  001378  C05D  F016         	movff	printf@tmpval+1,___ftmul@f1+1
  1678  00137C  C05E  F017         	movff	printf@tmpval+2,___ftmul@f1+2
  1679  001380  C060  F018         	movff	printf@fval,___ftmul@f2
  1680  001384  C061  F019         	movff	printf@fval+1,___ftmul@f2+1
  1681  001388  C062  F01A         	movff	printf@fval+2,___ftmul@f2+2
  1682  00138C  EC96  F011         	call	___ftmul	;wreg free
  1683  001390  C015  F05C         	movff	?___ftmul,printf@tmpval
  1684  001394  C016  F05D         	movff	?___ftmul+1,printf@tmpval+1
  1685  001398  C017  F05E         	movff	?___ftmul+2,printf@tmpval+2
  1686                           
  1687                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  1688  00139C  C05C  F001         	movff	printf@tmpval,___ftge@ff1
  1689  0013A0  C05D  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1690  0013A4  C05E  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1691  0013A8  0E00               	movlw	0
  1692  0013AA  6E04               	movwf	___ftge@ff2,c
  1693  0013AC  0E80               	movlw	128
  1694  0013AE  6E05               	movwf	___ftge@ff2+1,c
  1695  0013B0  0E3F               	movlw	63
  1696  0013B2  6E06               	movwf	___ftge@ff2+2,c
  1697  0013B4  ECA8  F014         	call	___ftge	;wreg free
  1698  0013B8  B0D8               	btfsc	status,0,c
  1699  0013BA  D004               	goto	l2788
  1700                           
  1701                           ;doprnt.c: 849: exp--;
  1702  0013BC  065A               	decf	printf@exp,f,c
  1703  0013BE  A0D8               	btfss	status,0,c
  1704  0013C0  065B               	decf	printf@exp+1,f,c
  1705  0013C2  D013               	goto	l2792
  1706  0013C4                     l2788:
  1707                           
  1708                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  1709  0013C4  C05C  F001         	movff	printf@tmpval,___ftge@ff1
  1710  0013C8  C05D  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1711  0013CC  C05E  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1712  0013D0  0E00               	movlw	0
  1713  0013D2  6E04               	movwf	___ftge@ff2,c
  1714  0013D4  0E20               	movlw	32
  1715  0013D6  6E05               	movwf	___ftge@ff2+1,c
  1716  0013D8  0E41               	movlw	65
  1717  0013DA  6E06               	movwf	___ftge@ff2+2,c
  1718  0013DC  ECA8  F014         	call	___ftge	;wreg free
  1719  0013E0  A0D8               	btfss	status,0,c
  1720  0013E2  D003               	goto	l2792
  1721                           
  1722                           ;doprnt.c: 851: exp++;
  1723  0013E4  4A5A               	infsnz	printf@exp,f,c
  1724  0013E6  2A5B               	incf	printf@exp+1,f,c
  1725  0013E8  D000               	goto	l2792
  1726  0013EA                     l2792:
  1727                           
  1728                           ;doprnt.c: 852: }
  1729                           ;doprnt.c: 1112: if(prec <= 12)
  1730  0013EA  BE64               	btfsc	printf@prec+1,7,c
  1731  0013EC  D006               	goto	l2794
  1732  0013EE  5064               	movf	printf@prec+1,w,c
  1733  0013F0  E11C               	bnz	l2796
  1734  0013F2  0E0D               	movlw	13
  1735  0013F4  5C63               	subwf	printf@prec,w,c
  1736  0013F6  B0D8               	btfsc	status,0,c
  1737  0013F8  D018               	goto	l2796
  1738  0013FA                     l2794:
  1739                           
  1740                           ;doprnt.c: 1113: fval += fround(prec);
  1741  0013FA  C060  F02E         	movff	printf@fval,___ftadd@f1
  1742  0013FE  C061  F02F         	movff	printf@fval+1,___ftadd@f1+1
  1743  001402  C062  F030         	movff	printf@fval+2,___ftadd@f1+2
  1744  001406  5063               	movf	printf@prec,w,c
  1745  001408  EC73  F00E         	call	_fround
  1746  00140C  C024  F031         	movff	?_fround,___ftadd@f2
  1747  001410  C025  F032         	movff	?_fround+1,___ftadd@f2+1
  1748  001414  C026  F033         	movff	?_fround+2,___ftadd@f2+2
  1749  001418  ECA7  F00F         	call	___ftadd	;wreg free
  1750  00141C  C02E  F060         	movff	?___ftadd,printf@fval
  1751  001420  C02F  F061         	movff	?___ftadd+1,printf@fval+1
  1752  001424  C030  F062         	movff	?___ftadd+2,printf@fval+2
  1753  001428  D000               	goto	l2796
  1754  00142A                     l2796:
  1755                           
  1756                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  1757  00142A  BE5B               	btfsc	printf@exp+1,7,c
  1758  00142C  D006               	goto	l2798
  1759  00142E  505B               	movf	printf@exp+1,w,c
  1760  001430  E120               	bnz	l2804
  1761  001432  0E0A               	movlw	10
  1762  001434  5C5A               	subwf	printf@exp,w,c
  1763  001436  B0D8               	btfsc	status,0,c
  1764  001438  D01C               	goto	l2804
  1765  00143A                     l2798:
  1766  00143A  5060               	movf	printf@fval,w,c
  1767  00143C  1061               	iorwf	printf@fval+1,w,c
  1768  00143E  1062               	iorwf	printf@fval+2,w,c
  1769  001440  B4D8               	btfsc	status,2,c
  1770  001442  D06D               	goto	l2818
  1771  001444  C060  F02B         	movff	printf@fval,___fttol@f1
  1772  001448  C061  F02C         	movff	printf@fval+1,___fttol@f1+1
  1773  00144C  C062  F02D         	movff	printf@fval+2,___fttol@f1+2
  1774  001450  EC12  F012         	call	___fttol	;wreg free
  1775  001454  502B               	movf	?___fttol,w,c
  1776  001456  102C               	iorwf	?___fttol+1,w,c
  1777  001458  102D               	iorwf	?___fttol+2,w,c
  1778  00145A  102E               	iorwf	?___fttol+3,w,c
  1779  00145C  B4D8               	btfsc	status,2,c
  1780  00145E  BE5B               	btfsc	printf@exp+1,7,c
  1781  001460  D05E               	goto	l2818
  1782  001462  505B               	movf	printf@exp+1,w,c
  1783  001464  E106               	bnz	l2804
  1784  001466  0E02               	movlw	2
  1785  001468  5C5A               	subwf	printf@exp,w,c
  1786  00146A  B0D8               	btfsc	status,0,c
  1787  00146C  D002               	goto	l2804
  1788  00146E  D057               	goto	l2818
  1789  001470  D000               	goto	l2804
  1790  001472                     l2804:
  1791                           
  1792                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  1793  001472  C05C  F001         	movff	printf@tmpval,___ftge@ff1
  1794  001476  C05D  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1795  00147A  C05E  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1796  00147E  0E70               	movlw	112
  1797  001480  6E04               	movwf	___ftge@ff2,c
  1798  001482  0E89               	movlw	137
  1799  001484  6E05               	movwf	___ftge@ff2+1,c
  1800  001486  0E40               	movlw	64
  1801  001488  6E06               	movwf	___ftge@ff2+2,c
  1802  00148A  ECA8  F014         	call	___ftge	;wreg free
  1803  00148E  B0D8               	btfsc	status,0,c
  1804  001490  D002               	goto	l2808
  1805                           
  1806                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  1807  001492  0EF7               	movlw	247
  1808  001494  D001               	goto	L5
  1809  001496                     l2808:
  1810                           
  1811                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  1812  001496  0EF8               	movlw	248
  1813  001498                     L5:
  1814  001498  265A               	addwf	printf@exp,f,c
  1815  00149A  0EFF               	movlw	255
  1816  00149C  225B               	addwfc	printf@exp+1,f,c
  1817  00149E  D000               	goto	l2810
  1818  0014A0                     l2810:
  1819                           
  1820                           ;doprnt.c: 1124: }
  1821                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  1822  0014A0  505A               	movf	printf@exp,w,c
  1823  0014A2  EC62  F00C         	call	_scale
  1824  0014A6  C024  F05C         	movff	?_scale,printf@tmpval
  1825  0014AA  C025  F05D         	movff	?_scale+1,printf@tmpval+1
  1826  0014AE  C026  F05E         	movff	?_scale+2,printf@tmpval+2
  1827                           
  1828                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  1829  0014B2  D017               	goto	l2814
  1830  0014B4  C060  F001         	movff	printf@fval,__div_to_l_@f1
  1831  0014B8  C061  F002         	movff	printf@fval+1,__div_to_l_@f1+1
  1832  0014BC  C062  F003         	movff	printf@fval+2,__div_to_l_@f1+2
  1833  0014C0  C05C  F004         	movff	printf@tmpval,__div_to_l_@f2
  1834  0014C4  C05D  F005         	movff	printf@tmpval+1,__div_to_l_@f2+1
  1835  0014C8  C05E  F006         	movff	printf@tmpval+2,__div_to_l_@f2+2
  1836  0014CC  EC11  F011         	call	__div_to_l_	;wreg free
  1837  0014D0  C001  F056         	movff	?__div_to_l_,printf@val
  1838  0014D4  C002  F057         	movff	?__div_to_l_+1,printf@val+1
  1839  0014D8  C003  F058         	movff	?__div_to_l_+2,printf@val+2
  1840  0014DC  C004  F059         	movff	?__div_to_l_+3,printf@val+3
  1841  0014E0  D017               	goto	l2816
  1842  0014E2                     l2814:
  1843  0014E2  C060  F001         	movff	printf@fval,__tdiv_to_l_@f1
  1844  0014E6  C061  F002         	movff	printf@fval+1,__tdiv_to_l_@f1+1
  1845  0014EA  C062  F003         	movff	printf@fval+2,__tdiv_to_l_@f1+2
  1846  0014EE  C05C  F004         	movff	printf@tmpval,__tdiv_to_l_@f2
  1847  0014F2  C05D  F005         	movff	printf@tmpval+1,__tdiv_to_l_@f2+1
  1848  0014F6  C05E  F006         	movff	printf@tmpval+2,__tdiv_to_l_@f2+2
  1849  0014FA  EC89  F010         	call	__tdiv_to_l_	;wreg free
  1850  0014FE  C001  F056         	movff	?__tdiv_to_l_,printf@val
  1851  001502  C002  F057         	movff	?__tdiv_to_l_+1,printf@val+1
  1852  001506  C003  F058         	movff	?__tdiv_to_l_+2,printf@val+2
  1853  00150A  C004  F059         	movff	?__tdiv_to_l_+3,printf@val+3
  1854  00150E  D000               	goto	l2816
  1855  001510                     l2816:
  1856                           
  1857                           ;doprnt.c: 1129: fval = 0.0;
  1858  001510  0E00               	movlw	0
  1859  001512  6E60               	movwf	printf@fval,c
  1860  001514  0E00               	movlw	0
  1861  001516  6E61               	movwf	printf@fval+1,c
  1862  001518  0E00               	movlw	0
  1863  00151A  6E62               	movwf	printf@fval+2,c
  1864                           
  1865                           ;doprnt.c: 1130: } else {
  1866  00151C  D033               	goto	l2822
  1867  00151E                     l2818:
  1868                           
  1869                           ;doprnt.c: 1131: val = (unsigned long)fval;
  1870  00151E  C060  F02B         	movff	printf@fval,___fttol@f1
  1871  001522  C061  F02C         	movff	printf@fval+1,___fttol@f1+1
  1872  001526  C062  F02D         	movff	printf@fval+2,___fttol@f1+2
  1873  00152A  EC12  F012         	call	___fttol	;wreg free
  1874  00152E  C02B  F056         	movff	?___fttol,printf@val
  1875  001532  C02C  F057         	movff	?___fttol+1,printf@val+1
  1876  001536  C02D  F058         	movff	?___fttol+2,printf@val+2
  1877  00153A  C02E  F059         	movff	?___fttol+3,printf@val+3
  1878                           
  1879                           ;doprnt.c: 1132: fval -= (double)val;
  1880  00153E  C060  F03A         	movff	printf@fval,___ftsub@f1
  1881  001542  C061  F03B         	movff	printf@fval+1,___ftsub@f1+1
  1882  001546  C062  F03C         	movff	printf@fval+2,___ftsub@f1+2
  1883  00154A  C056  F009         	movff	printf@val,___lltoft@c
  1884  00154E  C057  F00A         	movff	printf@val+1,___lltoft@c+1
  1885  001552  C058  F00B         	movff	printf@val+2,___lltoft@c+2
  1886  001556  C059  F00C         	movff	printf@val+3,___lltoft@c+3
  1887  00155A  EC31  F016         	call	___lltoft	;wreg free
  1888  00155E  C009  F03D         	movff	?___lltoft,___ftsub@f2
  1889  001562  C00A  F03E         	movff	?___lltoft+1,___ftsub@f2+1
  1890  001566  C00B  F03F         	movff	?___lltoft+2,___ftsub@f2+2
  1891  00156A  EC61  F016         	call	___ftsub	;wreg free
  1892  00156E  C03A  F060         	movff	?___ftsub,printf@fval
  1893  001572  C03B  F061         	movff	?___ftsub+1,printf@fval+1
  1894  001576  C03C  F062         	movff	?___ftsub+2,printf@fval+2
  1895                           
  1896                           ;doprnt.c: 1133: exp = 0;
  1897  00157A  0E00               	movlw	0
  1898  00157C  6E5B               	movwf	printf@exp+1,c
  1899  00157E  0E00               	movlw	0
  1900  001580  6E5A               	movwf	printf@exp,c
  1901  001582  D000               	goto	l2822
  1902  001584                     l2822:
  1903                           
  1904                           ;doprnt.c: 1134: }
  1905                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  1906  001584  0E01               	movlw	1
  1907  001586  6E65               	movwf	printf@c,c
  1908  001588                     l2824:
  1909  001588  0E0A               	movlw	10
  1910  00158A  1865               	xorwf	printf@c,w,c
  1911  00158C  B4D8               	btfsc	status,2,c
  1912  00158E  D01F               	goto	l2836
  1913  001590  D001               	goto	l2828
  1914  001592  D01D               	goto	l2836
  1915  001594                     l2828:
  1916                           
  1917                           ;doprnt.c: 1137: if(val < dpowers[c])
  1918  001594  5065               	movf	printf@c,w,c
  1919  001596  0D04               	mullw	4
  1920  001598  0E01               	movlw	low _dpowers
  1921  00159A  24F3               	addwf	prodl,w,c
  1922  00159C  6EF6               	movwf	tblptrl,c
  1923  00159E  0E10               	movlw	high _dpowers
  1924  0015A0  20F4               	addwfc	prodh,w,c
  1925  0015A2  6EF7               	movwf	tblptrh,c
  1926  0015A4                     	if	1	;There are 3 active tblptr bytes
  1927  0015A4  6AF8               	clrf	tblptru,c
  1928  0015A6  0E00               	movlw	low (__mediumconst shr (0+16))
  1929  0015A8  22F8               	addwfc	tblptru,f,c
  1930  0015AA                     	endif
  1931  0015AA  0009               	tblrd		*+
  1932  0015AC  50F5               	movf	tablat,w,c
  1933  0015AE  5C56               	subwf	printf@val,w,c
  1934  0015B0  0009               	tblrd		*+
  1935  0015B2  50F5               	movf	tablat,w,c
  1936  0015B4  5857               	subwfb	printf@val+1,w,c
  1937  0015B6  0009               	tblrd		*+
  1938  0015B8  50F5               	movf	tablat,w,c
  1939  0015BA  5858               	subwfb	printf@val+2,w,c
  1940  0015BC  0009               	tblrd		*+
  1941  0015BE  50F5               	movf	tablat,w,c
  1942  0015C0  5859               	subwfb	printf@val+3,w,c
  1943  0015C2  A0D8               	btfss	status,0,c
  1944  0015C4  D004               	goto	l2836
  1945  0015C6  D001               	goto	l2832
  1946                           
  1947                           ;doprnt.c: 1138: break;
  1948  0015C8  D002               	goto	l2836
  1949  0015CA                     l2832:
  1950  0015CA  2A65               	incf	printf@c,f,c
  1951  0015CC  D7DD               	goto	l2824
  1952  0015CE                     l2836:
  1953                           
  1954                           ;doprnt.c: 1175: {
  1955                           ;doprnt.c: 1188: if(flag & 0x03)
  1956  0015CE  0E03               	movlw	3
  1957  0015D0  1454               	andwf	printf@flag,w,c
  1958  0015D2  6E45               	movwf	??_printf& (0+255),c
  1959  0015D4  0E00               	movlw	0
  1960  0015D6  1455               	andwf	printf@flag+1,w,c
  1961  0015D8  6E46               	movwf	(??_printf+1)& (0+255),c
  1962  0015DA  5045               	movf	??_printf,w,c
  1963  0015DC  1046               	iorwf	??_printf+1,w,c
  1964  0015DE  B4D8               	btfsc	status,2,c
  1965  0015E0  D04C               	goto	l2846
  1966                           
  1967                           ;doprnt.c: 1190: (putch('-') );
  1968  0015E2  0E2D               	movlw	45
  1969  0015E4  ECA8  F017         	call	_putch
  1970                           
  1971                           ;doprnt.c: 1195: }
  1972                           ;doprnt.c: 1196: while(c--) {
  1973  0015E8  D048               	goto	l2846
  1974  0015EA                     l2840:
  1975                           
  1976                           ;doprnt.c: 1200: {
  1977                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  1978  0015EA  C056  F001         	movff	printf@val,___lldiv@dividend
  1979  0015EE  C057  F002         	movff	printf@val+1,___lldiv@dividend+1
  1980  0015F2  C058  F003         	movff	printf@val+2,___lldiv@dividend+2
  1981  0015F6  C059  F004         	movff	printf@val+3,___lldiv@dividend+3
  1982  0015FA  5065               	movf	printf@c,w,c
  1983  0015FC  0D04               	mullw	4
  1984  0015FE  0E01               	movlw	low _dpowers
  1985  001600  24F3               	addwf	prodl,w,c
  1986  001602  6EF6               	movwf	tblptrl,c
  1987  001604  0E10               	movlw	high _dpowers
  1988  001606  20F4               	addwfc	prodh,w,c
  1989  001608  6EF7               	movwf	tblptrh,c
  1990  00160A                     	if	1	;There are 3 active tblptr bytes
  1991  00160A  6AF8               	clrf	tblptru,c
  1992  00160C  0E00               	movlw	low (__mediumconst shr (0+16))
  1993  00160E  22F8               	addwfc	tblptru,f,c
  1994  001610                     	endif
  1995  001610  0009               	tblrd		*+
  1996  001612  CFF5 F005          	movff	tablat,___lldiv@divisor
  1997  001616  0009               	tblrd		*+
  1998  001618  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  1999  00161C  0009               	tblrd		*+
  2000  00161E  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  2001  001622  000A               	tblrd		*-
  2002  001624  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  2003  001628  EC3A  F015         	call	___lldiv	;wreg free
  2004  00162C  C001  F05C         	movff	?___lldiv,printf@tmpval
  2005  001630  C002  F05D         	movff	?___lldiv+1,printf@tmpval+1
  2006  001634  C003  F05E         	movff	?___lldiv+2,printf@tmpval+2
  2007  001638  C004  F05F         	movff	?___lldiv+3,printf@tmpval+3
  2008                           
  2009                           ;doprnt.c: 1202: tmpval.vd %= 10;
  2010  00163C  C05C  F001         	movff	printf@tmpval,___llmod@dividend
  2011  001640  C05D  F002         	movff	printf@tmpval+1,___llmod@dividend+1
  2012  001644  C05E  F003         	movff	printf@tmpval+2,___llmod@dividend+2
  2013  001648  C05F  F004         	movff	printf@tmpval+3,___llmod@dividend+3
  2014  00164C  0E0A               	movlw	10
  2015  00164E  6E05               	movwf	___llmod@divisor,c
  2016  001650  0E00               	movlw	0
  2017  001652  6E06               	movwf	___llmod@divisor+1,c
  2018  001654  0E00               	movlw	0
  2019  001656  6E07               	movwf	___llmod@divisor+2,c
  2020  001658  0E00               	movlw	0
  2021  00165A  6E08               	movwf	___llmod@divisor+3,c
  2022  00165C  ECC1  F015         	call	___llmod	;wreg free
  2023  001660  C001  F05C         	movff	?___llmod,printf@tmpval
  2024  001664  C002  F05D         	movff	?___llmod+1,printf@tmpval+1
  2025  001668  C003  F05E         	movff	?___llmod+2,printf@tmpval+2
  2026  00166C  C004  F05F         	movff	?___llmod+3,printf@tmpval+3
  2027                           
  2028                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
  2029  001670  505C               	movf	printf@tmpval,w,c
  2030  001672  0F30               	addlw	48
  2031  001674  ECA8  F017         	call	_putch
  2032  001678  D000               	goto	l2846
  2033  00167A                     l2846:
  2034  00167A  0665               	decf	printf@c,f,c
  2035  00167C  2865               	incf	printf@c,w,c
  2036  00167E  B4D8               	btfsc	status,2,c
  2037  001680  D009               	goto	l2852
  2038  001682  D7B3               	goto	l2840
  2039                           
  2040                           ;doprnt.c: 1204: }
  2041                           ;doprnt.c: 1206: }
  2042                           ;doprnt.c: 1207: while(exp > 0) {
  2043  001684  D007               	goto	l2852
  2044  001686                     l2848:
  2045                           
  2046                           ;doprnt.c: 1208: (putch('0') );
  2047  001686  0E30               	movlw	48
  2048  001688  ECA8  F017         	call	_putch
  2049                           
  2050                           ;doprnt.c: 1209: exp--;
  2051  00168C  065A               	decf	printf@exp,f,c
  2052  00168E  A0D8               	btfss	status,0,c
  2053  001690  065B               	decf	printf@exp+1,f,c
  2054  001692  D000               	goto	l2852
  2055  001694                     l2852:
  2056  001694  BE5B               	btfsc	printf@exp+1,7,c
  2057  001696  D005               	goto	l2854
  2058  001698  505B               	movf	printf@exp+1,w,c
  2059  00169A  E1F5               	bnz	l2848
  2060  00169C  045A               	decf	printf@exp,w,c
  2061  00169E  B0D8               	btfsc	status,0,c
  2062  0016A0  D7F2               	goto	l2848
  2063  0016A2                     l2854:
  2064                           
  2065                           ;doprnt.c: 1210: }
  2066                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2067  0016A2  BE64               	btfsc	printf@prec+1,7,c
  2068  0016A4  D009               	goto	l296
  2069  0016A6  5064               	movf	printf@prec+1,w,c
  2070  0016A8  E104               	bnz	u2970
  2071  0016AA  0E09               	movlw	9
  2072  0016AC  5C63               	subwf	printf@prec,w,c
  2073  0016AE  A0D8               	btfss	status,0,c
  2074  0016B0  D003               	goto	l296
  2075  0016B2                     u2970:
  2076                           
  2077                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  2078  0016B2  0E08               	movlw	8
  2079  0016B4  6E65               	movwf	printf@c,c
  2080  0016B6  D003               	goto	l2858
  2081  0016B8                     l296:
  2082                           
  2083                           ;doprnt.c: 1213: else
  2084                           ;doprnt.c: 1214: c = prec;
  2085  0016B8  C063  F065         	movff	printf@prec,printf@c
  2086  0016BC  D000               	goto	l2858
  2087  0016BE                     l2858:
  2088                           
  2089                           ;doprnt.c: 1215: prec -= c;
  2090  0016BE  5065               	movf	printf@c,w,c
  2091  0016C0  5E63               	subwf	printf@prec,f,c
  2092  0016C2  0E00               	movlw	0
  2093  0016C4  BE65               	btfsc	printf@c,7,c
  2094  0016C6  0EFF               	movlw	255
  2095  0016C8  5A64               	subwfb	printf@prec+1,f,c
  2096                           
  2097                           ;doprnt.c: 1219: if(c)
  2098  0016CA  5065               	movf	printf@c,w,c
  2099  0016CC  B4D8               	btfsc	status,2,c
  2100  0016CE  D004               	goto	l2864
  2101                           
  2102                           ;doprnt.c: 1221: (putch('.') );
  2103  0016D0  0E2E               	movlw	46
  2104  0016D2  ECA8  F017         	call	_putch
  2105  0016D6  D000               	goto	l2864
  2106  0016D8                     l2864:
  2107                           
  2108                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  2109  0016D8  5065               	movf	printf@c,w,c
  2110  0016DA  EC62  F00C         	call	_scale
  2111  0016DE  C024  F04B         	movff	?_scale,_printf$1826
  2112  0016E2  C025  F04C         	movff	?_scale+1,_printf$1826+1
  2113  0016E6  C026  F04D         	movff	?_scale+2,_printf$1826+2
  2114                           
  2115                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  2116  0016EA  C060  F018         	movff	printf@fval,___ftmul@f2
  2117  0016EE  C061  F019         	movff	printf@fval+1,___ftmul@f2+1
  2118  0016F2  C062  F01A         	movff	printf@fval+2,___ftmul@f2+2
  2119  0016F6  C04B  F015         	movff	_printf$1826,___ftmul@f1
  2120  0016FA  C04C  F016         	movff	_printf$1826+1,___ftmul@f1+1
  2121  0016FE  C04D  F017         	movff	_printf$1826+2,___ftmul@f1+2
  2122  001702  EC96  F011         	call	___ftmul	;wreg free
  2123  001706  C015  F02B         	movff	?___ftmul,___fttol@f1
  2124  00170A  C016  F02C         	movff	?___ftmul+1,___fttol@f1+1
  2125  00170E  C017  F02D         	movff	?___ftmul+2,___fttol@f1+2
  2126  001712  EC12  F012         	call	___fttol	;wreg free
  2127  001716  C02B  F056         	movff	?___fttol,printf@val
  2128  00171A  C02C  F057         	movff	?___fttol+1,printf@val+1
  2129  00171E  C02D  F058         	movff	?___fttol+2,printf@val+2
  2130  001722  C02E  F059         	movff	?___fttol+3,printf@val+3
  2131                           
  2132                           ;doprnt.c: 1228: while(c--) {
  2133  001726  D071               	goto	l2874
  2134  001728                     l2868:
  2135                           
  2136                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  2137  001728  C056  F001         	movff	printf@val,___lldiv@dividend
  2138  00172C  C057  F002         	movff	printf@val+1,___lldiv@dividend+1
  2139  001730  C058  F003         	movff	printf@val+2,___lldiv@dividend+2
  2140  001734  C059  F004         	movff	printf@val+3,___lldiv@dividend+3
  2141  001738  5065               	movf	printf@c,w,c
  2142  00173A  0D04               	mullw	4
  2143  00173C  0E01               	movlw	low _dpowers
  2144  00173E  24F3               	addwf	prodl,w,c
  2145  001740  6EF6               	movwf	tblptrl,c
  2146  001742  0E10               	movlw	high _dpowers
  2147  001744  20F4               	addwfc	prodh,w,c
  2148  001746  6EF7               	movwf	tblptrh,c
  2149  001748                     	if	1	;There are 3 active tblptr bytes
  2150  001748  6AF8               	clrf	tblptru,c
  2151  00174A  0E00               	movlw	low (__mediumconst shr (0+16))
  2152  00174C  22F8               	addwfc	tblptru,f,c
  2153  00174E                     	endif
  2154  00174E  0009               	tblrd		*+
  2155  001750  CFF5 F005          	movff	tablat,___lldiv@divisor
  2156  001754  0009               	tblrd		*+
  2157  001756  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  2158  00175A  0009               	tblrd		*+
  2159  00175C  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  2160  001760  000A               	tblrd		*-
  2161  001762  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  2162  001766  EC3A  F015         	call	___lldiv	;wreg free
  2163  00176A  C001  F05C         	movff	?___lldiv,printf@tmpval
  2164  00176E  C002  F05D         	movff	?___lldiv+1,printf@tmpval+1
  2165  001772  C003  F05E         	movff	?___lldiv+2,printf@tmpval+2
  2166  001776  C004  F05F         	movff	?___lldiv+3,printf@tmpval+3
  2167                           
  2168                           ;doprnt.c: 1230: tmpval.vd %= 10;
  2169  00177A  C05C  F001         	movff	printf@tmpval,___llmod@dividend
  2170  00177E  C05D  F002         	movff	printf@tmpval+1,___llmod@dividend+1
  2171  001782  C05E  F003         	movff	printf@tmpval+2,___llmod@dividend+2
  2172  001786  C05F  F004         	movff	printf@tmpval+3,___llmod@dividend+3
  2173  00178A  0E0A               	movlw	10
  2174  00178C  6E05               	movwf	___llmod@divisor,c
  2175  00178E  0E00               	movlw	0
  2176  001790  6E06               	movwf	___llmod@divisor+1,c
  2177  001792  0E00               	movlw	0
  2178  001794  6E07               	movwf	___llmod@divisor+2,c
  2179  001796  0E00               	movlw	0
  2180  001798  6E08               	movwf	___llmod@divisor+3,c
  2181  00179A  ECC1  F015         	call	___llmod	;wreg free
  2182  00179E  C001  F05C         	movff	?___llmod,printf@tmpval
  2183  0017A2  C002  F05D         	movff	?___llmod+1,printf@tmpval+1
  2184  0017A6  C003  F05E         	movff	?___llmod+2,printf@tmpval+2
  2185  0017AA  C004  F05F         	movff	?___llmod+3,printf@tmpval+3
  2186                           
  2187                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
  2188  0017AE  505C               	movf	printf@tmpval,w,c
  2189  0017B0  0F30               	addlw	48
  2190  0017B2  ECA8  F017         	call	_putch
  2191                           
  2192                           ;doprnt.c: 1232: val %= dpowers[c];
  2193  0017B6  C056  F001         	movff	printf@val,___llmod@dividend
  2194  0017BA  C057  F002         	movff	printf@val+1,___llmod@dividend+1
  2195  0017BE  C058  F003         	movff	printf@val+2,___llmod@dividend+2
  2196  0017C2  C059  F004         	movff	printf@val+3,___llmod@dividend+3
  2197  0017C6  5065               	movf	printf@c,w,c
  2198  0017C8  0D04               	mullw	4
  2199  0017CA  0E01               	movlw	low _dpowers
  2200  0017CC  24F3               	addwf	prodl,w,c
  2201  0017CE  6EF6               	movwf	tblptrl,c
  2202  0017D0  0E10               	movlw	high _dpowers
  2203  0017D2  20F4               	addwfc	prodh,w,c
  2204  0017D4  6EF7               	movwf	tblptrh,c
  2205  0017D6                     	if	1	;There are 3 active tblptr bytes
  2206  0017D6  6AF8               	clrf	tblptru,c
  2207  0017D8  0E00               	movlw	low (__mediumconst shr (0+16))
  2208  0017DA  22F8               	addwfc	tblptru,f,c
  2209  0017DC                     	endif
  2210  0017DC  0009               	tblrd		*+
  2211  0017DE  CFF5 F005          	movff	tablat,___llmod@divisor
  2212  0017E2  0009               	tblrd		*+
  2213  0017E4  CFF5 F006          	movff	tablat,___llmod@divisor+1
  2214  0017E8  0009               	tblrd		*+
  2215  0017EA  CFF5 F007          	movff	tablat,___llmod@divisor+2
  2216  0017EE  000A               	tblrd		*-
  2217  0017F0  CFF5 F008          	movff	tablat,___llmod@divisor+3
  2218  0017F4  ECC1  F015         	call	___llmod	;wreg free
  2219  0017F8  C001  F056         	movff	?___llmod,printf@val
  2220  0017FC  C002  F057         	movff	?___llmod+1,printf@val+1
  2221  001800  C003  F058         	movff	?___llmod+2,printf@val+2
  2222  001804  C004  F059         	movff	?___llmod+3,printf@val+3
  2223  001808  D000               	goto	l2874
  2224  00180A                     l2874:
  2225  00180A  0665               	decf	printf@c,f,c
  2226  00180C  2865               	incf	printf@c,w,c
  2227  00180E  B4D8               	btfsc	status,2,c
  2228  001810  D009               	goto	l2880
  2229  001812  D78A               	goto	l2868
  2230                           
  2231                           ;doprnt.c: 1233: }
  2232                           ;doprnt.c: 1235: while(prec) {
  2233  001814  D007               	goto	l2880
  2234  001816                     l2876:
  2235                           
  2236                           ;doprnt.c: 1236: (putch('0') );
  2237  001816  0E30               	movlw	48
  2238  001818  ECA8  F017         	call	_putch
  2239                           
  2240                           ;doprnt.c: 1237: prec--;
  2241  00181C  0663               	decf	printf@prec,f,c
  2242  00181E  A0D8               	btfss	status,0,c
  2243  001820  0664               	decf	printf@prec+1,f,c
  2244  001822  D000               	goto	l2880
  2245  001824                     l2880:
  2246  001824  5063               	movf	printf@prec,w,c
  2247  001826  1064               	iorwf	printf@prec+1,w,c
  2248  001828  B4D8               	btfsc	status,2,c
  2249  00182A  D03C               	goto	l2900
  2250  00182C  D7F4               	goto	l2876
  2251                           
  2252                           ;doprnt.c: 1238: }
  2253                           ;doprnt.c: 1245: continue;
  2254  00182E  D03A               	goto	l2900
  2255  001830                     l2882:
  2256                           
  2257                           ;doprnt.c: 1246: }
  2258                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  2259  001830  5063               	movf	printf@prec,w,c
  2260  001832  1064               	iorwf	printf@prec+1,w,c
  2261  001834  A4D8               	btfss	status,2,c
  2262  001836  D009               	goto	l2888
  2263  001838  5056               	movf	printf@val,w,c
  2264  00183A  1057               	iorwf	printf@val+1,w,c
  2265  00183C  1058               	iorwf	printf@val+2,w,c
  2266  00183E  1059               	iorwf	printf@val+3,w,c
  2267  001840  A4D8               	btfss	status,2,c
  2268  001842  D003               	goto	l2888
  2269                           
  2270                           ;doprnt.c: 1291: prec++;
  2271  001844  4A63               	infsnz	printf@prec,f,c
  2272  001846  2A64               	incf	printf@prec+1,f,c
  2273  001848  D000               	goto	l2888
  2274  00184A                     l2888:
  2275                           
  2276                           ;doprnt.c: 1339: if(c < prec)
  2277  00184A  0E80               	movlw	128
  2278  00184C  BE65               	btfsc	printf@c,7,c
  2279  00184E  0E7F               	movlw	127
  2280  001850  6E45               	movwf	??_printf& (0+255),c
  2281  001852  5063               	movf	printf@prec,w,c
  2282  001854  5C65               	subwf	printf@c,w,c
  2283  001856  5064               	movf	printf@prec+1,w,c
  2284  001858  0A80               	xorlw	128
  2285  00185A  5845               	subwfb	??_printf& (0+255),w,c
  2286  00185C  B0D8               	btfsc	status,0,c
  2287  00185E  D003               	goto	l2892
  2288                           
  2289                           ;doprnt.c: 1340: c = prec;
  2290  001860  C063  F065         	movff	printf@prec,printf@c
  2291  001864  D011               	goto	l2896
  2292  001866                     l2892:
  2293                           
  2294                           ;doprnt.c: 1341: else if(prec < c)
  2295  001866  5064               	movf	printf@prec+1,w,c
  2296  001868  0A80               	xorlw	128
  2297  00186A  6E45               	movwf	??_printf& (0+255),c
  2298  00186C  5065               	movf	printf@c,w,c
  2299  00186E  5C63               	subwf	printf@prec,w,c
  2300  001870  0E80               	movlw	128
  2301  001872  BE65               	btfsc	printf@c,7,c
  2302  001874  0E7F               	movlw	127
  2303  001876  5845               	subwfb	??_printf& (0+255),w,c
  2304  001878  B0D8               	btfsc	status,0,c
  2305  00187A  D006               	goto	l2896
  2306                           
  2307                           ;doprnt.c: 1342: prec = c;
  2308  00187C  5065               	movf	printf@c,w,c
  2309  00187E  6E63               	movwf	printf@prec,c
  2310  001880  6A64               	clrf	printf@prec+1,c
  2311  001882  BE63               	btfsc	printf@prec,7,c
  2312  001884  0664               	decf	printf@prec+1,f,c
  2313  001886  D000               	goto	l2896
  2314  001888                     l2896:
  2315                           
  2316                           ;doprnt.c: 1422: {
  2317                           ;doprnt.c: 1438: if(flag & 0x03)
  2318  001888  0E03               	movlw	3
  2319  00188A  1454               	andwf	printf@flag,w,c
  2320  00188C  6E45               	movwf	??_printf& (0+255),c
  2321  00188E  0E00               	movlw	0
  2322  001890  1455               	andwf	printf@flag+1,w,c
  2323  001892  6E46               	movwf	(??_printf+1)& (0+255),c
  2324  001894  5045               	movf	??_printf,w,c
  2325  001896  1046               	iorwf	??_printf+1,w,c
  2326  001898  B4D8               	btfsc	status,2,c
  2327  00189A  D004               	goto	l2900
  2328                           
  2329                           ;doprnt.c: 1439: (putch('-') );
  2330  00189C  0E2D               	movlw	45
  2331  00189E  ECA8  F017         	call	_putch
  2332  0018A2  D000               	goto	l2900
  2333  0018A4                     l2900:
  2334  0018A4  C040  FFF6         	movff	printf@f,tblptrl
  2335  0018A8  C041  FFF7         	movff	printf@f+1,tblptrh
  2336  0018AC  4A40               	infsnz	printf@f,f,c
  2337  0018AE  2A41               	incf	printf@f+1,f,c
  2338  0018B0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2339  0018B0  6AF8               	clrf	tblptru,c
  2340  0018B2                     	endif
  2341  0018B2                     	if	0	;tblptru may be non-zero
  2342  0018B2                     	endif
  2343  0018B2  0008               	tblrd		*
  2344  0018B4  CFF5 F065          	movff	tablat,printf@c
  2345  0018B8  5065               	movf	printf@c,w,c
  2346  0018BA  B4D8               	btfsc	status,2,c
  2347  0018BC  D002               	goto	l311
  2348  0018BE  D422               	goto	l2694
  2349  0018C0  D000               	goto	l311
  2350  0018C2                     l311:
  2351  0018C2  0012               	return		;funcret
  2352  0018C4                     __end_of_printf:
  2353                           	opt stack 0
  2354                           tblptru	equ	0xFF8
  2355                           tblptrh	equ	0xFF7
  2356                           tblptrl	equ	0xFF6
  2357                           tablat	equ	0xFF5
  2358                           prodh	equ	0xFF4
  2359                           prodl	equ	0xFF3
  2360                           wreg	equ	0xFE8
  2361                           postinc2	equ	0xFDE
  2362                           postdec2	equ	0xFDD
  2363                           fsr2h	equ	0xFDA
  2364                           fsr2l	equ	0xFD9
  2365                           status	equ	0xFD8
  2366                           
  2367 ;; *************** function _scale *****************
  2368 ;; Defined at:
  2369 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  2370 ;; Parameters:    Size  Location     Type
  2371 ;;  scl             1    wreg     char 
  2372 ;; Auto vars:     Size  Location     Type
  2373 ;;  scl             1   41[COMRAM] char 
  2374 ;; Return value:  Size  Location     Type
  2375 ;;                  3   35[COMRAM] char 
  2376 ;; Registers used:
  2377 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2378 ;; Tracked objects:
  2379 ;;		On entry : 0/0
  2380 ;;		On exit  : 0/0
  2381 ;;		Unchanged: 0/0
  2382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2383 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2384 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2386 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2387 ;;Total ram usage:        7 bytes
  2388 ;; Hardware stack levels used:    1
  2389 ;; Hardware stack levels required when called:    2
  2390 ;; This function calls:
  2391 ;;		___awdiv
  2392 ;;		___awmod
  2393 ;;		___ftmul
  2394 ;;		___wmul
  2395 ;; This function is called by:
  2396 ;;		_printf
  2397 ;; This function uses a non-reentrant model
  2398 ;;
  2399                           
  2400                           	psect	text5
  2401  0018C4                     __ptext5:
  2402                           	opt stack 0
  2403  0018C4                     _scale:
  2404                           	opt stack 26
  2405                           
  2406                           ;incstack = 0
  2407                           ;scale@scl stored from wreg
  2408  0018C4  6E2A               	movwf	scale@scl,c
  2409                           
  2410                           ;doprnt.c: 428: if(scl < 0) {
  2411  0018C6  AE2A               	btfss	scale@scl,7,c
  2412  0018C8  D0FE               	goto	l2338
  2413                           
  2414                           ;doprnt.c: 429: scl = -scl;
  2415  0018CA  6C2A               	negf	scale@scl,c
  2416                           
  2417                           ;doprnt.c: 430: if(scl>=110)
  2418  0018CC  502A               	movf	scale@scl,w,c
  2419  0018CE  0A80               	xorlw	128
  2420  0018D0  0F12               	addlw	-238
  2421  0018D2  A0D8               	btfss	status,0,c
  2422  0018D4  D096               	goto	l2328
  2423                           
  2424                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2425  0018D6  0E00               	movlw	0
  2426  0018D8  6E12               	movwf	___wmul@multiplicand+1,c
  2427  0018DA  0E03               	movlw	3
  2428  0018DC  6E11               	movwf	___wmul@multiplicand,c
  2429  0018DE  0E00               	movlw	0
  2430  0018E0  6E0A               	movwf	___awdiv@divisor+1,c
  2431  0018E2  0E0A               	movlw	10
  2432  0018E4  6E09               	movwf	___awdiv@divisor,c
  2433  0018E6  0E00               	movlw	0
  2434  0018E8  6E04               	movwf	___awmod@divisor+1,c
  2435  0018EA  0E64               	movlw	100
  2436  0018EC  6E03               	movwf	___awmod@divisor,c
  2437  0018EE  502A               	movf	scale@scl,w,c
  2438  0018F0  6E01               	movwf	___awmod@dividend,c
  2439  0018F2  6A02               	clrf	___awmod@dividend+1,c
  2440  0018F4  BE01               	btfsc	___awmod@dividend,7,c
  2441  0018F6  0602               	decf	___awmod@dividend+1,f,c
  2442  0018F8  EC80  F015         	call	___awmod	;wreg free
  2443  0018FC  C001  F007         	movff	?___awmod,___awdiv@dividend
  2444  001900  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2445  001904  EC5D  F014         	call	___awdiv	;wreg free
  2446  001908  0E09               	movlw	9
  2447  00190A  2407               	addwf	?___awdiv,w,c
  2448  00190C  6E0F               	movwf	___wmul@multiplier,c
  2449  00190E  0E00               	movlw	0
  2450  001910  2008               	addwfc	?___awdiv+1,w,c
  2451  001912  6E10               	movwf	___wmul@multiplier+1,c
  2452  001914  ECEF  F016         	call	___wmul	;wreg free
  2453  001918  0E29               	movlw	low __npowers_
  2454  00191A  240F               	addwf	?___wmul,w,c
  2455  00191C  6EF6               	movwf	tblptrl,c
  2456  00191E  0E10               	movlw	high __npowers_
  2457  001920  2010               	addwfc	?___wmul+1,w,c
  2458  001922  6EF7               	movwf	tblptrh,c
  2459  001924                     	if	1	;There are 3 active tblptr bytes
  2460  001924  6AF8               	clrf	tblptru,c
  2461  001926  0E00               	movlw	low (__mediumconst shr (0+16))
  2462  001928  22F8               	addwfc	tblptru,f,c
  2463  00192A                     	endif
  2464  00192A  0009               	tblrd		*+
  2465  00192C  CFF5 F018          	movff	tablat,___ftmul@f2
  2466  001930  0009               	tblrd		*+
  2467  001932  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2468  001936  000A               	tblrd		*-
  2469  001938  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2470  00193C  0E00               	movlw	0
  2471  00193E  6E0A               	movwf	___awdiv@divisor+1,c
  2472  001940  0E64               	movlw	100
  2473  001942  6E09               	movwf	___awdiv@divisor,c
  2474  001944  502A               	movf	scale@scl,w,c
  2475  001946  6E07               	movwf	___awdiv@dividend,c
  2476  001948  6A08               	clrf	___awdiv@dividend+1,c
  2477  00194A  BE07               	btfsc	___awdiv@dividend,7,c
  2478  00194C  0608               	decf	___awdiv@dividend+1,f,c
  2479  00194E  EC5D  F014         	call	___awdiv	;wreg free
  2480  001952  0E12               	movlw	18
  2481  001954  2407               	addwf	?___awdiv,w,c
  2482  001956  6E0F               	movwf	___wmul@multiplier,c
  2483  001958  0E00               	movlw	0
  2484  00195A  2008               	addwfc	?___awdiv+1,w,c
  2485  00195C  6E10               	movwf	___wmul@multiplier+1,c
  2486  00195E  0E00               	movlw	0
  2487  001960  6E12               	movwf	___wmul@multiplicand+1,c
  2488  001962  0E03               	movlw	3
  2489  001964  6E11               	movwf	___wmul@multiplicand,c
  2490  001966  ECEF  F016         	call	___wmul	;wreg free
  2491  00196A  0E29               	movlw	low __npowers_
  2492  00196C  240F               	addwf	?___wmul,w,c
  2493  00196E  6EF6               	movwf	tblptrl,c
  2494  001970  0E10               	movlw	high __npowers_
  2495  001972  2010               	addwfc	?___wmul+1,w,c
  2496  001974  6EF7               	movwf	tblptrh,c
  2497  001976                     	if	1	;There are 3 active tblptr bytes
  2498  001976  6AF8               	clrf	tblptru,c
  2499  001978  0E00               	movlw	low (__mediumconst shr (0+16))
  2500  00197A  22F8               	addwfc	tblptru,f,c
  2501  00197C                     	endif
  2502  00197C  0009               	tblrd		*+
  2503  00197E  CFF5 F015          	movff	tablat,___ftmul@f1
  2504  001982  0009               	tblrd		*+
  2505  001984  CFF5 F016          	movff	tablat,___ftmul@f1+1
  2506  001988  000A               	tblrd		*-
  2507  00198A  CFF5 F017          	movff	tablat,___ftmul@f1+2
  2508  00198E  EC96  F011         	call	___ftmul	;wreg free
  2509  001992  C015  F027         	movff	?___ftmul,_scale$1825
  2510  001996  C016  F028         	movff	?___ftmul+1,_scale$1825+1
  2511  00199A  C017  F029         	movff	?___ftmul+2,_scale$1825+2
  2512                           
  2513                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2514  00199E  C027  F015         	movff	_scale$1825,___ftmul@f1
  2515  0019A2  C028  F016         	movff	_scale$1825+1,___ftmul@f1+1
  2516  0019A6  C029  F017         	movff	_scale$1825+2,___ftmul@f1+2
  2517  0019AA  0E00               	movlw	0
  2518  0019AC  6E12               	movwf	___wmul@multiplicand+1,c
  2519  0019AE  0E03               	movlw	3
  2520  0019B0  6E11               	movwf	___wmul@multiplicand,c
  2521  0019B2  0E00               	movlw	0
  2522  0019B4  6E04               	movwf	___awmod@divisor+1,c
  2523  0019B6  0E0A               	movlw	10
  2524  0019B8  6E03               	movwf	___awmod@divisor,c
  2525  0019BA  502A               	movf	scale@scl,w,c
  2526  0019BC  6E01               	movwf	___awmod@dividend,c
  2527  0019BE  6A02               	clrf	___awmod@dividend+1,c
  2528  0019C0  BE01               	btfsc	___awmod@dividend,7,c
  2529  0019C2  0602               	decf	___awmod@dividend+1,f,c
  2530  0019C4  EC80  F015         	call	___awmod	;wreg free
  2531  0019C8  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2532  0019CC  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2533  0019D0  ECEF  F016         	call	___wmul	;wreg free
  2534  0019D4  0E29               	movlw	low __npowers_
  2535  0019D6  240F               	addwf	?___wmul,w,c
  2536  0019D8  6EF6               	movwf	tblptrl,c
  2537  0019DA  0E10               	movlw	high __npowers_
  2538  0019DC  2010               	addwfc	?___wmul+1,w,c
  2539  0019DE  6EF7               	movwf	tblptrh,c
  2540  0019E0                     	if	1	;There are 3 active tblptr bytes
  2541  0019E0  6AF8               	clrf	tblptru,c
  2542  0019E2  0E00               	movlw	low (__mediumconst shr (0+16))
  2543  0019E4  22F8               	addwfc	tblptru,f,c
  2544  0019E6                     	endif
  2545  0019E6  0009               	tblrd		*+
  2546  0019E8  CFF5 F018          	movff	tablat,___ftmul@f2
  2547  0019EC  0009               	tblrd		*+
  2548  0019EE  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2549  0019F2  000A               	tblrd		*-
  2550  0019F4  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2551  0019F8  EC96  F011         	call	___ftmul	;wreg free
  2552  0019FC  D156               	goto	L9
  2553  0019FE  D172               	goto	l236
  2554  001A00  D05A               	goto	l2334
  2555  001A02                     l2328:
  2556                           
  2557                           ;doprnt.c: 432: else if(scl > 10)
  2558  001A02  502A               	movf	scale@scl,w,c
  2559  001A04  0A80               	xorlw	128
  2560  001A06  0F75               	addlw	-139
  2561  001A08  A0D8               	btfss	status,0,c
  2562  001A0A  D055               	goto	l2334
  2563                           
  2564                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  2565  001A0C  0E00               	movlw	0
  2566  001A0E  6E0A               	movwf	___awdiv@divisor+1,c
  2567  001A10  0E0A               	movlw	10
  2568  001A12  6E09               	movwf	___awdiv@divisor,c
  2569  001A14  502A               	movf	scale@scl,w,c
  2570  001A16  6E07               	movwf	___awdiv@dividend,c
  2571  001A18  6A08               	clrf	___awdiv@dividend+1,c
  2572  001A1A  BE07               	btfsc	___awdiv@dividend,7,c
  2573  001A1C  0608               	decf	___awdiv@dividend+1,f,c
  2574  001A1E  EC5D  F014         	call	___awdiv	;wreg free
  2575  001A22  0E09               	movlw	9
  2576  001A24  2407               	addwf	?___awdiv,w,c
  2577  001A26  6E0F               	movwf	___wmul@multiplier,c
  2578  001A28  0E00               	movlw	0
  2579  001A2A  2008               	addwfc	?___awdiv+1,w,c
  2580  001A2C  6E10               	movwf	___wmul@multiplier+1,c
  2581  001A2E  0E00               	movlw	0
  2582  001A30  6E12               	movwf	___wmul@multiplicand+1,c
  2583  001A32  0E03               	movlw	3
  2584  001A34  6E11               	movwf	___wmul@multiplicand,c
  2585  001A36  ECEF  F016         	call	___wmul	;wreg free
  2586  001A3A  0E29               	movlw	low __npowers_
  2587  001A3C  240F               	addwf	?___wmul,w,c
  2588  001A3E  6EF6               	movwf	tblptrl,c
  2589  001A40  0E10               	movlw	high __npowers_
  2590  001A42  2010               	addwfc	?___wmul+1,w,c
  2591  001A44  6EF7               	movwf	tblptrh,c
  2592  001A46                     	if	1	;There are 3 active tblptr bytes
  2593  001A46  6AF8               	clrf	tblptru,c
  2594  001A48  0E00               	movlw	low (__mediumconst shr (0+16))
  2595  001A4A  22F8               	addwfc	tblptru,f,c
  2596  001A4C                     	endif
  2597  001A4C  0009               	tblrd		*+
  2598  001A4E  CFF5 F015          	movff	tablat,___ftmul@f1
  2599  001A52  0009               	tblrd		*+
  2600  001A54  CFF5 F016          	movff	tablat,___ftmul@f1+1
  2601  001A58  000A               	tblrd		*-
  2602  001A5A  CFF5 F017          	movff	tablat,___ftmul@f1+2
  2603  001A5E  0E00               	movlw	0
  2604  001A60  6E12               	movwf	___wmul@multiplicand+1,c
  2605  001A62  0E03               	movlw	3
  2606  001A64  6E11               	movwf	___wmul@multiplicand,c
  2607  001A66  0E00               	movlw	0
  2608  001A68  6E04               	movwf	___awmod@divisor+1,c
  2609  001A6A  0E0A               	movlw	10
  2610  001A6C  6E03               	movwf	___awmod@divisor,c
  2611  001A6E  502A               	movf	scale@scl,w,c
  2612  001A70  6E01               	movwf	___awmod@dividend,c
  2613  001A72  6A02               	clrf	___awmod@dividend+1,c
  2614  001A74  BE01               	btfsc	___awmod@dividend,7,c
  2615  001A76  0602               	decf	___awmod@dividend+1,f,c
  2616  001A78  EC80  F015         	call	___awmod	;wreg free
  2617  001A7C  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2618  001A80  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2619  001A84  ECEF  F016         	call	___wmul	;wreg free
  2620  001A88  0E29               	movlw	low __npowers_
  2621  001A8A  240F               	addwf	?___wmul,w,c
  2622  001A8C  6EF6               	movwf	tblptrl,c
  2623  001A8E  0E10               	movlw	high __npowers_
  2624  001A90  2010               	addwfc	?___wmul+1,w,c
  2625  001A92  6EF7               	movwf	tblptrh,c
  2626  001A94                     	if	1	;There are 3 active tblptr bytes
  2627  001A94  6AF8               	clrf	tblptru,c
  2628  001A96  0E00               	movlw	low (__mediumconst shr (0+16))
  2629  001A98  22F8               	addwfc	tblptru,f,c
  2630  001A9A                     	endif
  2631  001A9A  0009               	tblrd		*+
  2632  001A9C  CFF5 F018          	movff	tablat,___ftmul@f2
  2633  001AA0  0009               	tblrd		*+
  2634  001AA2  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2635  001AA6  000A               	tblrd		*-
  2636  001AA8  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2637  001AAC  EC96  F011         	call	___ftmul	;wreg free
  2638  001AB0  D0FC               	goto	L9
  2639  001AB2  D118               	goto	l236
  2640  001AB4  D000               	goto	l2334
  2641  001AB6                     l2334:
  2642                           
  2643                           ;doprnt.c: 434: return _npowers_[scl];
  2644  001AB6  502A               	movf	scale@scl,w,c
  2645  001AB8  0D03               	mullw	3
  2646  001ABA  0E29               	movlw	low __npowers_
  2647  001ABC  24F3               	addwf	prodl,w,c
  2648  001ABE  6EF6               	movwf	tblptrl,c
  2649  001AC0  0E10               	movlw	high __npowers_
  2650  001AC2  D101               	goto	L8
  2651  001AC4  D10F               	goto	l236
  2652  001AC6                     l2338:
  2653                           
  2654                           ;doprnt.c: 435: }
  2655                           ;doprnt.c: 436: if(scl>=110)
  2656  001AC6  502A               	movf	scale@scl,w,c
  2657  001AC8  0A80               	xorlw	128
  2658  001ACA  0F12               	addlw	-238
  2659  001ACC  A0D8               	btfss	status,0,c
  2660  001ACE  D096               	goto	l2346
  2661                           
  2662                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2663  001AD0  0E00               	movlw	0
  2664  001AD2  6E12               	movwf	___wmul@multiplicand+1,c
  2665  001AD4  0E03               	movlw	3
  2666  001AD6  6E11               	movwf	___wmul@multiplicand,c
  2667  001AD8  0E00               	movlw	0
  2668  001ADA  6E0A               	movwf	___awdiv@divisor+1,c
  2669  001ADC  0E0A               	movlw	10
  2670  001ADE  6E09               	movwf	___awdiv@divisor,c
  2671  001AE0  0E00               	movlw	0
  2672  001AE2  6E04               	movwf	___awmod@divisor+1,c
  2673  001AE4  0E64               	movlw	100
  2674  001AE6  6E03               	movwf	___awmod@divisor,c
  2675  001AE8  502A               	movf	scale@scl,w,c
  2676  001AEA  6E01               	movwf	___awmod@dividend,c
  2677  001AEC  6A02               	clrf	___awmod@dividend+1,c
  2678  001AEE  BE01               	btfsc	___awmod@dividend,7,c
  2679  001AF0  0602               	decf	___awmod@dividend+1,f,c
  2680  001AF2  EC80  F015         	call	___awmod	;wreg free
  2681  001AF6  C001  F007         	movff	?___awmod,___awdiv@dividend
  2682  001AFA  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2683  001AFE  EC5D  F014         	call	___awdiv	;wreg free
  2684  001B02  0E09               	movlw	9
  2685  001B04  2407               	addwf	?___awdiv,w,c
  2686  001B06  6E0F               	movwf	___wmul@multiplier,c
  2687  001B08  0E00               	movlw	0
  2688  001B0A  2008               	addwfc	?___awdiv+1,w,c
  2689  001B0C  6E10               	movwf	___wmul@multiplier+1,c
  2690  001B0E  ECEF  F016         	call	___wmul	;wreg free
  2691  001B12  0E50               	movlw	low __powers_
  2692  001B14  240F               	addwf	?___wmul,w,c
  2693  001B16  6EF6               	movwf	tblptrl,c
  2694  001B18  0E10               	movlw	high __powers_
  2695  001B1A  2010               	addwfc	?___wmul+1,w,c
  2696  001B1C  6EF7               	movwf	tblptrh,c
  2697  001B1E                     	if	1	;There are 3 active tblptr bytes
  2698  001B1E  6AF8               	clrf	tblptru,c
  2699  001B20  0E00               	movlw	low (__mediumconst shr (0+16))
  2700  001B22  22F8               	addwfc	tblptru,f,c
  2701  001B24                     	endif
  2702  001B24  0009               	tblrd		*+
  2703  001B26  CFF5 F018          	movff	tablat,___ftmul@f2
  2704  001B2A  0009               	tblrd		*+
  2705  001B2C  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2706  001B30  000A               	tblrd		*-
  2707  001B32  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2708  001B36  0E00               	movlw	0
  2709  001B38  6E0A               	movwf	___awdiv@divisor+1,c
  2710  001B3A  0E64               	movlw	100
  2711  001B3C  6E09               	movwf	___awdiv@divisor,c
  2712  001B3E  502A               	movf	scale@scl,w,c
  2713  001B40  6E07               	movwf	___awdiv@dividend,c
  2714  001B42  6A08               	clrf	___awdiv@dividend+1,c
  2715  001B44  BE07               	btfsc	___awdiv@dividend,7,c
  2716  001B46  0608               	decf	___awdiv@dividend+1,f,c
  2717  001B48  EC5D  F014         	call	___awdiv	;wreg free
  2718  001B4C  0E12               	movlw	18
  2719  001B4E  2407               	addwf	?___awdiv,w,c
  2720  001B50  6E0F               	movwf	___wmul@multiplier,c
  2721  001B52  0E00               	movlw	0
  2722  001B54  2008               	addwfc	?___awdiv+1,w,c
  2723  001B56  6E10               	movwf	___wmul@multiplier+1,c
  2724  001B58  0E00               	movlw	0
  2725  001B5A  6E12               	movwf	___wmul@multiplicand+1,c
  2726  001B5C  0E03               	movlw	3
  2727  001B5E  6E11               	movwf	___wmul@multiplicand,c
  2728  001B60  ECEF  F016         	call	___wmul	;wreg free
  2729  001B64  0E50               	movlw	low __powers_
  2730  001B66  240F               	addwf	?___wmul,w,c
  2731  001B68  6EF6               	movwf	tblptrl,c
  2732  001B6A  0E10               	movlw	high __powers_
  2733  001B6C  2010               	addwfc	?___wmul+1,w,c
  2734  001B6E  6EF7               	movwf	tblptrh,c
  2735  001B70                     	if	1	;There are 3 active tblptr bytes
  2736  001B70  6AF8               	clrf	tblptru,c
  2737  001B72  0E00               	movlw	low (__mediumconst shr (0+16))
  2738  001B74  22F8               	addwfc	tblptru,f,c
  2739  001B76                     	endif
  2740  001B76  0009               	tblrd		*+
  2741  001B78  CFF5 F015          	movff	tablat,___ftmul@f1
  2742  001B7C  0009               	tblrd		*+
  2743  001B7E  CFF5 F016          	movff	tablat,___ftmul@f1+1
  2744  001B82  000A               	tblrd		*-
  2745  001B84  CFF5 F017          	movff	tablat,___ftmul@f1+2
  2746  001B88  EC96  F011         	call	___ftmul	;wreg free
  2747  001B8C  C015  F027         	movff	?___ftmul,_scale$1825
  2748  001B90  C016  F028         	movff	?___ftmul+1,_scale$1825+1
  2749  001B94  C017  F029         	movff	?___ftmul+2,_scale$1825+2
  2750                           
  2751                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2752  001B98  C027  F015         	movff	_scale$1825,___ftmul@f1
  2753  001B9C  C028  F016         	movff	_scale$1825+1,___ftmul@f1+1
  2754  001BA0  C029  F017         	movff	_scale$1825+2,___ftmul@f1+2
  2755  001BA4  0E00               	movlw	0
  2756  001BA6  6E12               	movwf	___wmul@multiplicand+1,c
  2757  001BA8  0E03               	movlw	3
  2758  001BAA  6E11               	movwf	___wmul@multiplicand,c
  2759  001BAC  0E00               	movlw	0
  2760  001BAE  6E04               	movwf	___awmod@divisor+1,c
  2761  001BB0  0E0A               	movlw	10
  2762  001BB2  6E03               	movwf	___awmod@divisor,c
  2763  001BB4  502A               	movf	scale@scl,w,c
  2764  001BB6  6E01               	movwf	___awmod@dividend,c
  2765  001BB8  6A02               	clrf	___awmod@dividend+1,c
  2766  001BBA  BE01               	btfsc	___awmod@dividend,7,c
  2767  001BBC  0602               	decf	___awmod@dividend+1,f,c
  2768  001BBE  EC80  F015         	call	___awmod	;wreg free
  2769  001BC2  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2770  001BC6  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2771  001BCA  ECEF  F016         	call	___wmul	;wreg free
  2772  001BCE  0E50               	movlw	low __powers_
  2773  001BD0  240F               	addwf	?___wmul,w,c
  2774  001BD2  6EF6               	movwf	tblptrl,c
  2775  001BD4  0E10               	movlw	high __powers_
  2776  001BD6  2010               	addwfc	?___wmul+1,w,c
  2777  001BD8  6EF7               	movwf	tblptrh,c
  2778  001BDA                     	if	1	;There are 3 active tblptr bytes
  2779  001BDA  6AF8               	clrf	tblptru,c
  2780  001BDC  0E00               	movlw	low (__mediumconst shr (0+16))
  2781  001BDE  22F8               	addwfc	tblptru,f,c
  2782  001BE0                     	endif
  2783  001BE0  0009               	tblrd		*+
  2784  001BE2  CFF5 F018          	movff	tablat,___ftmul@f2
  2785  001BE6  0009               	tblrd		*+
  2786  001BE8  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2787  001BEC  000A               	tblrd		*-
  2788  001BEE  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2789  001BF2  EC96  F011         	call	___ftmul	;wreg free
  2790  001BF6  D059               	goto	L9
  2791  001BF8  D075               	goto	l236
  2792  001BFA  D05F               	goto	l2352
  2793  001BFC                     l2346:
  2794                           
  2795                           ;doprnt.c: 438: else if(scl > 10)
  2796  001BFC  502A               	movf	scale@scl,w,c
  2797  001BFE  0A80               	xorlw	128
  2798  001C00  0F75               	addlw	-139
  2799  001C02  A0D8               	btfss	status,0,c
  2800  001C04  D05A               	goto	l2352
  2801                           
  2802                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  2803  001C06  0E00               	movlw	0
  2804  001C08  6E0A               	movwf	___awdiv@divisor+1,c
  2805  001C0A  0E0A               	movlw	10
  2806  001C0C  6E09               	movwf	___awdiv@divisor,c
  2807  001C0E  502A               	movf	scale@scl,w,c
  2808  001C10  6E07               	movwf	___awdiv@dividend,c
  2809  001C12  6A08               	clrf	___awdiv@dividend+1,c
  2810  001C14  BE07               	btfsc	___awdiv@dividend,7,c
  2811  001C16  0608               	decf	___awdiv@dividend+1,f,c
  2812  001C18  EC5D  F014         	call	___awdiv	;wreg free
  2813  001C1C  0E09               	movlw	9
  2814  001C1E  2407               	addwf	?___awdiv,w,c
  2815  001C20  6E0F               	movwf	___wmul@multiplier,c
  2816  001C22  0E00               	movlw	0
  2817  001C24  2008               	addwfc	?___awdiv+1,w,c
  2818  001C26  6E10               	movwf	___wmul@multiplier+1,c
  2819  001C28  0E00               	movlw	0
  2820  001C2A  6E12               	movwf	___wmul@multiplicand+1,c
  2821  001C2C  0E03               	movlw	3
  2822  001C2E  6E11               	movwf	___wmul@multiplicand,c
  2823  001C30  ECEF  F016         	call	___wmul	;wreg free
  2824  001C34  0E50               	movlw	low __powers_
  2825  001C36  240F               	addwf	?___wmul,w,c
  2826  001C38  6EF6               	movwf	tblptrl,c
  2827  001C3A  0E10               	movlw	high __powers_
  2828  001C3C  2010               	addwfc	?___wmul+1,w,c
  2829  001C3E  6EF7               	movwf	tblptrh,c
  2830  001C40                     	if	1	;There are 3 active tblptr bytes
  2831  001C40  6AF8               	clrf	tblptru,c
  2832  001C42  0E00               	movlw	low (__mediumconst shr (0+16))
  2833  001C44  22F8               	addwfc	tblptru,f,c
  2834  001C46                     	endif
  2835  001C46  0009               	tblrd		*+
  2836  001C48  CFF5 F015          	movff	tablat,___ftmul@f1
  2837  001C4C  0009               	tblrd		*+
  2838  001C4E  CFF5 F016          	movff	tablat,___ftmul@f1+1
  2839  001C52  000A               	tblrd		*-
  2840  001C54  CFF5 F017          	movff	tablat,___ftmul@f1+2
  2841  001C58  0E00               	movlw	0
  2842  001C5A  6E12               	movwf	___wmul@multiplicand+1,c
  2843  001C5C  0E03               	movlw	3
  2844  001C5E  6E11               	movwf	___wmul@multiplicand,c
  2845  001C60  0E00               	movlw	0
  2846  001C62  6E04               	movwf	___awmod@divisor+1,c
  2847  001C64  0E0A               	movlw	10
  2848  001C66  6E03               	movwf	___awmod@divisor,c
  2849  001C68  502A               	movf	scale@scl,w,c
  2850  001C6A  6E01               	movwf	___awmod@dividend,c
  2851  001C6C  6A02               	clrf	___awmod@dividend+1,c
  2852  001C6E  BE01               	btfsc	___awmod@dividend,7,c
  2853  001C70  0602               	decf	___awmod@dividend+1,f,c
  2854  001C72  EC80  F015         	call	___awmod	;wreg free
  2855  001C76  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2856  001C7A  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2857  001C7E  ECEF  F016         	call	___wmul	;wreg free
  2858  001C82  0E50               	movlw	low __powers_
  2859  001C84  240F               	addwf	?___wmul,w,c
  2860  001C86  6EF6               	movwf	tblptrl,c
  2861  001C88  0E10               	movlw	high __powers_
  2862  001C8A  2010               	addwfc	?___wmul+1,w,c
  2863  001C8C  6EF7               	movwf	tblptrh,c
  2864  001C8E                     	if	1	;There are 3 active tblptr bytes
  2865  001C8E  6AF8               	clrf	tblptru,c
  2866  001C90  0E00               	movlw	low (__mediumconst shr (0+16))
  2867  001C92  22F8               	addwfc	tblptru,f,c
  2868  001C94                     	endif
  2869  001C94  0009               	tblrd		*+
  2870  001C96  CFF5 F018          	movff	tablat,___ftmul@f2
  2871  001C9A  0009               	tblrd		*+
  2872  001C9C  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2873  001CA0  000A               	tblrd		*-
  2874  001CA2  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2875  001CA6  EC96  F011         	call	___ftmul	;wreg free
  2876  001CAA                     L9:
  2877  001CAA  C015  F024         	movff	?___ftmul,?_scale
  2878  001CAE  C016  F025         	movff	?___ftmul+1,?_scale+1
  2879  001CB2  C017  F026         	movff	?___ftmul+2,?_scale+2
  2880  001CB6  D016               	goto	l236
  2881  001CB8  D000               	goto	l2352
  2882  001CBA                     l2352:
  2883                           
  2884                           ;doprnt.c: 440: return _powers_[scl];
  2885  001CBA  502A               	movf	scale@scl,w,c
  2886  001CBC  0D03               	mullw	3
  2887  001CBE  0E50               	movlw	low __powers_
  2888  001CC0  24F3               	addwf	prodl,w,c
  2889  001CC2  6EF6               	movwf	tblptrl,c
  2890  001CC4  0E10               	movlw	high __powers_
  2891  001CC6                     L8:
  2892  001CC6  20F4               	addwfc	prodh,w,c
  2893  001CC8  6EF7               	movwf	tblptrh,c
  2894  001CCA                     	if	1	;There are 3 active tblptr bytes
  2895  001CCA  6AF8               	clrf	tblptru,c
  2896  001CCC  0E00               	movlw	low (__mediumconst shr (0+16))
  2897  001CCE  22F8               	addwfc	tblptru,f,c
  2898  001CD0                     	endif
  2899  001CD0  0009               	tblrd		*+
  2900  001CD2  CFF5 F024          	movff	tablat,?_scale
  2901  001CD6  0009               	tblrd		*+
  2902  001CD8  CFF5 F025          	movff	tablat,?_scale+1
  2903  001CDC  000A               	tblrd		*-
  2904  001CDE  CFF5 F026          	movff	tablat,?_scale+2
  2905  001CE2  D000               	goto	l236
  2906  001CE4                     l236:
  2907  001CE4  0012               	return		;funcret
  2908  001CE6                     __end_of_scale:
  2909                           	opt stack 0
  2910                           tblptru	equ	0xFF8
  2911                           tblptrh	equ	0xFF7
  2912                           tblptrl	equ	0xFF6
  2913                           tablat	equ	0xFF5
  2914                           prodh	equ	0xFF4
  2915                           prodl	equ	0xFF3
  2916                           wreg	equ	0xFE8
  2917                           postinc2	equ	0xFDE
  2918                           postdec2	equ	0xFDD
  2919                           fsr2h	equ	0xFDA
  2920                           fsr2l	equ	0xFD9
  2921                           status	equ	0xFD8
  2922                           
  2923 ;; *************** function _putch *****************
  2924 ;; Defined at:
  2925 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\putch.c"
  2926 ;; Parameters:    Size  Location     Type
  2927 ;;  c               1    wreg     unsigned char 
  2928 ;; Auto vars:     Size  Location     Type
  2929 ;;  c               1    0[COMRAM] unsigned char 
  2930 ;; Return value:  Size  Location     Type
  2931 ;;		None               void
  2932 ;; Registers used:
  2933 ;;		wreg
  2934 ;; Tracked objects:
  2935 ;;		On entry : 0/0
  2936 ;;		On exit  : 0/0
  2937 ;;		Unchanged: 0/0
  2938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2943 ;;Total ram usage:        0 bytes
  2944 ;; Hardware stack levels used:    1
  2945 ;; This function calls:
  2946 ;;		Nothing
  2947 ;; This function is called by:
  2948 ;;		_printf
  2949 ;; This function uses a non-reentrant model
  2950 ;;
  2951                           
  2952                           	psect	text6
  2953  002F50                     __ptext6:
  2954                           	opt stack 0
  2955  002F50                     _putch:
  2956                           	opt stack 28
  2957                           
  2958                           ;incstack = 0
  2959  002F50  0012               	return		;funcret
  2960  002F52                     __end_of_putch:
  2961                           	opt stack 0
  2962                           tblptru	equ	0xFF8
  2963                           tblptrh	equ	0xFF7
  2964                           tblptrl	equ	0xFF6
  2965                           tablat	equ	0xFF5
  2966                           prodh	equ	0xFF4
  2967                           prodl	equ	0xFF3
  2968                           wreg	equ	0xFE8
  2969                           postinc2	equ	0xFDE
  2970                           postdec2	equ	0xFDD
  2971                           fsr2h	equ	0xFDA
  2972                           fsr2l	equ	0xFD9
  2973                           status	equ	0xFD8
  2974                           
  2975 ;; *************** function _isdigit *****************
  2976 ;; Defined at:
  2977 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
  2978 ;; Parameters:    Size  Location     Type
  2979 ;;  c               1    wreg     unsigned char 
  2980 ;; Auto vars:     Size  Location     Type
  2981 ;;  c               1    2[COMRAM] unsigned char 
  2982 ;; Return value:  Size  Location     Type
  2983 ;;		None               void
  2984 ;; Registers used:
  2985 ;;		wreg, status,2, status,0
  2986 ;; Tracked objects:
  2987 ;;		On entry : 0/0
  2988 ;;		On exit  : 0/0
  2989 ;;		Unchanged: 0/0
  2990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2992 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2993 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2994 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2995 ;;Total ram usage:        3 bytes
  2996 ;; Hardware stack levels used:    1
  2997 ;; This function calls:
  2998 ;;		Nothing
  2999 ;; This function is called by:
  3000 ;;		_printf
  3001 ;; This function uses a non-reentrant model
  3002 ;;
  3003                           
  3004                           	psect	text7
  3005  002E50                     __ptext7:
  3006                           	opt stack 0
  3007  002E50                     _isdigit:
  3008                           	opt stack 28
  3009                           
  3010                           ;incstack = 0
  3011                           ;isdigit@c stored from wreg
  3012  002E50  6E03               	movwf	isdigit@c,c
  3013  002E52  0E00               	movlw	0
  3014  002E54  6E02               	movwf	_isdigit$1557,c
  3015  002E56  0E3A               	movlw	58
  3016  002E58  6003               	cpfslt	isdigit@c,c
  3017  002E5A  D006               	goto	l2364
  3018  002E5C  0E2F               	movlw	47
  3019  002E5E  6403               	cpfsgt	isdigit@c,c
  3020  002E60  D003               	goto	l2364
  3021  002E62  0E01               	movlw	1
  3022  002E64  6E02               	movwf	_isdigit$1557,c
  3023  002E66  D000               	goto	l2364
  3024  002E68                     l2364:
  3025  002E68  C002  F001         	movff	_isdigit$1557,??_isdigit
  3026  002E6C  3001               	rrcf	??_isdigit,w,c
  3027  002E6E  D000               	goto	l812
  3028  002E70                     l812:
  3029  002E70  0012               	return		;funcret
  3030  002E72                     __end_of_isdigit:
  3031                           	opt stack 0
  3032                           tblptru	equ	0xFF8
  3033                           tblptrh	equ	0xFF7
  3034                           tblptrl	equ	0xFF6
  3035                           tablat	equ	0xFF5
  3036                           prodh	equ	0xFF4
  3037                           prodl	equ	0xFF3
  3038                           wreg	equ	0xFE8
  3039                           postinc2	equ	0xFDE
  3040                           postdec2	equ	0xFDD
  3041                           fsr2h	equ	0xFDA
  3042                           fsr2l	equ	0xFD9
  3043                           status	equ	0xFD8
  3044                           
  3045 ;; *************** function _fround *****************
  3046 ;; Defined at:
  3047 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  3048 ;; Parameters:    Size  Location     Type
  3049 ;;  prec            1    wreg     unsigned char 
  3050 ;; Auto vars:     Size  Location     Type
  3051 ;;  prec            1   44[COMRAM] unsigned char 
  3052 ;; Return value:  Size  Location     Type
  3053 ;;                  3   35[COMRAM] unsigned char 
  3054 ;; Registers used:
  3055 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3056 ;; Tracked objects:
  3057 ;;		On entry : 0/0
  3058 ;;		On exit  : 0/0
  3059 ;;		Unchanged: 0/0
  3060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3061 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3062 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3064 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3065 ;;Total ram usage:       10 bytes
  3066 ;; Hardware stack levels used:    1
  3067 ;; Hardware stack levels required when called:    2
  3068 ;; This function calls:
  3069 ;;		___awdiv
  3070 ;;		___awmod
  3071 ;;		___ftmul
  3072 ;;		___wmul
  3073 ;; This function is called by:
  3074 ;;		_printf
  3075 ;; This function uses a non-reentrant model
  3076 ;;
  3077                           
  3078                           	psect	text8
  3079  001CE6                     __ptext8:
  3080                           	opt stack 0
  3081  001CE6                     _fround:
  3082                           	opt stack 26
  3083                           
  3084                           ;incstack = 0
  3085                           ;fround@prec stored from wreg
  3086  001CE6  6E2D               	movwf	fround@prec,c
  3087                           
  3088                           ;doprnt.c: 413: if(prec>=110)
  3089  001CE8  0E6D               	movlw	109
  3090  001CEA  642D               	cpfsgt	fround@prec,c
  3091  001CEC  D0A4               	goto	l2306
  3092                           
  3093                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3094  001CEE  0E00               	movlw	0
  3095  001CF0  6E12               	movwf	___wmul@multiplicand+1,c
  3096  001CF2  0E03               	movlw	3
  3097  001CF4  6E11               	movwf	___wmul@multiplicand,c
  3098  001CF6  0E00               	movlw	0
  3099  001CF8  6E0A               	movwf	___awdiv@divisor+1,c
  3100  001CFA  0E0A               	movlw	10
  3101  001CFC  6E09               	movwf	___awdiv@divisor,c
  3102  001CFE  0E00               	movlw	0
  3103  001D00  6E04               	movwf	___awmod@divisor+1,c
  3104  001D02  0E64               	movlw	100
  3105  001D04  6E03               	movwf	___awmod@divisor,c
  3106  001D06  C02D  F001         	movff	fround@prec,___awmod@dividend
  3107  001D0A  6A02               	clrf	___awmod@dividend+1,c
  3108  001D0C  EC80  F015         	call	___awmod	;wreg free
  3109  001D10  C001  F007         	movff	?___awmod,___awdiv@dividend
  3110  001D14  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  3111  001D18  EC5D  F014         	call	___awdiv	;wreg free
  3112  001D1C  0E09               	movlw	9
  3113  001D1E  2407               	addwf	?___awdiv,w,c
  3114  001D20  6E0F               	movwf	___wmul@multiplier,c
  3115  001D22  0E00               	movlw	0
  3116  001D24  2008               	addwfc	?___awdiv+1,w,c
  3117  001D26  6E10               	movwf	___wmul@multiplier+1,c
  3118  001D28  ECEF  F016         	call	___wmul	;wreg free
  3119  001D2C  0E29               	movlw	low __npowers_
  3120  001D2E  240F               	addwf	?___wmul,w,c
  3121  001D30  6EF6               	movwf	tblptrl,c
  3122  001D32  0E10               	movlw	high __npowers_
  3123  001D34  2010               	addwfc	?___wmul+1,w,c
  3124  001D36  6EF7               	movwf	tblptrh,c
  3125  001D38                     	if	1	;There are 3 active tblptr bytes
  3126  001D38  6AF8               	clrf	tblptru,c
  3127  001D3A  0E00               	movlw	low (__mediumconst shr (0+16))
  3128  001D3C  22F8               	addwfc	tblptru,f,c
  3129  001D3E                     	endif
  3130  001D3E  0009               	tblrd		*+
  3131  001D40  CFF5 F018          	movff	tablat,___ftmul@f2
  3132  001D44  0009               	tblrd		*+
  3133  001D46  CFF5 F019          	movff	tablat,___ftmul@f2+1
  3134  001D4A  000A               	tblrd		*-
  3135  001D4C  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  3136  001D50  0E00               	movlw	0
  3137  001D52  6E0A               	movwf	___awdiv@divisor+1,c
  3138  001D54  0E64               	movlw	100
  3139  001D56  6E09               	movwf	___awdiv@divisor,c
  3140  001D58  C02D  F007         	movff	fround@prec,___awdiv@dividend
  3141  001D5C  6A08               	clrf	___awdiv@dividend+1,c
  3142  001D5E  EC5D  F014         	call	___awdiv	;wreg free
  3143  001D62  0E12               	movlw	18
  3144  001D64  2407               	addwf	?___awdiv,w,c
  3145  001D66  6E0F               	movwf	___wmul@multiplier,c
  3146  001D68  0E00               	movlw	0
  3147  001D6A  2008               	addwfc	?___awdiv+1,w,c
  3148  001D6C  6E10               	movwf	___wmul@multiplier+1,c
  3149  001D6E  0E00               	movlw	0
  3150  001D70  6E12               	movwf	___wmul@multiplicand+1,c
  3151  001D72  0E03               	movlw	3
  3152  001D74  6E11               	movwf	___wmul@multiplicand,c
  3153  001D76  ECEF  F016         	call	___wmul	;wreg free
  3154  001D7A  0E29               	movlw	low __npowers_
  3155  001D7C  240F               	addwf	?___wmul,w,c
  3156  001D7E  6EF6               	movwf	tblptrl,c
  3157  001D80  0E10               	movlw	high __npowers_
  3158  001D82  2010               	addwfc	?___wmul+1,w,c
  3159  001D84  6EF7               	movwf	tblptrh,c
  3160  001D86                     	if	1	;There are 3 active tblptr bytes
  3161  001D86  6AF8               	clrf	tblptru,c
  3162  001D88  0E00               	movlw	low (__mediumconst shr (0+16))
  3163  001D8A  22F8               	addwfc	tblptru,f,c
  3164  001D8C                     	endif
  3165  001D8C  0009               	tblrd		*+
  3166  001D8E  CFF5 F015          	movff	tablat,___ftmul@f1
  3167  001D92  0009               	tblrd		*+
  3168  001D94  CFF5 F016          	movff	tablat,___ftmul@f1+1
  3169  001D98  000A               	tblrd		*-
  3170  001D9A  CFF5 F017          	movff	tablat,___ftmul@f1+2
  3171  001D9E  EC96  F011         	call	___ftmul	;wreg free
  3172  001DA2  C015  F02A         	movff	?___ftmul,_fround$1823
  3173  001DA6  C016  F02B         	movff	?___ftmul+1,_fround$1823+1
  3174  001DAA  C017  F02C         	movff	?___ftmul+2,_fround$1823+2
  3175                           
  3176                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3177  001DAE  0E00               	movlw	0
  3178  001DB0  6E12               	movwf	___wmul@multiplicand+1,c
  3179  001DB2  0E03               	movlw	3
  3180  001DB4  6E11               	movwf	___wmul@multiplicand,c
  3181  001DB6  0E00               	movlw	0
  3182  001DB8  6E04               	movwf	___awmod@divisor+1,c
  3183  001DBA  0E0A               	movlw	10
  3184  001DBC  6E03               	movwf	___awmod@divisor,c
  3185  001DBE  C02D  F001         	movff	fround@prec,___awmod@dividend
  3186  001DC2  6A02               	clrf	___awmod@dividend+1,c
  3187  001DC4  EC80  F015         	call	___awmod	;wreg free
  3188  001DC8  C001  F00F         	movff	?___awmod,___wmul@multiplier
  3189  001DCC  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  3190  001DD0  ECEF  F016         	call	___wmul	;wreg free
  3191  001DD4  0E29               	movlw	low __npowers_
  3192  001DD6  240F               	addwf	?___wmul,w,c
  3193  001DD8  6EF6               	movwf	tblptrl,c
  3194  001DDA  0E10               	movlw	high __npowers_
  3195  001DDC  2010               	addwfc	?___wmul+1,w,c
  3196  001DDE  6EF7               	movwf	tblptrh,c
  3197  001DE0                     	if	1	;There are 3 active tblptr bytes
  3198  001DE0  6AF8               	clrf	tblptru,c
  3199  001DE2  0E00               	movlw	low (__mediumconst shr (0+16))
  3200  001DE4  22F8               	addwfc	tblptru,f,c
  3201  001DE6                     	endif
  3202  001DE6  0009               	tblrd		*+
  3203  001DE8  CFF5 F018          	movff	tablat,___ftmul@f2
  3204  001DEC  0009               	tblrd		*+
  3205  001DEE  CFF5 F019          	movff	tablat,___ftmul@f2+1
  3206  001DF2  000A               	tblrd		*-
  3207  001DF4  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  3208  001DF8  C02A  F015         	movff	_fround$1823,___ftmul@f1
  3209  001DFC  C02B  F016         	movff	_fround$1823+1,___ftmul@f1+1
  3210  001E00  C02C  F017         	movff	_fround$1823+2,___ftmul@f1+2
  3211  001E04  EC96  F011         	call	___ftmul	;wreg free
  3212  001E08  C015  F027         	movff	?___ftmul,_fround$1824
  3213  001E0C  C016  F028         	movff	?___ftmul+1,_fround$1824+1
  3214  001E10  C017  F029         	movff	?___ftmul+2,_fround$1824+2
  3215                           
  3216                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3217  001E14  C027  F015         	movff	_fround$1824,___ftmul@f1
  3218  001E18  C028  F016         	movff	_fround$1824+1,___ftmul@f1+1
  3219  001E1C  C029  F017         	movff	_fround$1824+2,___ftmul@f1+2
  3220  001E20  0E00               	movlw	0
  3221  001E22  6E18               	movwf	___ftmul@f2,c
  3222  001E24  0E00               	movlw	0
  3223  001E26  6E19               	movwf	___ftmul@f2+1,c
  3224  001E28  0E3F               	movlw	63
  3225  001E2A  6E1A               	movwf	___ftmul@f2+2,c
  3226  001E2C  EC96  F011         	call	___ftmul	;wreg free
  3227  001E30  D086               	goto	L11
  3228  001E32  D08C               	goto	l229
  3229  001E34  D068               	goto	l2314
  3230  001E36                     l2306:
  3231                           
  3232                           ;doprnt.c: 415: else if(prec > 10)
  3233  001E36  0E0A               	movlw	10
  3234  001E38  642D               	cpfsgt	fround@prec,c
  3235  001E3A  D065               	goto	l2314
  3236                           
  3237                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3238  001E3C  0E00               	movlw	0
  3239  001E3E  6E12               	movwf	___wmul@multiplicand+1,c
  3240  001E40  0E03               	movlw	3
  3241  001E42  6E11               	movwf	___wmul@multiplicand,c
  3242  001E44  0E00               	movlw	0
  3243  001E46  6E04               	movwf	___awmod@divisor+1,c
  3244  001E48  0E0A               	movlw	10
  3245  001E4A  6E03               	movwf	___awmod@divisor,c
  3246  001E4C  C02D  F001         	movff	fround@prec,___awmod@dividend
  3247  001E50  6A02               	clrf	___awmod@dividend+1,c
  3248  001E52  EC80  F015         	call	___awmod	;wreg free
  3249  001E56  C001  F00F         	movff	?___awmod,___wmul@multiplier
  3250  001E5A  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  3251  001E5E  ECEF  F016         	call	___wmul	;wreg free
  3252  001E62  0E29               	movlw	low __npowers_
  3253  001E64  240F               	addwf	?___wmul,w,c
  3254  001E66  6EF6               	movwf	tblptrl,c
  3255  001E68  0E10               	movlw	high __npowers_
  3256  001E6A  2010               	addwfc	?___wmul+1,w,c
  3257  001E6C  6EF7               	movwf	tblptrh,c
  3258  001E6E                     	if	1	;There are 3 active tblptr bytes
  3259  001E6E  6AF8               	clrf	tblptru,c
  3260  001E70  0E00               	movlw	low (__mediumconst shr (0+16))
  3261  001E72  22F8               	addwfc	tblptru,f,c
  3262  001E74                     	endif
  3263  001E74  0009               	tblrd		*+
  3264  001E76  CFF5 F018          	movff	tablat,___ftmul@f2
  3265  001E7A  0009               	tblrd		*+
  3266  001E7C  CFF5 F019          	movff	tablat,___ftmul@f2+1
  3267  001E80  000A               	tblrd		*-
  3268  001E82  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  3269  001E86  0E00               	movlw	0
  3270  001E88  6E0A               	movwf	___awdiv@divisor+1,c
  3271  001E8A  0E0A               	movlw	10
  3272  001E8C  6E09               	movwf	___awdiv@divisor,c
  3273  001E8E  C02D  F007         	movff	fround@prec,___awdiv@dividend
  3274  001E92  6A08               	clrf	___awdiv@dividend+1,c
  3275  001E94  EC5D  F014         	call	___awdiv	;wreg free
  3276  001E98  0E09               	movlw	9
  3277  001E9A  2407               	addwf	?___awdiv,w,c
  3278  001E9C  6E0F               	movwf	___wmul@multiplier,c
  3279  001E9E  0E00               	movlw	0
  3280  001EA0  2008               	addwfc	?___awdiv+1,w,c
  3281  001EA2  6E10               	movwf	___wmul@multiplier+1,c
  3282  001EA4  0E00               	movlw	0
  3283  001EA6  6E12               	movwf	___wmul@multiplicand+1,c
  3284  001EA8  0E03               	movlw	3
  3285  001EAA  6E11               	movwf	___wmul@multiplicand,c
  3286  001EAC  ECEF  F016         	call	___wmul	;wreg free
  3287  001EB0  0E29               	movlw	low __npowers_
  3288  001EB2  240F               	addwf	?___wmul,w,c
  3289  001EB4  6EF6               	movwf	tblptrl,c
  3290  001EB6  0E10               	movlw	high __npowers_
  3291  001EB8  2010               	addwfc	?___wmul+1,w,c
  3292  001EBA  6EF7               	movwf	tblptrh,c
  3293  001EBC                     	if	1	;There are 3 active tblptr bytes
  3294  001EBC  6AF8               	clrf	tblptru,c
  3295  001EBE  0E00               	movlw	low (__mediumconst shr (0+16))
  3296  001EC0  22F8               	addwfc	tblptru,f,c
  3297  001EC2                     	endif
  3298  001EC2  0009               	tblrd		*+
  3299  001EC4  CFF5 F015          	movff	tablat,___ftmul@f1
  3300  001EC8  0009               	tblrd		*+
  3301  001ECA  CFF5 F016          	movff	tablat,___ftmul@f1+1
  3302  001ECE  000A               	tblrd		*-
  3303  001ED0  CFF5 F017          	movff	tablat,___ftmul@f1+2
  3304  001ED4  EC96  F011         	call	___ftmul	;wreg free
  3305  001ED8  C015  F02A         	movff	?___ftmul,_fround$1823
  3306  001EDC  C016  F02B         	movff	?___ftmul+1,_fround$1823+1
  3307  001EE0  C017  F02C         	movff	?___ftmul+2,_fround$1823+2
  3308                           
  3309                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3310  001EE4  C02A  F015         	movff	_fround$1823,___ftmul@f1
  3311  001EE8  C02B  F016         	movff	_fround$1823+1,___ftmul@f1+1
  3312  001EEC  C02C  F017         	movff	_fround$1823+2,___ftmul@f1+2
  3313  001EF0  0E00               	movlw	0
  3314  001EF2  6E18               	movwf	___ftmul@f2,c
  3315  001EF4  0E00               	movlw	0
  3316  001EF6  6E19               	movwf	___ftmul@f2+1,c
  3317  001EF8  0E3F               	movlw	63
  3318  001EFA  6E1A               	movwf	___ftmul@f2+2,c
  3319  001EFC  EC96  F011         	call	___ftmul	;wreg free
  3320  001F00  D01E               	goto	L11
  3321  001F02  D024               	goto	l229
  3322  001F04  D000               	goto	l2314
  3323  001F06                     l2314:
  3324                           
  3325                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  3326  001F06  502D               	movf	fround@prec,w,c
  3327  001F08  0D03               	mullw	3
  3328  001F0A  0E29               	movlw	low __npowers_
  3329  001F0C  24F3               	addwf	prodl,w,c
  3330  001F0E  6EF6               	movwf	tblptrl,c
  3331  001F10  0E10               	movlw	high __npowers_
  3332  001F12  20F4               	addwfc	prodh,w,c
  3333  001F14  6EF7               	movwf	tblptrh,c
  3334  001F16                     	if	1	;There are 3 active tblptr bytes
  3335  001F16  6AF8               	clrf	tblptru,c
  3336  001F18  0E00               	movlw	low (__mediumconst shr (0+16))
  3337  001F1A  22F8               	addwfc	tblptru,f,c
  3338  001F1C                     	endif
  3339  001F1C  0009               	tblrd		*+
  3340  001F1E  CFF5 F015          	movff	tablat,___ftmul@f1
  3341  001F22  0009               	tblrd		*+
  3342  001F24  CFF5 F016          	movff	tablat,___ftmul@f1+1
  3343  001F28  000A               	tblrd		*-
  3344  001F2A  CFF5 F017          	movff	tablat,___ftmul@f1+2
  3345  001F2E  0E00               	movlw	0
  3346  001F30  6E18               	movwf	___ftmul@f2,c
  3347  001F32  0E00               	movlw	0
  3348  001F34  6E19               	movwf	___ftmul@f2+1,c
  3349  001F36  0E3F               	movlw	63
  3350  001F38  6E1A               	movwf	___ftmul@f2+2,c
  3351  001F3A  EC96  F011         	call	___ftmul	;wreg free
  3352  001F3E                     L11:
  3353  001F3E  C015  F024         	movff	?___ftmul,?_fround
  3354  001F42  C016  F025         	movff	?___ftmul+1,?_fround+1
  3355  001F46  C017  F026         	movff	?___ftmul+2,?_fround+2
  3356  001F4A  D000               	goto	l229
  3357  001F4C                     l229:
  3358  001F4C  0012               	return		;funcret
  3359  001F4E                     __end_of_fround:
  3360                           	opt stack 0
  3361                           tblptru	equ	0xFF8
  3362                           tblptrh	equ	0xFF7
  3363                           tblptrl	equ	0xFF6
  3364                           tablat	equ	0xFF5
  3365                           prodh	equ	0xFF4
  3366                           prodl	equ	0xFF3
  3367                           wreg	equ	0xFE8
  3368                           postinc2	equ	0xFDE
  3369                           postdec2	equ	0xFDD
  3370                           fsr2h	equ	0xFDA
  3371                           fsr2l	equ	0xFD9
  3372                           status	equ	0xFD8
  3373                           
  3374 ;; *************** function ___wmul *****************
  3375 ;; Defined at:
  3376 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  3377 ;; Parameters:    Size  Location     Type
  3378 ;;  multiplier      2   14[COMRAM] unsigned int 
  3379 ;;  multiplicand    2   16[COMRAM] unsigned int 
  3380 ;; Auto vars:     Size  Location     Type
  3381 ;;  product         2   18[COMRAM] unsigned int 
  3382 ;; Return value:  Size  Location     Type
  3383 ;;                  2   14[COMRAM] unsigned int 
  3384 ;; Registers used:
  3385 ;;		wreg, status,2, status,0, prodl, prodh
  3386 ;; Tracked objects:
  3387 ;;		On entry : 0/0
  3388 ;;		On exit  : 0/0
  3389 ;;		Unchanged: 0/0
  3390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3391 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3392 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3394 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3395 ;;Total ram usage:        6 bytes
  3396 ;; Hardware stack levels used:    1
  3397 ;; This function calls:
  3398 ;;		Nothing
  3399 ;; This function is called by:
  3400 ;;		_fround
  3401 ;;		_scale
  3402 ;;		_printf
  3403 ;; This function uses a non-reentrant model
  3404 ;;
  3405                           
  3406                           	psect	text9
  3407  002DDE                     __ptext9:
  3408                           	opt stack 0
  3409  002DDE                     ___wmul:
  3410                           	opt stack 27
  3411                           
  3412                           ;incstack = 0
  3413  002DDE  500F               	movf	___wmul@multiplier,w,c
  3414  002DE0  0211               	mulwf	___wmul@multiplicand,c
  3415  002DE2  CFF3 F013          	movff	prodl,___wmul@product
  3416  002DE6  CFF4 F014          	movff	prodh,___wmul@product+1
  3417  002DEA  500F               	movf	___wmul@multiplier,w,c
  3418  002DEC  0212               	mulwf	___wmul@multiplicand+1,c
  3419  002DEE  50F3               	movf	prodl,w,c
  3420  002DF0  2614               	addwf	___wmul@product+1,f,c
  3421  002DF2  5010               	movf	___wmul@multiplier+1,w,c
  3422  002DF4  0211               	mulwf	___wmul@multiplicand,c
  3423  002DF6  50F3               	movf	prodl,w,c
  3424  002DF8  2614               	addwf	___wmul@product+1,f,c
  3425  002DFA  C013  F00F         	movff	___wmul@product,?___wmul
  3426  002DFE  C014  F010         	movff	___wmul@product+1,?___wmul+1
  3427  002E02  D000               	goto	l347
  3428  002E04                     l347:
  3429  002E04  0012               	return		;funcret
  3430  002E06                     __end_of___wmul:
  3431                           	opt stack 0
  3432                           tblptru	equ	0xFF8
  3433                           tblptrh	equ	0xFF7
  3434                           tblptrl	equ	0xFF6
  3435                           tablat	equ	0xFF5
  3436                           prodh	equ	0xFF4
  3437                           prodl	equ	0xFF3
  3438                           wreg	equ	0xFE8
  3439                           postinc2	equ	0xFDE
  3440                           postdec2	equ	0xFDD
  3441                           fsr2h	equ	0xFDA
  3442                           fsr2l	equ	0xFD9
  3443                           status	equ	0xFD8
  3444                           
  3445 ;; *************** function ___ftmul *****************
  3446 ;; Defined at:
  3447 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  3448 ;; Parameters:    Size  Location     Type
  3449 ;;  f1              3   20[COMRAM] float 
  3450 ;;  f2              3   23[COMRAM] float 
  3451 ;; Auto vars:     Size  Location     Type
  3452 ;;  f3_as_produc    3   30[COMRAM] unsigned um
  3453 ;;  sign            1   34[COMRAM] unsigned char 
  3454 ;;  cntr            1   33[COMRAM] unsigned char 
  3455 ;;  exp             1   29[COMRAM] unsigned char 
  3456 ;; Return value:  Size  Location     Type
  3457 ;;                  3   20[COMRAM] float 
  3458 ;; Registers used:
  3459 ;;		wreg, status,2, status,0, cstack
  3460 ;; Tracked objects:
  3461 ;;		On entry : 0/0
  3462 ;;		On exit  : 0/0
  3463 ;;		Unchanged: 0/0
  3464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3465 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3466 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3467 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3468 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3469 ;;Total ram usage:       15 bytes
  3470 ;; Hardware stack levels used:    1
  3471 ;; Hardware stack levels required when called:    1
  3472 ;; This function calls:
  3473 ;;		___ftpack
  3474 ;; This function is called by:
  3475 ;;		_main
  3476 ;;		_fround
  3477 ;;		_scale
  3478 ;;		_printf
  3479 ;; This function uses a non-reentrant model
  3480 ;;
  3481                           
  3482                           	psect	text10
  3483  00232C                     __ptext10:
  3484                           	opt stack 0
  3485  00232C                     ___ftmul:
  3486                           	opt stack 29
  3487                           
  3488                           ;incstack = 0
  3489  00232C  C017  F01B         	movff	___ftmul@f1+2,??___ftmul
  3490  002330  6A1C               	clrf	(??___ftmul+1)& (0+255),c
  3491  002332  6A1D               	clrf	(??___ftmul+2)& (0+255),c
  3492  002334  3416               	rlcf	___ftmul@f1+1,w,c
  3493  002336  361B               	rlcf	??___ftmul& (0+255),f,c
  3494  002338  E301               	bnc	u1901
  3495  00233A  801C               	bsf	(??___ftmul+1)& (0+255),0,c
  3496  00233C                     u1901:
  3497  00233C  501B               	movf	??___ftmul,w,c
  3498  00233E  6E1E               	movwf	___ftmul@exp,c
  3499  002340  501E               	movf	___ftmul@exp,w,c
  3500  002342  A4D8               	btfss	status,2,c
  3501  002344  D002               	goto	l2174
  3502  002346  D00E               	goto	l2176
  3503  002348  D06C               	goto	l776
  3504  00234A                     l2174:
  3505  00234A  C01A  F01B         	movff	___ftmul@f2+2,??___ftmul
  3506  00234E  6A1C               	clrf	(??___ftmul+1)& (0+255),c
  3507  002350  6A1D               	clrf	(??___ftmul+2)& (0+255),c
  3508  002352  3419               	rlcf	___ftmul@f2+1,w,c
  3509  002354  361B               	rlcf	??___ftmul& (0+255),f,c
  3510  002356  E301               	bnc	u1921
  3511  002358  801C               	bsf	(??___ftmul+1)& (0+255),0,c
  3512  00235A                     u1921:
  3513  00235A  501B               	movf	??___ftmul,w,c
  3514  00235C  6E23               	movwf	___ftmul@sign,c
  3515  00235E  5023               	movf	___ftmul@sign,w,c
  3516  002360  A4D8               	btfss	status,2,c
  3517  002362  D007               	goto	l2180
  3518  002364                     l2176:
  3519  002364  0E00               	movlw	0
  3520  002366  6E15               	movwf	?___ftmul,c
  3521  002368  0E00               	movlw	0
  3522  00236A  6E16               	movwf	?___ftmul+1,c
  3523  00236C  0E00               	movlw	0
  3524  00236E  6E17               	movwf	?___ftmul+2,c
  3525  002370  D058               	goto	l776
  3526  002372                     l2180:
  3527  002372  5023               	movf	___ftmul@sign,w,c
  3528  002374  0F7B               	addlw	123
  3529  002376  261E               	addwf	___ftmul@exp,f,c
  3530  002378  C017  F023         	movff	___ftmul@f1+2,___ftmul@sign
  3531  00237C  501A               	movf	___ftmul@f2+2,w,c
  3532  00237E  1A23               	xorwf	___ftmul@sign,f,c
  3533  002380  0E80               	movlw	128
  3534  002382  1623               	andwf	___ftmul@sign,f,c
  3535  002384  8E16               	bsf	___ftmul@f1+1,7,c
  3536  002386  8E19               	bsf	___ftmul@f2+1,7,c
  3537  002388  0EFF               	movlw	255
  3538  00238A  1618               	andwf	___ftmul@f2,f,c
  3539  00238C  0EFF               	movlw	255
  3540  00238E  1619               	andwf	___ftmul@f2+1,f,c
  3541  002390  0E00               	movlw	0
  3542  002392  161A               	andwf	___ftmul@f2+2,f,c
  3543  002394  0E00               	movlw	0
  3544  002396  6E1F               	movwf	___ftmul@f3_as_product,c
  3545  002398  0E00               	movlw	0
  3546  00239A  6E20               	movwf	___ftmul@f3_as_product+1,c
  3547  00239C  0E00               	movlw	0
  3548  00239E  6E21               	movwf	___ftmul@f3_as_product+2,c
  3549  0023A0  0E07               	movlw	7
  3550  0023A2  6E22               	movwf	___ftmul@cntr,c
  3551  0023A4  D000               	goto	l2194
  3552  0023A6                     l2194:
  3553  0023A6  A015               	btfss	___ftmul@f1,0,c
  3554  0023A8  D007               	goto	l2198
  3555  0023AA  5018               	movf	___ftmul@f2,w,c
  3556  0023AC  261F               	addwf	___ftmul@f3_as_product,f,c
  3557  0023AE  5019               	movf	___ftmul@f2+1,w,c
  3558  0023B0  2220               	addwfc	___ftmul@f3_as_product+1,f,c
  3559  0023B2  501A               	movf	___ftmul@f2+2,w,c
  3560  0023B4  2221               	addwfc	___ftmul@f3_as_product+2,f,c
  3561  0023B6  D000               	goto	l2198
  3562  0023B8                     l2198:
  3563  0023B8  90D8               	bcf	status,0,c
  3564  0023BA  3217               	rrcf	___ftmul@f1+2,f,c
  3565  0023BC  3216               	rrcf	___ftmul@f1+1,f,c
  3566  0023BE  3215               	rrcf	___ftmul@f1,f,c
  3567  0023C0  90D8               	bcf	status,0,c
  3568  0023C2  3618               	rlcf	___ftmul@f2,f,c
  3569  0023C4  3619               	rlcf	___ftmul@f2+1,f,c
  3570  0023C6  361A               	rlcf	___ftmul@f2+2,f,c
  3571  0023C8  2E22               	decfsz	___ftmul@cntr,f,c
  3572  0023CA  D7ED               	goto	l2194
  3573  0023CC  D000               	goto	l2202
  3574  0023CE                     l2202:
  3575  0023CE  0E09               	movlw	9
  3576  0023D0  6E22               	movwf	___ftmul@cntr,c
  3577  0023D2  D000               	goto	l2204
  3578  0023D4                     l2204:
  3579  0023D4  A015               	btfss	___ftmul@f1,0,c
  3580  0023D6  D007               	goto	l2208
  3581  0023D8  5018               	movf	___ftmul@f2,w,c
  3582  0023DA  261F               	addwf	___ftmul@f3_as_product,f,c
  3583  0023DC  5019               	movf	___ftmul@f2+1,w,c
  3584  0023DE  2220               	addwfc	___ftmul@f3_as_product+1,f,c
  3585  0023E0  501A               	movf	___ftmul@f2+2,w,c
  3586  0023E2  2221               	addwfc	___ftmul@f3_as_product+2,f,c
  3587  0023E4  D000               	goto	l2208
  3588  0023E6                     l2208:
  3589  0023E6  90D8               	bcf	status,0,c
  3590  0023E8  3217               	rrcf	___ftmul@f1+2,f,c
  3591  0023EA  3216               	rrcf	___ftmul@f1+1,f,c
  3592  0023EC  3215               	rrcf	___ftmul@f1,f,c
  3593  0023EE  90D8               	bcf	status,0,c
  3594  0023F0  3221               	rrcf	___ftmul@f3_as_product+2,f,c
  3595  0023F2  3220               	rrcf	___ftmul@f3_as_product+1,f,c
  3596  0023F4  321F               	rrcf	___ftmul@f3_as_product,f,c
  3597  0023F6  2E22               	decfsz	___ftmul@cntr,f,c
  3598  0023F8  D7ED               	goto	l2204
  3599  0023FA  D000               	goto	l2212
  3600  0023FC                     l2212:
  3601  0023FC  C01F  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  3602  002400  C020  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3603  002404  C021  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3604  002408  C01E  F004         	movff	___ftmul@exp,___ftpack@exp
  3605  00240C  C023  F005         	movff	___ftmul@sign,___ftpack@sign
  3606  002410  ECEC  F012         	call	___ftpack	;wreg free
  3607  002414  C001  F015         	movff	?___ftpack,?___ftmul
  3608  002418  C002  F016         	movff	?___ftpack+1,?___ftmul+1
  3609  00241C  C003  F017         	movff	?___ftpack+2,?___ftmul+2
  3610  002420  D000               	goto	l776
  3611  002422                     l776:
  3612  002422  0012               	return		;funcret
  3613  002424                     __end_of___ftmul:
  3614                           	opt stack 0
  3615                           tblptru	equ	0xFF8
  3616                           tblptrh	equ	0xFF7
  3617                           tblptrl	equ	0xFF6
  3618                           tablat	equ	0xFF5
  3619                           prodh	equ	0xFF4
  3620                           prodl	equ	0xFF3
  3621                           wreg	equ	0xFE8
  3622                           postinc2	equ	0xFDE
  3623                           postdec2	equ	0xFDD
  3624                           fsr2h	equ	0xFDA
  3625                           fsr2l	equ	0xFD9
  3626                           status	equ	0xFD8
  3627                           
  3628 ;; *************** function ___awmod *****************
  3629 ;; Defined at:
  3630 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
  3631 ;; Parameters:    Size  Location     Type
  3632 ;;  dividend        2    0[COMRAM] int 
  3633 ;;  divisor         2    2[COMRAM] int 
  3634 ;; Auto vars:     Size  Location     Type
  3635 ;;  sign            1    5[COMRAM] unsigned char 
  3636 ;;  counter         1    4[COMRAM] unsigned char 
  3637 ;; Return value:  Size  Location     Type
  3638 ;;                  2    0[COMRAM] int 
  3639 ;; Registers used:
  3640 ;;		wreg, status,2, status,0
  3641 ;; Tracked objects:
  3642 ;;		On entry : 0/0
  3643 ;;		On exit  : 0/0
  3644 ;;		Unchanged: 0/0
  3645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3646 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3647 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3649 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3650 ;;Total ram usage:        6 bytes
  3651 ;; Hardware stack levels used:    1
  3652 ;; This function calls:
  3653 ;;		Nothing
  3654 ;; This function is called by:
  3655 ;;		_fround
  3656 ;;		_scale
  3657 ;; This function uses a non-reentrant model
  3658 ;;
  3659                           
  3660                           	psect	text11
  3661  002B00                     __ptext11:
  3662                           	opt stack 0
  3663  002B00                     ___awmod:
  3664                           	opt stack 27
  3665                           
  3666                           ;incstack = 0
  3667  002B00  0E00               	movlw	0
  3668  002B02  6E06               	movwf	___awmod@sign,c
  3669  002B04  AE02               	btfss	___awmod@dividend+1,7,c
  3670  002B06  D007               	goto	l2268
  3671  002B08  6C01               	negf	___awmod@dividend,c
  3672  002B0A  1E02               	comf	___awmod@dividend+1,f,c
  3673  002B0C  B0D8               	btfsc	status,0,c
  3674  002B0E  2A02               	incf	___awmod@dividend+1,f,c
  3675  002B10  0E01               	movlw	1
  3676  002B12  6E06               	movwf	___awmod@sign,c
  3677  002B14  D000               	goto	l2268
  3678  002B16                     l2268:
  3679  002B16  AE04               	btfss	___awmod@divisor+1,7,c
  3680  002B18  D005               	goto	l2272
  3681  002B1A  6C03               	negf	___awmod@divisor,c
  3682  002B1C  1E04               	comf	___awmod@divisor+1,f,c
  3683  002B1E  B0D8               	btfsc	status,0,c
  3684  002B20  2A04               	incf	___awmod@divisor+1,f,c
  3685  002B22  D000               	goto	l2272
  3686  002B24                     l2272:
  3687  002B24  5003               	movf	___awmod@divisor,w,c
  3688  002B26  1004               	iorwf	___awmod@divisor+1,w,c
  3689  002B28  B4D8               	btfsc	status,2,c
  3690  002B2A  D01D               	goto	l2288
  3691  002B2C  0E01               	movlw	1
  3692  002B2E  6E05               	movwf	___awmod@counter,c
  3693  002B30  D005               	goto	l2278
  3694  002B32                     l2276:
  3695  002B32  90D8               	bcf	status,0,c
  3696  002B34  3603               	rlcf	___awmod@divisor,f,c
  3697  002B36  3604               	rlcf	___awmod@divisor+1,f,c
  3698  002B38  2A05               	incf	___awmod@counter,f,c
  3699  002B3A  D000               	goto	l2278
  3700  002B3C                     l2278:
  3701  002B3C  BE04               	btfsc	___awmod@divisor+1,7,c
  3702  002B3E  D002               	goto	l2280
  3703  002B40  D7F8               	goto	l2276
  3704  002B42  D000               	goto	l2280
  3705  002B44                     l2280:
  3706  002B44  5003               	movf	___awmod@divisor,w,c
  3707  002B46  5C01               	subwf	___awmod@dividend,w,c
  3708  002B48  5004               	movf	___awmod@divisor+1,w,c
  3709  002B4A  5802               	subwfb	___awmod@dividend+1,w,c
  3710  002B4C  A0D8               	btfss	status,0,c
  3711  002B4E  D005               	goto	l2284
  3712  002B50  5003               	movf	___awmod@divisor,w,c
  3713  002B52  5E01               	subwf	___awmod@dividend,f,c
  3714  002B54  5004               	movf	___awmod@divisor+1,w,c
  3715  002B56  5A02               	subwfb	___awmod@dividend+1,f,c
  3716  002B58  D000               	goto	l2284
  3717  002B5A                     l2284:
  3718  002B5A  90D8               	bcf	status,0,c
  3719  002B5C  3204               	rrcf	___awmod@divisor+1,f,c
  3720  002B5E  3203               	rrcf	___awmod@divisor,f,c
  3721  002B60  2E05               	decfsz	___awmod@counter,f,c
  3722  002B62  D7F0               	goto	l2280
  3723  002B64  D000               	goto	l2288
  3724  002B66                     l2288:
  3725  002B66  5006               	movf	___awmod@sign,w,c
  3726  002B68  B4D8               	btfsc	status,2,c
  3727  002B6A  D005               	goto	l2292
  3728  002B6C  6C01               	negf	___awmod@dividend,c
  3729  002B6E  1E02               	comf	___awmod@dividend+1,f,c
  3730  002B70  B0D8               	btfsc	status,0,c
  3731  002B72  2A02               	incf	___awmod@dividend+1,f,c
  3732  002B74  D000               	goto	l2292
  3733  002B76                     l2292:
  3734  002B76  C001  F001         	movff	___awmod@dividend,?___awmod
  3735  002B7A  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3736  002B7E  D000               	goto	l553
  3737  002B80                     l553:
  3738  002B80  0012               	return		;funcret
  3739  002B82                     __end_of___awmod:
  3740                           	opt stack 0
  3741                           tblptru	equ	0xFF8
  3742                           tblptrh	equ	0xFF7
  3743                           tblptrl	equ	0xFF6
  3744                           tablat	equ	0xFF5
  3745                           prodh	equ	0xFF4
  3746                           prodl	equ	0xFF3
  3747                           wreg	equ	0xFE8
  3748                           postinc2	equ	0xFDE
  3749                           postdec2	equ	0xFDD
  3750                           fsr2h	equ	0xFDA
  3751                           fsr2l	equ	0xFD9
  3752                           status	equ	0xFD8
  3753                           
  3754 ;; *************** function ___awdiv *****************
  3755 ;; Defined at:
  3756 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  3757 ;; Parameters:    Size  Location     Type
  3758 ;;  dividend        2    6[COMRAM] int 
  3759 ;;  divisor         2    8[COMRAM] int 
  3760 ;; Auto vars:     Size  Location     Type
  3761 ;;  quotient        2   12[COMRAM] int 
  3762 ;;  sign            1   11[COMRAM] unsigned char 
  3763 ;;  counter         1   10[COMRAM] unsigned char 
  3764 ;; Return value:  Size  Location     Type
  3765 ;;                  2    6[COMRAM] int 
  3766 ;; Registers used:
  3767 ;;		wreg, status,2, status,0
  3768 ;; Tracked objects:
  3769 ;;		On entry : 0/0
  3770 ;;		On exit  : 0/0
  3771 ;;		Unchanged: 0/0
  3772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3773 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3774 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3776 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3777 ;;Total ram usage:        8 bytes
  3778 ;; Hardware stack levels used:    1
  3779 ;; This function calls:
  3780 ;;		Nothing
  3781 ;; This function is called by:
  3782 ;;		_fround
  3783 ;;		_scale
  3784 ;;		_printf
  3785 ;; This function uses a non-reentrant model
  3786 ;;
  3787                           
  3788                           	psect	text12
  3789  0028BA                     __ptext12:
  3790                           	opt stack 0
  3791  0028BA                     ___awdiv:
  3792                           	opt stack 27
  3793                           
  3794                           ;incstack = 0
  3795  0028BA  0E00               	movlw	0
  3796  0028BC  6E0C               	movwf	___awdiv@sign,c
  3797  0028BE  AE0A               	btfss	___awdiv@divisor+1,7,c
  3798  0028C0  D007               	goto	l2224
  3799  0028C2  6C09               	negf	___awdiv@divisor,c
  3800  0028C4  1E0A               	comf	___awdiv@divisor+1,f,c
  3801  0028C6  B0D8               	btfsc	status,0,c
  3802  0028C8  2A0A               	incf	___awdiv@divisor+1,f,c
  3803  0028CA  0E01               	movlw	1
  3804  0028CC  6E0C               	movwf	___awdiv@sign,c
  3805  0028CE  D000               	goto	l2224
  3806  0028D0                     l2224:
  3807  0028D0  AE08               	btfss	___awdiv@dividend+1,7,c
  3808  0028D2  D007               	goto	l2230
  3809  0028D4  6C07               	negf	___awdiv@dividend,c
  3810  0028D6  1E08               	comf	___awdiv@dividend+1,f,c
  3811  0028D8  B0D8               	btfsc	status,0,c
  3812  0028DA  2A08               	incf	___awdiv@dividend+1,f,c
  3813  0028DC  0E01               	movlw	1
  3814  0028DE  1A0C               	xorwf	___awdiv@sign,f,c
  3815  0028E0  D000               	goto	l2230
  3816  0028E2                     l2230:
  3817  0028E2  0E00               	movlw	0
  3818  0028E4  6E0E               	movwf	___awdiv@quotient+1,c
  3819  0028E6  0E00               	movlw	0
  3820  0028E8  6E0D               	movwf	___awdiv@quotient,c
  3821  0028EA  5009               	movf	___awdiv@divisor,w,c
  3822  0028EC  100A               	iorwf	___awdiv@divisor+1,w,c
  3823  0028EE  B4D8               	btfsc	status,2,c
  3824  0028F0  D021               	goto	l2252
  3825  0028F2  0E01               	movlw	1
  3826  0028F4  6E0B               	movwf	___awdiv@counter,c
  3827  0028F6  D005               	goto	l2238
  3828  0028F8                     l2236:
  3829  0028F8  90D8               	bcf	status,0,c
  3830  0028FA  3609               	rlcf	___awdiv@divisor,f,c
  3831  0028FC  360A               	rlcf	___awdiv@divisor+1,f,c
  3832  0028FE  2A0B               	incf	___awdiv@counter,f,c
  3833  002900  D000               	goto	l2238
  3834  002902                     l2238:
  3835  002902  BE0A               	btfsc	___awdiv@divisor+1,7,c
  3836  002904  D002               	goto	l2240
  3837  002906  D7F8               	goto	l2236
  3838  002908  D000               	goto	l2240
  3839  00290A                     l2240:
  3840  00290A  90D8               	bcf	status,0,c
  3841  00290C  360D               	rlcf	___awdiv@quotient,f,c
  3842  00290E  360E               	rlcf	___awdiv@quotient+1,f,c
  3843  002910  5009               	movf	___awdiv@divisor,w,c
  3844  002912  5C07               	subwf	___awdiv@dividend,w,c
  3845  002914  500A               	movf	___awdiv@divisor+1,w,c
  3846  002916  5808               	subwfb	___awdiv@dividend+1,w,c
  3847  002918  A0D8               	btfss	status,0,c
  3848  00291A  D006               	goto	l2248
  3849  00291C  5009               	movf	___awdiv@divisor,w,c
  3850  00291E  5E07               	subwf	___awdiv@dividend,f,c
  3851  002920  500A               	movf	___awdiv@divisor+1,w,c
  3852  002922  5A08               	subwfb	___awdiv@dividend+1,f,c
  3853  002924  800D               	bsf	___awdiv@quotient,0,c
  3854  002926  D000               	goto	l2248
  3855  002928                     l2248:
  3856  002928  90D8               	bcf	status,0,c
  3857  00292A  320A               	rrcf	___awdiv@divisor+1,f,c
  3858  00292C  3209               	rrcf	___awdiv@divisor,f,c
  3859  00292E  2E0B               	decfsz	___awdiv@counter,f,c
  3860  002930  D7EC               	goto	l2240
  3861  002932  D000               	goto	l2252
  3862  002934                     l2252:
  3863  002934  500C               	movf	___awdiv@sign,w,c
  3864  002936  B4D8               	btfsc	status,2,c
  3865  002938  D005               	goto	l2256
  3866  00293A  6C0D               	negf	___awdiv@quotient,c
  3867  00293C  1E0E               	comf	___awdiv@quotient+1,f,c
  3868  00293E  B0D8               	btfsc	status,0,c
  3869  002940  2A0E               	incf	___awdiv@quotient+1,f,c
  3870  002942  D000               	goto	l2256
  3871  002944                     l2256:
  3872  002944  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  3873  002948  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  3874  00294C  D000               	goto	l540
  3875  00294E                     l540:
  3876  00294E  0012               	return		;funcret
  3877  002950                     __end_of___awdiv:
  3878                           	opt stack 0
  3879                           tblptru	equ	0xFF8
  3880                           tblptrh	equ	0xFF7
  3881                           tblptrl	equ	0xFF6
  3882                           tablat	equ	0xFF5
  3883                           prodh	equ	0xFF4
  3884                           prodl	equ	0xFF3
  3885                           wreg	equ	0xFE8
  3886                           postinc2	equ	0xFDE
  3887                           postdec2	equ	0xFDD
  3888                           fsr2h	equ	0xFDA
  3889                           fsr2l	equ	0xFD9
  3890                           status	equ	0xFD8
  3891                           
  3892 ;; *************** function __tdiv_to_l_ *****************
  3893 ;; Defined at:
  3894 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdivl.c"
  3895 ;; Parameters:    Size  Location     Type
  3896 ;;  f1              3    0[COMRAM] float 
  3897 ;;  f2              3    3[COMRAM] float 
  3898 ;; Auto vars:     Size  Location     Type
  3899 ;;  quot            4    9[COMRAM] unsigned long 
  3900 ;;  exp1            1   14[COMRAM] unsigned char 
  3901 ;;  cntr            1   13[COMRAM] unsigned char 
  3902 ;; Return value:  Size  Location     Type
  3903 ;;                  4    0[COMRAM] unsigned long 
  3904 ;; Registers used:
  3905 ;;		wreg, status,2, status,0
  3906 ;; Tracked objects:
  3907 ;;		On entry : 0/0
  3908 ;;		On exit  : 0/0
  3909 ;;		Unchanged: 0/0
  3910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3911 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3912 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3913 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3914 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3915 ;;Total ram usage:       15 bytes
  3916 ;; Hardware stack levels used:    1
  3917 ;; This function calls:
  3918 ;;		Nothing
  3919 ;; This function is called by:
  3920 ;;		_printf
  3921 ;; This function uses a non-reentrant model
  3922 ;;
  3923                           
  3924                           	psect	text13
  3925  002112                     __ptext13:
  3926                           	opt stack 0
  3927  002112                     __tdiv_to_l_:
  3928                           	opt stack 28
  3929                           
  3930                           ;incstack = 0
  3931  002112  C003  F007         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  3932  002116  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3933  002118  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3934  00211A  3402               	rlcf	__tdiv_to_l_@f1+1,w,c
  3935  00211C  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3936  00211E  E301               	bnc	u2171
  3937  002120  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3938  002122                     u2171:
  3939  002122  5007               	movf	??__tdiv_to_l_,w,c
  3940  002124  6E0F               	movwf	__tdiv_to_l_@exp1,c
  3941  002126  500F               	movf	__tdiv_to_l_@exp1,w,c
  3942  002128  A4D8               	btfss	status,2,c
  3943  00212A  D002               	goto	l2374
  3944  00212C  D05D               	goto	l2416
  3945  00212E  D078               	goto	l752
  3946  002130                     l2374:
  3947  002130  C006  F007         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  3948  002134  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3949  002136  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3950  002138  3405               	rlcf	__tdiv_to_l_@f2+1,w,c
  3951  00213A  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3952  00213C  E301               	bnc	u2191
  3953  00213E  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3954  002140                     u2191:
  3955  002140  5007               	movf	??__tdiv_to_l_,w,c
  3956  002142  6E0E               	movwf	__tdiv_to_l_@cntr,c
  3957  002144  500E               	movf	__tdiv_to_l_@cntr,w,c
  3958  002146  A4D8               	btfss	status,2,c
  3959  002148  D002               	goto	l2380
  3960  00214A  D04E               	goto	l2416
  3961  00214C  D069               	goto	l752
  3962  00214E                     l2380:
  3963  00214E  8E02               	bsf	__tdiv_to_l_@f1+1,7,c
  3964  002150  0EFF               	movlw	255
  3965  002152  1601               	andwf	__tdiv_to_l_@f1,f,c
  3966  002154  0EFF               	movlw	255
  3967  002156  1602               	andwf	__tdiv_to_l_@f1+1,f,c
  3968  002158  0E00               	movlw	0
  3969  00215A  1603               	andwf	__tdiv_to_l_@f1+2,f,c
  3970  00215C  8E05               	bsf	__tdiv_to_l_@f2+1,7,c
  3971  00215E  0EFF               	movlw	255
  3972  002160  1604               	andwf	__tdiv_to_l_@f2,f,c
  3973  002162  0EFF               	movlw	255
  3974  002164  1605               	andwf	__tdiv_to_l_@f2+1,f,c
  3975  002166  0E00               	movlw	0
  3976  002168  1606               	andwf	__tdiv_to_l_@f2+2,f,c
  3977  00216A  0E00               	movlw	0
  3978  00216C  6E0A               	movwf	__tdiv_to_l_@quot,c
  3979  00216E  0E00               	movlw	0
  3980  002170  6E0B               	movwf	__tdiv_to_l_@quot+1,c
  3981  002172  0E00               	movlw	0
  3982  002174  6E0C               	movwf	__tdiv_to_l_@quot+2,c
  3983  002176  0E00               	movlw	0
  3984  002178  6E0D               	movwf	__tdiv_to_l_@quot+3,c
  3985  00217A  0E7F               	movlw	127
  3986  00217C  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  3987  00217E  500E               	movf	__tdiv_to_l_@cntr,w,c
  3988  002180  0F98               	addlw	152
  3989  002182  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  3990  002184  0E18               	movlw	24
  3991  002186  6E0E               	movwf	__tdiv_to_l_@cntr,c
  3992  002188                     l754:
  3993  002188  90D8               	bcf	status,0,c
  3994  00218A  360A               	rlcf	__tdiv_to_l_@quot,f,c
  3995  00218C  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  3996  00218E  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  3997  002190  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  3998  002192  5004               	movf	__tdiv_to_l_@f2,w,c
  3999  002194  5C01               	subwf	__tdiv_to_l_@f1,w,c
  4000  002196  5005               	movf	__tdiv_to_l_@f2+1,w,c
  4001  002198  5802               	subwfb	__tdiv_to_l_@f1+1,w,c
  4002  00219A  5006               	movf	__tdiv_to_l_@f2+2,w,c
  4003  00219C  5803               	subwfb	__tdiv_to_l_@f1+2,w,c
  4004  00219E  A0D8               	btfss	status,0,c
  4005  0021A0  D007               	goto	l755
  4006  0021A2  5004               	movf	__tdiv_to_l_@f2,w,c
  4007  0021A4  5E01               	subwf	__tdiv_to_l_@f1,f,c
  4008  0021A6  5005               	movf	__tdiv_to_l_@f2+1,w,c
  4009  0021A8  5A02               	subwfb	__tdiv_to_l_@f1+1,f,c
  4010  0021AA  5006               	movf	__tdiv_to_l_@f2+2,w,c
  4011  0021AC  5A03               	subwfb	__tdiv_to_l_@f1+2,f,c
  4012  0021AE  800A               	bsf	__tdiv_to_l_@quot,0,c
  4013  0021B0                     l755:
  4014  0021B0  90D8               	bcf	status,0,c
  4015  0021B2  3601               	rlcf	__tdiv_to_l_@f1,f,c
  4016  0021B4  3602               	rlcf	__tdiv_to_l_@f1+1,f,c
  4017  0021B6  3603               	rlcf	__tdiv_to_l_@f1+2,f,c
  4018  0021B8  2E0E               	decfsz	__tdiv_to_l_@cntr,f,c
  4019  0021BA  D7E6               	goto	l754
  4020  0021BC  D000               	goto	l2402
  4021  0021BE                     l2402:
  4022  0021BE  AE0F               	btfss	__tdiv_to_l_@exp1,7,c
  4023  0021C0  D010               	goto	l2414
  4024  0021C2  500F               	movf	__tdiv_to_l_@exp1,w,c
  4025  0021C4  0A80               	xorlw	128
  4026  0021C6  0F97               	addlw	151
  4027  0021C8  B0D8               	btfsc	status,0,c
  4028  0021CA  D003               	goto	l2410
  4029  0021CC  D00D               	goto	l2416
  4030  0021CE  D028               	goto	l752
  4031  0021D0  D000               	goto	l2410
  4032  0021D2                     l2410:
  4033  0021D2  90D8               	bcf	status,0,c
  4034  0021D4  320D               	rrcf	__tdiv_to_l_@quot+3,f,c
  4035  0021D6  320C               	rrcf	__tdiv_to_l_@quot+2,f,c
  4036  0021D8  320B               	rrcf	__tdiv_to_l_@quot+1,f,c
  4037  0021DA  320A               	rrcf	__tdiv_to_l_@quot,f,c
  4038  0021DC  3E0F               	incfsz	__tdiv_to_l_@exp1,f,c
  4039  0021DE  D7F9               	goto	l2410
  4040  0021E0  D017               	goto	l761
  4041  0021E2                     l2414:
  4042  0021E2  0E17               	movlw	23
  4043  0021E4  640F               	cpfsgt	__tdiv_to_l_@exp1,c
  4044  0021E6  D011               	goto	l2422
  4045  0021E8                     l2416:
  4046  0021E8  0E00               	movlw	0
  4047  0021EA  6E01               	movwf	?__tdiv_to_l_,c
  4048  0021EC  0E00               	movlw	0
  4049  0021EE  6E02               	movwf	?__tdiv_to_l_+1,c
  4050  0021F0  0E00               	movlw	0
  4051  0021F2  6E03               	movwf	?__tdiv_to_l_+2,c
  4052  0021F4  0E00               	movlw	0
  4053  0021F6  6E04               	movwf	?__tdiv_to_l_+3,c
  4054  0021F8  D013               	goto	l752
  4055  0021FA  D007               	goto	l2422
  4056  0021FC                     l2420:
  4057  0021FC  90D8               	bcf	status,0,c
  4058  0021FE  360A               	rlcf	__tdiv_to_l_@quot,f,c
  4059  002200  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  4060  002202  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  4061  002204  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  4062  002206  060F               	decf	__tdiv_to_l_@exp1,f,c
  4063  002208  D000               	goto	l2422
  4064  00220A                     l2422:
  4065  00220A  500F               	movf	__tdiv_to_l_@exp1,w,c
  4066  00220C  A4D8               	btfss	status,2,c
  4067  00220E  D7F6               	goto	l2420
  4068  002210                     l761:
  4069  002210  C00A  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  4070  002214  C00B  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  4071  002218  C00C  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  4072  00221C  C00D  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  4073  002220                     l752:
  4074  002220  0012               	return		;funcret
  4075  002222                     __end_of__tdiv_to_l_:
  4076                           	opt stack 0
  4077                           tblptru	equ	0xFF8
  4078                           tblptrh	equ	0xFF7
  4079                           tblptrl	equ	0xFF6
  4080                           tablat	equ	0xFF5
  4081                           prodh	equ	0xFF4
  4082                           prodl	equ	0xFF3
  4083                           wreg	equ	0xFE8
  4084                           postinc2	equ	0xFDE
  4085                           postdec2	equ	0xFDD
  4086                           fsr2h	equ	0xFDA
  4087                           fsr2l	equ	0xFD9
  4088                           status	equ	0xFD8
  4089                           
  4090 ;; *************** function __div_to_l_ *****************
  4091 ;; Defined at:
  4092 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fldivl.c"
  4093 ;; Parameters:    Size  Location     Type
  4094 ;;  f1              3    0[COMRAM] unsigned long 
  4095 ;;  f2              3    3[COMRAM] unsigned long 
  4096 ;; Auto vars:     Size  Location     Type
  4097 ;;  quot            4    6[COMRAM] unsigned long 
  4098 ;;  exp1            1   11[COMRAM] unsigned char 
  4099 ;;  cntr            1   10[COMRAM] unsigned char 
  4100 ;; Return value:  Size  Location     Type
  4101 ;;                  4    0[COMRAM] unsigned long 
  4102 ;; Registers used:
  4103 ;;		wreg, status,2, status,0
  4104 ;; Tracked objects:
  4105 ;;		On entry : 0/0
  4106 ;;		On exit  : 0/0
  4107 ;;		Unchanged: 0/0
  4108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4109 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4110 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4112 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4113 ;;Total ram usage:       12 bytes
  4114 ;; Hardware stack levels used:    1
  4115 ;; This function calls:
  4116 ;;		Nothing
  4117 ;; This function is called by:
  4118 ;;		_printf
  4119 ;; This function uses a non-reentrant model
  4120 ;;
  4121                           
  4122                           	psect	text14
  4123  002222                     __ptext14:
  4124                           	opt stack 0
  4125  002222                     __div_to_l_:
  4126                           	opt stack 28
  4127                           
  4128                           ;incstack = 0
  4129  002222  3403               	rlcf	__div_to_l_@f1+2,w,c
  4130  002224  3404               	rlcf	__div_to_l_@f1+3,w,c
  4131  002226  6E0C               	movwf	__div_to_l_@exp1,c
  4132  002228  500C               	movf	__div_to_l_@exp1,w,c
  4133  00222A  A4D8               	btfss	status,2,c
  4134  00222C  D002               	goto	l2430
  4135  00222E  D061               	goto	l2476
  4136  002230  D07C               	goto	l631
  4137  002232                     l2430:
  4138  002232  3406               	rlcf	__div_to_l_@f2+2,w,c
  4139  002234  3407               	rlcf	__div_to_l_@f2+3,w,c
  4140  002236  6E0B               	movwf	__div_to_l_@cntr,c
  4141  002238  500B               	movf	__div_to_l_@cntr,w,c
  4142  00223A  A4D8               	btfss	status,2,c
  4143  00223C  D002               	goto	l2436
  4144  00223E  D059               	goto	l2476
  4145  002240  D074               	goto	l631
  4146  002242                     l2436:
  4147  002242  8E03               	bsf	__div_to_l_@f1+2,7,c
  4148  002244  0EFF               	movlw	255
  4149  002246  1601               	andwf	__div_to_l_@f1,f,c
  4150  002248  0EFF               	movlw	255
  4151  00224A  1602               	andwf	__div_to_l_@f1+1,f,c
  4152  00224C  0EFF               	movlw	255
  4153  00224E  1603               	andwf	__div_to_l_@f1+2,f,c
  4154  002250  0E00               	movlw	0
  4155  002252  1604               	andwf	__div_to_l_@f1+3,f,c
  4156  002254  8E06               	bsf	__div_to_l_@f2+2,7,c
  4157  002256  0EFF               	movlw	255
  4158  002258  1604               	andwf	__div_to_l_@f2,f,c
  4159  00225A  0EFF               	movlw	255
  4160  00225C  1605               	andwf	__div_to_l_@f2+1,f,c
  4161  00225E  0EFF               	movlw	255
  4162  002260  1606               	andwf	__div_to_l_@f2+2,f,c
  4163  002262  0E00               	movlw	0
  4164  002264  1607               	andwf	__div_to_l_@f2+3,f,c
  4165  002266  0E00               	movlw	0
  4166  002268  6E07               	movwf	__div_to_l_@quot,c
  4167  00226A  0E00               	movlw	0
  4168  00226C  6E08               	movwf	__div_to_l_@quot+1,c
  4169  00226E  0E00               	movlw	0
  4170  002270  6E09               	movwf	__div_to_l_@quot+2,c
  4171  002272  0E00               	movlw	0
  4172  002274  6E0A               	movwf	__div_to_l_@quot+3,c
  4173  002276  0E7F               	movlw	127
  4174  002278  5E0C               	subwf	__div_to_l_@exp1,f,c
  4175  00227A  500B               	movf	__div_to_l_@cntr,w,c
  4176  00227C  0FA0               	addlw	160
  4177  00227E  5E0C               	subwf	__div_to_l_@exp1,f,c
  4178  002280  0E20               	movlw	32
  4179  002282  6E0B               	movwf	__div_to_l_@cntr,c
  4180  002284  D000               	goto	l2450
  4181  002286                     l2450:
  4182  002286  90D8               	bcf	status,0,c
  4183  002288  3607               	rlcf	__div_to_l_@quot,f,c
  4184  00228A  3608               	rlcf	__div_to_l_@quot+1,f,c
  4185  00228C  3609               	rlcf	__div_to_l_@quot+2,f,c
  4186  00228E  360A               	rlcf	__div_to_l_@quot+3,f,c
  4187  002290  5004               	movf	__div_to_l_@f2,w,c
  4188  002292  5C01               	subwf	__div_to_l_@f1,w,c
  4189  002294  5005               	movf	__div_to_l_@f2+1,w,c
  4190  002296  5802               	subwfb	__div_to_l_@f1+1,w,c
  4191  002298  5006               	movf	__div_to_l_@f2+2,w,c
  4192  00229A  5803               	subwfb	__div_to_l_@f1+2,w,c
  4193  00229C  5007               	movf	__div_to_l_@f2+3,w,c
  4194  00229E  5804               	subwfb	__div_to_l_@f1+3,w,c
  4195  0022A0  A0D8               	btfss	status,0,c
  4196  0022A2  D00A               	goto	l2458
  4197  0022A4  5004               	movf	__div_to_l_@f2,w,c
  4198  0022A6  5E01               	subwf	__div_to_l_@f1,f,c
  4199  0022A8  5005               	movf	__div_to_l_@f2+1,w,c
  4200  0022AA  5A02               	subwfb	__div_to_l_@f1+1,f,c
  4201  0022AC  5006               	movf	__div_to_l_@f2+2,w,c
  4202  0022AE  5A03               	subwfb	__div_to_l_@f1+2,f,c
  4203  0022B0  5007               	movf	__div_to_l_@f2+3,w,c
  4204  0022B2  5A04               	subwfb	__div_to_l_@f1+3,f,c
  4205  0022B4  8007               	bsf	__div_to_l_@quot,0,c
  4206  0022B6  D000               	goto	l2458
  4207  0022B8                     l2458:
  4208  0022B8  90D8               	bcf	status,0,c
  4209  0022BA  3601               	rlcf	__div_to_l_@f1,f,c
  4210  0022BC  3602               	rlcf	__div_to_l_@f1+1,f,c
  4211  0022BE  3603               	rlcf	__div_to_l_@f1+2,f,c
  4212  0022C0  3604               	rlcf	__div_to_l_@f1+3,f,c
  4213  0022C2  2E0B               	decfsz	__div_to_l_@cntr,f,c
  4214  0022C4  D7E0               	goto	l2450
  4215  0022C6  D000               	goto	l2462
  4216  0022C8                     l2462:
  4217  0022C8  AE0C               	btfss	__div_to_l_@exp1,7,c
  4218  0022CA  D010               	goto	l2474
  4219  0022CC  500C               	movf	__div_to_l_@exp1,w,c
  4220  0022CE  0A80               	xorlw	128
  4221  0022D0  0F9F               	addlw	159
  4222  0022D2  B0D8               	btfsc	status,0,c
  4223  0022D4  D003               	goto	l2470
  4224  0022D6  D00D               	goto	l2476
  4225  0022D8  D028               	goto	l631
  4226  0022DA  D000               	goto	l2470
  4227  0022DC                     l2470:
  4228  0022DC  90D8               	bcf	status,0,c
  4229  0022DE  320A               	rrcf	__div_to_l_@quot+3,f,c
  4230  0022E0  3209               	rrcf	__div_to_l_@quot+2,f,c
  4231  0022E2  3208               	rrcf	__div_to_l_@quot+1,f,c
  4232  0022E4  3207               	rrcf	__div_to_l_@quot,f,c
  4233  0022E6  3E0C               	incfsz	__div_to_l_@exp1,f,c
  4234  0022E8  D7F9               	goto	l2470
  4235  0022EA  D017               	goto	l640
  4236  0022EC                     l2474:
  4237  0022EC  0E1F               	movlw	31
  4238  0022EE  640C               	cpfsgt	__div_to_l_@exp1,c
  4239  0022F0  D011               	goto	l2482
  4240  0022F2                     l2476:
  4241  0022F2  0E00               	movlw	0
  4242  0022F4  6E01               	movwf	?__div_to_l_,c
  4243  0022F6  0E00               	movlw	0
  4244  0022F8  6E02               	movwf	?__div_to_l_+1,c
  4245  0022FA  0E00               	movlw	0
  4246  0022FC  6E03               	movwf	?__div_to_l_+2,c
  4247  0022FE  0E00               	movlw	0
  4248  002300  6E04               	movwf	?__div_to_l_+3,c
  4249  002302  D013               	goto	l631
  4250  002304  D007               	goto	l2482
  4251  002306                     l2480:
  4252  002306  90D8               	bcf	status,0,c
  4253  002308  3607               	rlcf	__div_to_l_@quot,f,c
  4254  00230A  3608               	rlcf	__div_to_l_@quot+1,f,c
  4255  00230C  3609               	rlcf	__div_to_l_@quot+2,f,c
  4256  00230E  360A               	rlcf	__div_to_l_@quot+3,f,c
  4257  002310  060C               	decf	__div_to_l_@exp1,f,c
  4258  002312  D000               	goto	l2482
  4259  002314                     l2482:
  4260  002314  500C               	movf	__div_to_l_@exp1,w,c
  4261  002316  A4D8               	btfss	status,2,c
  4262  002318  D7F6               	goto	l2480
  4263  00231A                     l640:
  4264  00231A  C007  F001         	movff	__div_to_l_@quot,?__div_to_l_
  4265  00231E  C008  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  4266  002322  C009  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  4267  002326  C00A  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  4268  00232A                     l631:
  4269  00232A  0012               	return		;funcret
  4270  00232C                     __end_of__div_to_l_:
  4271                           	opt stack 0
  4272                           tblptru	equ	0xFF8
  4273                           tblptrh	equ	0xFF7
  4274                           tblptrl	equ	0xFF6
  4275                           tablat	equ	0xFF5
  4276                           prodh	equ	0xFF4
  4277                           prodl	equ	0xFF3
  4278                           wreg	equ	0xFE8
  4279                           postinc2	equ	0xFDE
  4280                           postdec2	equ	0xFDD
  4281                           fsr2h	equ	0xFDA
  4282                           fsr2l	equ	0xFD9
  4283                           status	equ	0xFD8
  4284                           
  4285 ;; *************** function ___lltoft *****************
  4286 ;; Defined at:
  4287 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lltoft.c"
  4288 ;; Parameters:    Size  Location     Type
  4289 ;;  c               4    8[COMRAM] unsigned long 
  4290 ;; Auto vars:     Size  Location     Type
  4291 ;;  exp             1   16[COMRAM] unsigned char 
  4292 ;; Return value:  Size  Location     Type
  4293 ;;                  3    8[COMRAM] float 
  4294 ;; Registers used:
  4295 ;;		wreg, status,2, status,0, cstack
  4296 ;; Tracked objects:
  4297 ;;		On entry : 0/0
  4298 ;;		On exit  : 0/0
  4299 ;;		Unchanged: 0/0
  4300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4301 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4302 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4303 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4304 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4305 ;;Total ram usage:        9 bytes
  4306 ;; Hardware stack levels used:    1
  4307 ;; Hardware stack levels required when called:    1
  4308 ;; This function calls:
  4309 ;;		___ftpack
  4310 ;; This function is called by:
  4311 ;;		_printf
  4312 ;; This function uses a non-reentrant model
  4313 ;;
  4314                           
  4315                           	psect	text15
  4316  002C62                     __ptext15:
  4317                           	opt stack 0
  4318  002C62                     ___lltoft:
  4319                           	opt stack 27
  4320                           
  4321                           ;incstack = 0
  4322  002C62  0E8E               	movlw	142
  4323  002C64  6E11               	movwf	___lltoft@exp,c
  4324  002C66  D007               	goto	l2602
  4325  002C68                     l2600:
  4326  002C68  90D8               	bcf	status,0,c
  4327  002C6A  320C               	rrcf	___lltoft@c+3,f,c
  4328  002C6C  320B               	rrcf	___lltoft@c+2,f,c
  4329  002C6E  320A               	rrcf	___lltoft@c+1,f,c
  4330  002C70  3209               	rrcf	___lltoft@c,f,c
  4331  002C72  2A11               	incf	___lltoft@exp,f,c
  4332  002C74  D000               	goto	l2602
  4333  002C76                     l2602:
  4334  002C76  0E00               	movlw	0
  4335  002C78  1409               	andwf	___lltoft@c,w,c
  4336  002C7A  6E0D               	movwf	??___lltoft& (0+255),c
  4337  002C7C  0E00               	movlw	0
  4338  002C7E  140A               	andwf	___lltoft@c+1,w,c
  4339  002C80  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  4340  002C82  0E00               	movlw	0
  4341  002C84  140B               	andwf	___lltoft@c+2,w,c
  4342  002C86  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  4343  002C88  0EFF               	movlw	255
  4344  002C8A  140C               	andwf	___lltoft@c+3,w,c
  4345  002C8C  6E10               	movwf	(??___lltoft+3)& (0+255),c
  4346  002C8E  500D               	movf	??___lltoft,w,c
  4347  002C90  100E               	iorwf	??___lltoft+1,w,c
  4348  002C92  100F               	iorwf	??___lltoft+2,w,c
  4349  002C94  1010               	iorwf	??___lltoft+3,w,c
  4350  002C96  A4D8               	btfss	status,2,c
  4351  002C98  D7E7               	goto	l2600
  4352  002C9A  C009  F001         	movff	___lltoft@c,___ftpack@arg
  4353  002C9E  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  4354  002CA2  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  4355  002CA6  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  4356  002CAA  0E00               	movlw	0
  4357  002CAC  6E05               	movwf	___ftpack@sign,c
  4358  002CAE  ECEC  F012         	call	___ftpack	;wreg free
  4359  002CB2  C001  F009         	movff	?___ftpack,?___lltoft
  4360  002CB6  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  4361  002CBA  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  4362  002CBE  D000               	goto	l871
  4363  002CC0                     l871:
  4364  002CC0  0012               	return		;funcret
  4365  002CC2                     __end_of___lltoft:
  4366                           	opt stack 0
  4367                           tblptru	equ	0xFF8
  4368                           tblptrh	equ	0xFF7
  4369                           tblptrl	equ	0xFF6
  4370                           tablat	equ	0xFF5
  4371                           prodh	equ	0xFF4
  4372                           prodl	equ	0xFF3
  4373                           wreg	equ	0xFE8
  4374                           postinc2	equ	0xFDE
  4375                           postdec2	equ	0xFDD
  4376                           fsr2h	equ	0xFDA
  4377                           fsr2l	equ	0xFD9
  4378                           status	equ	0xFD8
  4379                           
  4380 ;; *************** function ___llmod *****************
  4381 ;; Defined at:
  4382 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  4383 ;; Parameters:    Size  Location     Type
  4384 ;;  dividend        4    0[COMRAM] unsigned long 
  4385 ;;  divisor         4    4[COMRAM] unsigned long 
  4386 ;; Auto vars:     Size  Location     Type
  4387 ;;  counter         1    8[COMRAM] unsigned char 
  4388 ;; Return value:  Size  Location     Type
  4389 ;;                  4    0[COMRAM] unsigned long 
  4390 ;; Registers used:
  4391 ;;		wreg, status,2, status,0
  4392 ;; Tracked objects:
  4393 ;;		On entry : 0/0
  4394 ;;		On exit  : 0/0
  4395 ;;		Unchanged: 0/0
  4396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4397 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4398 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4400 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4401 ;;Total ram usage:        9 bytes
  4402 ;; Hardware stack levels used:    1
  4403 ;; This function calls:
  4404 ;;		Nothing
  4405 ;; This function is called by:
  4406 ;;		_printf
  4407 ;; This function uses a non-reentrant model
  4408 ;;
  4409                           
  4410                           	psect	text16
  4411  002B82                     __ptext16:
  4412                           	opt stack 0
  4413  002B82                     ___llmod:
  4414                           	opt stack 28
  4415                           
  4416                           ;incstack = 0
  4417  002B82  5005               	movf	___llmod@divisor,w,c
  4418  002B84  1006               	iorwf	___llmod@divisor+1,w,c
  4419  002B86  1007               	iorwf	___llmod@divisor+2,w,c
  4420  002B88  1008               	iorwf	___llmod@divisor+3,w,c
  4421  002B8A  B4D8               	btfsc	status,2,c
  4422  002B8C  D029               	goto	l851
  4423  002B8E  0E01               	movlw	1
  4424  002B90  6E09               	movwf	___llmod@counter,c
  4425  002B92  D007               	goto	l2588
  4426  002B94                     l2586:
  4427  002B94  90D8               	bcf	status,0,c
  4428  002B96  3605               	rlcf	___llmod@divisor,f,c
  4429  002B98  3606               	rlcf	___llmod@divisor+1,f,c
  4430  002B9A  3607               	rlcf	___llmod@divisor+2,f,c
  4431  002B9C  3608               	rlcf	___llmod@divisor+3,f,c
  4432  002B9E  2A09               	incf	___llmod@counter,f,c
  4433  002BA0  D000               	goto	l2588
  4434  002BA2                     l2588:
  4435  002BA2  BE08               	btfsc	___llmod@divisor+3,7,c
  4436  002BA4  D002               	goto	l2590
  4437  002BA6  D7F6               	goto	l2586
  4438  002BA8  D000               	goto	l2590
  4439  002BAA                     l2590:
  4440  002BAA  5005               	movf	___llmod@divisor,w,c
  4441  002BAC  5C01               	subwf	___llmod@dividend,w,c
  4442  002BAE  5006               	movf	___llmod@divisor+1,w,c
  4443  002BB0  5802               	subwfb	___llmod@dividend+1,w,c
  4444  002BB2  5007               	movf	___llmod@divisor+2,w,c
  4445  002BB4  5803               	subwfb	___llmod@dividend+2,w,c
  4446  002BB6  5008               	movf	___llmod@divisor+3,w,c
  4447  002BB8  5804               	subwfb	___llmod@dividend+3,w,c
  4448  002BBA  A0D8               	btfss	status,0,c
  4449  002BBC  D009               	goto	l2594
  4450  002BBE  5005               	movf	___llmod@divisor,w,c
  4451  002BC0  5E01               	subwf	___llmod@dividend,f,c
  4452  002BC2  5006               	movf	___llmod@divisor+1,w,c
  4453  002BC4  5A02               	subwfb	___llmod@dividend+1,f,c
  4454  002BC6  5007               	movf	___llmod@divisor+2,w,c
  4455  002BC8  5A03               	subwfb	___llmod@dividend+2,f,c
  4456  002BCA  5008               	movf	___llmod@divisor+3,w,c
  4457  002BCC  5A04               	subwfb	___llmod@dividend+3,f,c
  4458  002BCE  D000               	goto	l2594
  4459  002BD0                     l2594:
  4460  002BD0  90D8               	bcf	status,0,c
  4461  002BD2  3208               	rrcf	___llmod@divisor+3,f,c
  4462  002BD4  3207               	rrcf	___llmod@divisor+2,f,c
  4463  002BD6  3206               	rrcf	___llmod@divisor+1,f,c
  4464  002BD8  3205               	rrcf	___llmod@divisor,f,c
  4465  002BDA  2E09               	decfsz	___llmod@counter,f,c
  4466  002BDC  D7E6               	goto	l2590
  4467  002BDE  D000               	goto	l851
  4468  002BE0                     l851:
  4469  002BE0  C001  F001         	movff	___llmod@dividend,?___llmod
  4470  002BE4  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  4471  002BE8  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  4472  002BEC  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  4473  002BF0  0012               	return		;funcret
  4474  002BF2                     __end_of___llmod:
  4475                           	opt stack 0
  4476                           tblptru	equ	0xFF8
  4477                           tblptrh	equ	0xFF7
  4478                           tblptrl	equ	0xFF6
  4479                           tablat	equ	0xFF5
  4480                           prodh	equ	0xFF4
  4481                           prodl	equ	0xFF3
  4482                           wreg	equ	0xFE8
  4483                           postinc2	equ	0xFDE
  4484                           postdec2	equ	0xFDD
  4485                           fsr2h	equ	0xFDA
  4486                           fsr2l	equ	0xFD9
  4487                           status	equ	0xFD8
  4488                           
  4489 ;; *************** function ___lldiv *****************
  4490 ;; Defined at:
  4491 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
  4492 ;; Parameters:    Size  Location     Type
  4493 ;;  dividend        4    0[COMRAM] unsigned long 
  4494 ;;  divisor         4    4[COMRAM] unsigned long 
  4495 ;; Auto vars:     Size  Location     Type
  4496 ;;  quotient        4    8[COMRAM] unsigned long 
  4497 ;;  counter         1   12[COMRAM] unsigned char 
  4498 ;; Return value:  Size  Location     Type
  4499 ;;                  4    0[COMRAM] unsigned long 
  4500 ;; Registers used:
  4501 ;;		wreg, status,2, status,0
  4502 ;; Tracked objects:
  4503 ;;		On entry : 0/0
  4504 ;;		On exit  : 0/0
  4505 ;;		Unchanged: 0/0
  4506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4507 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4508 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4510 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4511 ;;Total ram usage:       13 bytes
  4512 ;; Hardware stack levels used:    1
  4513 ;; This function calls:
  4514 ;;		Nothing
  4515 ;; This function is called by:
  4516 ;;		_printf
  4517 ;; This function uses a non-reentrant model
  4518 ;;
  4519                           
  4520                           	psect	text17
  4521  002A74                     __ptext17:
  4522                           	opt stack 0
  4523  002A74                     ___lldiv:
  4524                           	opt stack 28
  4525                           
  4526                           ;incstack = 0
  4527  002A74  0E00               	movlw	0
  4528  002A76  6E09               	movwf	___lldiv@quotient,c
  4529  002A78  0E00               	movlw	0
  4530  002A7A  6E0A               	movwf	___lldiv@quotient+1,c
  4531  002A7C  0E00               	movlw	0
  4532  002A7E  6E0B               	movwf	___lldiv@quotient+2,c
  4533  002A80  0E00               	movlw	0
  4534  002A82  6E0C               	movwf	___lldiv@quotient+3,c
  4535  002A84  5005               	movf	___lldiv@divisor,w,c
  4536  002A86  1006               	iorwf	___lldiv@divisor+1,w,c
  4537  002A88  1007               	iorwf	___lldiv@divisor+2,w,c
  4538  002A8A  1008               	iorwf	___lldiv@divisor+3,w,c
  4539  002A8C  B4D8               	btfsc	status,2,c
  4540  002A8E  D02F               	goto	l841
  4541  002A90  0E01               	movlw	1
  4542  002A92  6E0D               	movwf	___lldiv@counter,c
  4543  002A94  D007               	goto	l2568
  4544  002A96                     l2566:
  4545  002A96  90D8               	bcf	status,0,c
  4546  002A98  3605               	rlcf	___lldiv@divisor,f,c
  4547  002A9A  3606               	rlcf	___lldiv@divisor+1,f,c
  4548  002A9C  3607               	rlcf	___lldiv@divisor+2,f,c
  4549  002A9E  3608               	rlcf	___lldiv@divisor+3,f,c
  4550  002AA0  2A0D               	incf	___lldiv@counter,f,c
  4551  002AA2  D000               	goto	l2568
  4552  002AA4                     l2568:
  4553  002AA4  BE08               	btfsc	___lldiv@divisor+3,7,c
  4554  002AA6  D002               	goto	l2570
  4555  002AA8  D7F6               	goto	l2566
  4556  002AAA  D000               	goto	l2570
  4557  002AAC                     l2570:
  4558  002AAC  90D8               	bcf	status,0,c
  4559  002AAE  3609               	rlcf	___lldiv@quotient,f,c
  4560  002AB0  360A               	rlcf	___lldiv@quotient+1,f,c
  4561  002AB2  360B               	rlcf	___lldiv@quotient+2,f,c
  4562  002AB4  360C               	rlcf	___lldiv@quotient+3,f,c
  4563  002AB6  5005               	movf	___lldiv@divisor,w,c
  4564  002AB8  5C01               	subwf	___lldiv@dividend,w,c
  4565  002ABA  5006               	movf	___lldiv@divisor+1,w,c
  4566  002ABC  5802               	subwfb	___lldiv@dividend+1,w,c
  4567  002ABE  5007               	movf	___lldiv@divisor+2,w,c
  4568  002AC0  5803               	subwfb	___lldiv@dividend+2,w,c
  4569  002AC2  5008               	movf	___lldiv@divisor+3,w,c
  4570  002AC4  5804               	subwfb	___lldiv@dividend+3,w,c
  4571  002AC6  A0D8               	btfss	status,0,c
  4572  002AC8  D00A               	goto	l2578
  4573  002ACA  5005               	movf	___lldiv@divisor,w,c
  4574  002ACC  5E01               	subwf	___lldiv@dividend,f,c
  4575  002ACE  5006               	movf	___lldiv@divisor+1,w,c
  4576  002AD0  5A02               	subwfb	___lldiv@dividend+1,f,c
  4577  002AD2  5007               	movf	___lldiv@divisor+2,w,c
  4578  002AD4  5A03               	subwfb	___lldiv@dividend+2,f,c
  4579  002AD6  5008               	movf	___lldiv@divisor+3,w,c
  4580  002AD8  5A04               	subwfb	___lldiv@dividend+3,f,c
  4581  002ADA  8009               	bsf	___lldiv@quotient,0,c
  4582  002ADC  D000               	goto	l2578
  4583  002ADE                     l2578:
  4584  002ADE  90D8               	bcf	status,0,c
  4585  002AE0  3208               	rrcf	___lldiv@divisor+3,f,c
  4586  002AE2  3207               	rrcf	___lldiv@divisor+2,f,c
  4587  002AE4  3206               	rrcf	___lldiv@divisor+1,f,c
  4588  002AE6  3205               	rrcf	___lldiv@divisor,f,c
  4589  002AE8  2E0D               	decfsz	___lldiv@counter,f,c
  4590  002AEA  D7E0               	goto	l2570
  4591  002AEC  D000               	goto	l841
  4592  002AEE                     l841:
  4593  002AEE  C009  F001         	movff	___lldiv@quotient,?___lldiv
  4594  002AF2  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  4595  002AF6  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  4596  002AFA  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  4597  002AFE  0012               	return		;funcret
  4598  002B00                     __end_of___lldiv:
  4599                           	opt stack 0
  4600                           tblptru	equ	0xFF8
  4601                           tblptrh	equ	0xFF7
  4602                           tblptrl	equ	0xFF6
  4603                           tablat	equ	0xFF5
  4604                           prodh	equ	0xFF4
  4605                           prodl	equ	0xFF3
  4606                           wreg	equ	0xFE8
  4607                           postinc2	equ	0xFDE
  4608                           postdec2	equ	0xFDD
  4609                           fsr2h	equ	0xFDA
  4610                           fsr2l	equ	0xFD9
  4611                           status	equ	0xFD8
  4612                           
  4613 ;; *************** function ___fttol *****************
  4614 ;; Defined at:
  4615 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
  4616 ;; Parameters:    Size  Location     Type
  4617 ;;  f1              3   42[COMRAM] float 
  4618 ;; Auto vars:     Size  Location     Type
  4619 ;;  lval            4   52[COMRAM] unsigned long 
  4620 ;;  exp1            1   56[COMRAM] unsigned char 
  4621 ;;  sign1           1   51[COMRAM] unsigned char 
  4622 ;; Return value:  Size  Location     Type
  4623 ;;                  4   42[COMRAM] long 
  4624 ;; Registers used:
  4625 ;;		wreg, status,2, status,0
  4626 ;; Tracked objects:
  4627 ;;		On entry : 0/0
  4628 ;;		On exit  : 0/0
  4629 ;;		Unchanged: 0/0
  4630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4631 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4632 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4633 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4634 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4635 ;;Total ram usage:       15 bytes
  4636 ;; Hardware stack levels used:    1
  4637 ;; This function calls:
  4638 ;;		Nothing
  4639 ;; This function is called by:
  4640 ;;		_printf
  4641 ;; This function uses a non-reentrant model
  4642 ;;
  4643                           
  4644                           	psect	text18
  4645  002424                     __ptext18:
  4646                           	opt stack 0
  4647  002424                     ___fttol:
  4648                           	opt stack 28
  4649                           
  4650                           ;incstack = 0
  4651  002424  C02D  F02F         	movff	___fttol@f1+2,??___fttol
  4652  002428  6A30               	clrf	(??___fttol+1)& (0+255),c
  4653  00242A  6A31               	clrf	(??___fttol+2)& (0+255),c
  4654  00242C  342C               	rlcf	___fttol@f1+1,w,c
  4655  00242E  362F               	rlcf	??___fttol& (0+255),f,c
  4656  002430  E301               	bnc	u2381
  4657  002432  8030               	bsf	(??___fttol+1)& (0+255),0,c
  4658  002434                     u2381:
  4659  002434  502F               	movf	??___fttol,w,c
  4660  002436  6E39               	movwf	___fttol@exp1,c
  4661  002438  5039               	movf	___fttol@exp1,w,c
  4662  00243A  A4D8               	btfss	status,2,c
  4663  00243C  D002               	goto	l2520
  4664  00243E  D039               	goto	l2544
  4665  002440  D063               	goto	l797
  4666  002442                     l2520:
  4667  002442  0E17               	movlw	23
  4668  002444  6E2F               	movwf	??___fttol& (0+255),c
  4669  002446  C02B  F030         	movff	___fttol@f1,??___fttol+1
  4670  00244A  C02C  F031         	movff	___fttol@f1+1,??___fttol+2
  4671  00244E  C02D  F032         	movff	___fttol@f1+2,??___fttol+3
  4672  002452  282F               	incf	??___fttol,w,c
  4673  002454  6E33               	movwf	(??___fttol+4)& (0+255),c
  4674  002456  D004               	goto	u2400
  4675  002458                     u2405:
  4676  002458  90D8               	bcf	status,0,c
  4677  00245A  3232               	rrcf	??___fttol+3,f,c
  4678  00245C  3231               	rrcf	??___fttol+2,f,c
  4679  00245E  3230               	rrcf	??___fttol+1,f,c
  4680  002460                     u2400:
  4681  002460  2E33               	decfsz	(??___fttol+4)& (0+255),f,c
  4682  002462  D7FA               	goto	u2405
  4683  002464  5030               	movf	??___fttol+1,w,c
  4684  002466  6E34               	movwf	___fttol@sign1,c
  4685  002468  8E2C               	bsf	___fttol@f1+1,7,c
  4686  00246A  0EFF               	movlw	255
  4687  00246C  162B               	andwf	___fttol@f1,f,c
  4688  00246E  0EFF               	movlw	255
  4689  002470  162C               	andwf	___fttol@f1+1,f,c
  4690  002472  0E00               	movlw	0
  4691  002474  162D               	andwf	___fttol@f1+2,f,c
  4692  002476  502B               	movf	___fttol@f1,w,c
  4693  002478  6E35               	movwf	___fttol@lval,c
  4694  00247A  502C               	movf	___fttol@f1+1,w,c
  4695  00247C  6E36               	movwf	___fttol@lval+1,c
  4696  00247E  502D               	movf	___fttol@f1+2,w,c
  4697  002480  6E37               	movwf	___fttol@lval+2,c
  4698  002482  6A38               	clrf	___fttol@lval+3,c
  4699  002484  0E8E               	movlw	142
  4700  002486  5E39               	subwf	___fttol@exp1,f,c
  4701  002488  AE39               	btfss	___fttol@exp1,7,c
  4702  00248A  D010               	goto	l2542
  4703  00248C  5039               	movf	___fttol@exp1,w,c
  4704  00248E  0A80               	xorlw	128
  4705  002490  0F8F               	addlw	143
  4706  002492  B0D8               	btfsc	status,0,c
  4707  002494  D003               	goto	l2538
  4708  002496  D00D               	goto	l2544
  4709  002498  D037               	goto	l797
  4710  00249A  D000               	goto	l2538
  4711  00249C                     l2538:
  4712  00249C  90D8               	bcf	status,0,c
  4713  00249E  3238               	rrcf	___fttol@lval+3,f,c
  4714  0024A0  3237               	rrcf	___fttol@lval+2,f,c
  4715  0024A2  3236               	rrcf	___fttol@lval+1,f,c
  4716  0024A4  3235               	rrcf	___fttol@lval,f,c
  4717  0024A6  3E39               	incfsz	___fttol@exp1,f,c
  4718  0024A8  D7F9               	goto	l2538
  4719  0024AA  D019               	goto	l2552
  4720  0024AC                     l2542:
  4721  0024AC  0E17               	movlw	23
  4722  0024AE  6439               	cpfsgt	___fttol@exp1,c
  4723  0024B0  D011               	goto	l2550
  4724  0024B2                     l2544:
  4725  0024B2  0E00               	movlw	0
  4726  0024B4  6E2B               	movwf	?___fttol,c
  4727  0024B6  0E00               	movlw	0
  4728  0024B8  6E2C               	movwf	?___fttol+1,c
  4729  0024BA  0E00               	movlw	0
  4730  0024BC  6E2D               	movwf	?___fttol+2,c
  4731  0024BE  0E00               	movlw	0
  4732  0024C0  6E2E               	movwf	?___fttol+3,c
  4733  0024C2  D022               	goto	l797
  4734  0024C4  D007               	goto	l2550
  4735  0024C6                     l2548:
  4736  0024C6  90D8               	bcf	status,0,c
  4737  0024C8  3635               	rlcf	___fttol@lval,f,c
  4738  0024CA  3636               	rlcf	___fttol@lval+1,f,c
  4739  0024CC  3637               	rlcf	___fttol@lval+2,f,c
  4740  0024CE  3638               	rlcf	___fttol@lval+3,f,c
  4741  0024D0  0639               	decf	___fttol@exp1,f,c
  4742  0024D2  D000               	goto	l2550
  4743  0024D4                     l2550:
  4744  0024D4  5039               	movf	___fttol@exp1,w,c
  4745  0024D6  B4D8               	btfsc	status,2,c
  4746  0024D8  D002               	goto	l2552
  4747  0024DA  D7F5               	goto	l2548
  4748  0024DC  D000               	goto	l2552
  4749  0024DE                     l2552:
  4750  0024DE  5034               	movf	___fttol@sign1,w,c
  4751  0024E0  B4D8               	btfsc	status,2,c
  4752  0024E2  D009               	goto	l2556
  4753  0024E4  1E38               	comf	___fttol@lval+3,f,c
  4754  0024E6  1E37               	comf	___fttol@lval+2,f,c
  4755  0024E8  1E36               	comf	___fttol@lval+1,f,c
  4756  0024EA  6C35               	negf	___fttol@lval,c
  4757  0024EC  0E00               	movlw	0
  4758  0024EE  2236               	addwfc	___fttol@lval+1,f,c
  4759  0024F0  2237               	addwfc	___fttol@lval+2,f,c
  4760  0024F2  2238               	addwfc	___fttol@lval+3,f,c
  4761  0024F4  D000               	goto	l2556
  4762  0024F6                     l2556:
  4763  0024F6  C035  F02B         	movff	___fttol@lval,?___fttol
  4764  0024FA  C036  F02C         	movff	___fttol@lval+1,?___fttol+1
  4765  0024FE  C037  F02D         	movff	___fttol@lval+2,?___fttol+2
  4766  002502  C038  F02E         	movff	___fttol@lval+3,?___fttol+3
  4767  002506  D000               	goto	l797
  4768  002508                     l797:
  4769  002508  0012               	return		;funcret
  4770  00250A                     __end_of___fttol:
  4771                           	opt stack 0
  4772                           tblptru	equ	0xFF8
  4773                           tblptrh	equ	0xFF7
  4774                           tblptrl	equ	0xFF6
  4775                           tablat	equ	0xFF5
  4776                           prodh	equ	0xFF4
  4777                           prodl	equ	0xFF3
  4778                           wreg	equ	0xFE8
  4779                           postinc2	equ	0xFDE
  4780                           postdec2	equ	0xFDD
  4781                           fsr2h	equ	0xFDA
  4782                           fsr2l	equ	0xFD9
  4783                           status	equ	0xFD8
  4784                           
  4785 ;; *************** function ___ftsub *****************
  4786 ;; Defined at:
  4787 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftsub.c"
  4788 ;; Parameters:    Size  Location     Type
  4789 ;;  f1              3   57[COMRAM] float 
  4790 ;;  f2              3   60[COMRAM] float 
  4791 ;; Auto vars:     Size  Location     Type
  4792 ;;		None
  4793 ;; Return value:  Size  Location     Type
  4794 ;;                  3   57[COMRAM] float 
  4795 ;; Registers used:
  4796 ;;		wreg, status,2, status,0, cstack
  4797 ;; Tracked objects:
  4798 ;;		On entry : 0/0
  4799 ;;		On exit  : 0/0
  4800 ;;		Unchanged: 0/0
  4801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4802 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4805 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4806 ;;Total ram usage:        6 bytes
  4807 ;; Hardware stack levels used:    1
  4808 ;; Hardware stack levels required when called:    2
  4809 ;; This function calls:
  4810 ;;		___ftadd
  4811 ;; This function is called by:
  4812 ;;		_printf
  4813 ;; This function uses a non-reentrant model
  4814 ;;
  4815                           
  4816                           	psect	text19
  4817  002CC2                     __ptext19:
  4818                           	opt stack 0
  4819  002CC2                     ___ftsub:
  4820                           	opt stack 26
  4821                           
  4822                           ;incstack = 0
  4823  002CC2  503D               	movf	___ftsub@f2,w,c
  4824  002CC4  103E               	iorwf	___ftsub@f2+1,w,c
  4825  002CC6  103F               	iorwf	___ftsub@f2+2,w,c
  4826  002CC8  B4D8               	btfsc	status,2,c
  4827  002CCA  D007               	goto	l2488
  4828  002CCC  0E00               	movlw	0
  4829  002CCE  1A3D               	xorwf	___ftsub@f2,f,c
  4830  002CD0  0E00               	movlw	0
  4831  002CD2  1A3E               	xorwf	___ftsub@f2+1,f,c
  4832  002CD4  0E80               	movlw	128
  4833  002CD6  1A3F               	xorwf	___ftsub@f2+2,f,c
  4834  002CD8  D000               	goto	l2488
  4835  002CDA                     l2488:
  4836  002CDA  C03A  F02E         	movff	___ftsub@f1,___ftadd@f1
  4837  002CDE  C03B  F02F         	movff	___ftsub@f1+1,___ftadd@f1+1
  4838  002CE2  C03C  F030         	movff	___ftsub@f1+2,___ftadd@f1+2
  4839  002CE6  C03D  F031         	movff	___ftsub@f2,___ftadd@f2
  4840  002CEA  C03E  F032         	movff	___ftsub@f2+1,___ftadd@f2+1
  4841  002CEE  C03F  F033         	movff	___ftsub@f2+2,___ftadd@f2+2
  4842  002CF2  ECA7  F00F         	call	___ftadd	;wreg free
  4843  002CF6  C02E  F03A         	movff	?___ftadd,?___ftsub
  4844  002CFA  C02F  F03B         	movff	?___ftadd+1,?___ftsub+1
  4845  002CFE  C030  F03C         	movff	?___ftadd+2,?___ftsub+2
  4846  002D02  D000               	goto	l793
  4847  002D04                     l793:
  4848  002D04  0012               	return		;funcret
  4849  002D06                     __end_of___ftsub:
  4850                           	opt stack 0
  4851                           tblptru	equ	0xFF8
  4852                           tblptrh	equ	0xFF7
  4853                           tblptrl	equ	0xFF6
  4854                           tablat	equ	0xFF5
  4855                           prodh	equ	0xFF4
  4856                           prodl	equ	0xFF3
  4857                           wreg	equ	0xFE8
  4858                           postinc2	equ	0xFDE
  4859                           postdec2	equ	0xFDD
  4860                           fsr2h	equ	0xFDA
  4861                           fsr2l	equ	0xFD9
  4862                           status	equ	0xFD8
  4863                           
  4864 ;; *************** function ___ftadd *****************
  4865 ;; Defined at:
  4866 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftadd.c"
  4867 ;; Parameters:    Size  Location     Type
  4868 ;;  f1              3   45[COMRAM] float 
  4869 ;;  f2              3   48[COMRAM] float 
  4870 ;; Auto vars:     Size  Location     Type
  4871 ;;  exp1            1   56[COMRAM] unsigned char 
  4872 ;;  exp2            1   55[COMRAM] unsigned char 
  4873 ;;  sign            1   54[COMRAM] unsigned char 
  4874 ;; Return value:  Size  Location     Type
  4875 ;;                  3   45[COMRAM] float 
  4876 ;; Registers used:
  4877 ;;		wreg, status,2, status,0, cstack
  4878 ;; Tracked objects:
  4879 ;;		On entry : 0/0
  4880 ;;		On exit  : 0/0
  4881 ;;		Unchanged: 0/0
  4882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4883 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4884 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4885 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4886 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4887 ;;Total ram usage:       12 bytes
  4888 ;; Hardware stack levels used:    1
  4889 ;; Hardware stack levels required when called:    1
  4890 ;; This function calls:
  4891 ;;		___ftpack
  4892 ;; This function is called by:
  4893 ;;		_printf
  4894 ;;		___ftsub
  4895 ;; This function uses a non-reentrant model
  4896 ;;
  4897                           
  4898                           	psect	text20
  4899  001F4E                     __ptext20:
  4900                           	opt stack 0
  4901  001F4E                     ___ftadd:
  4902                           	opt stack 26
  4903                           
  4904                           ;incstack = 0
  4905  001F4E  C030  F034         	movff	___ftadd@f1+2,??___ftadd
  4906  001F52  6A35               	clrf	(??___ftadd+1)& (0+255),c
  4907  001F54  6A36               	clrf	(??___ftadd+2)& (0+255),c
  4908  001F56  342F               	rlcf	___ftadd@f1+1,w,c
  4909  001F58  3634               	rlcf	??___ftadd& (0+255),f,c
  4910  001F5A  E301               	bnc	u1691
  4911  001F5C  8035               	bsf	(??___ftadd+1)& (0+255),0,c
  4912  001F5E                     u1691:
  4913  001F5E  5034               	movf	??___ftadd,w,c
  4914  001F60  6E39               	movwf	___ftadd@exp1,c
  4915  001F62  C033  F034         	movff	___ftadd@f2+2,??___ftadd
  4916  001F66  6A35               	clrf	(??___ftadd+1)& (0+255),c
  4917  001F68  6A36               	clrf	(??___ftadd+2)& (0+255),c
  4918  001F6A  3432               	rlcf	___ftadd@f2+1,w,c
  4919  001F6C  3634               	rlcf	??___ftadd& (0+255),f,c
  4920  001F6E  E301               	bnc	u1701
  4921  001F70  8035               	bsf	(??___ftadd+1)& (0+255),0,c
  4922  001F72                     u1701:
  4923  001F72  5034               	movf	??___ftadd,w,c
  4924  001F74  6E38               	movwf	___ftadd@exp2,c
  4925  001F76  5039               	movf	___ftadd@exp1,w,c
  4926  001F78  B4D8               	btfsc	status,2,c
  4927  001F7A  D00B               	goto	l712
  4928  001F7C  5038               	movf	___ftadd@exp2,w,c
  4929  001F7E  5C39               	subwf	___ftadd@exp1,w,c
  4930  001F80  B0D8               	btfsc	status,0,c
  4931  001F82  D00E               	goto	l2106
  4932  001F84  5039               	movf	___ftadd@exp1,w,c
  4933  001F86  0800               	sublw	0
  4934  001F88  2438               	addwf	___ftadd@exp2,w,c
  4935  001F8A  6E34               	movwf	??___ftadd& (0+255),c
  4936  001F8C  0E18               	movlw	24
  4937  001F8E  6434               	cpfsgt	??___ftadd,c
  4938  001F90  D007               	goto	l2106
  4939  001F92                     l712:
  4940  001F92  C031  F02E         	movff	___ftadd@f2,?___ftadd
  4941  001F96  C032  F02F         	movff	___ftadd@f2+1,?___ftadd+1
  4942  001F9A  C033  F030         	movff	___ftadd@f2+2,?___ftadd+2
  4943  001F9E  D0B8               	goto	l713
  4944  001FA0                     l2106:
  4945  001FA0  5038               	movf	___ftadd@exp2,w,c
  4946  001FA2  B4D8               	btfsc	status,2,c
  4947  001FA4  D00B               	goto	l716
  4948  001FA6  5039               	movf	___ftadd@exp1,w,c
  4949  001FA8  5C38               	subwf	___ftadd@exp2,w,c
  4950  001FAA  B0D8               	btfsc	status,0,c
  4951  001FAC  D00E               	goto	l2112
  4952  001FAE  5038               	movf	___ftadd@exp2,w,c
  4953  001FB0  0800               	sublw	0
  4954  001FB2  2439               	addwf	___ftadd@exp1,w,c
  4955  001FB4  6E34               	movwf	??___ftadd& (0+255),c
  4956  001FB6  0E18               	movlw	24
  4957  001FB8  6434               	cpfsgt	??___ftadd,c
  4958  001FBA  D007               	goto	l2112
  4959  001FBC                     l716:
  4960  001FBC  C02E  F02E         	movff	___ftadd@f1,?___ftadd
  4961  001FC0  C02F  F02F         	movff	___ftadd@f1+1,?___ftadd+1
  4962  001FC4  C030  F030         	movff	___ftadd@f1+2,?___ftadd+2
  4963  001FC8  D0A3               	goto	l713
  4964  001FCA                     l2112:
  4965  001FCA  0E06               	movlw	6
  4966  001FCC  6E37               	movwf	___ftadd@sign,c
  4967  001FCE  AE30               	btfss	___ftadd@f1+2,7,c
  4968  001FD0  D002               	goto	l2118
  4969  001FD2  8E37               	bsf	___ftadd@sign,7,c
  4970  001FD4  D000               	goto	l2118
  4971  001FD6                     l2118:
  4972  001FD6  BE33               	btfsc	___ftadd@f2+2,7,c
  4973  001FD8  8C37               	bsf	___ftadd@sign,6,c
  4974  001FDA  8E2F               	bsf	___ftadd@f1+1,7,c
  4975  001FDC  0EFF               	movlw	255
  4976  001FDE  162E               	andwf	___ftadd@f1,f,c
  4977  001FE0  0EFF               	movlw	255
  4978  001FE2  162F               	andwf	___ftadd@f1+1,f,c
  4979  001FE4  0E00               	movlw	0
  4980  001FE6  1630               	andwf	___ftadd@f1+2,f,c
  4981  001FE8  8E32               	bsf	___ftadd@f2+1,7,c
  4982  001FEA  0EFF               	movlw	255
  4983  001FEC  1631               	andwf	___ftadd@f2,f,c
  4984  001FEE  0EFF               	movlw	255
  4985  001FF0  1632               	andwf	___ftadd@f2+1,f,c
  4986  001FF2  0E00               	movlw	0
  4987  001FF4  1633               	andwf	___ftadd@f2+2,f,c
  4988  001FF6  5038               	movf	___ftadd@exp2,w,c
  4989  001FF8  5C39               	subwf	___ftadd@exp1,w,c
  4990  001FFA  B0D8               	btfsc	status,0,c
  4991  001FFC  D01E               	goto	l2138
  4992  001FFE                     l2128:
  4993  001FFE  90D8               	bcf	status,0,c
  4994  002000  3631               	rlcf	___ftadd@f2,f,c
  4995  002002  3632               	rlcf	___ftadd@f2+1,f,c
  4996  002004  3633               	rlcf	___ftadd@f2+2,f,c
  4997  002006  0638               	decf	___ftadd@exp2,f,c
  4998  002008  5039               	movf	___ftadd@exp1,w,c
  4999  00200A  1838               	xorwf	___ftadd@exp2,w,c
  5000  00200C  B4D8               	btfsc	status,2,c
  5001  00200E  D00F               	goto	l2136
  5002  002010  0637               	decf	___ftadd@sign,f,c
  5003  002012  C037  F034         	movff	___ftadd@sign,??___ftadd
  5004  002016  0E07               	movlw	7
  5005  002018  1634               	andwf	??___ftadd,f,c
  5006  00201A  B4D8               	btfsc	status,2,c
  5007  00201C  D008               	goto	l2136
  5008  00201E  D7EF               	goto	l2128
  5009  002020  D006               	goto	l2136
  5010  002022                     l2134:
  5011  002022  90D8               	bcf	status,0,c
  5012  002024  3230               	rrcf	___ftadd@f1+2,f,c
  5013  002026  322F               	rrcf	___ftadd@f1+1,f,c
  5014  002028  322E               	rrcf	___ftadd@f1,f,c
  5015  00202A  2A39               	incf	___ftadd@exp1,f,c
  5016  00202C  D000               	goto	l2136
  5017  00202E                     l2136:
  5018  00202E  5038               	movf	___ftadd@exp2,w,c
  5019  002030  1839               	xorwf	___ftadd@exp1,w,c
  5020  002032  B4D8               	btfsc	status,2,c
  5021  002034  D024               	goto	l727
  5022  002036  D7F5               	goto	l2134
  5023  002038  D022               	goto	l727
  5024  00203A                     l2138:
  5025  00203A  5039               	movf	___ftadd@exp1,w,c
  5026  00203C  5C38               	subwf	___ftadd@exp2,w,c
  5027  00203E  B0D8               	btfsc	status,0,c
  5028  002040  D01E               	goto	l727
  5029  002042                     l2140:
  5030  002042  90D8               	bcf	status,0,c
  5031  002044  362E               	rlcf	___ftadd@f1,f,c
  5032  002046  362F               	rlcf	___ftadd@f1+1,f,c
  5033  002048  3630               	rlcf	___ftadd@f1+2,f,c
  5034  00204A  0639               	decf	___ftadd@exp1,f,c
  5035  00204C  5039               	movf	___ftadd@exp1,w,c
  5036  00204E  1838               	xorwf	___ftadd@exp2,w,c
  5037  002050  B4D8               	btfsc	status,2,c
  5038  002052  D00F               	goto	l2148
  5039  002054  0637               	decf	___ftadd@sign,f,c
  5040  002056  C037  F034         	movff	___ftadd@sign,??___ftadd
  5041  00205A  0E07               	movlw	7
  5042  00205C  1634               	andwf	??___ftadd,f,c
  5043  00205E  B4D8               	btfsc	status,2,c
  5044  002060  D008               	goto	l2148
  5045  002062  D7EF               	goto	l2140
  5046  002064  D006               	goto	l2148
  5047  002066                     l2146:
  5048  002066  90D8               	bcf	status,0,c
  5049  002068  3233               	rrcf	___ftadd@f2+2,f,c
  5050  00206A  3232               	rrcf	___ftadd@f2+1,f,c
  5051  00206C  3231               	rrcf	___ftadd@f2,f,c
  5052  00206E  2A38               	incf	___ftadd@exp2,f,c
  5053  002070  D000               	goto	l2148
  5054  002072                     l2148:
  5055  002072  5038               	movf	___ftadd@exp2,w,c
  5056  002074  1839               	xorwf	___ftadd@exp1,w,c
  5057  002076  B4D8               	btfsc	status,2,c
  5058  002078  D002               	goto	l727
  5059  00207A  D7F5               	goto	l2146
  5060  00207C  D000               	goto	l727
  5061  00207E                     l727:
  5062  00207E  AE37               	btfss	___ftadd@sign,7,c
  5063  002080  D00C               	goto	l736
  5064  002082  0EFF               	movlw	255
  5065  002084  1A2E               	xorwf	___ftadd@f1,f,c
  5066  002086  0EFF               	movlw	255
  5067  002088  1A2F               	xorwf	___ftadd@f1+1,f,c
  5068  00208A  0EFF               	movlw	255
  5069  00208C  1A30               	xorwf	___ftadd@f1+2,f,c
  5070  00208E  0E01               	movlw	1
  5071  002090  262E               	addwf	___ftadd@f1,f,c
  5072  002092  0E00               	movlw	0
  5073  002094  222F               	addwfc	___ftadd@f1+1,f,c
  5074  002096  0E00               	movlw	0
  5075  002098  2230               	addwfc	___ftadd@f1+2,f,c
  5076  00209A                     l736:
  5077  00209A  AC37               	btfss	___ftadd@sign,6,c
  5078  00209C  D00D               	goto	l2154
  5079  00209E  0EFF               	movlw	255
  5080  0020A0  1A31               	xorwf	___ftadd@f2,f,c
  5081  0020A2  0EFF               	movlw	255
  5082  0020A4  1A32               	xorwf	___ftadd@f2+1,f,c
  5083  0020A6  0EFF               	movlw	255
  5084  0020A8  1A33               	xorwf	___ftadd@f2+2,f,c
  5085  0020AA  0E01               	movlw	1
  5086  0020AC  2631               	addwf	___ftadd@f2,f,c
  5087  0020AE  0E00               	movlw	0
  5088  0020B0  2232               	addwfc	___ftadd@f2+1,f,c
  5089  0020B2  0E00               	movlw	0
  5090  0020B4  2233               	addwfc	___ftadd@f2+2,f,c
  5091  0020B6  D000               	goto	l2154
  5092  0020B8                     l2154:
  5093  0020B8  0E00               	movlw	0
  5094  0020BA  6E37               	movwf	___ftadd@sign,c
  5095  0020BC  502E               	movf	___ftadd@f1,w,c
  5096  0020BE  2631               	addwf	___ftadd@f2,f,c
  5097  0020C0  502F               	movf	___ftadd@f1+1,w,c
  5098  0020C2  2232               	addwfc	___ftadd@f2+1,f,c
  5099  0020C4  5030               	movf	___ftadd@f1+2,w,c
  5100  0020C6  2233               	addwfc	___ftadd@f2+2,f,c
  5101  0020C8  AE33               	btfss	___ftadd@f2+2,7,c
  5102  0020CA  D00F               	goto	l2164
  5103  0020CC  0EFF               	movlw	255
  5104  0020CE  1A31               	xorwf	___ftadd@f2,f,c
  5105  0020D0  0EFF               	movlw	255
  5106  0020D2  1A32               	xorwf	___ftadd@f2+1,f,c
  5107  0020D4  0EFF               	movlw	255
  5108  0020D6  1A33               	xorwf	___ftadd@f2+2,f,c
  5109  0020D8  0E01               	movlw	1
  5110  0020DA  2631               	addwf	___ftadd@f2,f,c
  5111  0020DC  0E00               	movlw	0
  5112  0020DE  2232               	addwfc	___ftadd@f2+1,f,c
  5113  0020E0  0E00               	movlw	0
  5114  0020E2  2233               	addwfc	___ftadd@f2+2,f,c
  5115  0020E4  0E01               	movlw	1
  5116  0020E6  6E37               	movwf	___ftadd@sign,c
  5117  0020E8  D000               	goto	l2164
  5118  0020EA                     l2164:
  5119  0020EA  C031  F001         	movff	___ftadd@f2,___ftpack@arg
  5120  0020EE  C032  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  5121  0020F2  C033  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  5122  0020F6  C039  F004         	movff	___ftadd@exp1,___ftpack@exp
  5123  0020FA  C037  F005         	movff	___ftadd@sign,___ftpack@sign
  5124  0020FE  ECEC  F012         	call	___ftpack	;wreg free
  5125  002102  C001  F02E         	movff	?___ftpack,?___ftadd
  5126  002106  C002  F02F         	movff	?___ftpack+1,?___ftadd+1
  5127  00210A  C003  F030         	movff	?___ftpack+2,?___ftadd+2
  5128  00210E  D000               	goto	l713
  5129  002110                     l713:
  5130  002110  0012               	return		;funcret
  5131  002112                     __end_of___ftadd:
  5132                           	opt stack 0
  5133                           tblptru	equ	0xFF8
  5134                           tblptrh	equ	0xFF7
  5135                           tblptrl	equ	0xFF6
  5136                           tablat	equ	0xFF5
  5137                           prodh	equ	0xFF4
  5138                           prodl	equ	0xFF3
  5139                           wreg	equ	0xFE8
  5140                           postinc2	equ	0xFDE
  5141                           postdec2	equ	0xFDD
  5142                           fsr2h	equ	0xFDA
  5143                           fsr2l	equ	0xFD9
  5144                           status	equ	0xFD8
  5145                           
  5146 ;; *************** function ___ftpack *****************
  5147 ;; Defined at:
  5148 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  5149 ;; Parameters:    Size  Location     Type
  5150 ;;  arg             3    0[COMRAM] unsigned um
  5151 ;;  exp             1    3[COMRAM] unsigned char 
  5152 ;;  sign            1    4[COMRAM] unsigned char 
  5153 ;; Auto vars:     Size  Location     Type
  5154 ;;		None
  5155 ;; Return value:  Size  Location     Type
  5156 ;;                  3    0[COMRAM] float 
  5157 ;; Registers used:
  5158 ;;		wreg, status,2, status,0
  5159 ;; Tracked objects:
  5160 ;;		On entry : 0/0
  5161 ;;		On exit  : 0/0
  5162 ;;		Unchanged: 0/0
  5163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5164 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5166 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5167 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5168 ;;Total ram usage:        8 bytes
  5169 ;; Hardware stack levels used:    1
  5170 ;; This function calls:
  5171 ;;		Nothing
  5172 ;; This function is called by:
  5173 ;;		___ftadd
  5174 ;;		___ftmul
  5175 ;;		___lltoft
  5176 ;;		___lwtoft
  5177 ;; This function uses a non-reentrant model
  5178 ;;
  5179                           
  5180                           	psect	text21
  5181  0025D8                     __ptext21:
  5182                           	opt stack 0
  5183  0025D8                     ___ftpack:
  5184                           	opt stack 29
  5185                           
  5186                           ;incstack = 0
  5187  0025D8  5004               	movf	___ftpack@exp,w,c
  5188  0025DA  B4D8               	btfsc	status,2,c
  5189  0025DC  D005               	goto	l2060
  5190  0025DE  5001               	movf	___ftpack@arg,w,c
  5191  0025E0  1002               	iorwf	___ftpack@arg+1,w,c
  5192  0025E2  1003               	iorwf	___ftpack@arg+2,w,c
  5193  0025E4  A4D8               	btfss	status,2,c
  5194  0025E6  D00E               	goto	l2066
  5195  0025E8                     l2060:
  5196  0025E8  0E00               	movlw	0
  5197  0025EA  6E01               	movwf	?___ftpack,c
  5198  0025EC  0E00               	movlw	0
  5199  0025EE  6E02               	movwf	?___ftpack+1,c
  5200  0025F0  0E00               	movlw	0
  5201  0025F2  6E03               	movwf	?___ftpack+2,c
  5202  0025F4  D053               	goto	l672
  5203  0025F6  D006               	goto	l2066
  5204  0025F8                     l2064:
  5205  0025F8  2A04               	incf	___ftpack@exp,f,c
  5206  0025FA  90D8               	bcf	status,0,c
  5207  0025FC  3203               	rrcf	___ftpack@arg+2,f,c
  5208  0025FE  3202               	rrcf	___ftpack@arg+1,f,c
  5209  002600  3201               	rrcf	___ftpack@arg,f,c
  5210  002602  D000               	goto	l2066
  5211  002604                     l2066:
  5212  002604  0E00               	movlw	0
  5213  002606  1401               	andwf	___ftpack@arg,w,c
  5214  002608  6E06               	movwf	??___ftpack& (0+255),c
  5215  00260A  0E00               	movlw	0
  5216  00260C  1402               	andwf	___ftpack@arg+1,w,c
  5217  00260E  6E07               	movwf	(??___ftpack+1)& (0+255),c
  5218  002610  0EFE               	movlw	254
  5219  002612  1403               	andwf	___ftpack@arg+2,w,c
  5220  002614  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5221  002616  5006               	movf	??___ftpack,w,c
  5222  002618  1007               	iorwf	??___ftpack+1,w,c
  5223  00261A  1008               	iorwf	??___ftpack+2,w,c
  5224  00261C  B4D8               	btfsc	status,2,c
  5225  00261E  D00E               	goto	l2072
  5226  002620  D7EB               	goto	l2064
  5227  002622  D00C               	goto	l2072
  5228  002624                     l2068:
  5229  002624  2A04               	incf	___ftpack@exp,f,c
  5230  002626  0E01               	movlw	1
  5231  002628  2601               	addwf	___ftpack@arg,f,c
  5232  00262A  0E00               	movlw	0
  5233  00262C  2202               	addwfc	___ftpack@arg+1,f,c
  5234  00262E  0E00               	movlw	0
  5235  002630  2203               	addwfc	___ftpack@arg+2,f,c
  5236  002632  90D8               	bcf	status,0,c
  5237  002634  3203               	rrcf	___ftpack@arg+2,f,c
  5238  002636  3202               	rrcf	___ftpack@arg+1,f,c
  5239  002638  3201               	rrcf	___ftpack@arg,f,c
  5240  00263A  D000               	goto	l2072
  5241  00263C                     l2072:
  5242  00263C  0E00               	movlw	0
  5243  00263E  1401               	andwf	___ftpack@arg,w,c
  5244  002640  6E06               	movwf	??___ftpack& (0+255),c
  5245  002642  0E00               	movlw	0
  5246  002644  1402               	andwf	___ftpack@arg+1,w,c
  5247  002646  6E07               	movwf	(??___ftpack+1)& (0+255),c
  5248  002648  0EFF               	movlw	255
  5249  00264A  1403               	andwf	___ftpack@arg+2,w,c
  5250  00264C  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5251  00264E  5006               	movf	??___ftpack,w,c
  5252  002650  1007               	iorwf	??___ftpack+1,w,c
  5253  002652  1008               	iorwf	??___ftpack+2,w,c
  5254  002654  B4D8               	btfsc	status,2,c
  5255  002656  D008               	goto	l2076
  5256  002658  D7E5               	goto	l2068
  5257  00265A  D006               	goto	l2076
  5258  00265C                     l2074:
  5259  00265C  0604               	decf	___ftpack@exp,f,c
  5260  00265E  90D8               	bcf	status,0,c
  5261  002660  3601               	rlcf	___ftpack@arg,f,c
  5262  002662  3602               	rlcf	___ftpack@arg+1,f,c
  5263  002664  3603               	rlcf	___ftpack@arg+2,f,c
  5264  002666  D000               	goto	l2076
  5265  002668                     l2076:
  5266  002668  BE02               	btfsc	___ftpack@arg+1,7,c
  5267  00266A  D004               	goto	l683
  5268  00266C  0E02               	movlw	2
  5269  00266E  6004               	cpfslt	___ftpack@exp,c
  5270  002670  D7F5               	goto	l2074
  5271  002672  D000               	goto	l683
  5272  002674                     l683:
  5273  002674  B004               	btfsc	___ftpack@exp,0,c
  5274  002676  D002               	goto	l2082
  5275  002678  9E02               	bcf	___ftpack@arg+1,7,c
  5276  00267A  D000               	goto	l2082
  5277  00267C                     l2082:
  5278  00267C  90D8               	bcf	status,0,c
  5279  00267E  3204               	rrcf	___ftpack@exp,f,c
  5280  002680  5004               	movf	___ftpack@exp,w,c
  5281  002682  1203               	iorwf	___ftpack@arg+2,f,c
  5282  002684  5005               	movf	___ftpack@sign,w,c
  5283  002686  B4D8               	btfsc	status,2,c
  5284  002688  D002               	goto	l2088
  5285  00268A  8E03               	bsf	___ftpack@arg+2,7,c
  5286  00268C  D000               	goto	l2088
  5287  00268E                     l2088:
  5288  00268E  C001  F001         	movff	___ftpack@arg,?___ftpack
  5289  002692  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  5290  002696  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  5291  00269A  D000               	goto	l672
  5292  00269C                     l672:
  5293  00269C  0012               	return		;funcret
  5294  00269E                     __end_of___ftpack:
  5295                           	opt stack 0
  5296                           tblptru	equ	0xFF8
  5297                           tblptrh	equ	0xFF7
  5298                           tblptrl	equ	0xFF6
  5299                           tablat	equ	0xFF5
  5300                           prodh	equ	0xFF4
  5301                           prodl	equ	0xFF3
  5302                           wreg	equ	0xFE8
  5303                           postinc2	equ	0xFDE
  5304                           postdec2	equ	0xFDD
  5305                           fsr2h	equ	0xFDA
  5306                           fsr2l	equ	0xFD9
  5307                           status	equ	0xFD8
  5308                           
  5309 ;; *************** function ___ftneg *****************
  5310 ;; Defined at:
  5311 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftneg.c"
  5312 ;; Parameters:    Size  Location     Type
  5313 ;;  f1              3    0[COMRAM] float 
  5314 ;; Auto vars:     Size  Location     Type
  5315 ;;		None
  5316 ;; Return value:  Size  Location     Type
  5317 ;;                  3    0[COMRAM] float 
  5318 ;; Registers used:
  5319 ;;		wreg, status,2, status,0
  5320 ;; Tracked objects:
  5321 ;;		On entry : 0/0
  5322 ;;		On exit  : 0/0
  5323 ;;		Unchanged: 0/0
  5324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5325 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5328 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5329 ;;Total ram usage:        3 bytes
  5330 ;; Hardware stack levels used:    1
  5331 ;; This function calls:
  5332 ;;		Nothing
  5333 ;; This function is called by:
  5334 ;;		_printf
  5335 ;; This function uses a non-reentrant model
  5336 ;;
  5337                           
  5338                           	psect	text22
  5339  002E2C                     __ptext22:
  5340                           	opt stack 0
  5341  002E2C                     ___ftneg:
  5342                           	opt stack 28
  5343                           
  5344                           ;incstack = 0
  5345  002E2C  5001               	movf	___ftneg@f1,w,c
  5346  002E2E  1002               	iorwf	___ftneg@f1+1,w,c
  5347  002E30  1003               	iorwf	___ftneg@f1+2,w,c
  5348  002E32  B4D8               	btfsc	status,2,c
  5349  002E34  D006               	goto	l786
  5350  002E36  0E00               	movlw	0
  5351  002E38  1A01               	xorwf	___ftneg@f1,f,c
  5352  002E3A  0E00               	movlw	0
  5353  002E3C  1A02               	xorwf	___ftneg@f1+1,f,c
  5354  002E3E  0E80               	movlw	128
  5355  002E40  1A03               	xorwf	___ftneg@f1+2,f,c
  5356  002E42                     l786:
  5357  002E42  C001  F001         	movff	___ftneg@f1,?___ftneg
  5358  002E46  C002  F002         	movff	___ftneg@f1+1,?___ftneg+1
  5359  002E4A  C003  F003         	movff	___ftneg@f1+2,?___ftneg+2
  5360  002E4E  0012               	return		;funcret
  5361  002E50                     __end_of___ftneg:
  5362                           	opt stack 0
  5363                           tblptru	equ	0xFF8
  5364                           tblptrh	equ	0xFF7
  5365                           tblptrl	equ	0xFF6
  5366                           tablat	equ	0xFF5
  5367                           prodh	equ	0xFF4
  5368                           prodl	equ	0xFF3
  5369                           wreg	equ	0xFE8
  5370                           postinc2	equ	0xFDE
  5371                           postdec2	equ	0xFDD
  5372                           fsr2h	equ	0xFDA
  5373                           fsr2l	equ	0xFD9
  5374                           status	equ	0xFD8
  5375                           
  5376 ;; *************** function ___ftge *****************
  5377 ;; Defined at:
  5378 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftge.c"
  5379 ;; Parameters:    Size  Location     Type
  5380 ;;  ff1             3    0[COMRAM] float 
  5381 ;;  ff2             3    3[COMRAM] float 
  5382 ;; Auto vars:     Size  Location     Type
  5383 ;;		None
  5384 ;; Return value:  Size  Location     Type
  5385 ;;		None               void
  5386 ;; Registers used:
  5387 ;;		wreg, status,2, status,0
  5388 ;; Tracked objects:
  5389 ;;		On entry : 0/0
  5390 ;;		On exit  : 0/0
  5391 ;;		Unchanged: 0/0
  5392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5393 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5395 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5396 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5397 ;;Total ram usage:        9 bytes
  5398 ;; Hardware stack levels used:    1
  5399 ;; This function calls:
  5400 ;;		Nothing
  5401 ;; This function is called by:
  5402 ;;		_main
  5403 ;;		_printf
  5404 ;; This function uses a non-reentrant model
  5405 ;;
  5406                           
  5407                           	psect	text23
  5408  002950                     __ptext23:
  5409                           	opt stack 0
  5410  002950                     ___ftge:
  5411                           	opt stack 30
  5412                           
  5413                           ;incstack = 0
  5414  002950  AE03               	btfss	___ftge@ff1+2,7,c
  5415  002952  D017               	goto	l2496
  5416  002954  C001  F007         	movff	___ftge@ff1,??___ftge
  5417  002958  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  5418  00295C  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  5419  002960  1E07               	comf	??___ftge,f,c
  5420  002962  1E08               	comf	??___ftge+1,f,c
  5421  002964  1E09               	comf	??___ftge+2,f,c
  5422  002966  2A07               	incf	??___ftge,f,c
  5423  002968  0E00               	movlw	0
  5424  00296A  2208               	addwfc	??___ftge+1,f,c
  5425  00296C  2209               	addwfc	??___ftge+2,f,c
  5426  00296E  0E00               	movlw	0
  5427  002970  2407               	addwf	??___ftge,w,c
  5428  002972  6E01               	movwf	___ftge@ff1,c
  5429  002974  0E00               	movlw	0
  5430  002976  2008               	addwfc	??___ftge+1,w,c
  5431  002978  6E02               	movwf	___ftge@ff1+1,c
  5432  00297A  0E80               	movlw	128
  5433  00297C  2009               	addwfc	??___ftge+2,w,c
  5434  00297E  6E03               	movwf	___ftge@ff1+2,c
  5435  002980  D000               	goto	l2496
  5436  002982                     l2496:
  5437  002982  AE06               	btfss	___ftge@ff2+2,7,c
  5438  002984  D017               	goto	l2500
  5439  002986  C004  F007         	movff	___ftge@ff2,??___ftge
  5440  00298A  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  5441  00298E  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  5442  002992  1E07               	comf	??___ftge,f,c
  5443  002994  1E08               	comf	??___ftge+1,f,c
  5444  002996  1E09               	comf	??___ftge+2,f,c
  5445  002998  2A07               	incf	??___ftge,f,c
  5446  00299A  0E00               	movlw	0
  5447  00299C  2208               	addwfc	??___ftge+1,f,c
  5448  00299E  2209               	addwfc	??___ftge+2,f,c
  5449  0029A0  0E00               	movlw	0
  5450  0029A2  2407               	addwf	??___ftge,w,c
  5451  0029A4  6E04               	movwf	___ftge@ff2,c
  5452  0029A6  0E00               	movlw	0
  5453  0029A8  2008               	addwfc	??___ftge+1,w,c
  5454  0029AA  6E05               	movwf	___ftge@ff2+1,c
  5455  0029AC  0E80               	movlw	128
  5456  0029AE  2009               	addwfc	??___ftge+2,w,c
  5457  0029B0  6E06               	movwf	___ftge@ff2+2,c
  5458  0029B2  D000               	goto	l2500
  5459  0029B4                     l2500:
  5460  0029B4  0E00               	movlw	0
  5461  0029B6  1A01               	xorwf	___ftge@ff1,f,c
  5462  0029B8  0E00               	movlw	0
  5463  0029BA  1A02               	xorwf	___ftge@ff1+1,f,c
  5464  0029BC  0E80               	movlw	128
  5465  0029BE  1A03               	xorwf	___ftge@ff1+2,f,c
  5466  0029C0  0E00               	movlw	0
  5467  0029C2  1A04               	xorwf	___ftge@ff2,f,c
  5468  0029C4  0E00               	movlw	0
  5469  0029C6  1A05               	xorwf	___ftge@ff2+1,f,c
  5470  0029C8  0E80               	movlw	128
  5471  0029CA  1A06               	xorwf	___ftge@ff2+2,f,c
  5472  0029CC  5004               	movf	___ftge@ff2,w,c
  5473  0029CE  5C01               	subwf	___ftge@ff1,w,c
  5474  0029D0  5005               	movf	___ftge@ff2+1,w,c
  5475  0029D2  5802               	subwfb	___ftge@ff1+1,w,c
  5476  0029D4  5006               	movf	___ftge@ff2+2,w,c
  5477  0029D6  5803               	subwfb	___ftge@ff1+2,w,c
  5478  0029D8  B0D8               	btfsc	status,0,c
  5479  0029DA  D002               	goto	l2506
  5480  0029DC  90D8               	bcf	status,0,c
  5481  0029DE  D002               	goto	l770
  5482  0029E0                     l2506:
  5483  0029E0  80D8               	bsf	status,0,c
  5484  0029E2  D000               	goto	l770
  5485  0029E4                     l770:
  5486  0029E4  0012               	return		;funcret
  5487  0029E6                     __end_of___ftge:
  5488                           	opt stack 0
  5489                           tblptru	equ	0xFF8
  5490                           tblptrh	equ	0xFF7
  5491                           tblptrl	equ	0xFF6
  5492                           tablat	equ	0xFF5
  5493                           prodh	equ	0xFF4
  5494                           prodl	equ	0xFF3
  5495                           wreg	equ	0xFE8
  5496                           postinc2	equ	0xFDE
  5497                           postdec2	equ	0xFDD
  5498                           fsr2h	equ	0xFDA
  5499                           fsr2l	equ	0xFD9
  5500                           status	equ	0xFD8
  5501                           
  5502 ;; *************** function _Night_Mode *****************
  5503 ;; Defined at:
  5504 ;;		line 261 in file "lab6.c"
  5505 ;; Parameters:    Size  Location     Type
  5506 ;;		None
  5507 ;; Auto vars:     Size  Location     Type
  5508 ;;		None
  5509 ;; Return value:  Size  Location     Type
  5510 ;;		None               void
  5511 ;; Registers used:
  5512 ;;		wreg, status,2, status,0, cstack
  5513 ;; Tracked objects:
  5514 ;;		On entry : 0/0
  5515 ;;		On exit  : 0/0
  5516 ;;		Unchanged: 0/0
  5517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5522 ;;Total ram usage:        0 bytes
  5523 ;; Hardware stack levels used:    1
  5524 ;; Hardware stack levels required when called:    3
  5525 ;; This function calls:
  5526 ;;		_Clear_Lower_Display
  5527 ;;		_Clear_Upper_Display
  5528 ;;		_Wait_N_Seconds
  5529 ;;		_set_EW
  5530 ;;		_set_EWLT
  5531 ;;		_set_NS
  5532 ;;		_set_NSLT
  5533 ;; This function is called by:
  5534 ;;		_main
  5535 ;; This function uses a non-reentrant model
  5536 ;;
  5537                           
  5538                           	psect	text24
  5539  002812                     __ptext24:
  5540                           	opt stack 0
  5541  002812                     _Night_Mode:
  5542                           	opt stack 27
  5543                           
  5544                           ;lab6.c: 264: PORTB = 0;
  5545                           
  5546                           ;incstack = 0
  5547  002812  0E00               	movlw	0
  5548  002814  6E81               	movwf	3969,c	;volatile
  5549                           
  5550                           ;lab6.c: 265: PORTD = 0;
  5551  002816  0E00               	movlw	0
  5552  002818  6E83               	movwf	3971,c	;volatile
  5553                           
  5554                           ;lab6.c: 266: Clear_Upper_Display();
  5555  00281A  ECA4  F017         	call	_Clear_Upper_Display	;wreg free
  5556                           
  5557                           ;lab6.c: 267: Clear_Lower_Display();
  5558  00281E  ECA6  F017         	call	_Clear_Lower_Display	;wreg free
  5559                           
  5560                           ;lab6.c: 268: PORTEbits.RE1 = 0;
  5561  002822  9284               	bcf	3972,1,c	;volatile
  5562                           
  5563                           ;lab6.c: 271: set_EW(1);
  5564  002824  0E01               	movlw	1
  5565  002826  ECD4  F016         	call	_set_EW
  5566                           
  5567                           ;lab6.c: 272: set_EWLT(1);
  5568  00282A  0E01               	movlw	1
  5569  00282C  ECB9  F016         	call	_set_EWLT
  5570                           
  5571                           ;lab6.c: 273: set_NSLT(1);
  5572  002830  0E01               	movlw	1
  5573  002832  EC83  F016         	call	_set_NSLT
  5574                           
  5575                           ;lab6.c: 274: set_NS(2);
  5576  002836  0E02               	movlw	2
  5577  002838  EC9E  F016         	call	_set_NS
  5578                           
  5579                           ;lab6.c: 277: Wait_N_Seconds(6);
  5580  00283C  0E06               	movlw	6
  5581  00283E  EC56  F017         	call	_Wait_N_Seconds
  5582                           
  5583                           ;lab6.c: 280: set_NS(3);
  5584  002842  0E03               	movlw	3
  5585  002844  EC9E  F016         	call	_set_NS
  5586                           
  5587                           ;lab6.c: 281: Wait_N_Seconds(3);
  5588  002848  0E03               	movlw	3
  5589  00284A  EC56  F017         	call	_Wait_N_Seconds
  5590                           
  5591                           ;lab6.c: 284: set_NS(1);
  5592  00284E  0E01               	movlw	1
  5593  002850  EC9E  F016         	call	_set_NS
  5594                           
  5595                           ;lab6.c: 287: if (PORTCbits.RC0 == 1)
  5596  002854  A082               	btfss	3970,0,c	;volatile
  5597  002856  D00F               	goto	l178
  5598                           
  5599                           ;lab6.c: 288: {
  5600                           ;lab6.c: 290: set_EWLT(2);
  5601  002858  0E02               	movlw	2
  5602  00285A  ECB9  F016         	call	_set_EWLT
  5603                           
  5604                           ;lab6.c: 291: Wait_N_Seconds(7);
  5605  00285E  0E07               	movlw	7
  5606  002860  EC56  F017         	call	_Wait_N_Seconds
  5607                           
  5608                           ;lab6.c: 294: set_EWLT(3);
  5609  002864  0E03               	movlw	3
  5610  002866  ECB9  F016         	call	_set_EWLT
  5611                           
  5612                           ;lab6.c: 295: Wait_N_Seconds(3);
  5613  00286A  0E03               	movlw	3
  5614  00286C  EC56  F017         	call	_Wait_N_Seconds
  5615                           
  5616                           ;lab6.c: 298: set_EWLT(1);
  5617  002870  0E01               	movlw	1
  5618  002872  ECB9  F016         	call	_set_EWLT
  5619  002876                     l178:
  5620                           
  5621                           ;lab6.c: 299: }
  5622                           ;lab6.c: 302: set_EW(2);
  5623  002876  0E02               	movlw	2
  5624  002878  ECD4  F016         	call	_set_EW
  5625                           
  5626                           ;lab6.c: 303: Wait_N_Seconds(6);
  5627  00287C  0E06               	movlw	6
  5628  00287E  EC56  F017         	call	_Wait_N_Seconds
  5629                           
  5630                           ;lab6.c: 306: set_EW(3);
  5631  002882  0E03               	movlw	3
  5632  002884  ECD4  F016         	call	_set_EW
  5633                           
  5634                           ;lab6.c: 307: Wait_N_Seconds(3);
  5635  002888  0E03               	movlw	3
  5636  00288A  EC56  F017         	call	_Wait_N_Seconds
  5637                           
  5638                           ;lab6.c: 310: set_EW(1);
  5639  00288E  0E01               	movlw	1
  5640  002890  ECD4  F016         	call	_set_EW
  5641                           
  5642                           ;lab6.c: 313: if (PORTAbits.RA5 == 1)
  5643  002894  AA80               	btfss	3968,5,c	;volatile
  5644  002896  D010               	goto	l180
  5645                           
  5646                           ;lab6.c: 314: {
  5647                           ;lab6.c: 316: set_NSLT(2);
  5648  002898  0E02               	movlw	2
  5649  00289A  EC83  F016         	call	_set_NSLT
  5650                           
  5651                           ;lab6.c: 317: Wait_N_Seconds(8);
  5652  00289E  0E08               	movlw	8
  5653  0028A0  EC56  F017         	call	_Wait_N_Seconds
  5654                           
  5655                           ;lab6.c: 320: set_NSLT(3);
  5656  0028A4  0E03               	movlw	3
  5657  0028A6  EC83  F016         	call	_set_NSLT
  5658                           
  5659                           ;lab6.c: 321: Wait_N_Seconds(3);
  5660  0028AA  0E03               	movlw	3
  5661  0028AC  EC56  F017         	call	_Wait_N_Seconds
  5662                           
  5663                           ;lab6.c: 324: set_NSLT(1);
  5664  0028B0  0E01               	movlw	1
  5665  0028B2  EC83  F016         	call	_set_NSLT
  5666  0028B6  D000               	goto	l180
  5667  0028B8                     l180:
  5668  0028B8  0012               	return		;funcret
  5669  0028BA                     __end_of_Night_Mode:
  5670                           	opt stack 0
  5671                           tblptru	equ	0xFF8
  5672                           tblptrh	equ	0xFF7
  5673                           tblptrl	equ	0xFF6
  5674                           tablat	equ	0xFF5
  5675                           prodh	equ	0xFF4
  5676                           prodl	equ	0xFF3
  5677                           wreg	equ	0xFE8
  5678                           postinc2	equ	0xFDE
  5679                           postdec2	equ	0xFDD
  5680                           fsr2h	equ	0xFDA
  5681                           fsr2l	equ	0xFD9
  5682                           status	equ	0xFD8
  5683                           
  5684 ;; *************** function _Init_UART *****************
  5685 ;; Defined at:
  5686 ;;		line 70 in file "lab6.c"
  5687 ;; Parameters:    Size  Location     Type
  5688 ;;		None
  5689 ;; Auto vars:     Size  Location     Type
  5690 ;;		None
  5691 ;; Return value:  Size  Location     Type
  5692 ;;		None               void
  5693 ;; Registers used:
  5694 ;;		wreg, status,2, cstack
  5695 ;; Tracked objects:
  5696 ;;		On entry : 0/0
  5697 ;;		On exit  : 0/0
  5698 ;;		Unchanged: 0/0
  5699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5704 ;;Total ram usage:        0 bytes
  5705 ;; Hardware stack levels used:    1
  5706 ;; Hardware stack levels required when called:    1
  5707 ;; This function calls:
  5708 ;;		_OpenUSART
  5709 ;; This function is called by:
  5710 ;;		_main
  5711 ;; This function uses a non-reentrant model
  5712 ;;
  5713                           
  5714                           	psect	text25
  5715  002E90                     __ptext25:
  5716                           	opt stack 0
  5717  002E90                     _Init_UART:
  5718                           	opt stack 29
  5719                           
  5720                           ;lab6.c: 72: OSCCON = 0x70;
  5721                           
  5722                           ;incstack = 0
  5723  002E90  0E70               	movlw	112
  5724  002E92  6ED3               	movwf	4051,c	;volatile
  5725                           
  5726                           ;lab6.c: 73: TRISCbits.TRISC6 = 0;
  5727  002E94  9C94               	bcf	3988,6,c	;volatile
  5728                           
  5729                           ;lab6.c: 74: TRISCbits.TRISC7 = 1;
  5730  002E96  8E94               	bsf	3988,7,c	;volatile
  5731                           
  5732                           ;lab6.c: 76: OpenUSART(0b01111111 &
  5733                           ;lab6.c: 77: 0b10111111 &
  5734                           ;lab6.c: 78: 0b11111110 &
  5735                           ;lab6.c: 79: 0b11111101 &
  5736                           ;lab6.c: 80: 0b11111111 &
  5737                           ;lab6.c: 81: 0b11111111, 25);
  5738  002E98  0E00               	movlw	0
  5739  002E9A  6E02               	movwf	OpenUSART@spbrg+1,c
  5740  002E9C  0E19               	movlw	25
  5741  002E9E  6E01               	movwf	OpenUSART@spbrg,c
  5742  002EA0  0E3C               	movlw	60
  5743  002EA2  ECF9  F015         	call	_OpenUSART
  5744                           
  5745                           ;lab6.c: 83: TXSTAbits.TXEN = 1;
  5746  002EA6  8AAC               	bsf	4012,5,c	;volatile
  5747                           
  5748                           ;lab6.c: 84: RCSTAbits.SPEN = 1;
  5749  002EA8  8EAB               	bsf	4011,7,c	;volatile
  5750  002EAA  0012               	return		;funcret
  5751  002EAC                     __end_of_Init_UART:
  5752                           	opt stack 0
  5753                           tblptru	equ	0xFF8
  5754                           tblptrh	equ	0xFF7
  5755                           tblptrl	equ	0xFF6
  5756                           tablat	equ	0xFF5
  5757                           prodh	equ	0xFF4
  5758                           prodl	equ	0xFF3
  5759                           wreg	equ	0xFE8
  5760                           postinc2	equ	0xFDE
  5761                           postdec2	equ	0xFDD
  5762                           fsr2h	equ	0xFDA
  5763                           fsr2l	equ	0xFD9
  5764                           status	equ	0xFD8
  5765                           
  5766 ;; *************** function _OpenUSART *****************
  5767 ;; Defined at:
  5768 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\uopen.c"
  5769 ;; Parameters:    Size  Location     Type
  5770 ;;  config          1    wreg     unsigned char 
  5771 ;;  spbrg           2    0[COMRAM] unsigned int 
  5772 ;; Auto vars:     Size  Location     Type
  5773 ;;  config          1    2[COMRAM] unsigned char 
  5774 ;; Return value:  Size  Location     Type
  5775 ;;		None               void
  5776 ;; Registers used:
  5777 ;;		wreg, status,2
  5778 ;; Tracked objects:
  5779 ;;		On entry : 0/0
  5780 ;;		On exit  : 0/0
  5781 ;;		Unchanged: 0/0
  5782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5783 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5784 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5786 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5787 ;;Total ram usage:        3 bytes
  5788 ;; Hardware stack levels used:    1
  5789 ;; This function calls:
  5790 ;;		Nothing
  5791 ;; This function is called by:
  5792 ;;		_Init_UART
  5793 ;; This function uses a non-reentrant model
  5794 ;;
  5795                           
  5796                           	psect	text26
  5797  002BF2                     __ptext26:
  5798                           	opt stack 0
  5799  002BF2                     _OpenUSART:
  5800                           	opt stack 29
  5801                           
  5802                           ;incstack = 0
  5803                           ;OpenUSART@config stored from wreg
  5804  002BF2  6E03               	movwf	OpenUSART@config,c
  5805  002BF4  0E00               	movlw	0
  5806  002BF6  6EAC               	movwf	4012,c	;volatile
  5807  002BF8  0E00               	movlw	0
  5808  002BFA  6EAB               	movwf	4011,c	;volatile
  5809  002BFC  A003               	btfss	OpenUSART@config,0,c
  5810  002BFE  D002               	goto	l2614
  5811  002C00  88AC               	bsf	4012,4,c	;volatile
  5812  002C02  D000               	goto	l2614
  5813  002C04                     l2614:
  5814  002C04  A203               	btfss	OpenUSART@config,1,c
  5815  002C06  D003               	goto	l2618
  5816  002C08  8CAC               	bsf	4012,6,c	;volatile
  5817  002C0A  8CAB               	bsf	4011,6,c	;volatile
  5818  002C0C  D000               	goto	l2618
  5819  002C0E                     l2618:
  5820  002C0E  A403               	btfss	OpenUSART@config,2,c
  5821  002C10  D002               	goto	l2622
  5822  002C12  8EAC               	bsf	4012,7,c	;volatile
  5823  002C14  D000               	goto	l2622
  5824  002C16                     l2622:
  5825  002C16  A603               	btfss	OpenUSART@config,3,c
  5826  002C18  D002               	goto	l335
  5827  002C1A  88AB               	bsf	4011,4,c	;volatile
  5828  002C1C  D002               	goto	l2626
  5829  002C1E                     l335:
  5830  002C1E  8AAB               	bsf	4011,5,c	;volatile
  5831  002C20  D000               	goto	l2626
  5832  002C22                     l2626:
  5833  002C22  B803               	btfsc	OpenUSART@config,4,c
  5834  002C24  84AC               	bsf	4012,2,c	;volatile
  5835  002C26  989E               	bcf	3998,4,c	;volatile
  5836  002C28  AA03               	btfss	OpenUSART@config,5,c
  5837  002C2A  D002               	goto	l2634
  5838  002C2C  86AB               	bsf	4011,3,c	;volatile
  5839  002C2E  D000               	goto	l2634
  5840  002C30                     l2634:
  5841  002C30  AC03               	btfss	OpenUSART@config,6,c
  5842  002C32  D002               	goto	l339
  5843  002C34  8A9D               	bsf	3997,5,c	;volatile
  5844  002C36  D001               	goto	l340
  5845  002C38                     l339:
  5846  002C38  9A9D               	bcf	3997,5,c	;volatile
  5847  002C3A                     l340:
  5848  002C3A  9A9E               	bcf	3998,5,c	;volatile
  5849  002C3C  AE03               	btfss	OpenUSART@config,7,c
  5850  002C3E  D002               	goto	l341
  5851  002C40  889D               	bsf	3997,4,c	;volatile
  5852  002C42  D001               	goto	l342
  5853  002C44                     l341:
  5854  002C44  989D               	bcf	3997,4,c	;volatile
  5855  002C46                     l342:
  5856  002C46  C001  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  5857  002C4A  5002               	movf	OpenUSART@spbrg+1,w,c
  5858  002C4C  6EB0               	movwf	4016,c	;volatile
  5859  002C4E  8AAC               	bsf	4012,5,c	;volatile
  5860  002C50  8EAB               	bsf	4011,7,c	;volatile
  5861  002C52  9C94               	bcf	3988,6,c	;volatile
  5862  002C54  8E94               	bsf	3988,7,c	;volatile
  5863  002C56  B8AC               	btfsc	4012,4,c	;volatile
  5864  002C58  BEAC               	btfsc	4012,7,c	;volatile
  5865  002C5A  D002               	goto	l344
  5866  002C5C  8C94               	bsf	3988,6,c	;volatile
  5867  002C5E  D000               	goto	l344
  5868  002C60                     l344:
  5869  002C60  0012               	return		;funcret
  5870  002C62                     __end_of_OpenUSART:
  5871                           	opt stack 0
  5872                           tblptru	equ	0xFF8
  5873                           tblptrh	equ	0xFF7
  5874                           tblptrl	equ	0xFF6
  5875                           tablat	equ	0xFF5
  5876                           prodh	equ	0xFF4
  5877                           prodl	equ	0xFF3
  5878                           wreg	equ	0xFE8
  5879                           postinc2	equ	0xFDE
  5880                           postdec2	equ	0xFDD
  5881                           fsr2h	equ	0xFDA
  5882                           fsr2l	equ	0xFD9
  5883                           status	equ	0xFD8
  5884                           
  5885 ;; *************** function _Init_TRIS *****************
  5886 ;; Defined at:
  5887 ;;		line 424 in file "lab6.c"
  5888 ;; Parameters:    Size  Location     Type
  5889 ;;		None
  5890 ;; Auto vars:     Size  Location     Type
  5891 ;;		None
  5892 ;; Return value:  Size  Location     Type
  5893 ;;		None               void
  5894 ;; Registers used:
  5895 ;;		wreg, status,2
  5896 ;; Tracked objects:
  5897 ;;		On entry : 0/0
  5898 ;;		On exit  : 0/0
  5899 ;;		Unchanged: 0/0
  5900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5905 ;;Total ram usage:        0 bytes
  5906 ;; Hardware stack levels used:    1
  5907 ;; This function calls:
  5908 ;;		Nothing
  5909 ;; This function is called by:
  5910 ;;		_main
  5911 ;; This function uses a non-reentrant model
  5912 ;;
  5913                           
  5914                           	psect	text27
  5915  002EE0                     __ptext27:
  5916                           	opt stack 0
  5917  002EE0                     _Init_TRIS:
  5918                           	opt stack 30
  5919                           
  5920                           ;lab6.c: 425: TRISA = 0xF9;
  5921                           
  5922                           ;incstack = 0
  5923  002EE0  0EF9               	movlw	249
  5924  002EE2  6E92               	movwf	3986,c	;volatile
  5925                           
  5926                           ;lab6.c: 426: TRISB = 0x00;
  5927  002EE4  0E00               	movlw	0
  5928  002EE6  6E93               	movwf	3987,c	;volatile
  5929                           
  5930                           ;lab6.c: 427: TRISC = 0x01;
  5931  002EE8  0E01               	movlw	1
  5932  002EEA  6E94               	movwf	3988,c	;volatile
  5933                           
  5934                           ;lab6.c: 428: TRISD = 0x00;
  5935  002EEC  0E00               	movlw	0
  5936  002EEE  6E95               	movwf	3989,c	;volatile
  5937                           
  5938                           ;lab6.c: 429: TRISE = 0x00;
  5939  002EF0  0E00               	movlw	0
  5940  002EF2  6E96               	movwf	3990,c	;volatile
  5941  002EF4  0012               	return		;funcret
  5942  002EF6                     __end_of_Init_TRIS:
  5943                           	opt stack 0
  5944                           tblptru	equ	0xFF8
  5945                           tblptrh	equ	0xFF7
  5946                           tblptrl	equ	0xFF6
  5947                           tablat	equ	0xFF5
  5948                           prodh	equ	0xFF4
  5949                           prodl	equ	0xFF3
  5950                           wreg	equ	0xFE8
  5951                           postinc2	equ	0xFDE
  5952                           postdec2	equ	0xFDD
  5953                           fsr2h	equ	0xFDA
  5954                           fsr2l	equ	0xFD9
  5955                           status	equ	0xFD8
  5956                           
  5957 ;; *************** function _Init_ADC *****************
  5958 ;; Defined at:
  5959 ;;		line 414 in file "lab6.c"
  5960 ;; Parameters:    Size  Location     Type
  5961 ;;		None
  5962 ;; Auto vars:     Size  Location     Type
  5963 ;;		None
  5964 ;; Return value:  Size  Location     Type
  5965 ;;		None               void
  5966 ;; Registers used:
  5967 ;;		wreg, status,2
  5968 ;; Tracked objects:
  5969 ;;		On entry : 0/0
  5970 ;;		On exit  : 0/0
  5971 ;;		Unchanged: 0/0
  5972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5977 ;;Total ram usage:        0 bytes
  5978 ;; Hardware stack levels used:    1
  5979 ;; This function calls:
  5980 ;;		Nothing
  5981 ;; This function is called by:
  5982 ;;		_main
  5983 ;; This function uses a non-reentrant model
  5984 ;;
  5985                           
  5986                           	psect	text28
  5987  002F1E                     __ptext28:
  5988                           	opt stack 0
  5989  002F1E                     _Init_ADC:
  5990                           	opt stack 30
  5991                           
  5992                           ;lab6.c: 415: ADCON0 = 0x01;
  5993                           
  5994                           ;incstack = 0
  5995  002F1E  0E01               	movlw	1
  5996  002F20  6EC2               	movwf	4034,c	;volatile
  5997                           
  5998                           ;lab6.c: 416: ADCON1 = 0x0E;
  5999  002F22  0E0E               	movlw	14
  6000  002F24  6EC1               	movwf	4033,c	;volatile
  6001                           
  6002                           ;lab6.c: 417: ADCON2 = 0xA9;
  6003  002F26  0EA9               	movlw	169
  6004  002F28  6EC0               	movwf	4032,c	;volatile
  6005  002F2A  0012               	return		;funcret
  6006  002F2C                     __end_of_Init_ADC:
  6007                           	opt stack 0
  6008                           tblptru	equ	0xFF8
  6009                           tblptrh	equ	0xFF7
  6010                           tblptrl	equ	0xFF6
  6011                           tablat	equ	0xFF5
  6012                           prodh	equ	0xFF4
  6013                           prodl	equ	0xFF3
  6014                           wreg	equ	0xFE8
  6015                           postinc2	equ	0xFDE
  6016                           postdec2	equ	0xFDD
  6017                           fsr2h	equ	0xFDA
  6018                           fsr2l	equ	0xFD9
  6019                           status	equ	0xFD8
  6020                           
  6021 ;; *************** function _Day_Mode *****************
  6022 ;; Defined at:
  6023 ;;		line 331 in file "lab6.c"
  6024 ;; Parameters:    Size  Location     Type
  6025 ;;		None
  6026 ;; Auto vars:     Size  Location     Type
  6027 ;;		None
  6028 ;; Return value:  Size  Location     Type
  6029 ;;		None               void
  6030 ;; Registers used:
  6031 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6032 ;; Tracked objects:
  6033 ;;		On entry : 0/0
  6034 ;;		On exit  : 0/0
  6035 ;;		Unchanged: 0/0
  6036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6041 ;;Total ram usage:        0 bytes
  6042 ;; Hardware stack levels used:    1
  6043 ;; Hardware stack levels required when called:    3
  6044 ;; This function calls:
  6045 ;;		_Clear_Lower_Display
  6046 ;;		_Clear_Upper_Display
  6047 ;;		_PED_Control
  6048 ;;		_Wait_N_Seconds
  6049 ;;		_set_EW
  6050 ;;		_set_EWLT
  6051 ;;		_set_NS
  6052 ;;		_set_NSLT
  6053 ;; This function is called by:
  6054 ;;		_main
  6055 ;; This function uses a non-reentrant model
  6056 ;;
  6057                           
  6058                           	psect	text29
  6059  00269E                     __ptext29:
  6060                           	opt stack 0
  6061  00269E                     _Day_Mode:
  6062                           	opt stack 27
  6063                           
  6064                           ;lab6.c: 334: Clear_Upper_Display();
  6065                           
  6066                           ;incstack = 0
  6067  00269E  ECA4  F017         	call	_Clear_Upper_Display	;wreg free
  6068                           
  6069                           ;lab6.c: 335: Clear_Lower_Display();
  6070  0026A2  ECA6  F017         	call	_Clear_Lower_Display	;wreg free
  6071                           
  6072                           ;lab6.c: 336: PORTEbits.RE1 = 1;
  6073  0026A6  8284               	bsf	3972,1,c	;volatile
  6074                           
  6075                           ;lab6.c: 337: set_EW(1);
  6076  0026A8  0E01               	movlw	1
  6077  0026AA  ECD4  F016         	call	_set_EW
  6078                           
  6079                           ;lab6.c: 338: set_EWLT(1);
  6080  0026AE  0E01               	movlw	1
  6081  0026B0  ECB9  F016         	call	_set_EWLT
  6082                           
  6083                           ;lab6.c: 339: set_NSLT(1);
  6084  0026B4  0E01               	movlw	1
  6085  0026B6  EC83  F016         	call	_set_NSLT
  6086                           
  6087                           ;lab6.c: 340: set_NS(2);
  6088  0026BA  0E02               	movlw	2
  6089  0026BC  EC9E  F016         	call	_set_NS
  6090                           
  6091                           ;lab6.c: 343: if (PORTAbits.RA3 == 1)
  6092  0026C0  A680               	btfss	3968,3,c	;volatile
  6093  0026C2  D006               	goto	l2964
  6094                           
  6095                           ;lab6.c: 344: {
  6096                           ;lab6.c: 345: PED_Control(0, 8);
  6097  0026C4  0E08               	movlw	8
  6098  0026C6  6E01               	movwf	PED_Control@num_sec,c
  6099  0026C8  0E00               	movlw	0
  6100  0026CA  ECAF  F013         	call	_PED_Control
  6101  0026CE  D000               	goto	l2964
  6102  0026D0                     l2964:
  6103                           
  6104                           ;lab6.c: 346: }
  6105                           ;lab6.c: 349: Wait_N_Seconds(7);
  6106  0026D0  0E07               	movlw	7
  6107  0026D2  EC56  F017         	call	_Wait_N_Seconds
  6108                           
  6109                           ;lab6.c: 352: set_NS(3);
  6110  0026D6  0E03               	movlw	3
  6111  0026D8  EC9E  F016         	call	_set_NS
  6112                           
  6113                           ;lab6.c: 353: Wait_N_Seconds(3);
  6114  0026DC  0E03               	movlw	3
  6115  0026DE  EC56  F017         	call	_Wait_N_Seconds
  6116                           
  6117                           ;lab6.c: 356: set_NS(1);
  6118  0026E2  0E01               	movlw	1
  6119  0026E4  EC9E  F016         	call	_set_NS
  6120                           
  6121                           ;lab6.c: 359: if (PORTCbits.RC0 == 1)
  6122  0026E8  A082               	btfss	3970,0,c	;volatile
  6123  0026EA  D00F               	goto	l184
  6124                           
  6125                           ;lab6.c: 360: {
  6126                           ;lab6.c: 362: set_EWLT(2);
  6127  0026EC  0E02               	movlw	2
  6128  0026EE  ECB9  F016         	call	_set_EWLT
  6129                           
  6130                           ;lab6.c: 363: Wait_N_Seconds(8);
  6131  0026F2  0E08               	movlw	8
  6132  0026F4  EC56  F017         	call	_Wait_N_Seconds
  6133                           
  6134                           ;lab6.c: 366: set_EWLT(3);
  6135  0026F8  0E03               	movlw	3
  6136  0026FA  ECB9  F016         	call	_set_EWLT
  6137                           
  6138                           ;lab6.c: 367: Wait_N_Seconds(3);
  6139  0026FE  0E03               	movlw	3
  6140  002700  EC56  F017         	call	_Wait_N_Seconds
  6141                           
  6142                           ;lab6.c: 370: set_EWLT(1);
  6143  002704  0E01               	movlw	1
  6144  002706  ECB9  F016         	call	_set_EWLT
  6145  00270A                     l184:
  6146                           
  6147                           ;lab6.c: 371: }
  6148                           ;lab6.c: 374: set_EW(2);
  6149  00270A  0E02               	movlw	2
  6150  00270C  ECD4  F016         	call	_set_EW
  6151                           
  6152                           ;lab6.c: 377: if (PORTAbits.RA4 == 1)
  6153  002710  A880               	btfss	3968,4,c	;volatile
  6154  002712  D006               	goto	l2980
  6155                           
  6156                           ;lab6.c: 378: {
  6157                           ;lab6.c: 379: PED_Control(1, 8);
  6158  002714  0E08               	movlw	8
  6159  002716  6E01               	movwf	PED_Control@num_sec,c
  6160  002718  0E01               	movlw	1
  6161  00271A  ECAF  F013         	call	_PED_Control
  6162  00271E  D000               	goto	l2980
  6163  002720                     l2980:
  6164                           
  6165                           ;lab6.c: 381: }
  6166                           ;lab6.c: 384: Wait_N_Seconds(6);
  6167  002720  0E06               	movlw	6
  6168  002722  EC56  F017         	call	_Wait_N_Seconds
  6169                           
  6170                           ;lab6.c: 387: set_EW(3);
  6171  002726  0E03               	movlw	3
  6172  002728  ECD4  F016         	call	_set_EW
  6173                           
  6174                           ;lab6.c: 388: Wait_N_Seconds(3);
  6175  00272C  0E03               	movlw	3
  6176  00272E  EC56  F017         	call	_Wait_N_Seconds
  6177                           
  6178                           ;lab6.c: 391: set_EW(1);
  6179  002732  0E01               	movlw	1
  6180  002734  ECD4  F016         	call	_set_EW
  6181                           
  6182                           ;lab6.c: 394: if (PORTAbits.RA5 == 1)
  6183  002738  AA80               	btfss	3968,5,c	;volatile
  6184  00273A  D010               	goto	l187
  6185                           
  6186                           ;lab6.c: 395: {
  6187                           ;lab6.c: 397: set_NSLT(2);
  6188  00273C  0E02               	movlw	2
  6189  00273E  EC83  F016         	call	_set_NSLT
  6190                           
  6191                           ;lab6.c: 398: Wait_N_Seconds(7);
  6192  002742  0E07               	movlw	7
  6193  002744  EC56  F017         	call	_Wait_N_Seconds
  6194                           
  6195                           ;lab6.c: 401: set_NSLT(3);
  6196  002748  0E03               	movlw	3
  6197  00274A  EC83  F016         	call	_set_NSLT
  6198                           
  6199                           ;lab6.c: 402: Wait_N_Seconds(3);
  6200  00274E  0E03               	movlw	3
  6201  002750  EC56  F017         	call	_Wait_N_Seconds
  6202                           
  6203                           ;lab6.c: 405: set_NSLT(1);
  6204  002754  0E01               	movlw	1
  6205  002756  EC83  F016         	call	_set_NSLT
  6206  00275A  D000               	goto	l187
  6207  00275C                     l187:
  6208  00275C  0012               	return		;funcret
  6209  00275E                     __end_of_Day_Mode:
  6210                           	opt stack 0
  6211                           tblptru	equ	0xFF8
  6212                           tblptrh	equ	0xFF7
  6213                           tblptrl	equ	0xFF6
  6214                           tablat	equ	0xFF5
  6215                           prodh	equ	0xFF4
  6216                           prodl	equ	0xFF3
  6217                           wreg	equ	0xFE8
  6218                           postinc2	equ	0xFDE
  6219                           postdec2	equ	0xFDD
  6220                           fsr2h	equ	0xFDA
  6221                           fsr2l	equ	0xFD9
  6222                           status	equ	0xFD8
  6223                           
  6224 ;; *************** function _set_NSLT *****************
  6225 ;; Defined at:
  6226 ;;		line 131 in file "lab6.c"
  6227 ;; Parameters:    Size  Location     Type
  6228 ;;  color           1    wreg     unsigned char 
  6229 ;; Auto vars:     Size  Location     Type
  6230 ;;  color           1    0[COMRAM] unsigned char 
  6231 ;; Return value:  Size  Location     Type
  6232 ;;		None               void
  6233 ;; Registers used:
  6234 ;;		wreg, status,2, status,0
  6235 ;; Tracked objects:
  6236 ;;		On entry : 0/0
  6237 ;;		On exit  : 0/0
  6238 ;;		Unchanged: 0/0
  6239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6241 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6243 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6244 ;;Total ram usage:        1 bytes
  6245 ;; Hardware stack levels used:    1
  6246 ;; This function calls:
  6247 ;;		Nothing
  6248 ;; This function is called by:
  6249 ;;		_Night_Mode
  6250 ;;		_Day_Mode
  6251 ;; This function uses a non-reentrant model
  6252 ;;
  6253                           
  6254                           	psect	text30
  6255  002D06                     __ptext30:
  6256                           	opt stack 0
  6257  002D06                     _set_NSLT:
  6258                           	opt stack 29
  6259                           
  6260                           ;incstack = 0
  6261                           ;set_NSLT@color stored from wreg
  6262  002D06  6E01               	movwf	set_NSLT@color,c
  6263                           
  6264                           ;lab6.c: 133: switch(color)
  6265  002D08  D00A               	goto	l1640
  6266  002D0A                     l115:
  6267  002D0A  9482               	bcf	3970,2,c	;volatile
  6268  002D0C  D001               	goto	L12
  6269  002D0E                     l117:
  6270  002D0E  8482               	bsf	3970,2,c	;volatile
  6271  002D10                     L12:
  6272  002D10  9682               	bcf	3970,3,c	;volatile
  6273  002D12  D013               	goto	l120
  6274  002D14                     l118:
  6275  002D14  9482               	bcf	3970,2,c	;volatile
  6276  002D16  D001               	goto	L13
  6277  002D18                     l119:
  6278  002D18  8482               	bsf	3970,2,c	;volatile
  6279  002D1A                     L13:
  6280  002D1A  8682               	bsf	3970,3,c	;volatile
  6281                           
  6282                           ;lab6.c: 139: }
  6283  002D1C  D00E               	goto	l120
  6284  002D1E                     l1640:
  6285  002D1E  5001               	movf	set_NSLT@color,w,c
  6286                           
  6287                           ; Switch size 1, requested type "space"
  6288                           ; Number of cases is 4, Range of values is 0 to 3
  6289                           ; switch strategies available:
  6290                           ; Name         Instructions Cycles
  6291                           ; simple_byte           13     7 (average)
  6292                           ;	Chosen strategy is simple_byte
  6293  002D20  0A00               	xorlw	0	; case 0
  6294  002D22  B4D8               	btfsc	status,2,c
  6295  002D24  D7F2               	goto	l115
  6296  002D26  0A01               	xorlw	1	; case 1
  6297  002D28  B4D8               	btfsc	status,2,c
  6298  002D2A  D7F1               	goto	l117
  6299  002D2C  0A03               	xorlw	3	; case 2
  6300  002D2E  B4D8               	btfsc	status,2,c
  6301  002D30  D7F1               	goto	l118
  6302  002D32  0A01               	xorlw	1	; case 3
  6303  002D34  B4D8               	btfsc	status,2,c
  6304  002D36  D7F0               	goto	l119
  6305  002D38  D000               	goto	l120
  6306  002D3A                     l120:
  6307  002D3A  0012               	return		;funcret
  6308  002D3C                     __end_of_set_NSLT:
  6309                           	opt stack 0
  6310                           tblptru	equ	0xFF8
  6311                           tblptrh	equ	0xFF7
  6312                           tblptrl	equ	0xFF6
  6313                           tablat	equ	0xFF5
  6314                           prodh	equ	0xFF4
  6315                           prodl	equ	0xFF3
  6316                           wreg	equ	0xFE8
  6317                           postinc2	equ	0xFDE
  6318                           postdec2	equ	0xFDD
  6319                           fsr2h	equ	0xFDA
  6320                           fsr2l	equ	0xFD9
  6321                           status	equ	0xFD8
  6322                           
  6323 ;; *************** function _set_NS *****************
  6324 ;; Defined at:
  6325 ;;		line 120 in file "lab6.c"
  6326 ;; Parameters:    Size  Location     Type
  6327 ;;  color           1    wreg     unsigned char 
  6328 ;; Auto vars:     Size  Location     Type
  6329 ;;  color           1    0[COMRAM] unsigned char 
  6330 ;; Return value:  Size  Location     Type
  6331 ;;		None               void
  6332 ;; Registers used:
  6333 ;;		wreg, status,2, status,0
  6334 ;; Tracked objects:
  6335 ;;		On entry : 0/0
  6336 ;;		On exit  : 0/0
  6337 ;;		Unchanged: 0/0
  6338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6340 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6342 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6343 ;;Total ram usage:        1 bytes
  6344 ;; Hardware stack levels used:    1
  6345 ;; This function calls:
  6346 ;;		Nothing
  6347 ;; This function is called by:
  6348 ;;		_Night_Mode
  6349 ;;		_Day_Mode
  6350 ;; This function uses a non-reentrant model
  6351 ;;
  6352                           
  6353                           	psect	text31
  6354  002D3C                     __ptext31:
  6355                           	opt stack 0
  6356  002D3C                     _set_NS:
  6357                           	opt stack 29
  6358                           
  6359                           ;incstack = 0
  6360                           ;set_NS@color stored from wreg
  6361  002D3C  6E01               	movwf	set_NS@color,c
  6362                           
  6363                           ;lab6.c: 122: switch (color)
  6364  002D3E  D00A               	goto	l1634
  6365  002D40                     l106:
  6366  002D40  9280               	bcf	3968,1,c	;volatile
  6367  002D42  D001               	goto	L14
  6368  002D44                     l108:
  6369  002D44  8280               	bsf	3968,1,c	;volatile
  6370  002D46                     L14:
  6371  002D46  9480               	bcf	3968,2,c	;volatile
  6372  002D48  D013               	goto	l111
  6373  002D4A                     l109:
  6374  002D4A  9280               	bcf	3968,1,c	;volatile
  6375  002D4C  D001               	goto	L15
  6376  002D4E                     l110:
  6377  002D4E  8280               	bsf	3968,1,c	;volatile
  6378  002D50                     L15:
  6379  002D50  8480               	bsf	3968,2,c	;volatile
  6380                           
  6381                           ;lab6.c: 128: }
  6382  002D52  D00E               	goto	l111
  6383  002D54                     l1634:
  6384  002D54  5001               	movf	set_NS@color,w,c
  6385                           
  6386                           ; Switch size 1, requested type "space"
  6387                           ; Number of cases is 4, Range of values is 0 to 3
  6388                           ; switch strategies available:
  6389                           ; Name         Instructions Cycles
  6390                           ; simple_byte           13     7 (average)
  6391                           ;	Chosen strategy is simple_byte
  6392  002D56  0A00               	xorlw	0	; case 0
  6393  002D58  B4D8               	btfsc	status,2,c
  6394  002D5A  D7F2               	goto	l106
  6395  002D5C  0A01               	xorlw	1	; case 1
  6396  002D5E  B4D8               	btfsc	status,2,c
  6397  002D60  D7F1               	goto	l108
  6398  002D62  0A03               	xorlw	3	; case 2
  6399  002D64  B4D8               	btfsc	status,2,c
  6400  002D66  D7F1               	goto	l109
  6401  002D68  0A01               	xorlw	1	; case 3
  6402  002D6A  B4D8               	btfsc	status,2,c
  6403  002D6C  D7F0               	goto	l110
  6404  002D6E  D000               	goto	l111
  6405  002D70                     l111:
  6406  002D70  0012               	return		;funcret
  6407  002D72                     __end_of_set_NS:
  6408                           	opt stack 0
  6409                           tblptru	equ	0xFF8
  6410                           tblptrh	equ	0xFF7
  6411                           tblptrl	equ	0xFF6
  6412                           tablat	equ	0xFF5
  6413                           prodh	equ	0xFF4
  6414                           prodl	equ	0xFF3
  6415                           wreg	equ	0xFE8
  6416                           postinc2	equ	0xFDE
  6417                           postdec2	equ	0xFDD
  6418                           fsr2h	equ	0xFDA
  6419                           fsr2l	equ	0xFD9
  6420                           status	equ	0xFD8
  6421                           
  6422 ;; *************** function _set_EWLT *****************
  6423 ;; Defined at:
  6424 ;;		line 153 in file "lab6.c"
  6425 ;; Parameters:    Size  Location     Type
  6426 ;;  color           1    wreg     unsigned char 
  6427 ;; Auto vars:     Size  Location     Type
  6428 ;;  color           1    0[COMRAM] unsigned char 
  6429 ;; Return value:  Size  Location     Type
  6430 ;;		None               void
  6431 ;; Registers used:
  6432 ;;		wreg, status,2, status,0
  6433 ;; Tracked objects:
  6434 ;;		On entry : 0/0
  6435 ;;		On exit  : 0/0
  6436 ;;		Unchanged: 0/0
  6437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6439 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6441 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6442 ;;Total ram usage:        1 bytes
  6443 ;; Hardware stack levels used:    1
  6444 ;; This function calls:
  6445 ;;		Nothing
  6446 ;; This function is called by:
  6447 ;;		_Night_Mode
  6448 ;;		_Day_Mode
  6449 ;; This function uses a non-reentrant model
  6450 ;;
  6451                           
  6452                           	psect	text32
  6453  002D72                     __ptext32:
  6454                           	opt stack 0
  6455  002D72                     _set_EWLT:
  6456                           	opt stack 29
  6457                           
  6458                           ;incstack = 0
  6459                           ;set_EWLT@color stored from wreg
  6460  002D72  6E01               	movwf	set_EWLT@color,c
  6461                           
  6462                           ;lab6.c: 155: switch(color)
  6463  002D74  D00A               	goto	l1652
  6464  002D76                     l133:
  6465  002D76  9E81               	bcf	3969,7,c	;volatile
  6466  002D78  D001               	goto	L16
  6467  002D7A                     l135:
  6468  002D7A  8E81               	bsf	3969,7,c	;volatile
  6469  002D7C                     L16:
  6470  002D7C  9084               	bcf	3972,0,c	;volatile
  6471  002D7E  D013               	goto	l138
  6472  002D80                     l136:
  6473  002D80  9E81               	bcf	3969,7,c	;volatile
  6474  002D82  D001               	goto	L17
  6475  002D84                     l137:
  6476  002D84  8E81               	bsf	3969,7,c	;volatile
  6477  002D86                     L17:
  6478  002D86  8084               	bsf	3972,0,c	;volatile
  6479                           
  6480                           ;lab6.c: 161: }
  6481  002D88  D00E               	goto	l138
  6482  002D8A                     l1652:
  6483  002D8A  5001               	movf	set_EWLT@color,w,c
  6484                           
  6485                           ; Switch size 1, requested type "space"
  6486                           ; Number of cases is 4, Range of values is 0 to 3
  6487                           ; switch strategies available:
  6488                           ; Name         Instructions Cycles
  6489                           ; simple_byte           13     7 (average)
  6490                           ;	Chosen strategy is simple_byte
  6491  002D8C  0A00               	xorlw	0	; case 0
  6492  002D8E  B4D8               	btfsc	status,2,c
  6493  002D90  D7F2               	goto	l133
  6494  002D92  0A01               	xorlw	1	; case 1
  6495  002D94  B4D8               	btfsc	status,2,c
  6496  002D96  D7F1               	goto	l135
  6497  002D98  0A03               	xorlw	3	; case 2
  6498  002D9A  B4D8               	btfsc	status,2,c
  6499  002D9C  D7F1               	goto	l136
  6500  002D9E  0A01               	xorlw	1	; case 3
  6501  002DA0  B4D8               	btfsc	status,2,c
  6502  002DA2  D7F0               	goto	l137
  6503  002DA4  D000               	goto	l138
  6504  002DA6                     l138:
  6505  002DA6  0012               	return		;funcret
  6506  002DA8                     __end_of_set_EWLT:
  6507                           	opt stack 0
  6508                           tblptru	equ	0xFF8
  6509                           tblptrh	equ	0xFF7
  6510                           tblptrl	equ	0xFF6
  6511                           tablat	equ	0xFF5
  6512                           prodh	equ	0xFF4
  6513                           prodl	equ	0xFF3
  6514                           wreg	equ	0xFE8
  6515                           postinc2	equ	0xFDE
  6516                           postdec2	equ	0xFDD
  6517                           fsr2h	equ	0xFDA
  6518                           fsr2l	equ	0xFD9
  6519                           status	equ	0xFD8
  6520                           
  6521 ;; *************** function _set_EW *****************
  6522 ;; Defined at:
  6523 ;;		line 142 in file "lab6.c"
  6524 ;; Parameters:    Size  Location     Type
  6525 ;;  color           1    wreg     unsigned char 
  6526 ;; Auto vars:     Size  Location     Type
  6527 ;;  color           1    0[COMRAM] unsigned char 
  6528 ;; Return value:  Size  Location     Type
  6529 ;;		None               void
  6530 ;; Registers used:
  6531 ;;		wreg, status,2, status,0
  6532 ;; Tracked objects:
  6533 ;;		On entry : 0/0
  6534 ;;		On exit  : 0/0
  6535 ;;		Unchanged: 0/0
  6536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6538 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6540 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6541 ;;Total ram usage:        1 bytes
  6542 ;; Hardware stack levels used:    1
  6543 ;; This function calls:
  6544 ;;		Nothing
  6545 ;; This function is called by:
  6546 ;;		_Night_Mode
  6547 ;;		_Day_Mode
  6548 ;; This function uses a non-reentrant model
  6549 ;;
  6550                           
  6551                           	psect	text33
  6552  002DA8                     __ptext33:
  6553                           	opt stack 0
  6554  002DA8                     _set_EW:
  6555                           	opt stack 29
  6556                           
  6557                           ;incstack = 0
  6558                           ;set_EW@color stored from wreg
  6559  002DA8  6E01               	movwf	set_EW@color,c
  6560                           
  6561                           ;lab6.c: 144: switch(color)
  6562  002DAA  D00A               	goto	l1646
  6563  002DAC                     l124:
  6564  002DAC  9882               	bcf	3970,4,c	;volatile
  6565  002DAE  D001               	goto	L18
  6566  002DB0                     l126:
  6567  002DB0  8882               	bsf	3970,4,c	;volatile
  6568  002DB2                     L18:
  6569  002DB2  9A82               	bcf	3970,5,c	;volatile
  6570  002DB4  D013               	goto	l129
  6571  002DB6                     l127:
  6572  002DB6  9882               	bcf	3970,4,c	;volatile
  6573  002DB8  D001               	goto	L19
  6574  002DBA                     l128:
  6575  002DBA  8882               	bsf	3970,4,c	;volatile
  6576  002DBC                     L19:
  6577  002DBC  8A82               	bsf	3970,5,c	;volatile
  6578                           
  6579                           ;lab6.c: 150: }
  6580  002DBE  D00E               	goto	l129
  6581  002DC0                     l1646:
  6582  002DC0  5001               	movf	set_EW@color,w,c
  6583                           
  6584                           ; Switch size 1, requested type "space"
  6585                           ; Number of cases is 4, Range of values is 0 to 3
  6586                           ; switch strategies available:
  6587                           ; Name         Instructions Cycles
  6588                           ; simple_byte           13     7 (average)
  6589                           ;	Chosen strategy is simple_byte
  6590  002DC2  0A00               	xorlw	0	; case 0
  6591  002DC4  B4D8               	btfsc	status,2,c
  6592  002DC6  D7F2               	goto	l124
  6593  002DC8  0A01               	xorlw	1	; case 1
  6594  002DCA  B4D8               	btfsc	status,2,c
  6595  002DCC  D7F1               	goto	l126
  6596  002DCE  0A03               	xorlw	3	; case 2
  6597  002DD0  B4D8               	btfsc	status,2,c
  6598  002DD2  D7F1               	goto	l127
  6599  002DD4  0A01               	xorlw	1	; case 3
  6600  002DD6  B4D8               	btfsc	status,2,c
  6601  002DD8  D7F0               	goto	l128
  6602  002DDA  D000               	goto	l129
  6603  002DDC                     l129:
  6604  002DDC  0012               	return		;funcret
  6605  002DDE                     __end_of_set_EW:
  6606                           	opt stack 0
  6607                           tblptru	equ	0xFF8
  6608                           tblptrh	equ	0xFF7
  6609                           tblptrl	equ	0xFF6
  6610                           tablat	equ	0xFF5
  6611                           prodh	equ	0xFF4
  6612                           prodl	equ	0xFF3
  6613                           wreg	equ	0xFE8
  6614                           postinc2	equ	0xFDE
  6615                           postdec2	equ	0xFDD
  6616                           fsr2h	equ	0xFDA
  6617                           fsr2l	equ	0xFD9
  6618                           status	equ	0xFD8
  6619                           
  6620 ;; *************** function _Wait_N_Seconds *****************
  6621 ;; Defined at:
  6622 ;;		line 87 in file "lab6.c"
  6623 ;; Parameters:    Size  Location     Type
  6624 ;;  seconds         1    wreg     unsigned char 
  6625 ;; Auto vars:     Size  Location     Type
  6626 ;;  seconds         1    0[COMRAM] unsigned char 
  6627 ;;  I               1    1[COMRAM] unsigned char 
  6628 ;; Return value:  Size  Location     Type
  6629 ;;		None               void
  6630 ;; Registers used:
  6631 ;;		wreg, status,2, status,0, cstack
  6632 ;; Tracked objects:
  6633 ;;		On entry : 0/0
  6634 ;;		On exit  : 0/0
  6635 ;;		Unchanged: 0/0
  6636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6638 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6640 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6641 ;;Total ram usage:        2 bytes
  6642 ;; Hardware stack levels used:    1
  6643 ;; Hardware stack levels required when called:    2
  6644 ;; This function calls:
  6645 ;;		_Wait_One_Second
  6646 ;; This function is called by:
  6647 ;;		_Night_Mode
  6648 ;;		_Day_Mode
  6649 ;; This function uses a non-reentrant model
  6650 ;;
  6651                           
  6652                           	psect	text34
  6653  002EAC                     __ptext34:
  6654                           	opt stack 0
  6655  002EAC                     _Wait_N_Seconds:
  6656                           	opt stack 27
  6657                           
  6658                           ;incstack = 0
  6659                           ;Wait_N_Seconds@seconds stored from wreg
  6660  002EAC  6E01               	movwf	Wait_N_Seconds@seconds,c
  6661                           
  6662                           ;lab6.c: 89: char I;
  6663                           ;lab6.c: 90: for (I = 0; I< seconds; I++)
  6664  002EAE  0E00               	movlw	0
  6665  002EB0  6E02               	movwf	Wait_N_Seconds@I,c
  6666  002EB2  D004               	goto	l1628
  6667  002EB4                     l1624:
  6668                           
  6669                           ;lab6.c: 91: {
  6670                           ;lab6.c: 92: Wait_One_Second ();
  6671  002EB4  EC96  F017         	call	_Wait_One_Second	;wreg free
  6672  002EB8  2A02               	incf	Wait_N_Seconds@I,f,c
  6673  002EBA  D000               	goto	l1628
  6674  002EBC                     l1628:
  6675  002EBC  5001               	movf	Wait_N_Seconds@seconds,w,c
  6676  002EBE  5C02               	subwf	Wait_N_Seconds@I,w,c
  6677  002EC0  A0D8               	btfss	status,0,c
  6678  002EC2  D7F8               	goto	l1624
  6679  002EC4  0012               	return		;funcret
  6680  002EC6                     __end_of_Wait_N_Seconds:
  6681                           	opt stack 0
  6682                           tblptru	equ	0xFF8
  6683                           tblptrh	equ	0xFF7
  6684                           tblptrl	equ	0xFF6
  6685                           tablat	equ	0xFF5
  6686                           prodh	equ	0xFF4
  6687                           prodl	equ	0xFF3
  6688                           wreg	equ	0xFE8
  6689                           postinc2	equ	0xFDE
  6690                           postdec2	equ	0xFDD
  6691                           fsr2h	equ	0xFDA
  6692                           fsr2l	equ	0xFD9
  6693                           status	equ	0xFD8
  6694                           
  6695 ;; *************** function _Wait_One_Second *****************
  6696 ;; Defined at:
  6697 ;;		line 60 in file "lab6.c"
  6698 ;; Parameters:    Size  Location     Type
  6699 ;;		None
  6700 ;; Auto vars:     Size  Location     Type
  6701 ;;		None
  6702 ;; Return value:  Size  Location     Type
  6703 ;;		None               void
  6704 ;; Registers used:
  6705 ;;		wreg, status,2, cstack
  6706 ;; Tracked objects:
  6707 ;;		On entry : 0/0
  6708 ;;		On exit  : 0/0
  6709 ;;		Unchanged: 0/0
  6710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6715 ;;Total ram usage:        0 bytes
  6716 ;; Hardware stack levels used:    1
  6717 ;; Hardware stack levels required when called:    1
  6718 ;; This function calls:
  6719 ;;		_Wait_Half_Second
  6720 ;; This function is called by:
  6721 ;;		_Wait_N_Seconds
  6722 ;; This function uses a non-reentrant model
  6723 ;;
  6724                           
  6725                           	psect	text35
  6726  002F2C                     __ptext35:
  6727                           	opt stack 0
  6728  002F2C                     _Wait_One_Second:
  6729                           	opt stack 27
  6730                           
  6731                           ;lab6.c: 62: PORTEbits.RE2 = 1;
  6732                           
  6733                           ;incstack = 0
  6734  002F2C  8484               	bsf	3972,2,c	;volatile
  6735                           
  6736                           ;lab6.c: 63: Wait_Half_Second ();
  6737  002F2E  EC63  F017         	call	_Wait_Half_Second	;wreg free
  6738                           
  6739                           ;lab6.c: 64: PORTEbits.RE2 = 0;
  6740  002F32  9484               	bcf	3972,2,c	;volatile
  6741                           
  6742                           ;lab6.c: 65: Wait_Half_Second ();
  6743  002F34  EC63  F017         	call	_Wait_Half_Second	;wreg free
  6744  002F38  0012               	return		;funcret
  6745  002F3A                     __end_of_Wait_One_Second:
  6746                           	opt stack 0
  6747                           tblptru	equ	0xFF8
  6748                           tblptrh	equ	0xFF7
  6749                           tblptrl	equ	0xFF6
  6750                           tablat	equ	0xFF5
  6751                           prodh	equ	0xFF4
  6752                           prodl	equ	0xFF3
  6753                           wreg	equ	0xFE8
  6754                           postinc2	equ	0xFDE
  6755                           postdec2	equ	0xFDD
  6756                           fsr2h	equ	0xFDA
  6757                           fsr2l	equ	0xFD9
  6758                           status	equ	0xFD8
  6759                           
  6760 ;; *************** function _PED_Control *****************
  6761 ;; Defined at:
  6762 ;;		line 192 in file "lab6.c"
  6763 ;; Parameters:    Size  Location     Type
  6764 ;;  direction       1    wreg     unsigned char 
  6765 ;;  num_sec         1    0[COMRAM] unsigned char 
  6766 ;; Auto vars:     Size  Location     Type
  6767 ;;  direction       1    2[COMRAM] unsigned char 
  6768 ;;  j               2    5[COMRAM] int 
  6769 ;;  i               2    3[COMRAM] int 
  6770 ;; Return value:  Size  Location     Type
  6771 ;;		None               void
  6772 ;; Registers used:
  6773 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6774 ;; Tracked objects:
  6775 ;;		On entry : 0/0
  6776 ;;		On exit  : 0/0
  6777 ;;		Unchanged: 0/0
  6778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6779 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6780 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6781 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6782 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6783 ;;Total ram usage:        7 bytes
  6784 ;; Hardware stack levels used:    1
  6785 ;; Hardware stack levels required when called:    2
  6786 ;; This function calls:
  6787 ;;		_Wait_One_Second_With_Beep
  6788 ;; This function is called by:
  6789 ;;		_Day_Mode
  6790 ;; This function uses a non-reentrant model
  6791 ;;
  6792                           
  6793                           	psect	text36
  6794  00275E                     __ptext36:
  6795                           	opt stack 0
  6796  00275E                     _PED_Control:
  6797                           	opt stack 27
  6798                           
  6799                           ;incstack = 0
  6800                           ;PED_Control@direction stored from wreg
  6801  00275E  6E03               	movwf	PED_Control@direction,c
  6802                           
  6803                           ;lab6.c: 196: if (direction == 0)
  6804  002760  5003               	movf	PED_Control@direction,w,c
  6805  002762  A4D8               	btfss	status,2,c
  6806  002764  D025               	goto	l2674
  6807                           
  6808                           ;lab6.c: 197: {
  6809                           ;lab6.c: 200: PORTB = 0xFF;
  6810  002766  6881               	setf	3969,c	;volatile
  6811                           
  6812                           ;lab6.c: 201: for (int i=num_sec-1; i>0; i--)
  6813  002768  0EFF               	movlw	255
  6814  00276A  2401               	addwf	PED_Control@num_sec,w,c
  6815  00276C  6E04               	movwf	PED_Control@i,c
  6816  00276E  6A05               	clrf	PED_Control@i+1,c
  6817  002770  0EFF               	movlw	255
  6818  002772  2205               	addwfc	PED_Control@i+1,f,c
  6819  002774  BE05               	btfsc	PED_Control@i+1,7,c
  6820  002776  D01A               	goto	l143
  6821  002778  5005               	movf	PED_Control@i+1,w,c
  6822  00277A  E105               	bnz	l2666
  6823  00277C  0404               	decf	PED_Control@i,w,c
  6824  00277E  A0D8               	btfss	status,0,c
  6825  002780  D015               	goto	l143
  6826  002782  D001               	goto	l2666
  6827  002784  D013               	goto	l143
  6828  002786                     l2666:
  6829                           
  6830                           ;lab6.c: 202: {
  6831                           ;lab6.c: 204: PORTD = seven_seg_table[i];
  6832  002786  0E77               	movlw	low _seven_seg_table
  6833  002788  2404               	addwf	PED_Control@i,w,c
  6834  00278A  6EF6               	movwf	tblptrl,c
  6835  00278C  0E10               	movlw	high _seven_seg_table
  6836  00278E  2005               	addwfc	PED_Control@i+1,w,c
  6837  002790  6EF7               	movwf	tblptrh,c
  6838  002792                     	if	1	;There are 3 active tblptr bytes
  6839  002792  6AF8               	clrf	tblptru,c
  6840  002794  0E00               	movlw	low (__mediumconst shr (0+16))
  6841  002796  22F8               	addwfc	tblptru,f,c
  6842  002798                     	endif
  6843  002798  0008               	tblrd		*
  6844  00279A  CFF5 FF83          	movff	tablat,3971	;volatile
  6845                           
  6846                           ;lab6.c: 205: Wait_One_Second_With_Beep();
  6847  00279E  EC7B  F017         	call	_Wait_One_Second_With_Beep	;wreg free
  6848  0027A2  0604               	decf	PED_Control@i,f,c
  6849  0027A4  A0D8               	btfss	status,0,c
  6850  0027A6  0605               	decf	PED_Control@i+1,f,c
  6851  0027A8  D7E5               	goto	L20
  6852  0027AA  D7ED               	goto	l2666
  6853  0027AC                     l143:
  6854                           
  6855                           ;lab6.c: 206: }
  6856                           ;lab6.c: 207: PORTD = 0xFF;
  6857  0027AC  6883               	setf	3971,c	;volatile
  6858  0027AE  D000               	goto	l2674
  6859  0027B0                     l2674:
  6860                           
  6861                           ;lab6.c: 208: }
  6862                           ;lab6.c: 210: if (direction == 1)
  6863  0027B0  0403               	decf	PED_Control@direction,w,c
  6864  0027B2  A4D8               	btfss	status,2,c
  6865  0027B4  D02B               	goto	l2690
  6866                           
  6867                           ;lab6.c: 211: {
  6868                           ;lab6.c: 214: PORTD = 0xFF;
  6869  0027B6  6883               	setf	3971,c	;volatile
  6870                           
  6871                           ;lab6.c: 215: for (int j=num_sec-1; j>0; j--)
  6872  0027B8  0EFF               	movlw	255
  6873  0027BA  2401               	addwf	PED_Control@num_sec,w,c
  6874  0027BC  6E06               	movwf	PED_Control@j,c
  6875  0027BE  6A07               	clrf	PED_Control@j+1,c
  6876  0027C0  0EFF               	movlw	255
  6877  0027C2  2207               	addwfc	PED_Control@j+1,f,c
  6878  0027C4  BE07               	btfsc	PED_Control@j+1,7,c
  6879  0027C6  D020               	goto	l146
  6880  0027C8  5007               	movf	PED_Control@j+1,w,c
  6881  0027CA  E105               	bnz	l2682
  6882  0027CC  0406               	decf	PED_Control@j,w,c
  6883  0027CE  A0D8               	btfss	status,0,c
  6884  0027D0  D01B               	goto	l146
  6885  0027D2  D001               	goto	l2682
  6886  0027D4  D019               	goto	l146
  6887  0027D6                     l2682:
  6888                           
  6889                           ;lab6.c: 216: {
  6890                           ;lab6.c: 218: PORTB = (seven_seg_table[j] & 0x7F) | (PORTB & 0x80);
  6891  0027D6  CF81 F002          	movff	3969,??_PED_Control	;volatile
  6892  0027DA  0E80               	movlw	128
  6893  0027DC  1602               	andwf	??_PED_Control,f,c
  6894  0027DE  0E77               	movlw	low _seven_seg_table
  6895  0027E0  2406               	addwf	PED_Control@j,w,c
  6896  0027E2  6EF6               	movwf	tblptrl,c
  6897  0027E4  0E10               	movlw	high _seven_seg_table
  6898  0027E6  2007               	addwfc	PED_Control@j+1,w,c
  6899  0027E8  6EF7               	movwf	tblptrh,c
  6900  0027EA                     	if	1	;There are 3 active tblptr bytes
  6901  0027EA  6AF8               	clrf	tblptru,c
  6902  0027EC  0E00               	movlw	low (__mediumconst shr (0+16))
  6903  0027EE  22F8               	addwfc	tblptru,f,c
  6904  0027F0                     	endif
  6905  0027F0  0008               	tblrd		*
  6906  0027F2  50F5               	movf	tablat,w,c
  6907  0027F4  0B7F               	andlw	127
  6908  0027F6  1002               	iorwf	??_PED_Control,w,c
  6909  0027F8  6E81               	movwf	3969,c	;volatile
  6910                           
  6911                           ;lab6.c: 219: Wait_One_Second_With_Beep();
  6912  0027FA  EC7B  F017         	call	_Wait_One_Second_With_Beep	;wreg free
  6913  0027FE  0606               	decf	PED_Control@j,f,c
  6914  002800  A0D8               	btfss	status,0,c
  6915  002802  0607               	decf	PED_Control@j+1,f,c
  6916  002804  D7DF               	goto	L21
  6917  002806  D7E7               	goto	l2682
  6918  002808                     l146:
  6919                           
  6920                           ;lab6.c: 220: }
  6921                           ;lab6.c: 221: PORTB = 0xFF;
  6922  002808  6881               	setf	3969,c	;volatile
  6923  00280A  D000               	goto	l2690
  6924  00280C                     l2690:
  6925                           
  6926                           ;lab6.c: 222: }
  6927                           ;lab6.c: 224: Wait_One_Second_With_Beep();
  6928  00280C  EC7B  F017         	call	_Wait_One_Second_With_Beep	;wreg free
  6929  002810  0012               	return		;funcret
  6930  002812                     __end_of_PED_Control:
  6931                           	opt stack 0
  6932                           tblptru	equ	0xFF8
  6933                           tblptrh	equ	0xFF7
  6934                           tblptrl	equ	0xFF6
  6935                           tablat	equ	0xFF5
  6936                           prodh	equ	0xFF4
  6937                           prodl	equ	0xFF3
  6938                           wreg	equ	0xFE8
  6939                           postinc2	equ	0xFDE
  6940                           postdec2	equ	0xFDD
  6941                           fsr2h	equ	0xFDA
  6942                           fsr2l	equ	0xFD9
  6943                           status	equ	0xFD8
  6944                           
  6945 ;; *************** function _Wait_One_Second_With_Beep *****************
  6946 ;; Defined at:
  6947 ;;		line 228 in file "lab6.c"
  6948 ;; Parameters:    Size  Location     Type
  6949 ;;		None
  6950 ;; Auto vars:     Size  Location     Type
  6951 ;;		None
  6952 ;; Return value:  Size  Location     Type
  6953 ;;		None               void
  6954 ;; Registers used:
  6955 ;;		wreg, status,2, cstack
  6956 ;; Tracked objects:
  6957 ;;		On entry : 0/0
  6958 ;;		On exit  : 0/0
  6959 ;;		Unchanged: 0/0
  6960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6965 ;;Total ram usage:        0 bytes
  6966 ;; Hardware stack levels used:    1
  6967 ;; Hardware stack levels required when called:    1
  6968 ;; This function calls:
  6969 ;;		_Activate_Buzzer
  6970 ;;		_Deactivate_Buzzer
  6971 ;;		_Wait_Half_Second
  6972 ;; This function is called by:
  6973 ;;		_PED_Control
  6974 ;; This function uses a non-reentrant model
  6975 ;;
  6976                           
  6977                           	psect	text37
  6978  002EF6                     __ptext37:
  6979                           	opt stack 0
  6980  002EF6                     _Wait_One_Second_With_Beep:
  6981                           	opt stack 27
  6982                           
  6983                           ;lab6.c: 230: PORTEbits.RE2 = 1;
  6984                           
  6985                           ;incstack = 0
  6986  002EF6  8484               	bsf	3972,2,c	;volatile
  6987                           
  6988                           ;lab6.c: 231: Activate_Buzzer ();
  6989  002EF8  EC86  F017         	call	_Activate_Buzzer	;wreg free
  6990                           
  6991                           ;lab6.c: 232: Wait_Half_Second ();
  6992  002EFC  EC63  F017         	call	_Wait_Half_Second	;wreg free
  6993                           
  6994                           ;lab6.c: 233: PORTEbits.RE2 = 0;
  6995  002F00  9484               	bcf	3972,2,c	;volatile
  6996                           
  6997                           ;lab6.c: 234: Deactivate_Buzzer ();
  6998  002F02  EC9D  F017         	call	_Deactivate_Buzzer	;wreg free
  6999                           
  7000                           ;lab6.c: 235: Wait_Half_Second ();
  7001  002F06  EC63  F017         	call	_Wait_Half_Second	;wreg free
  7002  002F0A  0012               	return		;funcret
  7003  002F0C                     __end_of_Wait_One_Second_With_Beep:
  7004                           	opt stack 0
  7005                           tblptru	equ	0xFF8
  7006                           tblptrh	equ	0xFF7
  7007                           tblptrl	equ	0xFF6
  7008                           tablat	equ	0xFF5
  7009                           prodh	equ	0xFF4
  7010                           prodl	equ	0xFF3
  7011                           wreg	equ	0xFE8
  7012                           postinc2	equ	0xFDE
  7013                           postdec2	equ	0xFDD
  7014                           fsr2h	equ	0xFDA
  7015                           fsr2l	equ	0xFD9
  7016                           status	equ	0xFD8
  7017                           
  7018 ;; *************** function _Wait_Half_Second *****************
  7019 ;; Defined at:
  7020 ;;		line 48 in file "lab6.c"
  7021 ;; Parameters:    Size  Location     Type
  7022 ;;		None
  7023 ;; Auto vars:     Size  Location     Type
  7024 ;;		None
  7025 ;; Return value:  Size  Location     Type
  7026 ;;		None               void
  7027 ;; Registers used:
  7028 ;;		wreg, status,2
  7029 ;; Tracked objects:
  7030 ;;		On entry : 0/0
  7031 ;;		On exit  : 0/0
  7032 ;;		Unchanged: 0/0
  7033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7038 ;;Total ram usage:        0 bytes
  7039 ;; Hardware stack levels used:    1
  7040 ;; This function calls:
  7041 ;;		Nothing
  7042 ;; This function is called by:
  7043 ;;		_Wait_One_Second
  7044 ;;		_Wait_One_Second_With_Beep
  7045 ;; This function uses a non-reentrant model
  7046 ;;
  7047                           
  7048                           	psect	text38
  7049  002EC6                     __ptext38:
  7050                           	opt stack 0
  7051  002EC6                     _Wait_Half_Second:
  7052                           	opt stack 27
  7053                           
  7054                           ;lab6.c: 50: T0CON = 0x04;
  7055                           
  7056                           ;incstack = 0
  7057  002EC6  0E04               	movlw	4
  7058  002EC8  6ED5               	movwf	4053,c	;volatile
  7059                           
  7060                           ;lab6.c: 51: TMR0L = 0xAE;
  7061  002ECA  0EAE               	movlw	174
  7062  002ECC  6ED6               	movwf	4054,c	;volatile
  7063                           
  7064                           ;lab6.c: 52: TMR0H = 0x85;
  7065  002ECE  0E85               	movlw	133
  7066  002ED0  6ED7               	movwf	4055,c	;volatile
  7067                           
  7068                           ;lab6.c: 53: INTCONbits.TMR0IF = 0;
  7069  002ED2  94F2               	bcf	intcon,2,c	;volatile
  7070                           
  7071                           ;lab6.c: 54: T0CONbits.TMR0ON = 1;
  7072  002ED4  8ED5               	bsf	4053,7,c	;volatile
  7073                           
  7074                           ;lab6.c: 55: while (INTCONbits.TMR0IF == 0);
  7075  002ED6  D000               	goto	l87
  7076  002ED8                     l87:
  7077  002ED8  A4F2               	btfss	intcon,2,c	;volatile
  7078  002EDA  D7FE               	goto	l87
  7079                           
  7080                           ;lab6.c: 56: T0CONbits.TMR0ON = 0;
  7081  002EDC  9ED5               	bcf	4053,7,c	;volatile
  7082  002EDE  0012               	return		;funcret
  7083  002EE0                     __end_of_Wait_Half_Second:
  7084                           	opt stack 0
  7085                           tblptru	equ	0xFF8
  7086                           tblptrh	equ	0xFF7
  7087                           tblptrl	equ	0xFF6
  7088                           tablat	equ	0xFF5
  7089                           prodh	equ	0xFF4
  7090                           prodl	equ	0xFF3
  7091                           intcon	equ	0xFF2
  7092                           wreg	equ	0xFE8
  7093                           postinc2	equ	0xFDE
  7094                           postdec2	equ	0xFDD
  7095                           fsr2h	equ	0xFDA
  7096                           fsr2l	equ	0xFD9
  7097                           status	equ	0xFD8
  7098                           
  7099 ;; *************** function _Deactivate_Buzzer *****************
  7100 ;; Defined at:
  7101 ;;		line 244 in file "lab6.c"
  7102 ;; Parameters:    Size  Location     Type
  7103 ;;		None
  7104 ;; Auto vars:     Size  Location     Type
  7105 ;;		None
  7106 ;; Return value:  Size  Location     Type
  7107 ;;		None               void
  7108 ;; Registers used:
  7109 ;;		wreg, status,2
  7110 ;; Tracked objects:
  7111 ;;		On entry : 0/0
  7112 ;;		On exit  : 0/0
  7113 ;;		Unchanged: 0/0
  7114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7119 ;;Total ram usage:        0 bytes
  7120 ;; Hardware stack levels used:    1
  7121 ;; This function calls:
  7122 ;;		Nothing
  7123 ;; This function is called by:
  7124 ;;		_Wait_One_Second_With_Beep
  7125 ;; This function uses a non-reentrant model
  7126 ;;
  7127                           
  7128                           	psect	text39
  7129  002F3A                     __ptext39:
  7130                           	opt stack 0
  7131  002F3A                     _Deactivate_Buzzer:
  7132                           	opt stack 27
  7133                           
  7134                           ;lab6.c: 246: CCP2CON = 0x0;
  7135                           
  7136                           ;incstack = 0
  7137  002F3A  0E00               	movlw	0
  7138  002F3C  6EBA               	movwf	4026,c	;volatile
  7139                           
  7140                           ;lab6.c: 247: PORTCbits.RC1 = 0;
  7141  002F3E  9282               	bcf	3970,1,c	;volatile
  7142  002F40  0012               	return		;funcret
  7143  002F42                     __end_of_Deactivate_Buzzer:
  7144                           	opt stack 0
  7145                           tblptru	equ	0xFF8
  7146                           tblptrh	equ	0xFF7
  7147                           tblptrl	equ	0xFF6
  7148                           tablat	equ	0xFF5
  7149                           prodh	equ	0xFF4
  7150                           prodl	equ	0xFF3
  7151                           intcon	equ	0xFF2
  7152                           wreg	equ	0xFE8
  7153                           postinc2	equ	0xFDE
  7154                           postdec2	equ	0xFDD
  7155                           fsr2h	equ	0xFDA
  7156                           fsr2l	equ	0xFD9
  7157                           status	equ	0xFD8
  7158                           
  7159 ;; *************** function _Activate_Buzzer *****************
  7160 ;; Defined at:
  7161 ;;		line 237 in file "lab6.c"
  7162 ;; Parameters:    Size  Location     Type
  7163 ;;		None
  7164 ;; Auto vars:     Size  Location     Type
  7165 ;;		None
  7166 ;; Return value:  Size  Location     Type
  7167 ;;		None               void
  7168 ;; Registers used:
  7169 ;;		wreg, status,2
  7170 ;; Tracked objects:
  7171 ;;		On entry : 0/0
  7172 ;;		On exit  : 0/0
  7173 ;;		Unchanged: 0/0
  7174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7179 ;;Total ram usage:        0 bytes
  7180 ;; Hardware stack levels used:    1
  7181 ;; This function calls:
  7182 ;;		Nothing
  7183 ;; This function is called by:
  7184 ;;		_Wait_One_Second_With_Beep
  7185 ;; This function uses a non-reentrant model
  7186 ;;
  7187                           
  7188                           	psect	text40
  7189  002F0C                     __ptext40:
  7190                           	opt stack 0
  7191  002F0C                     _Activate_Buzzer:
  7192                           	opt stack 27
  7193                           
  7194                           ;lab6.c: 239: PR2 = 0b11111001 ;
  7195                           
  7196                           ;incstack = 0
  7197  002F0C  0EF9               	movlw	249
  7198  002F0E  6ECB               	movwf	4043,c	;volatile
  7199                           
  7200                           ;lab6.c: 240: T2CON = 0b00000101 ;
  7201  002F10  0E05               	movlw	5
  7202  002F12  6ECA               	movwf	4042,c	;volatile
  7203                           
  7204                           ;lab6.c: 241: CCPR2L = 0b01001010 ;
  7205  002F14  0E4A               	movlw	74
  7206  002F16  6EBB               	movwf	4027,c	;volatile
  7207                           
  7208                           ;lab6.c: 242: CCP2CON = 0b00111100 ;
  7209  002F18  0E3C               	movlw	60
  7210  002F1A  6EBA               	movwf	4026,c	;volatile
  7211  002F1C  0012               	return		;funcret
  7212  002F1E                     __end_of_Activate_Buzzer:
  7213                           	opt stack 0
  7214                           tblptru	equ	0xFF8
  7215                           tblptrh	equ	0xFF7
  7216                           tblptrl	equ	0xFF6
  7217                           tablat	equ	0xFF5
  7218                           prodh	equ	0xFF4
  7219                           prodl	equ	0xFF3
  7220                           intcon	equ	0xFF2
  7221                           wreg	equ	0xFE8
  7222                           postinc2	equ	0xFDE
  7223                           postdec2	equ	0xFDD
  7224                           fsr2h	equ	0xFDA
  7225                           fsr2l	equ	0xFD9
  7226                           status	equ	0xFD8
  7227                           
  7228 ;; *************** function _Clear_Upper_Display *****************
  7229 ;; Defined at:
  7230 ;;		line 38 in file "lab6.c"
  7231 ;; Parameters:    Size  Location     Type
  7232 ;;		None
  7233 ;; Auto vars:     Size  Location     Type
  7234 ;;		None
  7235 ;; Return value:  Size  Location     Type
  7236 ;;		None               void
  7237 ;; Registers used:
  7238 ;;		None
  7239 ;; Tracked objects:
  7240 ;;		On entry : 0/0
  7241 ;;		On exit  : 0/0
  7242 ;;		Unchanged: 0/0
  7243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7248 ;;Total ram usage:        0 bytes
  7249 ;; Hardware stack levels used:    1
  7250 ;; This function calls:
  7251 ;;		Nothing
  7252 ;; This function is called by:
  7253 ;;		_Night_Mode
  7254 ;;		_Day_Mode
  7255 ;; This function uses a non-reentrant model
  7256 ;;
  7257                           
  7258                           	psect	text41
  7259  002F48                     __ptext41:
  7260                           	opt stack 0
  7261  002F48                     _Clear_Upper_Display:
  7262                           	opt stack 29
  7263                           
  7264                           ;lab6.c: 40: PORTD = 0xFF;
  7265                           
  7266                           ;incstack = 0
  7267  002F48  6883               	setf	3971,c	;volatile
  7268  002F4A  0012               	return		;funcret
  7269  002F4C                     __end_of_Clear_Upper_Display:
  7270                           	opt stack 0
  7271                           tblptru	equ	0xFF8
  7272                           tblptrh	equ	0xFF7
  7273                           tblptrl	equ	0xFF6
  7274                           tablat	equ	0xFF5
  7275                           prodh	equ	0xFF4
  7276                           prodl	equ	0xFF3
  7277                           intcon	equ	0xFF2
  7278                           wreg	equ	0xFE8
  7279                           postinc2	equ	0xFDE
  7280                           postdec2	equ	0xFDD
  7281                           fsr2h	equ	0xFDA
  7282                           fsr2l	equ	0xFD9
  7283                           status	equ	0xFD8
  7284                           
  7285 ;; *************** function _Clear_Lower_Display *****************
  7286 ;; Defined at:
  7287 ;;		line 43 in file "lab6.c"
  7288 ;; Parameters:    Size  Location     Type
  7289 ;;		None
  7290 ;; Auto vars:     Size  Location     Type
  7291 ;;		None
  7292 ;; Return value:  Size  Location     Type
  7293 ;;		None               void
  7294 ;; Registers used:
  7295 ;;		None
  7296 ;; Tracked objects:
  7297 ;;		On entry : 0/0
  7298 ;;		On exit  : 0/0
  7299 ;;		Unchanged: 0/0
  7300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7305 ;;Total ram usage:        0 bytes
  7306 ;; Hardware stack levels used:    1
  7307 ;; This function calls:
  7308 ;;		Nothing
  7309 ;; This function is called by:
  7310 ;;		_Night_Mode
  7311 ;;		_Day_Mode
  7312 ;; This function uses a non-reentrant model
  7313 ;;
  7314                           
  7315                           	psect	text42
  7316  002F4C                     __ptext42:
  7317                           	opt stack 0
  7318  002F4C                     _Clear_Lower_Display:
  7319                           	opt stack 29
  7320                           
  7321                           ;lab6.c: 45: PORTB = 0xFF;
  7322                           
  7323                           ;incstack = 0
  7324  002F4C  6881               	setf	3969,c	;volatile
  7325  002F4E  0012               	return		;funcret
  7326  002F50                     __end_of_Clear_Lower_Display:
  7327                           	opt stack 0
  7328                           tblptru	equ	0xFF8
  7329                           tblptrh	equ	0xFF7
  7330                           tblptrl	equ	0xFF6
  7331                           tablat	equ	0xFF5
  7332                           prodh	equ	0xFF4
  7333                           prodl	equ	0xFF3
  7334                           intcon	equ	0xFF2
  7335                           wreg	equ	0xFE8
  7336                           postinc2	equ	0xFDE
  7337                           postdec2	equ	0xFDD
  7338                           fsr2h	equ	0xFDA
  7339                           fsr2l	equ	0xFD9
  7340                           status	equ	0xFD8
  7341                           tblptru	equ	0xFF8
  7342                           tblptrh	equ	0xFF7
  7343                           tblptrl	equ	0xFF6
  7344                           tablat	equ	0xFF5
  7345                           prodh	equ	0xFF4
  7346                           prodl	equ	0xFF3
  7347                           intcon	equ	0xFF2
  7348                           wreg	equ	0xFE8
  7349                           postinc2	equ	0xFDE
  7350                           postdec2	equ	0xFDD
  7351                           fsr2h	equ	0xFDA
  7352                           fsr2l	equ	0xFD9
  7353                           status	equ	0xFD8
  7354                           
  7355                           	psect	rparam
  7356  0000                     tblptru	equ	0xFF8
  7357                           tblptrh	equ	0xFF7
  7358                           tblptrl	equ	0xFF6
  7359                           tablat	equ	0xFF5
  7360                           prodh	equ	0xFF4
  7361                           prodl	equ	0xFF3
  7362                           intcon	equ	0xFF2
  7363                           wreg	equ	0xFE8
  7364                           postinc2	equ	0xFDE
  7365                           postdec2	equ	0xFDD
  7366                           fsr2h	equ	0xFDA
  7367                           fsr2l	equ	0xFD9
  7368                           status	equ	0xFD8


Data Sizes:
    Strings     120
    Constant    128
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    117     117
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_15(CODE[7]), STR_14(CODE[4]), STR_13(CODE[3]), STR_11(CODE[4]), 
		 -> STR_10(CODE[3]), STR_8(CODE[4]), STR_7(CODE[3]), STR_5(CODE[4]), 
		 -> STR_4(CODE[3]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_12(CODE[17]), STR_9(CODE[17]), STR_6(CODE[17]), STR_3(CODE[17]), 
		 -> STR_2(CODE[17]), STR_1(CODE[21]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    UART_Report_Status$986	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_14(CODE[4]), STR_13(CODE[3]), 

    UART_Report_Status$981	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_11(CODE[4]), STR_10(CODE[3]), 

    UART_Report_Status$976	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_8(CODE[4]), STR_7(CODE[3]), 

    UART_Report_Status$971	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_4(CODE[3]), 


Critical Paths under _main in COMRAM

    _main->_UART_Report_Status
    ___lwtoft->___ftpack
    _UART_Report_Status->_printf
    _printf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround
    _Night_Mode->_Wait_N_Seconds
    _Init_UART->_OpenUSART
    _Day_Mode->_PED_Control

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   44356
                                            112 COMRAM     5     5      0
                           _Day_Mode
                           _Init_ADC
                          _Init_TRIS
                          _Init_UART
                         _Night_Mode
                 _UART_Report_Status
                             ___ftge
                            ___ftmul
                           ___lwtoft
                       _get_full_ADC
 ---------------------------------------------------------------------------------
 (1) _get_full_ADC                                         4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    1782
                                              8 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _UART_Report_Status                                  11     8      3   37460
                                            101 COMRAM    11     8      3
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              41    36      5   37289
                                             63 COMRAM    38    33      5
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               10     7      3    8763
                                             35 COMRAM     7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              13    10      3    8565
                                             35 COMRAM    10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1961
                                             14 COMRAM     6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    3703
                                             20 COMRAM    15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1250
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1360
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         15     9      6     409
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          12     6      6     552
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             9     5      4    1829
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     477
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     374
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     411
                                             42 COMRAM    15    11      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    3092
                                             57 COMRAM     6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             12     6      6    2839
                                             45 COMRAM    12     6      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1707
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3      98
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) ___ftge                                               9     3      6     560
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (1) _Night_Mode                                           0     0      0      90
                _Clear_Lower_Display
                _Clear_Upper_Display
                     _Wait_N_Seconds
                             _set_EW
                           _set_EWLT
                             _set_NS
                           _set_NSLT
 ---------------------------------------------------------------------------------
 (1) _Init_UART                                            0     0      0     273
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     273
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _Init_TRIS                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Day_Mode                                             0     0      0     420
                _Clear_Lower_Display
                _Clear_Upper_Display
                        _PED_Control
                     _Wait_N_Seconds
                             _set_EW
                           _set_EWLT
                             _set_NS
                           _set_NSLT
 ---------------------------------------------------------------------------------
 (2) _set_NSLT                                             1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _set_NS                                               1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _set_EWLT                                             1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _set_EW                                               1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Wait_N_Seconds                                       2     2      0      30
                                              0 COMRAM     2     2      0
                    _Wait_One_Second
 ---------------------------------------------------------------------------------
 (3) _Wait_One_Second                                      0     0      0       0
                   _Wait_Half_Second
 ---------------------------------------------------------------------------------
 (2) _PED_Control                                          7     6      1     330
                                              0 COMRAM     7     6      1
          _Wait_One_Second_With_Beep
 ---------------------------------------------------------------------------------
 (3) _Wait_One_Second_With_Beep                            0     0      0       0
                    _Activate_Buzzer
                  _Deactivate_Buzzer
                   _Wait_Half_Second
 ---------------------------------------------------------------------------------
 (4) _Wait_Half_Second                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Deactivate_Buzzer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Activate_Buzzer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Clear_Upper_Display                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Clear_Lower_Display                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Day_Mode
     _Clear_Lower_Display
     _Clear_Upper_Display
     _PED_Control
       _Wait_One_Second_With_Beep
         _Activate_Buzzer
         _Deactivate_Buzzer
         _Wait_Half_Second
     _Wait_N_Seconds
       _Wait_One_Second
         _Wait_Half_Second
     _set_EW
     _set_EWLT
     _set_NS
     _set_NSLT
   _Init_ADC
   _Init_TRIS
   _Init_UART
     _OpenUSART
   _Night_Mode
     _Clear_Lower_Display
     _Clear_Upper_Display
     _Wait_N_Seconds
       _Wait_One_Second
         _Wait_Half_Second
     _set_EW
     _set_EWLT
     _set_NS
     _set_NSLT
   _UART_Report_Status
     _printf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _putch
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   ___ftge
   ___ftmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   ___lwtoft
     ___ftpack
   _get_full_ADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F     75      75       1       92.1%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
ABS                  0      0       0      34        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BIGRAM             F7F      0       0      37        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Oct 14 18:01:22 2025

         _Wait_One_Second_With_Beep 2EF6                                  l87 2ED8  
                      ___awdiv@sign 000C                 ___wmul@multiplicand 0011  
                      ___ftadd@exp1 0039                        ___ftadd@exp2 0038  
                      ___ftadd@sign 0037                                 l110 2D4E  
                               l111 2D70                                 l120 2D3A  
                               l106 2D40                                 l115 2D0A  
                               l124 2DAC                                 l108 2D44  
                               l133 2D76                                 l109 2D4A  
                               l117 2D0E                                 l126 2DB0  
                               l118 2D14                                 l143 27AC  
                               l127 2DB6                                 l135 2D7A  
                               l119 2D18                                 l311 18C2  
                               l128 2DBA                                 l136 2D80  
                               l129 2DDC                                 l137 2D84  
                               l146 2808                                 l138 2DA6  
                               l340 2C3A                                 l180 28B8  
                               l236 1CE4                                 l341 2C44  
                               l229 1F4C                                 l342 2C46  
                               l335 2C1E                                 l184 270A  
                               l344 2C60                                 l193 2E76  
                               l178 2876                                 l187 275C  
                               l339 2C38                                 l347 2E04  
                               l540 294E                                 l196 2E8E  
                               l631 232A                                 l712 1F92  
                               l640 231A                                 l296 16B8  
                               l713 2110                                 l553 2B80  
                               l716 1FBC                                 l812 2E70  
                               l727 207E                                 l672 269C  
                               l736 209A                                 l752 2220  
                               l841 2AEE                                 l761 2210  
                               l770 29E4                                 l754 2188  
                               l683 2674                                 l851 2BE0  
                               l755 21B0                                 l931 2E2A  
                               l871 2CC0                                 l776 2422  
                               l793 2D04                                 l786 2E42  
                               l797 2508                   ?_Wait_Half_Second 0001  
                               _PR2 000FCB                   _Deactivate_Buzzer 2F3A  
                      ___awmod@sign 0006                                 wreg 000FE8  
                ??_Wait_Half_Second 0001                  ?_Deactivate_Buzzer 0001  
                      __CFG_LVP$OFF 000000                  _UART_Report_Status 250A  
                      __CFG_WDT$OFF 000000                                l2112 1FCA  
                              l2106 1FA0                                l2202 23CE  
                              l2060 25E8                                l2140 2042  
                              l2212 23FC                                l2204 23D4  
                              l3004 29F4                                l2134 2022  
                              l2118 1FD6                                l2230 28E2  
                              l3014 2A6A                                l2072 263C  
                              l2064 25F8                                l2136 202E  
                              l2128 1FFE                                l2240 290A  
                              l2224 28D0                                l2208 23E6  
                              l2082 267C                                l2074 265C  
                              l2066 2604                                l2154 20B8  
                              l2146 2066                                l2138 203A  
                              l2410 21D2                                l2402 21BE  
                              l2314 1F06                                l2306 1E36  
                              l2500 29B4                                l2076 2668  
                              l2068 2624                                l2164 20EA  
                              l2148 2072                                l2420 21FC  
                              l2236 28F8                                l2252 2934  
                              l2180 2372                                l2430 2232  
                              l2422 220A                                l2414 21E2  
                              l2238 2902                                l2174 234A  
                              l2334 1AB6                                l1624 2EB4  
                              l1640 2D1E                                l2088 268E  
                              l2520 2442                                l2600 2C68  
                              l2416 21E8                                l2256 2944  
                              l2248 2928                                l2280 2B44  
                              l2272 2B24                                l2176 2364  
                              l2352 1CBA                                l2328 1A02  
                              l1634 2D54                                l2506 29E0  
                              l2602 2C76                                l2450 2286  
                              l2194 23A6                                l2346 1BFC  
                              l2338 1AC6                                l1628 2EBC  
                              l1652 2D8A                                l2436 2242  
                              l2380 214E                                l2292 2B76  
                              l2284 2B5A                                l2276 2B32  
                              l2268 2B16                                l2364 2E68  
                              l1646 2DC0                                l2622 2C16  
                              l2614 2C04                                l2550 24D4  
                              l2542 24AC                                l2470 22DC  
                              l2462 22C8                                l2374 2130  
                              l2278 2B3C                                l2198 23B8  
                              l2710 117A                                l2544 24B2  
                              l2552 24DE                                l2480 2306  
                              l2288 2B66                                l2712 1194  
                              l2634 2C30                                l2626 2C22  
                              l2618 2C0E                                l2538 249C  
                              l2570 2AAC                                l2482 2314  
                              l2474 22EC                                l2458 22B8  
                              l2810 14A0                                l2730 11E0  
                              l2706 1140                                l2556 24F6  
                              l2548 24C6                                l2476 22F2  
                              l2804 1472                                l2716 11A2  
                              l2900 18A4                                l2566 2A96  
                              l2590 2BAA                                l2822 1584  
                              l2814 14E2                                l2742 1236  
                              l2726 11D0                                l2718 11A6  
                              l2496 2982                                l2488 2CDA  
                              l2568 2AA4                                l2840 15EA  
                              l2832 15CA                                l2824 1588  
                              l2816 1510                                l2808 1496  
                              l2728 11DA                                l2920 253A  
                              l2682 27D6                                l2690 280C  
                              l2666 2786                                l2674 27B0  
                              l2578 2ADE                                l2594 2BD0  
                              l2586 2B94                                l2818 151E  
                              l2754 128C                                l2738 121E  
                              l2746 124C                                l2930 256E  
                              l2922 2544                                l2588 2BA2  
                              l2852 1694                                l2836 15CE  
                              l2828 1594                                l2780 1360  
                              l2764 12CE                                l2748 1276  
                              l2854 16A2                                l2846 167A  
                              l2694 1104                                l2880 1824  
                              l2864 16D8                                l2848 1686  
                              l2792 13EA                                l2944 25B8  
                              l2936 258E                                l2928 2564  
                              l2874 180A                                l2858 16BE  
                              l2794 13FA                                l2882 1830  
                              l2698 1114                                l2946 25C2  
                              l2938 2598                                l2980 2720  
                              l2964 26D0                                l2892 1866  
                              l2876 1816                                l2868 1728  
                              l2796 142A                                l2788 13C4  
                              l2798 143A                                l2896 1888  
                              l2888 184A                                STR_1 1081  
                              STR_2 1096                                STR_3 10C9  
                              STR_4 10F6                                STR_5 10F2  
                              STR_6 10DA                                STR_7 10F6  
                              STR_8 10F2                                STR_9 10A7  
                              u2400 2460                                u2171 2122  
                              u1701 1F72                                u2405 2458  
                              u2191 2140                                u2381 2434  
                              u1901 233C                                u1921 235A  
                              u2810 1306                                u1691 1F5E  
                      printf@tmpval 005C                                u2815 12FC  
                              u2970 16B2                 ??_Deactivate_Buzzer 0001  
                              _main 29E6                 _Clear_Lower_Display 2F4C  
                      ___ftpack@arg 0001                        ___ftpack@exp 0004  
                    ??_get_full_ADC 0003                                fsr2h 000FDA  
                              fsr2l 000FD9                 ?_UART_Report_Status 0066  
                              prodh 000FF4                                prodl 000FF3  
                              start 0000                        ___ftmul@cntr 0022  
                      ___param_bank 000010                        ___ftmul@sign 0023  
                      ___fttol@exp1 0039                        ___fttol@lval 0035  
         __end_of_Deactivate_Buzzer 2F42                ?_Clear_Lower_Display 0001  
                             ?_main 0001                     __end_of___awdiv 2950  
                   __end_of___ftadd 2112                               STR_10 10F6  
                             STR_11 10F2                               STR_12 10B8  
                             STR_13 10F6                               STR_14 10F2  
                             STR_15 10EB                     __end_of___awmod 2B82  
                   __end_of___ftneg 2E50                     __end_of___lldiv 2B00  
                   __end_of___ftmul 2424                               _T0CON 000FD5  
              ??_UART_Report_Status 0069                     ___awdiv@divisor 0009  
                   __end_of___llmod 2BF2                     __end_of___ftsub 2D06  
                   __end_of___fttol 250A                               _T2CON 000FCA  
                   ___awdiv@counter 000B                               _RCSTA 000FAB  
                             _TMR0H 000FD7                               _TMR0L 000FD6  
                             _SPBRG 000FAF                               _PORTB 000F81  
                             _PORTD 000F83                               _TRISA 000F92  
                             _TRISB 000F93                               _TRISC 000F94  
                             _TRISD 000F95                               _TRISE 000F96  
                             _TXSTA 000FAC                        ?_PED_Control 0001  
                      ___lltoft@exp 0011                     __end_of_dpowers 1029  
                 ??_Wait_One_Second 0001                               _scale 18C4  
                   __end_of_isdigit 2E72                       ___ftpack@sign 0005  
                             _putch 2F50                      __CFG_BOREN$OFF 000000  
                             tablat 000FF5                               status 000FD8  
                  __end_of_Day_Mode 275E                       main@adc_value 0071  
                    _Wait_N_Seconds 2EAC                     __initialization 2F42  
                      __end_of_main 2A74                    __end_of_Init_ADC 2F2C  
             ??_Clear_Lower_Display 0001                          _Night_Mode 2812  
                            ??_main 0071                       ___fttol@sign1 0034  
                     __activetblptr 000003               Wait_N_Seconds@seconds 0001  
              __size_of__tdiv_to_l_ 0110                              _ADCON0 000FC2  
                            _ADCON1 000FC1                              _ADCON2 000FC0  
                  ___llmod@dividend 0001                              ?_scale 0024  
                            _ADRESH 000FC4                              _ADRESL 000FC3  
                            _CCPR2L 000FBB                PED_Control@direction 0003  
                  ___awdiv@dividend 0007                              ?_putch 0001  
                  __end_of___ftpack 269E                    __end_of___lltoft 2CC2  
                  __end_of___lwtoft 2E2C                              _OSCCON 000FD3  
                __size_of_Init_UART 001C                  __size_of_Init_TRIS 0016  
                            _SPBRGH 000FB0              __end_of_Wait_N_Seconds 2EC6  
                  __end_of__powers_ 1077                  __size_of_OpenUSART 0070  
                            ___ftge 2950            __size_of_Activate_Buzzer 0012  
                            ___wmul 2DDE                           ??___awdiv 000B  
                         ??___ftadd 0034                           ??___awmod 0005  
                         ??___ftneg 0004                           ??___lldiv 0009  
                         ??___ftmul 001B                           ??___llmod 0009  
                         ??___ftsub 0040                           ??___fttol 002F  
                            _fround 1CE6                              _set_EW 2DA8  
                            _set_NS 2D3C                    ___awdiv@quotient 000D  
                   ___awmod@divisor 0003          __size_of_Deactivate_Buzzer 0008  
                   ___awmod@counter 0005                              _printf 10FA  
                  __end_of_set_EWLT 2DA8                    __end_of_set_NSLT 2D3C  
             ___ftmul@f3_as_product 001F                __end_of_get_full_ADC 2E90  
                         ??_isdigit 0001  __size_of_Wait_One_Second_With_Beep 0016  
                      __mediumconst 0000                              tblptrh 000FF7  
                            tblptrl 000FF6                              tblptru 000FF8  
                            putch@c 0001                       set_EWLT@color 0001  
                     main@voltage_v 0073                          __accesstop 0080  
           __end_of__initialization 2F42                          ___ftadd@f1 002E  
                        ___ftadd@f2 0031                          ___ftge@ff1 0001  
                        ___ftge@ff2 0004                     ?_Wait_N_Seconds 0001  
                     ___rparam_used 000001                          ___ftneg@f1 0001  
                        ___ftmul@f1 0015                          ___ftmul@f2 0018  
                        ___ftsub@f1 003A                          ___ftsub@f2 003D  
                        ___fttol@f1 002B                      __pcstackCOMRAM 0001  
                        ___lltoft@c 0009                     _seven_seg_table 1077  
                     __end_of_scale 1CE6                       __end_of_putch 2F52  
                       ?_Night_Mode 0001                   __end_of_Init_UART 2EAC  
                 __end_of_Init_TRIS 2EF6                          ___lwtoft@c 0009  
                        __div_to_l_ 2222                           ?_Day_Mode 0001  
                     set_NSLT@color 0001                   __end_of_OpenUSART 2C62  
                   __div_to_l_@exp1 000C                     __div_to_l_@cntr 000B  
                           ??_scale 0027                __size_of_PED_Control 00B4  
                   __div_to_l_@quot 0007                             ??_putch 0001  
                       set_EW@color 0001                           ?_Init_ADC 0001  
         __size_of_Wait_Half_Second 001A                       __div_to_l_@f1 0001  
                     __div_to_l_@f2 0004                         set_NS@color 0001  
                           ?___ftge 0001                             ?___wmul 000F  
      __size_of_Clear_Upper_Display 0004                             _CCP2CON 000FBA  
                           ?_fround 0024                             ?_set_EW 0001  
                           ?_set_NS 0001                           ?___ftpack 0001  
                   _Wait_One_Second 2F2C                             ?_printf 0040  
                         ?___lltoft 0009                           ?___lwtoft 0009  
                 ??_Activate_Buzzer 0001                          ??_Day_Mode 0008  
                        ??_Init_ADC 0001                 __size_of_Night_Mode 00A8  
                         ?_set_EWLT 0001             __end_of_seven_seg_table 1081  
                         ?_set_NSLT 0001                   __end_of__npowers_ 1050  
                           __Hparam 0000                          _scale$1825 0027  
                           __Lparam 0000                     __size_of___ftge 0096  
                           ___awdiv 28BA                             ___ftadd 1F4E  
                           ___awmod 2B00                             ___ftneg 2E2C  
                           ___lldiv 2A74                     __size_of___wmul 0028  
                           ___ftmul 232C                             ___llmod 2B82  
                           ___ftsub 2CC2                             ___fttol 2424  
             __size_of_get_full_ADC 001E                        __psmallconst 1000  
                           __pcinit 2F42                          ??___ftpack 0006  
                   __size_of_fround 0268                             __ramtop 1000  
                   __size_of_set_EW 0036                     __size_of_set_NS 0036  
                        ??___lltoft 000D                             __ptext0 29E6  
                           __ptext1 2E72                             __ptext2 2E06  
                           __ptext3 250A                             __ptext4 10FA  
                           __ptext5 18C4                             __ptext6 2F50  
                           __ptext7 2E50                             __ptext8 1CE6  
                           __ptext9 2DDE                     __size_of_printf 07CA  
                        ??___lwtoft 000C                           _T0CONbits 000FD5  
                       ?__div_to_l_ 0001         __size_of_UART_Report_Status 00CE  
                           _dpowers 1001        UART_Report_Status@voltage_mv 0066  
                           _isdigit 2E50                    ___awmod@dividend 0001  
              end_of_initialization 2F42                          ??_set_EWLT 0001  
                        ??_set_NSLT 0001                        _get_full_ADC 2E72  
                   ___lldiv@divisor 0005                        PED_Control@i 0004  
                      PED_Control@j 0006                     ___lldiv@counter 000D  
           __end_of_Wait_One_Second 2F3A         __end_of_Clear_Lower_Display 2F50  
                         _RCSTAbits 000FAB                             printf@c 0065  
                           printf@f 0040                             postdec2 000FDD  
                           postinc2 000FDE                      __tdiv_to_l_@f1 0001  
                    __tdiv_to_l_@f2 0004                       ??__tdiv_to_l_ 0007  
                         _PORTAbits 000F80                           _PORTBbits 000F81  
                         _PORTCbits 000F82                           _PORTEbits 000F84  
                         _TRISCbits 000F94                    ??_Wait_N_Seconds 0001  
                  _Wait_Half_Second 2EC6                           _TXSTAbits 000FAC  
               __size_of__div_to_l_ 010A                         ___ftmul@exp 001E  
                    __end_of___ftge 29E6                      __end_of___wmul 2E06  
                      ??_Night_Mode 0003                      __end_of_fround 1F4E  
                    __end_of_set_EW 2DDE                      __end_of_set_NS 2D72  
                    __end_of_printf 18C4                  PED_Control@num_sec 0001  
               start_initialization 2F42                           _Init_UART 2E90  
                         _Init_TRIS 2EE0                 __end_of__tdiv_to_l_ 2222  
                 __size_of_Day_Mode 00C0                 _Clear_Upper_Display 2F48  
                         _OpenUSART 2BF2                     ___llmod@divisor 0005  
                  __CFG_OSC$INTIO67 000000                   __size_of_Init_ADC 000E  
                   ___llmod@counter 0009                  __end_of_Night_Mode 28BA  
                   Wait_N_Seconds@I 0002                     _Activate_Buzzer 2F0C  
                  ?_Wait_One_Second 0001                            ??___ftge 0007  
                          ??___wmul 0013                ?_Clear_Upper_Display 0001  
                          ??_fround 0027                            ??_set_EW 0001  
                          ??_set_NS 0001                            ??_printf 0045  
                        fround@prec 002D                   __size_of___ftpack 00C6  
                 __size_of___lltoft 0060                       ??_PED_Control 0002  
                        ?_Init_UART 0001                   __size_of___lwtoft 0026  
                        ?_Init_TRIS 0001                        _isdigit$1557 0002  
            _UART_Report_Status$971 0069              _UART_Report_Status$981 006D  
            _UART_Report_Status$976 006B              _UART_Report_Status$986 006F  
        ?_Wait_One_Second_With_Beep 0001                          ?_OpenUSART 0001  
                 __size_of_set_EWLT 0036                   __size_of_set_NSLT 0036  
                          ?___awdiv 0007                            ?___ftadd 002E  
             ??_Clear_Upper_Display 0001                            ?___awmod 0001  
                          ?___ftneg 0001                            ?___lldiv 0001  
                          ?___ftmul 0015                            ?___llmod 0001  
                          ?___ftsub 003A                           __npowers_ 1029  
                          ?___fttol 002B                         __tdiv_to_l_ 2112  
                      ??__div_to_l_ 0007                         __smallconst 1000  
                          ?_isdigit 0001                      __size_of_scale 0422  
                    __size_of_putch 0002   __end_of_Wait_One_Second_With_Beep 2F0C  
               __end_of_PED_Control 2812             __end_of_Activate_Buzzer 2F1E  
                    ___wmul@product 0013                            _PIE1bits 000F9D  
                          _PIR1bits 000F9E                  __end_of__div_to_l_ 232C  
        __end_of_UART_Report_Status 25D8                          _ADCON0bits 000FC2  
          __end_of_Wait_Half_Second 2EE0                   ___wmul@multiplier 000F  
                        printf@flag 0054                          printf@fval 0060  
                        printf@prec 0063                            _Day_Mode 269E  
                       ??_Init_UART 0004                         ??_Init_TRIS 0001  
                          _Init_ADC 2F1E                         ??_OpenUSART 0003  
                   OpenUSART@config 0003                            __Hrparam 0000  
                          __Lrparam 0000                    __size_of___awdiv 0096  
                  __size_of___ftadd 01C4                    __size_of___awmod 0082  
                  __size_of___ftneg 0024                    __size_of___lldiv 008C  
                  __size_of___ftmul 00F8                    __size_of___llmod 0070  
                  __size_of___ftsub 0044                    __size_of___fttol 00E6  
                          ___ftpack 25D8                         _fround$1823 002A  
                       _fround$1824 0027                            ___lltoft 2C62  
      __size_of_Clear_Lower_Display 0004                            ___lwtoft 2E06  
                  __size_of_isdigit 0022                         _PED_Control 275E  
                          __ptext10 232C                            __ptext11 2B00  
                          __ptext20 1F4E                            __ptext12 28BA  
                          __ptext21 25D8                            __ptext13 2112  
                          __ptext30 2D06                            __ptext22 2E2C  
                          __ptext14 2222                            __ptext31 2D3C  
                          __ptext23 2950                            __ptext15 2C62  
                          __ptext40 2F0C                            __ptext32 2D72  
                          __ptext24 2812                            __ptext16 2B82  
                          __ptext41 2F48                            __ptext33 2DA8  
                          __ptext25 2E90                            __ptext17 2A74  
                          __ptext42 2F4C                            __ptext34 2EAC  
                          __ptext26 2BF2                            __ptext18 2424  
                          __ptext35 2F2C                            __ptext27 2EE0  
                          __ptext19 2CC2                            __ptext36 275E  
                          __ptext28 2F1E                            __ptext37 2EF6  
                          __ptext29 269E                            __ptext38 2EC6  
                          __ptext39 2F3A                            __powers_ 1050  
                  ?_Activate_Buzzer 0001                       __size_of_main 008E  
                          _set_EWLT 2D72                            _set_NSLT 2D06  
                         printf@len 0050                           printf@exp 005A  
                         printf@val 0056                          _INTCONbits 000FF2  
                    OpenUSART@spbrg 0001                            isdigit@c 0003  
                          scale@scl 002A         ??_Wait_One_Second_With_Beep 0001  
                  __tdiv_to_l_@exp1 000F                    __tdiv_to_l_@cntr 000E  
                  __tdiv_to_l_@quot 000A                    ___lldiv@dividend 0001  
           __size_of_Wait_N_Seconds 001A                            printf@ap 004E  
                          printf@cp 0052                        ?__tdiv_to_l_ 0001  
                       _printf$1826 004B            __size_of_Wait_One_Second 000E  
                  ___lldiv@quotient 0009                       ?_get_full_ADC 0001  
       __end_of_Clear_Upper_Display 2F4C  
