

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Oct 07 16:45:46 2025

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    37  0000                     
    38                           	psect	idataCOMRAM
    39  001E18                     __pidataCOMRAM:
    40                           	opt stack 0
    41                           
    42                           ;initializer for _LED_7seg
    43  001E18  01                 	db	1
    44  001E19  4F                 	db	79
    45  001E1A  12                 	db	18
    46  001E1B  06                 	db	6
    47  001E1C  4C                 	db	76
    48  001E1D  24                 	db	36
    49  001E1E  20                 	db	32
    50  001E1F  0F                 	db	15
    51  001E20  00                 	db	0
    52  001E21  0C                 	db	12
    53                           
    54                           	psect	smallconst
    55  001000                     __psmallconst:
    56                           	opt stack 0
    57  001000  00                 	db	0
    58  001001                     _dpowers:
    59                           	opt stack 0
    60  001001  0001               	dw	1
    61  001003  000A               	dw	10
    62  001005  0064               	dw	100
    63  001007  03E8               	dw	1000
    64  001009  2710               	dw	10000
    65  00100B                     __end_of_dpowers:
    66                           	opt stack 0
    67  0000                     _ADCON0	set	4034
    68  0000                     _ADCON0bits	set	4034
    69  0000                     _ADCON1	set	4033
    70  0000                     _ADCON2	set	4032
    71  0000                     _ADRESH	set	4036
    72  0000                     _ADRESL	set	4035
    73  0000                     _OSCCON	set	4051
    74  0000                     _PIE1bits	set	3997
    75  0000                     _PIR1bits	set	3998
    76  0000                     _PORTB	set	3969
    77  0000                     _PORTC	set	3970
    78  0000                     _PORTD	set	3971
    79  0000                     _PORTEbits	set	3972
    80  0000                     _RCSTA	set	4011
    81  0000                     _RCSTAbits	set	4011
    82  0000                     _SPBRG	set	4015
    83  0000                     _SPBRGH	set	4016
    84  0000                     _TRISA	set	3986
    85  0000                     _TRISB	set	3987
    86  0000                     _TRISC	set	3988
    87  0000                     _TRISCbits	set	3988
    88  0000                     _TRISD	set	3989
    89  0000                     _TRISE	set	3990
    90  0000                     _TXREG	set	4013
    91  0000                     _TXSTA	set	4012
    92  0000                     _TXSTAbits	set	4012
    93  0000                     _TRMT	set	32097
    94  00100B                     STR_1:
    95  00100B  54                 	db	84	;'T'
    96  00100C  65                 	db	101	;'e'
    97  00100D  6D                 	db	109	;'m'
    98  00100E  70                 	db	112	;'p'
    99  00100F  65                 	db	101	;'e'
   100  001010  72                 	db	114	;'r'
   101  001011  61                 	db	97	;'a'
   102  001012  74                 	db	116	;'t'
   103  001013  75                 	db	117	;'u'
   104  001014  72                 	db	114	;'r'
   105  001015  65                 	db	101	;'e'
   106  001016  3A                 	db	58	;':'
   107  001017  20                 	db	32
   108  001018  25                 	db	37
   109  001019  64                 	db	100	;'d'
   110  00101A  46                 	db	70	;'F'
   111  00101B  0D                 	db	13
   112  00101C  0A                 	db	10
   113  00101D  56                 	db	86	;'V'
   114  00101E  6F                 	db	111	;'o'
   115  00101F  6C                 	db	108	;'l'
   116  001020  74                 	db	116	;'t'
   117  001021  61                 	db	97	;'a'
   118  001022  67                 	db	103	;'g'
   119  001023  65                 	db	101	;'e'
   120  001024  3A                 	db	58	;':'
   121  001025  20                 	db	32
   122  001026  25                 	db	37
   123  001027  64                 	db	100	;'d'
   124  001028  20                 	db	32
   125  001029  6D                 	db	109	;'m'
   126  00102A  56                 	db	86	;'V'
   127  00102B  0D                 	db	13
   128  00102C  0A                 	db	10
   129  00102D  00                 	db	0
   130  00102E                     STR_2:
   131  00102E  50                 	db	80	;'P'
   132  00102F  68                 	db	104	;'h'
   133  001030  6F                 	db	111	;'o'
   134  001031  74                 	db	116	;'t'
   135  001032  6F                 	db	111	;'o'
   136  001033  20                 	db	32
   137  001034  52                 	db	82	;'R'
   138  001035  65                 	db	101	;'e'
   139  001036  73                 	db	115	;'s'
   140  001037  69                 	db	105	;'i'
   141  001038  73                 	db	115	;'s'
   142  001039  74                 	db	116	;'t'
   143  00103A  6F                 	db	111	;'o'
   144  00103B  72                 	db	114	;'r'
   145  00103C  20                 	db	32
   146  00103D  56                 	db	86	;'V'
   147  00103E  6F                 	db	111	;'o'
   148  00103F  6C                 	db	108	;'l'
   149  001040  74                 	db	116	;'t'
   150  001041  61                 	db	97	;'a'
   151  001042  67                 	db	103	;'g'
   152  001043  65                 	db	101	;'e'
   153  001044  3A                 	db	58	;':'
   154  001045  20                 	db	32
   155  001046  25                 	db	37
   156  001047  64                 	db	100	;'d'
   157  001048  20                 	db	32
   158  001049  6D                 	db	109	;'m'
   159  00104A  56                 	db	86	;'V'
   160  00104B  0D                 	db	13
   161  00104C  0A                 	db	10
   162  00104D  0D                 	db	13
   163  00104E  0A                 	db	10
   164  00104F  00                 	db	0
   165                           
   166                           ; #config settings
   167  001050  00                 	db	0	; dummy byte at the end
   168  0000                     
   169                           	psect	cinit
   170  001D0E                     __pcinit:
   171                           	opt stack 0
   172  001D0E                     start_initialization:
   173                           	opt stack 0
   174  001D0E                     __initialization:
   175                           	opt stack 0
   176                           
   177                           ; Initialize objects allocated to COMRAM (10 bytes)
   178                           ; load TBLPTR registers with __pidataCOMRAM
   179  001D0E  0E18               	movlw	low __pidataCOMRAM
   180  001D10  6EF6               	movwf	tblptrl,c
   181  001D12  0E1E               	movlw	high __pidataCOMRAM
   182  001D14  6EF7               	movwf	tblptrh,c
   183  001D16  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   184  001D18  6EF8               	movwf	tblptru,c
   185  001D1A  EE00  F048         	lfsr	0,__pdataCOMRAM
   186  001D1E  EE10 F00A          	lfsr	1,10
   187  001D22                     copy_data0:
   188  001D22  0009               	tblrd		*+
   189  001D24  CFF5 FFEE          	movff	tablat,postinc0
   190  001D28  50E5               	movf	postdec1,w,c
   191  001D2A  50E1               	movf	fsr1l,w,c
   192  001D2C  E1FA               	bnz	copy_data0
   193  001D2E                     end_of_initialization:
   194                           	opt stack 0
   195  001D2E                     __end_of__initialization:
   196                           	opt stack 0
   197  001D2E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   198  001D30  6EF8               	movwf	tblptru,c
   199  001D32  0100               	movlb	0
   200  001D34  EF29  F008         	goto	_main	;jump to C main() function
   201                           tblptru	equ	0xFF8
   202                           tblptrh	equ	0xFF7
   203                           tblptrl	equ	0xFF6
   204                           tablat	equ	0xFF5
   205                           postinc0	equ	0xFEE
   206                           postdec1	equ	0xFE5
   207                           fsr1l	equ	0xFE1
   208                           
   209                           	psect	dataCOMRAM
   210  000048                     __pdataCOMRAM:
   211                           	opt stack 0
   212  000048                     _LED_7seg:
   213                           	opt stack 0
   214  000048                     	ds	10
   215                           tblptru	equ	0xFF8
   216                           tblptrh	equ	0xFF7
   217                           tblptrl	equ	0xFF6
   218                           tablat	equ	0xFF5
   219                           postinc0	equ	0xFEE
   220                           postdec1	equ	0xFE5
   221                           fsr1l	equ	0xFE1
   222                           
   223                           	psect	cstackCOMRAM
   224  000001                     __pcstackCOMRAM:
   225                           	opt stack 0
   226  000001                     ?_get_full_ADC:
   227                           	opt stack 0
   228  000001                     ?___awdiv:
   229                           	opt stack 0
   230  000001                     ?___awmod:
   231                           	opt stack 0
   232  000001                     ?___lwdiv:
   233                           	opt stack 0
   234  000001                     ?___ftpack:
   235                           	opt stack 0
   236  000001                     ?___ftneg:
   237                           	opt stack 0
   238  000001                     ?___fttol:
   239                           	opt stack 0
   240  000001                     putch@c:
   241                           	opt stack 0
   242  000001                     Set_ADCON0@AN_pin:
   243                           	opt stack 0
   244  000001                     SET_RGB_D1@temp_up:
   245                           	opt stack 0
   246  000001                     SET_RGB_D2@temp_f:
   247                           	opt stack 0
   248  000001                     WAIT_1_SEC@j:
   249                           	opt stack 0
   250  000001                     OpenUSART@spbrg:
   251                           	opt stack 0
   252  000001                     ___awdiv@dividend:
   253                           	opt stack 0
   254  000001                     ___awmod@dividend:
   255                           	opt stack 0
   256  000001                     ___lwdiv@dividend:
   257                           	opt stack 0
   258  000001                     ___ftpack@arg:
   259                           	opt stack 0
   260  000001                     ___ftge@ff1:
   261                           	opt stack 0
   262  000001                     ___ftneg@f1:
   263                           	opt stack 0
   264  000001                     ___fttol@f1:
   265                           	opt stack 0
   266                           
   267                           ; 3 bytes @ 0x0
   268  000001                     	ds	2
   269  000003                     ??_get_full_ADC:
   270  000003                     OpenUSART@config:
   271                           	opt stack 0
   272  000003                     ___awdiv@divisor:
   273                           	opt stack 0
   274  000003                     ___awmod@divisor:
   275                           	opt stack 0
   276  000003                     ___lwdiv@divisor:
   277                           	opt stack 0
   278                           
   279                           ; 2 bytes @ 0x2
   280  000003                     	ds	1
   281  000004                     ___ftpack@exp:
   282                           	opt stack 0
   283  000004                     ___ftge@ff2:
   284                           	opt stack 0
   285                           
   286                           ; 3 bytes @ 0x3
   287  000004                     	ds	1
   288  000005                     ??___fttol:
   289  000005                     ___awdiv@counter:
   290                           	opt stack 0
   291  000005                     ___awmod@counter:
   292                           	opt stack 0
   293  000005                     ___ftpack@sign:
   294                           	opt stack 0
   295  000005                     get_full_ADC@result:
   296                           	opt stack 0
   297  000005                     ___lwdiv@quotient:
   298                           	opt stack 0
   299                           
   300                           ; 2 bytes @ 0x4
   301  000005                     	ds	1
   302  000006                     ??___ftpack:
   303  000006                     ___awdiv@sign:
   304                           	opt stack 0
   305  000006                     ___awmod@sign:
   306                           	opt stack 0
   307                           
   308                           ; 1 bytes @ 0x5
   309  000006                     	ds	1
   310  000007                     ??___ftge:
   311  000007                     ___lwdiv@counter:
   312                           	opt stack 0
   313  000007                     ___awdiv@quotient:
   314                           	opt stack 0
   315                           
   316                           ; 2 bytes @ 0x6
   317  000007                     	ds	1
   318  000008                     ?___lwmod:
   319                           	opt stack 0
   320  000008                     ___lwmod@dividend:
   321                           	opt stack 0
   322                           
   323                           ; 2 bytes @ 0x7
   324  000008                     	ds	1
   325  000009                     ?___awtoft:
   326                           	opt stack 0
   327  000009                     ___awtoft@c:
   328                           	opt stack 0
   329                           
   330                           ; 2 bytes @ 0x8
   331  000009                     	ds	1
   332  00000A                     ___fttol@sign1:
   333                           	opt stack 0
   334  00000A                     ___lwmod@divisor:
   335                           	opt stack 0
   336                           
   337                           ; 2 bytes @ 0x9
   338  00000A                     	ds	1
   339  00000B                     ___fttol@lval:
   340                           	opt stack 0
   341                           
   342                           ; 4 bytes @ 0xA
   343  00000B                     	ds	1
   344  00000C                     ___awtoft@sign:
   345                           	opt stack 0
   346  00000C                     ___lwmod@counter:
   347                           	opt stack 0
   348                           
   349                           ; 1 bytes @ 0xB
   350  00000C                     	ds	1
   351  00000D                     ?___ftmul:
   352                           	opt stack 0
   353  00000D                     SET_RGB_D3@voltage:
   354                           	opt stack 0
   355  00000D                     ___ftmul@f1:
   356                           	opt stack 0
   357                           
   358                           ; 3 bytes @ 0xC
   359  00000D                     	ds	2
   360  00000F                     ___fttol@exp1:
   361                           	opt stack 0
   362                           
   363                           ; 1 bytes @ 0xE
   364  00000F                     	ds	1
   365  000010                     ?_printf:
   366                           	opt stack 0
   367  000010                     printf@f:
   368                           	opt stack 0
   369  000010                     ___ftmul@f2:
   370                           	opt stack 0
   371                           
   372                           ; 3 bytes @ 0xF
   373  000010                     	ds	3
   374  000013                     ??___ftmul:
   375                           
   376                           ; 0 bytes @ 0x12
   377  000013                     	ds	3
   378  000016                     ??_printf:
   379  000016                     ___ftmul@exp:
   380                           	opt stack 0
   381                           
   382                           ; 1 bytes @ 0x15
   383  000016                     	ds	1
   384  000017                     printf@ap:
   385                           	opt stack 0
   386  000017                     ___ftmul@f3_as_product:
   387                           	opt stack 0
   388                           
   389                           ; 3 bytes @ 0x16
   390  000017                     	ds	2
   391  000019                     printf@flag:
   392                           	opt stack 0
   393                           
   394                           ; 1 bytes @ 0x18
   395  000019                     	ds	1
   396  00001A                     printf@prec:
   397                           	opt stack 0
   398  00001A                     ___ftmul@cntr:
   399                           	opt stack 0
   400                           
   401                           ; 1 bytes @ 0x19
   402  00001A                     	ds	1
   403  00001B                     ___ftmul@sign:
   404                           	opt stack 0
   405  00001B                     printf@val:
   406                           	opt stack 0
   407                           
   408                           ; 2 bytes @ 0x1A
   409  00001B                     	ds	1
   410  00001C                     ?___ftadd:
   411                           	opt stack 0
   412  00001C                     ___ftadd@f1:
   413                           	opt stack 0
   414                           
   415                           ; 3 bytes @ 0x1B
   416  00001C                     	ds	1
   417  00001D                     printf@c:
   418                           	opt stack 0
   419                           
   420                           ; 1 bytes @ 0x1C
   421  00001D                     	ds	2
   422  00001F                     ___ftadd@f2:
   423                           	opt stack 0
   424                           
   425                           ; 3 bytes @ 0x1E
   426  00001F                     	ds	3
   427  000022                     ??___ftadd:
   428                           
   429                           ; 0 bytes @ 0x21
   430  000022                     	ds	3
   431  000025                     ___ftadd@sign:
   432                           	opt stack 0
   433                           
   434                           ; 1 bytes @ 0x24
   435  000025                     	ds	1
   436  000026                     ___ftadd@exp2:
   437                           	opt stack 0
   438                           
   439                           ; 1 bytes @ 0x25
   440  000026                     	ds	1
   441  000027                     ___ftadd@exp1:
   442                           	opt stack 0
   443                           
   444                           ; 1 bytes @ 0x26
   445  000027                     	ds	1
   446  000028                     ?___ftdiv:
   447                           	opt stack 0
   448  000028                     ___ftdiv@f1:
   449                           	opt stack 0
   450                           
   451                           ; 3 bytes @ 0x27
   452  000028                     	ds	3
   453  00002B                     ___ftdiv@f2:
   454                           	opt stack 0
   455                           
   456                           ; 3 bytes @ 0x2A
   457  00002B                     	ds	3
   458  00002E                     ??___ftdiv:
   459                           
   460                           ; 0 bytes @ 0x2D
   461  00002E                     	ds	3
   462  000031                     ___ftdiv@cntr:
   463                           	opt stack 0
   464                           
   465                           ; 1 bytes @ 0x30
   466  000031                     	ds	1
   467  000032                     ___ftdiv@f3:
   468                           	opt stack 0
   469                           
   470                           ; 3 bytes @ 0x31
   471  000032                     	ds	3
   472  000035                     ___ftdiv@exp:
   473                           	opt stack 0
   474                           
   475                           ; 1 bytes @ 0x34
   476  000035                     	ds	1
   477  000036                     ___ftdiv@sign:
   478                           	opt stack 0
   479                           
   480                           ; 1 bytes @ 0x35
   481  000036                     	ds	1
   482  000037                     main@temp_Celsius_float:
   483                           	opt stack 0
   484                           
   485                           ; 3 bytes @ 0x36
   486  000037                     	ds	3
   487  00003A                     main@temp_Fahren_float:
   488                           	opt stack 0
   489                           
   490                           ; 3 bytes @ 0x39
   491  00003A                     	ds	3
   492  00003D                     main@mVolt_in:
   493                           	opt stack 0
   494                           
   495                           ; 2 bytes @ 0x3C
   496  00003D                     	ds	2
   497  00003F                     main@UPPER_DIS:
   498                           	opt stack 0
   499                           
   500                           ; 1 bytes @ 0x3E
   501  00003F                     	ds	1
   502  000040                     main@LOWER_DIS:
   503                           	opt stack 0
   504                           
   505                           ; 1 bytes @ 0x3F
   506  000040                     	ds	1
   507  000041                     main@mVolt_in_float:
   508                           	opt stack 0
   509                           
   510                           ; 3 bytes @ 0x40
   511  000041                     	ds	3
   512  000044                     main@mVolt_in_1:
   513                           	opt stack 0
   514                           
   515                           ; 2 bytes @ 0x43
   516  000044                     	ds	2
   517  000046                     main@temp_Fahren:
   518                           	opt stack 0
   519                           
   520                           ; 2 bytes @ 0x45
   521  000046                     	ds	2
   522                           tblptru	equ	0xFF8
   523                           tblptrh	equ	0xFF7
   524                           tblptrl	equ	0xFF6
   525                           tablat	equ	0xFF5
   526                           postinc0	equ	0xFEE
   527                           postdec1	equ	0xFE5
   528                           fsr1l	equ	0xFE1
   529                           
   530 ;;
   531 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   532 ;;
   533 ;; *************** function _main *****************
   534 ;; Defined at:
   535 ;;		line 104 in file "lab5.c"
   536 ;; Parameters:    Size  Location     Type
   537 ;;		None
   538 ;; Auto vars:     Size  Location     Type
   539 ;;  mVolt_in_flo    3   64[COMRAM] float 
   540 ;;  temp_Fahren_    3   57[COMRAM] float 
   541 ;;  temp_Celsius    3   54[COMRAM] float 
   542 ;;  temp_Fahren     2   69[COMRAM] int 
   543 ;;  mVolt_in_1      2   67[COMRAM] int 
   544 ;;  mVolt_in        2   60[COMRAM] int 
   545 ;;  LOWER_DIS       1   63[COMRAM] unsigned char 
   546 ;;  UPPER_DIS       1   62[COMRAM] unsigned char 
   547 ;; Return value:  Size  Location     Type
   548 ;;		None               void
   549 ;; Registers used:
   550 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   551 ;; Tracked objects:
   552 ;;		On entry : 0/0
   553 ;;		On exit  : 0/0
   554 ;;		Unchanged: 0/0
   555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   557 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   559 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   560 ;;Total ram usage:       17 bytes
   561 ;; Hardware stack levels required when called:    2
   562 ;; This function calls:
   563 ;;		_Init_ADC
   564 ;;		_Init_TRIS
   565 ;;		_Init_UART
   566 ;;		_SET_RGB_D1
   567 ;;		_SET_RGB_D2
   568 ;;		_SET_RGB_D3
   569 ;;		_Set_ADCON0
   570 ;;		_WAIT_1_SEC
   571 ;;		___awdiv
   572 ;;		___awmod
   573 ;;		___awtoft
   574 ;;		___ftadd
   575 ;;		___ftdiv
   576 ;;		___ftmul
   577 ;;		___ftneg
   578 ;;		___fttol
   579 ;;		_get_full_ADC
   580 ;;		_printf
   581 ;; This function is called by:
   582 ;;		Startup code after reset
   583 ;; This function uses a non-reentrant model
   584 ;;
   585                           
   586                           	psect	text0
   587  001052                     __ptext0:
   588                           	opt stack 0
   589  001052                     _main:
   590                           	opt stack 29
   591                           
   592                           ;lab5.c: 105: Init_UART();
   593                           
   594                           ;incstack = 0
   595  001052  ECEE  F00E         	call	_Init_UART	;wreg free
   596                           
   597                           ;lab5.c: 106: Init_ADC();
   598  001056  ECFF  F00E         	call	_Init_ADC	;wreg free
   599                           
   600                           ;lab5.c: 107: Init_TRIS();
   601  00105A  ECE3  F00E         	call	_Init_TRIS	;wreg free
   602  00105E  D000               	goto	l1963
   603  001060                     l1963:
   604                           
   605                           ;lab5.c: 109: Set_ADCON0(0);
   606  001060  0E00               	movlw	0
   607  001062  EC06  F00F         	call	_Set_ADCON0
   608                           
   609                           ;lab5.c: 110: int mVolt_in = get_full_ADC();
   610  001066  EC9C  F00E         	call	_get_full_ADC	;wreg free
   611  00106A  C001  F03D         	movff	?_get_full_ADC,main@mVolt_in
   612  00106E  C002  F03E         	movff	?_get_full_ADC+1,main@mVolt_in+1
   613                           
   614                           ;lab5.c: 111: float mVolt_in_float = mVolt_in * 4.0;
   615  001072  C03D  F009         	movff	main@mVolt_in,___awtoft@c
   616  001076  C03E  F00A         	movff	main@mVolt_in+1,___awtoft@c+1
   617  00107A  EC69  F00E         	call	___awtoft	;wreg free
   618  00107E  C009  F00D         	movff	?___awtoft,___ftmul@f1
   619  001082  C00A  F00E         	movff	?___awtoft+1,___ftmul@f1+1
   620  001086  C00B  F00F         	movff	?___awtoft+2,___ftmul@f1+2
   621  00108A  0E00               	movlw	0
   622  00108C  6E10               	movwf	___ftmul@f2,c
   623  00108E  0E80               	movlw	128
   624  001090  6E11               	movwf	___ftmul@f2+1,c
   625  001092  0E40               	movlw	64
   626  001094  6E12               	movwf	___ftmul@f2+2,c
   627  001096  ECA6  F00A         	call	___ftmul	;wreg free
   628  00109A  C00D  F041         	movff	?___ftmul,main@mVolt_in_float
   629  00109E  C00E  F042         	movff	?___ftmul+1,main@mVolt_in_float+1
   630  0010A2  C00F  F043         	movff	?___ftmul+2,main@mVolt_in_float+2
   631                           
   632                           ;lab5.c: 112: float temp_Celsius_float = (1035.0 - mVolt_in_float) / 5.50;
   633  0010A6  0E60               	movlw	96
   634  0010A8  6E1F               	movwf	___ftadd@f2,c
   635  0010AA  0E81               	movlw	129
   636  0010AC  6E20               	movwf	___ftadd@f2+1,c
   637  0010AE  0E44               	movlw	68
   638  0010B0  6E21               	movwf	___ftadd@f2+2,c
   639  0010B2  C041  F001         	movff	main@mVolt_in_float,___ftneg@f1
   640  0010B6  C042  F002         	movff	main@mVolt_in_float+1,___ftneg@f1+1
   641  0010BA  C043  F003         	movff	main@mVolt_in_float+2,___ftneg@f1+2
   642  0010BE  ECAF  F00E         	call	___ftneg	;wreg free
   643  0010C2  C001  F01C         	movff	?___ftneg,___ftadd@f1
   644  0010C6  C002  F01D         	movff	?___ftneg+1,___ftadd@f1+1
   645  0010CA  C003  F01E         	movff	?___ftneg+2,___ftadd@f1+2
   646  0010CE  EC25  F009         	call	___ftadd	;wreg free
   647  0010D2  C01C  F028         	movff	?___ftadd,___ftdiv@f1
   648  0010D6  C01D  F029         	movff	?___ftadd+1,___ftdiv@f1+1
   649  0010DA  C01E  F02A         	movff	?___ftadd+2,___ftdiv@f1+2
   650  0010DE  0E00               	movlw	0
   651  0010E0  6E2B               	movwf	___ftdiv@f2,c
   652  0010E2  0EB0               	movlw	176
   653  0010E4  6E2C               	movwf	___ftdiv@f2+1,c
   654  0010E6  0E40               	movlw	64
   655  0010E8  6E2D               	movwf	___ftdiv@f2+2,c
   656  0010EA  EC95  F00B         	call	___ftdiv	;wreg free
   657  0010EE  C028  F037         	movff	?___ftdiv,main@temp_Celsius_float
   658  0010F2  C029  F038         	movff	?___ftdiv+1,main@temp_Celsius_float+1
   659  0010F6  C02A  F039         	movff	?___ftdiv+2,main@temp_Celsius_float+2
   660                           
   661                           ;lab5.c: 113: float temp_Fahren_float = (1.80 * temp_Celsius_float) + 32.0;
   662  0010FA  0E66               	movlw	102
   663  0010FC  6E10               	movwf	___ftmul@f2,c
   664  0010FE  0EE6               	movlw	230
   665  001100  6E11               	movwf	___ftmul@f2+1,c
   666  001102  0E3F               	movlw	63
   667  001104  6E12               	movwf	___ftmul@f2+2,c
   668  001106  C037  F00D         	movff	main@temp_Celsius_float,___ftmul@f1
   669  00110A  C038  F00E         	movff	main@temp_Celsius_float+1,___ftmul@f1+1
   670  00110E  C039  F00F         	movff	main@temp_Celsius_float+2,___ftmul@f1+2
   671  001112  ECA6  F00A         	call	___ftmul	;wreg free
   672  001116  C00D  F01C         	movff	?___ftmul,___ftadd@f1
   673  00111A  C00E  F01D         	movff	?___ftmul+1,___ftadd@f1+1
   674  00111E  C00F  F01E         	movff	?___ftmul+2,___ftadd@f1+2
   675  001122  0E00               	movlw	0
   676  001124  6E1F               	movwf	___ftadd@f2,c
   677  001126  0E00               	movlw	0
   678  001128  6E20               	movwf	___ftadd@f2+1,c
   679  00112A  0E42               	movlw	66
   680  00112C  6E21               	movwf	___ftadd@f2+2,c
   681  00112E  EC25  F009         	call	___ftadd	;wreg free
   682  001132  C01C  F03A         	movff	?___ftadd,main@temp_Fahren_float
   683  001136  C01D  F03B         	movff	?___ftadd+1,main@temp_Fahren_float+1
   684  00113A  C01E  F03C         	movff	?___ftadd+2,main@temp_Fahren_float+2
   685                           
   686                           ;lab5.c: 114: int temp_Fahren = (int)temp_Fahren_float;
   687  00113E  C03A  F001         	movff	main@temp_Fahren_float,___fttol@f1
   688  001142  C03B  F002         	movff	main@temp_Fahren_float+1,___fttol@f1+1
   689  001146  C03C  F003         	movff	main@temp_Fahren_float+2,___fttol@f1+2
   690  00114A  EC22  F00B         	call	___fttol	;wreg free
   691  00114E  C001  F046         	movff	?___fttol,main@temp_Fahren
   692  001152  C002  F047         	movff	?___fttol+1,main@temp_Fahren+1
   693                           
   694                           ;lab5.c: 115: char UPPER_DIS = temp_Fahren / 10;
   695  001156  C046  F001         	movff	main@temp_Fahren,___awdiv@dividend
   696  00115A  C047  F002         	movff	main@temp_Fahren+1,___awdiv@dividend+1
   697  00115E  0E00               	movlw	0
   698  001160  6E04               	movwf	___awdiv@divisor+1,c
   699  001162  0E0A               	movlw	10
   700  001164  6E03               	movwf	___awdiv@divisor,c
   701  001166  ECBB  F00C         	call	___awdiv	;wreg free
   702  00116A  5001               	movf	?___awdiv,w,c
   703  00116C  6E3F               	movwf	main@UPPER_DIS,c
   704                           
   705                           ;lab5.c: 116: char LOWER_DIS = temp_Fahren % 10;
   706  00116E  C046  F001         	movff	main@temp_Fahren,___awmod@dividend
   707  001172  C047  F002         	movff	main@temp_Fahren+1,___awmod@dividend+1
   708  001176  0E00               	movlw	0
   709  001178  6E04               	movwf	___awmod@divisor+1,c
   710  00117A  0E0A               	movlw	10
   711  00117C  6E03               	movwf	___awmod@divisor,c
   712  00117E  EC9C  F00D         	call	___awmod	;wreg free
   713  001182  5001               	movf	?___awmod,w,c
   714  001184  6E40               	movwf	main@LOWER_DIS,c
   715                           
   716                           ;lab5.c: 117: printf("Temperature: %dF\r\nVoltage: %d mV\r\n", temp_Fahren, (int)mVolt_i
      +                          n_float);
   717  001186  0E0B               	movlw	low STR_1
   718  001188  6E10               	movwf	printf@f,c
   719  00118A  0E10               	movlw	high STR_1
   720  00118C  6E11               	movwf	printf@f+1,c
   721  00118E  C046  F012         	movff	main@temp_Fahren,?_printf+2
   722  001192  C047  F013         	movff	main@temp_Fahren+1,?_printf+3
   723  001196  C041  F001         	movff	main@mVolt_in_float,___fttol@f1
   724  00119A  C042  F002         	movff	main@mVolt_in_float+1,___fttol@f1+1
   725  00119E  C043  F003         	movff	main@mVolt_in_float+2,___fttol@f1+2
   726  0011A2  EC22  F00B         	call	___fttol	;wreg free
   727  0011A6  C001  F014         	movff	?___fttol,?_printf+4
   728  0011AA  C002  F015         	movff	?___fttol+1,?_printf+5
   729  0011AE  EC07  F00A         	call	_printf	;wreg free
   730                           
   731                           ;lab5.c: 118: PORTB = LED_7seg[LOWER_DIS];
   732  0011B2  5040               	movf	main@LOWER_DIS,w,c
   733  0011B4  0D01               	mullw	1
   734  0011B6  0E48               	movlw	low _LED_7seg
   735  0011B8  24F3               	addwf	prodl,w,c
   736  0011BA  6ED9               	movwf	fsr2l,c
   737  0011BC  0E00               	movlw	high _LED_7seg
   738  0011BE  20F4               	addwfc	prodh,w,c
   739  0011C0  6EDA               	movwf	fsr2h,c
   740  0011C2  50DF               	movf	indf2,w,c
   741  0011C4  6E81               	movwf	3969,c	;volatile
   742                           
   743                           ;lab5.c: 119: PORTD = LED_7seg[UPPER_DIS];
   744  0011C6  503F               	movf	main@UPPER_DIS,w,c
   745  0011C8  0D01               	mullw	1
   746  0011CA  0E48               	movlw	low _LED_7seg
   747  0011CC  24F3               	addwf	prodl,w,c
   748  0011CE  6ED9               	movwf	fsr2l,c
   749  0011D0  0E00               	movlw	high _LED_7seg
   750  0011D2  20F4               	addwfc	prodh,w,c
   751  0011D4  6EDA               	movwf	fsr2h,c
   752  0011D6  50DF               	movf	indf2,w,c
   753  0011D8  6E83               	movwf	3971,c	;volatile
   754                           
   755                           ;lab5.c: 120: SET_RGB_D1(temp_Fahren);
   756  0011DA  C046  F001         	movff	main@temp_Fahren,SET_RGB_D1@temp_up
   757  0011DE  C047  F002         	movff	main@temp_Fahren+1,SET_RGB_D1@temp_up+1
   758  0011E2  ECD3  F00E         	call	_SET_RGB_D1	;wreg free
   759                           
   760                           ;lab5.c: 121: SET_RGB_D2(temp_Fahren);
   761  0011E6  C046  F001         	movff	main@temp_Fahren,SET_RGB_D2@temp_f
   762  0011EA  C047  F002         	movff	main@temp_Fahren+1,SET_RGB_D2@temp_f+1
   763  0011EE  EC51  F00D         	call	_SET_RGB_D2	;wreg free
   764                           
   765                           ;lab5.c: 122: Set_ADCON0(1);
   766  0011F2  0E01               	movlw	1
   767  0011F4  EC06  F00F         	call	_Set_ADCON0
   768                           
   769                           ;lab5.c: 123: int mVolt_in_1 = get_full_ADC() * 4;
   770  0011F8  EC9C  F00E         	call	_get_full_ADC	;wreg free
   771  0011FC  90D8               	bcf	status,0,c
   772  0011FE  3601               	rlcf	?_get_full_ADC,f,c
   773  001200  3602               	rlcf	?_get_full_ADC+1,f,c
   774  001202  90D8               	bcf	status,0,c
   775  001204  3601               	rlcf	?_get_full_ADC,f,c
   776  001206  3602               	rlcf	?_get_full_ADC+1,f,c
   777  001208  C001  F044         	movff	?_get_full_ADC,main@mVolt_in_1
   778  00120C  C002  F045         	movff	?_get_full_ADC+1,main@mVolt_in_1+1
   779                           
   780                           ;lab5.c: 124: SET_RGB_D3(mVolt_in_1);
   781  001210  C044  F009         	movff	main@mVolt_in_1,___awtoft@c
   782  001214  C045  F00A         	movff	main@mVolt_in_1+1,___awtoft@c+1
   783  001218  EC69  F00E         	call	___awtoft	;wreg free
   784  00121C  C009  F00D         	movff	?___awtoft,SET_RGB_D3@voltage
   785  001220  C00A  F00E         	movff	?___awtoft+1,SET_RGB_D3@voltage+1
   786  001224  C00B  F00F         	movff	?___awtoft+2,SET_RGB_D3@voltage+2
   787  001228  EC69  F00C         	call	_SET_RGB_D3	;wreg free
   788                           
   789                           ;lab5.c: 125: printf("Photo Resistor Voltage: %d mV\r\n\r\n", mVolt_in_1);
   790  00122C  0E2E               	movlw	low STR_2
   791  00122E  6E10               	movwf	printf@f,c
   792  001230  0E10               	movlw	high STR_2
   793  001232  6E11               	movwf	printf@f+1,c
   794  001234  C044  F012         	movff	main@mVolt_in_1,?_printf+2
   795  001238  C045  F013         	movff	main@mVolt_in_1+1,?_printf+3
   796  00123C  EC07  F00A         	call	_printf	;wreg free
   797                           
   798                           ;lab5.c: 126: WAIT_1_SEC();
   799  001240  ECC1  F00E         	call	_WAIT_1_SEC	;wreg free
   800  001244  D70D               	goto	l1963
   801  001246  EF00  F000         	goto	start
   802  00124A                     __end_of_main:
   803                           	opt stack 0
   804                           tblptru	equ	0xFF8
   805                           tblptrh	equ	0xFF7
   806                           tblptrl	equ	0xFF6
   807                           tablat	equ	0xFF5
   808                           prodh	equ	0xFF4
   809                           prodl	equ	0xFF3
   810                           postinc0	equ	0xFEE
   811                           postdec1	equ	0xFE5
   812                           fsr1l	equ	0xFE1
   813                           indf2	equ	0xFDF
   814                           fsr2h	equ	0xFDA
   815                           fsr2l	equ	0xFD9
   816                           status	equ	0xFD8
   817                           
   818 ;; *************** function _printf *****************
   819 ;; Defined at:
   820 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
   821 ;; Parameters:    Size  Location     Type
   822 ;;  f               2   15[COMRAM] PTR const unsigned char 
   823 ;;		 -> STR_2(34), STR_1(35), 
   824 ;; Auto vars:     Size  Location     Type
   825 ;;  tmpval          4    0        struct .
   826 ;;  cp              3    0        PTR const unsigned char 
   827 ;;  val             2   26[COMRAM] unsigned int 
   828 ;;  ap              2   22[COMRAM] PTR void [1]
   829 ;;		 -> ?_printf(2), 
   830 ;;  len             2    0        unsigned int 
   831 ;;  c               1   28[COMRAM] char 
   832 ;;  prec            1   25[COMRAM] char 
   833 ;;  flag            1   24[COMRAM] unsigned char 
   834 ;; Return value:  Size  Location     Type
   835 ;;                  2   15[COMRAM] int 
   836 ;; Registers used:
   837 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   838 ;; Tracked objects:
   839 ;;		On entry : 0/0
   840 ;;		On exit  : 0/0
   841 ;;		Unchanged: 0/0
   842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   843 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   844 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   845 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   846 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   847 ;;Total ram usage:       14 bytes
   848 ;; Hardware stack levels used:    1
   849 ;; Hardware stack levels required when called:    1
   850 ;; This function calls:
   851 ;;		___lwdiv
   852 ;;		___lwmod
   853 ;;		_putch
   854 ;; This function is called by:
   855 ;;		_main
   856 ;; This function uses a non-reentrant model
   857 ;;
   858                           
   859                           	psect	text1
   860  00140E                     __ptext1:
   861                           	opt stack 0
   862  00140E                     _printf:
   863                           	opt stack 29
   864                           
   865                           ;doprnt.c: 466: va_list ap;
   866                           ;doprnt.c: 499: signed char c;
   867                           ;doprnt.c: 506: signed char prec;
   868                           ;doprnt.c: 508: unsigned char flag;
   869                           ;doprnt.c: 523: union {
   870                           ;doprnt.c: 524: unsigned long vd;
   871                           ;doprnt.c: 525: double integ;
   872                           ;doprnt.c: 526: } tmpval;
   873                           ;doprnt.c: 528: unsigned int val;
   874                           ;doprnt.c: 529: unsigned len;
   875                           ;doprnt.c: 530: const char * cp;
   876                           ;doprnt.c: 533: *ap = __va_start();
   877                           
   878                           ;incstack = 0
   879  00140E  0E12               	movlw	low (?_printf+2)
   880  001410  6E17               	movwf	printf@ap,c
   881  001412  0E00               	movlw	high (?_printf+2)
   882  001414  6E18               	movwf	printf@ap+1,c
   883                           
   884                           ;doprnt.c: 536: while(c = *f++) {
   885  001416  D08B               	goto	l1653
   886  001418                     l1607:
   887                           
   888                           ;doprnt.c: 538: if(c != '%')
   889  001418  0E25               	movlw	37
   890  00141A  181D               	xorwf	printf@c,w,c
   891  00141C  B4D8               	btfsc	status,2,c
   892  00141E  D004               	goto	l1611
   893                           
   894                           ;doprnt.c: 540: {
   895                           ;doprnt.c: 541: (putch(c) );
   896  001420  501D               	movf	printf@c,w,c
   897  001422  ECF8  F00E         	call	_putch
   898                           
   899                           ;doprnt.c: 542: continue;
   900  001426  D083               	goto	l1653
   901  001428                     l1611:
   902                           
   903                           ;doprnt.c: 543: }
   904                           ;doprnt.c: 548: flag = 0;
   905  001428  0E00               	movlw	0
   906  00142A  6E19               	movwf	printf@flag,c
   907                           
   908                           ;doprnt.c: 635: switch(c = *f++) {
   909  00142C  D004               	goto	l1615
   910                           
   911                           ;doprnt.c: 638: goto alldone;
   912                           
   913                           ;doprnt.c: 637: case 0:
   914  00142E  D08D               	goto	l140
   915                           
   916                           ;doprnt.c: 698: case 'i':
   917                           ;doprnt.c: 699: break;
   918                           
   919                           ;doprnt.c: 697: case 'd':
   920  001430  D015               	goto	l1617
   921                           
   922                           ;doprnt.c: 813: continue;
   923                           
   924                           ;doprnt.c: 802: default:
   925  001432  D07D               	goto	l1653
   926                           
   927                           ;doprnt.c: 822: }
   928  001434  D013               	goto	l1617
   929  001436                     l1615:
   930  001436  C010  FFF6         	movff	printf@f,tblptrl
   931  00143A  C011  FFF7         	movff	printf@f+1,tblptrh
   932  00143E  4A10               	infsnz	printf@f,f,c
   933  001440  2A11               	incf	printf@f+1,f,c
   934  001442                     	if	0	;tblptru may be non-zero
   935  001442                     	endif
   936  001442                     	if	0	;tblptru may be non-zero
   937  001442                     	endif
   938  001442  0008               	tblrd		*
   939  001444  CFF5 F01D          	movff	tablat,printf@c
   940  001448  501D               	movf	printf@c,w,c
   941                           
   942                           ; Switch size 1, requested type "space"
   943                           ; Number of cases is 3, Range of values is 0 to 105
   944                           ; switch strategies available:
   945                           ; Name         Instructions Cycles
   946                           ; simple_byte           10     6 (average)
   947                           ;	Chosen strategy is simple_byte
   948  00144A  0A00               	xorlw	0	; case 0
   949  00144C  B4D8               	btfsc	status,2,c
   950  00144E  D07D               	goto	l140
   951  001450  0A64               	xorlw	100	; case 100
   952  001452  B4D8               	btfsc	status,2,c
   953  001454  D003               	goto	l1617
   954  001456  0A0D               	xorlw	13	; case 105
   955  001458  A4D8               	btfss	status,2,c
   956  00145A  D069               	goto	l1653
   957  00145C                     l1617:
   958                           
   959                           ;doprnt.c: 1253: {
   960                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
   961  00145C  C017  FFD9         	movff	printf@ap,fsr2l
   962  001460  C018  FFDA         	movff	printf@ap+1,fsr2h
   963  001464  CFDE F01B          	movff	postinc2,printf@val
   964  001468  CFDD F01C          	movff	postdec2,printf@val+1
   965  00146C  0E02               	movlw	2
   966  00146E  2617               	addwf	printf@ap,f,c
   967  001470  0E00               	movlw	0
   968  001472  2218               	addwfc	printf@ap+1,f,c
   969                           
   970                           ;doprnt.c: 1261: if((int)val < 0) {
   971  001474  AE1C               	btfss	printf@val+1,7,c
   972  001476  D007               	goto	l1627
   973                           
   974                           ;doprnt.c: 1262: flag |= 0x03;
   975  001478  0E03               	movlw	3
   976  00147A  1219               	iorwf	printf@flag,f,c
   977                           
   978                           ;doprnt.c: 1263: val = -val;
   979  00147C  6C1B               	negf	printf@val,c
   980  00147E  1E1C               	comf	printf@val+1,f,c
   981  001480  B0D8               	btfsc	status,0,c
   982  001482  2A1C               	incf	printf@val+1,f,c
   983  001484  D000               	goto	l1627
   984  001486                     l1627:
   985                           
   986                           ;doprnt.c: 1264: }
   987                           ;doprnt.c: 1266: }
   988                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
   989  001486  0E01               	movlw	1
   990  001488  6E1D               	movwf	printf@c,c
   991  00148A                     l1629:
   992  00148A  0E05               	movlw	5
   993  00148C  181D               	xorwf	printf@c,w,c
   994  00148E  B4D8               	btfsc	status,2,c
   995  001490  D016               	goto	l1641
   996  001492  D001               	goto	l1633
   997  001494  D014               	goto	l1641
   998  001496                     l1633:
   999                           
  1000                           ;doprnt.c: 1306: if(val < dpowers[c])
  1001  001496  501D               	movf	printf@c,w,c
  1002  001498  0D02               	mullw	2
  1003  00149A  0E01               	movlw	low _dpowers
  1004  00149C  24F3               	addwf	prodl,w,c
  1005  00149E  6EF6               	movwf	tblptrl,c
  1006  0014A0  0E10               	movlw	high _dpowers
  1007  0014A2  20F4               	addwfc	prodh,w,c
  1008  0014A4  6EF7               	movwf	tblptrh,c
  1009  0014A6                     	if	0	;There are less than 3 active tblptr bytes
  1010  0014A6                     	endif
  1011  0014A6  0009               	tblrd		*+
  1012  0014A8  50F5               	movf	tablat,w,c
  1013  0014AA  5C1B               	subwf	printf@val,w,c
  1014  0014AC  0009               	tblrd		*+
  1015  0014AE  50F5               	movf	tablat,w,c
  1016  0014B0  581C               	subwfb	printf@val+1,w,c
  1017  0014B2  A0D8               	btfss	status,0,c
  1018  0014B4  D004               	goto	l1641
  1019  0014B6  D001               	goto	l1637
  1020                           
  1021                           ;doprnt.c: 1307: break;
  1022  0014B8  D002               	goto	l1641
  1023  0014BA                     l1637:
  1024  0014BA  2A1D               	incf	printf@c,f,c
  1025  0014BC  D7E6               	goto	l1629
  1026  0014BE                     l1641:
  1027                           
  1028                           ;doprnt.c: 1422: {
  1029                           ;doprnt.c: 1438: if(flag & 0x03)
  1030  0014BE  C019  F016         	movff	printf@flag,??_printf
  1031  0014C2  0E03               	movlw	3
  1032  0014C4  1616               	andwf	??_printf,f,c
  1033  0014C6  B4D8               	btfsc	status,2,c
  1034  0014C8  D004               	goto	l1645
  1035                           
  1036                           ;doprnt.c: 1439: (putch('-') );
  1037  0014CA  0E2D               	movlw	45
  1038  0014CC  ECF8  F00E         	call	_putch
  1039  0014D0  D000               	goto	l1645
  1040  0014D2                     l1645:
  1041                           
  1042                           ;doprnt.c: 1469: }
  1043                           ;doprnt.c: 1472: prec = c;
  1044  0014D2  C01D  F01A         	movff	printf@c,printf@prec
  1045                           
  1046                           ;doprnt.c: 1474: while(prec--) {
  1047  0014D6  D025               	goto	l1651
  1048  0014D8                     l1647:
  1049                           
  1050                           ;doprnt.c: 1478: {
  1051                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1052  0014D8  501A               	movf	printf@prec,w,c
  1053  0014DA  0D02               	mullw	2
  1054  0014DC  0E01               	movlw	low _dpowers
  1055  0014DE  24F3               	addwf	prodl,w,c
  1056  0014E0  6EF6               	movwf	tblptrl,c
  1057  0014E2  0E10               	movlw	high _dpowers
  1058  0014E4  20F4               	addwfc	prodh,w,c
  1059  0014E6  6EF7               	movwf	tblptrh,c
  1060  0014E8                     	if	0	;There are less than 3 active tblptr bytes
  1061  0014E8                     	endif
  1062  0014E8  0009               	tblrd		*+
  1063  0014EA  CFF5 F003          	movff	tablat,___lwdiv@divisor
  1064  0014EE  000A               	tblrd		*-
  1065  0014F0  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  1066  0014F4  C01B  F001         	movff	printf@val,___lwdiv@dividend
  1067  0014F8  C01C  F002         	movff	printf@val+1,___lwdiv@dividend+1
  1068  0014FC  EC15  F00E         	call	___lwdiv	;wreg free
  1069  001500  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  1070  001504  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  1071  001508  0E00               	movlw	0
  1072  00150A  6E0B               	movwf	___lwmod@divisor+1,c
  1073  00150C  0E0A               	movlw	10
  1074  00150E  6E0A               	movwf	___lwmod@divisor,c
  1075  001510  EC43  F00E         	call	___lwmod	;wreg free
  1076  001514  5008               	movf	?___lwmod,w,c
  1077  001516  0F30               	addlw	48
  1078  001518  6E1D               	movwf	printf@c,c
  1079                           
  1080                           ;doprnt.c: 1523: }
  1081                           ;doprnt.c: 1524: (putch(c) );
  1082  00151A  501D               	movf	printf@c,w,c
  1083  00151C  ECF8  F00E         	call	_putch
  1084  001520  D000               	goto	l1651
  1085  001522                     l1651:
  1086  001522  061A               	decf	printf@prec,f,c
  1087  001524  281A               	incf	printf@prec,w,c
  1088  001526  B4D8               	btfsc	status,2,c
  1089  001528  D002               	goto	l1653
  1090  00152A  D7D6               	goto	l1647
  1091  00152C  D000               	goto	l1653
  1092  00152E                     l1653:
  1093  00152E  C010  FFF6         	movff	printf@f,tblptrl
  1094  001532  C011  FFF7         	movff	printf@f+1,tblptrh
  1095  001536  4A10               	infsnz	printf@f,f,c
  1096  001538  2A11               	incf	printf@f+1,f,c
  1097  00153A                     	if	0	;tblptru may be non-zero
  1098  00153A                     	endif
  1099  00153A                     	if	0	;tblptru may be non-zero
  1100  00153A                     	endif
  1101  00153A  0008               	tblrd		*
  1102  00153C  CFF5 F01D          	movff	tablat,printf@c
  1103  001540  501D               	movf	printf@c,w,c
  1104  001542  B4D8               	btfsc	status,2,c
  1105  001544  D002               	goto	l140
  1106  001546  D768               	goto	l1607
  1107  001548  D000               	goto	l140
  1108  00154A                     l140:
  1109  00154A  0012               	return		;funcret
  1110  00154C                     __end_of_printf:
  1111                           	opt stack 0
  1112                           tblptru	equ	0xFF8
  1113                           tblptrh	equ	0xFF7
  1114                           tblptrl	equ	0xFF6
  1115                           tablat	equ	0xFF5
  1116                           prodh	equ	0xFF4
  1117                           prodl	equ	0xFF3
  1118                           postinc0	equ	0xFEE
  1119                           postdec1	equ	0xFE5
  1120                           fsr1l	equ	0xFE1
  1121                           indf2	equ	0xFDF
  1122                           postinc2	equ	0xFDE
  1123                           postdec2	equ	0xFDD
  1124                           fsr2h	equ	0xFDA
  1125                           fsr2l	equ	0xFD9
  1126                           status	equ	0xFD8
  1127                           
  1128 ;; *************** function _putch *****************
  1129 ;; Defined at:
  1130 ;;		line 35 in file "lab5.c"
  1131 ;; Parameters:    Size  Location     Type
  1132 ;;  c               1    wreg     unsigned char 
  1133 ;; Auto vars:     Size  Location     Type
  1134 ;;  c               1    0[COMRAM] unsigned char 
  1135 ;; Return value:  Size  Location     Type
  1136 ;;		None               void
  1137 ;; Registers used:
  1138 ;;		wreg
  1139 ;; Tracked objects:
  1140 ;;		On entry : 0/0
  1141 ;;		On exit  : 0/0
  1142 ;;		Unchanged: 0/0
  1143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1145 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1147 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1148 ;;Total ram usage:        1 bytes
  1149 ;; Hardware stack levels used:    1
  1150 ;; This function calls:
  1151 ;;		Nothing
  1152 ;; This function is called by:
  1153 ;;		_printf
  1154 ;; This function uses a non-reentrant model
  1155 ;;
  1156                           
  1157                           	psect	text2
  1158  001DF0                     __ptext2:
  1159                           	opt stack 0
  1160  001DF0                     _putch:
  1161                           	opt stack 29
  1162                           
  1163                           ;incstack = 0
  1164                           ;putch@c stored from wreg
  1165  001DF0  6E01               	movwf	putch@c,c
  1166                           
  1167                           ;lab5.c: 36: while (!TRMT);
  1168  001DF2  D000               	goto	l48
  1169  001DF4                     l48:
  1170  001DF4  A2AC               	btfss	4012,1,c	;volatile
  1171  001DF6  D7FE               	goto	l48
  1172                           
  1173                           ;lab5.c: 37: TXREG = c;
  1174  001DF8  C001  FFAD         	movff	putch@c,4013	;volatile
  1175  001DFC  0012               	return		;funcret
  1176  001DFE                     __end_of_putch:
  1177                           	opt stack 0
  1178                           tblptru	equ	0xFF8
  1179                           tblptrh	equ	0xFF7
  1180                           tblptrl	equ	0xFF6
  1181                           tablat	equ	0xFF5
  1182                           prodh	equ	0xFF4
  1183                           prodl	equ	0xFF3
  1184                           postinc0	equ	0xFEE
  1185                           postdec1	equ	0xFE5
  1186                           fsr1l	equ	0xFE1
  1187                           indf2	equ	0xFDF
  1188                           postinc2	equ	0xFDE
  1189                           postdec2	equ	0xFDD
  1190                           fsr2h	equ	0xFDA
  1191                           fsr2l	equ	0xFD9
  1192                           status	equ	0xFD8
  1193                           
  1194 ;; *************** function ___lwmod *****************
  1195 ;; Defined at:
  1196 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  1197 ;; Parameters:    Size  Location     Type
  1198 ;;  dividend        2    7[COMRAM] unsigned int 
  1199 ;;  divisor         2    9[COMRAM] unsigned int 
  1200 ;; Auto vars:     Size  Location     Type
  1201 ;;  counter         1   11[COMRAM] unsigned char 
  1202 ;; Return value:  Size  Location     Type
  1203 ;;                  2    7[COMRAM] unsigned int 
  1204 ;; Registers used:
  1205 ;;		wreg, status,2, status,0
  1206 ;; Tracked objects:
  1207 ;;		On entry : 0/0
  1208 ;;		On exit  : 0/0
  1209 ;;		Unchanged: 0/0
  1210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1211 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1212 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1214 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1215 ;;Total ram usage:        5 bytes
  1216 ;; Hardware stack levels used:    1
  1217 ;; This function calls:
  1218 ;;		Nothing
  1219 ;; This function is called by:
  1220 ;;		_printf
  1221 ;; This function uses a non-reentrant model
  1222 ;;
  1223                           
  1224                           	psect	text3
  1225  001C86                     __ptext3:
  1226                           	opt stack 0
  1227  001C86                     ___lwmod:
  1228                           	opt stack 29
  1229                           
  1230                           ;incstack = 0
  1231  001C86  500A               	movf	___lwmod@divisor,w,c
  1232  001C88  100B               	iorwf	___lwmod@divisor+1,w,c
  1233  001C8A  B4D8               	btfsc	status,2,c
  1234  001C8C  D01D               	goto	l704
  1235  001C8E  0E01               	movlw	1
  1236  001C90  6E0C               	movwf	___lwmod@counter,c
  1237  001C92  D005               	goto	l1531
  1238  001C94                     l1529:
  1239  001C94  90D8               	bcf	status,0,c
  1240  001C96  360A               	rlcf	___lwmod@divisor,f,c
  1241  001C98  360B               	rlcf	___lwmod@divisor+1,f,c
  1242  001C9A  2A0C               	incf	___lwmod@counter,f,c
  1243  001C9C  D000               	goto	l1531
  1244  001C9E                     l1531:
  1245  001C9E  BE0B               	btfsc	___lwmod@divisor+1,7,c
  1246  001CA0  D002               	goto	l1533
  1247  001CA2  D7F8               	goto	l1529
  1248  001CA4  D000               	goto	l1533
  1249  001CA6                     l1533:
  1250  001CA6  500A               	movf	___lwmod@divisor,w,c
  1251  001CA8  5C08               	subwf	___lwmod@dividend,w,c
  1252  001CAA  500B               	movf	___lwmod@divisor+1,w,c
  1253  001CAC  5809               	subwfb	___lwmod@dividend+1,w,c
  1254  001CAE  A0D8               	btfss	status,0,c
  1255  001CB0  D005               	goto	l1537
  1256  001CB2  500A               	movf	___lwmod@divisor,w,c
  1257  001CB4  5E08               	subwf	___lwmod@dividend,f,c
  1258  001CB6  500B               	movf	___lwmod@divisor+1,w,c
  1259  001CB8  5A09               	subwfb	___lwmod@dividend+1,f,c
  1260  001CBA  D000               	goto	l1537
  1261  001CBC                     l1537:
  1262  001CBC  90D8               	bcf	status,0,c
  1263  001CBE  320B               	rrcf	___lwmod@divisor+1,f,c
  1264  001CC0  320A               	rrcf	___lwmod@divisor,f,c
  1265  001CC2  2E0C               	decfsz	___lwmod@counter,f,c
  1266  001CC4  D7F0               	goto	l1533
  1267  001CC6  D000               	goto	l704
  1268  001CC8                     l704:
  1269  001CC8  C008  F008         	movff	___lwmod@dividend,?___lwmod
  1270  001CCC  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  1271  001CD0  0012               	return		;funcret
  1272  001CD2                     __end_of___lwmod:
  1273                           	opt stack 0
  1274                           tblptru	equ	0xFF8
  1275                           tblptrh	equ	0xFF7
  1276                           tblptrl	equ	0xFF6
  1277                           tablat	equ	0xFF5
  1278                           prodh	equ	0xFF4
  1279                           prodl	equ	0xFF3
  1280                           postinc0	equ	0xFEE
  1281                           postdec1	equ	0xFE5
  1282                           fsr1l	equ	0xFE1
  1283                           indf2	equ	0xFDF
  1284                           postinc2	equ	0xFDE
  1285                           postdec2	equ	0xFDD
  1286                           fsr2h	equ	0xFDA
  1287                           fsr2l	equ	0xFD9
  1288                           status	equ	0xFD8
  1289                           
  1290 ;; *************** function ___lwdiv *****************
  1291 ;; Defined at:
  1292 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  1293 ;; Parameters:    Size  Location     Type
  1294 ;;  dividend        2    0[COMRAM] unsigned int 
  1295 ;;  divisor         2    2[COMRAM] unsigned int 
  1296 ;; Auto vars:     Size  Location     Type
  1297 ;;  quotient        2    4[COMRAM] unsigned int 
  1298 ;;  counter         1    6[COMRAM] unsigned char 
  1299 ;; Return value:  Size  Location     Type
  1300 ;;                  2    0[COMRAM] unsigned int 
  1301 ;; Registers used:
  1302 ;;		wreg, status,2, status,0
  1303 ;; Tracked objects:
  1304 ;;		On entry : 0/0
  1305 ;;		On exit  : 0/0
  1306 ;;		Unchanged: 0/0
  1307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1308 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1309 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1311 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1312 ;;Total ram usage:        7 bytes
  1313 ;; Hardware stack levels used:    1
  1314 ;; This function calls:
  1315 ;;		Nothing
  1316 ;; This function is called by:
  1317 ;;		_printf
  1318 ;; This function uses a non-reentrant model
  1319 ;;
  1320                           
  1321                           	psect	text4
  1322  001C2A                     __ptext4:
  1323                           	opt stack 0
  1324  001C2A                     ___lwdiv:
  1325                           	opt stack 29
  1326                           
  1327                           ;incstack = 0
  1328  001C2A  0E00               	movlw	0
  1329  001C2C  6E06               	movwf	___lwdiv@quotient+1,c
  1330  001C2E  0E00               	movlw	0
  1331  001C30  6E05               	movwf	___lwdiv@quotient,c
  1332  001C32  5003               	movf	___lwdiv@divisor,w,c
  1333  001C34  1004               	iorwf	___lwdiv@divisor+1,w,c
  1334  001C36  B4D8               	btfsc	status,2,c
  1335  001C38  D021               	goto	l694
  1336  001C3A  0E01               	movlw	1
  1337  001C3C  6E07               	movwf	___lwdiv@counter,c
  1338  001C3E  D005               	goto	l1511
  1339  001C40                     l1509:
  1340  001C40  90D8               	bcf	status,0,c
  1341  001C42  3603               	rlcf	___lwdiv@divisor,f,c
  1342  001C44  3604               	rlcf	___lwdiv@divisor+1,f,c
  1343  001C46  2A07               	incf	___lwdiv@counter,f,c
  1344  001C48  D000               	goto	l1511
  1345  001C4A                     l1511:
  1346  001C4A  BE04               	btfsc	___lwdiv@divisor+1,7,c
  1347  001C4C  D002               	goto	l1513
  1348  001C4E  D7F8               	goto	l1509
  1349  001C50  D000               	goto	l1513
  1350  001C52                     l1513:
  1351  001C52  90D8               	bcf	status,0,c
  1352  001C54  3605               	rlcf	___lwdiv@quotient,f,c
  1353  001C56  3606               	rlcf	___lwdiv@quotient+1,f,c
  1354  001C58  5003               	movf	___lwdiv@divisor,w,c
  1355  001C5A  5C01               	subwf	___lwdiv@dividend,w,c
  1356  001C5C  5004               	movf	___lwdiv@divisor+1,w,c
  1357  001C5E  5802               	subwfb	___lwdiv@dividend+1,w,c
  1358  001C60  A0D8               	btfss	status,0,c
  1359  001C62  D006               	goto	l1521
  1360  001C64  5003               	movf	___lwdiv@divisor,w,c
  1361  001C66  5E01               	subwf	___lwdiv@dividend,f,c
  1362  001C68  5004               	movf	___lwdiv@divisor+1,w,c
  1363  001C6A  5A02               	subwfb	___lwdiv@dividend+1,f,c
  1364  001C6C  8005               	bsf	___lwdiv@quotient,0,c
  1365  001C6E  D000               	goto	l1521
  1366  001C70                     l1521:
  1367  001C70  90D8               	bcf	status,0,c
  1368  001C72  3204               	rrcf	___lwdiv@divisor+1,f,c
  1369  001C74  3203               	rrcf	___lwdiv@divisor,f,c
  1370  001C76  2E07               	decfsz	___lwdiv@counter,f,c
  1371  001C78  D7EC               	goto	l1513
  1372  001C7A  D000               	goto	l694
  1373  001C7C                     l694:
  1374  001C7C  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1375  001C80  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1376  001C84  0012               	return		;funcret
  1377  001C86                     __end_of___lwdiv:
  1378                           	opt stack 0
  1379                           tblptru	equ	0xFF8
  1380                           tblptrh	equ	0xFF7
  1381                           tblptrl	equ	0xFF6
  1382                           tablat	equ	0xFF5
  1383                           prodh	equ	0xFF4
  1384                           prodl	equ	0xFF3
  1385                           postinc0	equ	0xFEE
  1386                           postdec1	equ	0xFE5
  1387                           fsr1l	equ	0xFE1
  1388                           indf2	equ	0xFDF
  1389                           postinc2	equ	0xFDE
  1390                           postdec2	equ	0xFDD
  1391                           fsr2h	equ	0xFDA
  1392                           fsr2l	equ	0xFD9
  1393                           status	equ	0xFD8
  1394                           
  1395 ;; *************** function _get_full_ADC *****************
  1396 ;; Defined at:
  1397 ;;		line 56 in file "lab5.c"
  1398 ;; Parameters:    Size  Location     Type
  1399 ;;		None
  1400 ;; Auto vars:     Size  Location     Type
  1401 ;;  result          2    4[COMRAM] int 
  1402 ;; Return value:  Size  Location     Type
  1403 ;;                  2    0[COMRAM] unsigned int 
  1404 ;; Registers used:
  1405 ;;		wreg, status,2, status,0
  1406 ;; Tracked objects:
  1407 ;;		On entry : 0/0
  1408 ;;		On exit  : 0/0
  1409 ;;		Unchanged: 0/0
  1410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1411 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1412 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1413 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1414 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1415 ;;Total ram usage:        6 bytes
  1416 ;; Hardware stack levels used:    1
  1417 ;; This function calls:
  1418 ;;		Nothing
  1419 ;; This function is called by:
  1420 ;;		_main
  1421 ;; This function uses a non-reentrant model
  1422 ;;
  1423                           
  1424                           	psect	text5
  1425  001D38                     __ptext5:
  1426                           	opt stack 0
  1427  001D38                     _get_full_ADC:
  1428                           	opt stack 30
  1429                           
  1430                           ;lab5.c: 57: int result;
  1431                           ;lab5.c: 58: ADCON0bits.GO = 1;
  1432                           
  1433                           ;incstack = 0
  1434  001D38  82C2               	bsf	4034,1,c	;volatile
  1435                           
  1436                           ;lab5.c: 59: while (ADCON0bits.DONE == 1);
  1437  001D3A  D000               	goto	l60
  1438  001D3C                     l60:
  1439  001D3C  B2C2               	btfsc	4034,1,c	;volatile
  1440  001D3E  D7FE               	goto	l60
  1441                           
  1442                           ;lab5.c: 60: result = (ADRESH * 0x100) + ADRESL;
  1443  001D40  50C4               	movf	4036,w,c	;volatile
  1444  001D42  6E04               	movwf	(??_get_full_ADC+1)& (0+255),c
  1445  001D44  6A03               	clrf	??_get_full_ADC& (0+255),c
  1446  001D46  50C3               	movf	4035,w,c	;volatile
  1447  001D48  2403               	addwf	??_get_full_ADC,w,c
  1448  001D4A  6E05               	movwf	get_full_ADC@result,c
  1449  001D4C  0E00               	movlw	0
  1450  001D4E  2004               	addwfc	??_get_full_ADC+1,w,c
  1451  001D50  6E06               	movwf	get_full_ADC@result+1,c
  1452                           
  1453                           ;lab5.c: 61: return result;
  1454  001D52  C005  F001         	movff	get_full_ADC@result,?_get_full_ADC
  1455  001D56  C006  F002         	movff	get_full_ADC@result+1,?_get_full_ADC+1
  1456  001D5A  D000               	goto	l63
  1457  001D5C                     l63:
  1458  001D5C  0012               	return		;funcret
  1459  001D5E                     __end_of_get_full_ADC:
  1460                           	opt stack 0
  1461                           tblptru	equ	0xFF8
  1462                           tblptrh	equ	0xFF7
  1463                           tblptrl	equ	0xFF6
  1464                           tablat	equ	0xFF5
  1465                           prodh	equ	0xFF4
  1466                           prodl	equ	0xFF3
  1467                           postinc0	equ	0xFEE
  1468                           postdec1	equ	0xFE5
  1469                           fsr1l	equ	0xFE1
  1470                           indf2	equ	0xFDF
  1471                           postinc2	equ	0xFDE
  1472                           postdec2	equ	0xFDD
  1473                           fsr2h	equ	0xFDA
  1474                           fsr2l	equ	0xFD9
  1475                           status	equ	0xFD8
  1476                           
  1477 ;; *************** function ___fttol *****************
  1478 ;; Defined at:
  1479 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
  1480 ;; Parameters:    Size  Location     Type
  1481 ;;  f1              3    0[COMRAM] float 
  1482 ;; Auto vars:     Size  Location     Type
  1483 ;;  lval            4   10[COMRAM] unsigned long 
  1484 ;;  exp1            1   14[COMRAM] unsigned char 
  1485 ;;  sign1           1    9[COMRAM] unsigned char 
  1486 ;; Return value:  Size  Location     Type
  1487 ;;                  4    0[COMRAM] long 
  1488 ;; Registers used:
  1489 ;;		wreg, status,2, status,0
  1490 ;; Tracked objects:
  1491 ;;		On entry : 0/0
  1492 ;;		On exit  : 0/0
  1493 ;;		Unchanged: 0/0
  1494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1495 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1496 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1497 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1498 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1499 ;;Total ram usage:       15 bytes
  1500 ;; Hardware stack levels used:    1
  1501 ;; This function calls:
  1502 ;;		Nothing
  1503 ;; This function is called by:
  1504 ;;		_main
  1505 ;; This function uses a non-reentrant model
  1506 ;;
  1507                           
  1508                           	psect	text6
  1509  001644                     __ptext6:
  1510                           	opt stack 0
  1511  001644                     ___fttol:
  1512                           	opt stack 30
  1513                           
  1514                           ;incstack = 0
  1515  001644  C003  F005         	movff	___fttol@f1+2,??___fttol
  1516  001648  6A06               	clrf	(??___fttol+1)& (0+255),c
  1517  00164A  6A07               	clrf	(??___fttol+2)& (0+255),c
  1518  00164C  3402               	rlcf	___fttol@f1+1,w,c
  1519  00164E  3605               	rlcf	??___fttol& (0+255),f,c
  1520  001650  E301               	bnc	u2001
  1521  001652  8006               	bsf	(??___fttol+1)& (0+255),0,c
  1522  001654                     u2001:
  1523  001654  5005               	movf	??___fttol,w,c
  1524  001656  6E0F               	movwf	___fttol@exp1,c
  1525  001658  500F               	movf	___fttol@exp1,w,c
  1526  00165A  A4D8               	btfss	status,2,c
  1527  00165C  D002               	goto	l1921
  1528  00165E  D039               	goto	l1945
  1529  001660  D063               	goto	l592
  1530  001662                     l1921:
  1531  001662  0E17               	movlw	23
  1532  001664  6E05               	movwf	??___fttol& (0+255),c
  1533  001666  C001  F006         	movff	___fttol@f1,??___fttol+1
  1534  00166A  C002  F007         	movff	___fttol@f1+1,??___fttol+2
  1535  00166E  C003  F008         	movff	___fttol@f1+2,??___fttol+3
  1536  001672  2805               	incf	??___fttol,w,c
  1537  001674  6E09               	movwf	(??___fttol+4)& (0+255),c
  1538  001676  D004               	goto	u2020
  1539  001678                     u2025:
  1540  001678  90D8               	bcf	status,0,c
  1541  00167A  3208               	rrcf	??___fttol+3,f,c
  1542  00167C  3207               	rrcf	??___fttol+2,f,c
  1543  00167E  3206               	rrcf	??___fttol+1,f,c
  1544  001680                     u2020:
  1545  001680  2E09               	decfsz	(??___fttol+4)& (0+255),f,c
  1546  001682  D7FA               	goto	u2025
  1547  001684  5006               	movf	??___fttol+1,w,c
  1548  001686  6E0A               	movwf	___fttol@sign1,c
  1549  001688  8E02               	bsf	___fttol@f1+1,7,c
  1550  00168A  0EFF               	movlw	255
  1551  00168C  1601               	andwf	___fttol@f1,f,c
  1552  00168E  0EFF               	movlw	255
  1553  001690  1602               	andwf	___fttol@f1+1,f,c
  1554  001692  0E00               	movlw	0
  1555  001694  1603               	andwf	___fttol@f1+2,f,c
  1556  001696  5001               	movf	___fttol@f1,w,c
  1557  001698  6E0B               	movwf	___fttol@lval,c
  1558  00169A  5002               	movf	___fttol@f1+1,w,c
  1559  00169C  6E0C               	movwf	___fttol@lval+1,c
  1560  00169E  5003               	movf	___fttol@f1+2,w,c
  1561  0016A0  6E0D               	movwf	___fttol@lval+2,c
  1562  0016A2  6A0E               	clrf	___fttol@lval+3,c
  1563  0016A4  0E8E               	movlw	142
  1564  0016A6  5E0F               	subwf	___fttol@exp1,f,c
  1565  0016A8  AE0F               	btfss	___fttol@exp1,7,c
  1566  0016AA  D010               	goto	l1943
  1567  0016AC  500F               	movf	___fttol@exp1,w,c
  1568  0016AE  0A80               	xorlw	128
  1569  0016B0  0F8F               	addlw	143
  1570  0016B2  B0D8               	btfsc	status,0,c
  1571  0016B4  D003               	goto	l1939
  1572  0016B6  D00D               	goto	l1945
  1573  0016B8  D037               	goto	l592
  1574  0016BA  D000               	goto	l1939
  1575  0016BC                     l1939:
  1576  0016BC  90D8               	bcf	status,0,c
  1577  0016BE  320E               	rrcf	___fttol@lval+3,f,c
  1578  0016C0  320D               	rrcf	___fttol@lval+2,f,c
  1579  0016C2  320C               	rrcf	___fttol@lval+1,f,c
  1580  0016C4  320B               	rrcf	___fttol@lval,f,c
  1581  0016C6  3E0F               	incfsz	___fttol@exp1,f,c
  1582  0016C8  D7F9               	goto	l1939
  1583  0016CA  D019               	goto	l1953
  1584  0016CC                     l1943:
  1585  0016CC  0E17               	movlw	23
  1586  0016CE  640F               	cpfsgt	___fttol@exp1,c
  1587  0016D0  D011               	goto	l1951
  1588  0016D2                     l1945:
  1589  0016D2  0E00               	movlw	0
  1590  0016D4  6E01               	movwf	?___fttol,c
  1591  0016D6  0E00               	movlw	0
  1592  0016D8  6E02               	movwf	?___fttol+1,c
  1593  0016DA  0E00               	movlw	0
  1594  0016DC  6E03               	movwf	?___fttol+2,c
  1595  0016DE  0E00               	movlw	0
  1596  0016E0  6E04               	movwf	?___fttol+3,c
  1597  0016E2  D022               	goto	l592
  1598  0016E4  D007               	goto	l1951
  1599  0016E6                     l1949:
  1600  0016E6  90D8               	bcf	status,0,c
  1601  0016E8  360B               	rlcf	___fttol@lval,f,c
  1602  0016EA  360C               	rlcf	___fttol@lval+1,f,c
  1603  0016EC  360D               	rlcf	___fttol@lval+2,f,c
  1604  0016EE  360E               	rlcf	___fttol@lval+3,f,c
  1605  0016F0  060F               	decf	___fttol@exp1,f,c
  1606  0016F2  D000               	goto	l1951
  1607  0016F4                     l1951:
  1608  0016F4  500F               	movf	___fttol@exp1,w,c
  1609  0016F6  B4D8               	btfsc	status,2,c
  1610  0016F8  D002               	goto	l1953
  1611  0016FA  D7F5               	goto	l1949
  1612  0016FC  D000               	goto	l1953
  1613  0016FE                     l1953:
  1614  0016FE  500A               	movf	___fttol@sign1,w,c
  1615  001700  B4D8               	btfsc	status,2,c
  1616  001702  D009               	goto	l1957
  1617  001704  1E0E               	comf	___fttol@lval+3,f,c
  1618  001706  1E0D               	comf	___fttol@lval+2,f,c
  1619  001708  1E0C               	comf	___fttol@lval+1,f,c
  1620  00170A  6C0B               	negf	___fttol@lval,c
  1621  00170C  0E00               	movlw	0
  1622  00170E  220C               	addwfc	___fttol@lval+1,f,c
  1623  001710  220D               	addwfc	___fttol@lval+2,f,c
  1624  001712  220E               	addwfc	___fttol@lval+3,f,c
  1625  001714  D000               	goto	l1957
  1626  001716                     l1957:
  1627  001716  C00B  F001         	movff	___fttol@lval,?___fttol
  1628  00171A  C00C  F002         	movff	___fttol@lval+1,?___fttol+1
  1629  00171E  C00D  F003         	movff	___fttol@lval+2,?___fttol+2
  1630  001722  C00E  F004         	movff	___fttol@lval+3,?___fttol+3
  1631  001726  D000               	goto	l592
  1632  001728                     l592:
  1633  001728  0012               	return		;funcret
  1634  00172A                     __end_of___fttol:
  1635                           	opt stack 0
  1636                           tblptru	equ	0xFF8
  1637                           tblptrh	equ	0xFF7
  1638                           tblptrl	equ	0xFF6
  1639                           tablat	equ	0xFF5
  1640                           prodh	equ	0xFF4
  1641                           prodl	equ	0xFF3
  1642                           postinc0	equ	0xFEE
  1643                           postdec1	equ	0xFE5
  1644                           fsr1l	equ	0xFE1
  1645                           indf2	equ	0xFDF
  1646                           postinc2	equ	0xFDE
  1647                           postdec2	equ	0xFDD
  1648                           fsr2h	equ	0xFDA
  1649                           fsr2l	equ	0xFD9
  1650                           status	equ	0xFD8
  1651                           
  1652 ;; *************** function ___ftneg *****************
  1653 ;; Defined at:
  1654 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftneg.c"
  1655 ;; Parameters:    Size  Location     Type
  1656 ;;  f1              3    0[COMRAM] float 
  1657 ;; Auto vars:     Size  Location     Type
  1658 ;;		None
  1659 ;; Return value:  Size  Location     Type
  1660 ;;                  3    0[COMRAM] float 
  1661 ;; Registers used:
  1662 ;;		wreg, status,2, status,0
  1663 ;; Tracked objects:
  1664 ;;		On entry : 0/0
  1665 ;;		On exit  : 0/0
  1666 ;;		Unchanged: 0/0
  1667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1668 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1671 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1672 ;;Total ram usage:        3 bytes
  1673 ;; Hardware stack levels used:    1
  1674 ;; This function calls:
  1675 ;;		Nothing
  1676 ;; This function is called by:
  1677 ;;		_main
  1678 ;; This function uses a non-reentrant model
  1679 ;;
  1680                           
  1681                           	psect	text7
  1682  001D5E                     __ptext7:
  1683                           	opt stack 0
  1684  001D5E                     ___ftneg:
  1685                           	opt stack 30
  1686                           
  1687                           ;incstack = 0
  1688  001D5E  5001               	movf	___ftneg@f1,w,c
  1689  001D60  1002               	iorwf	___ftneg@f1+1,w,c
  1690  001D62  1003               	iorwf	___ftneg@f1+2,w,c
  1691  001D64  B4D8               	btfsc	status,2,c
  1692  001D66  D006               	goto	l581
  1693  001D68  0E00               	movlw	0
  1694  001D6A  1A01               	xorwf	___ftneg@f1,f,c
  1695  001D6C  0E00               	movlw	0
  1696  001D6E  1A02               	xorwf	___ftneg@f1+1,f,c
  1697  001D70  0E80               	movlw	128
  1698  001D72  1A03               	xorwf	___ftneg@f1+2,f,c
  1699  001D74                     l581:
  1700  001D74  C001  F001         	movff	___ftneg@f1,?___ftneg
  1701  001D78  C002  F002         	movff	___ftneg@f1+1,?___ftneg+1
  1702  001D7C  C003  F003         	movff	___ftneg@f1+2,?___ftneg+2
  1703  001D80  0012               	return		;funcret
  1704  001D82                     __end_of___ftneg:
  1705                           	opt stack 0
  1706                           tblptru	equ	0xFF8
  1707                           tblptrh	equ	0xFF7
  1708                           tblptrl	equ	0xFF6
  1709                           tablat	equ	0xFF5
  1710                           prodh	equ	0xFF4
  1711                           prodl	equ	0xFF3
  1712                           postinc0	equ	0xFEE
  1713                           postdec1	equ	0xFE5
  1714                           fsr1l	equ	0xFE1
  1715                           indf2	equ	0xFDF
  1716                           postinc2	equ	0xFDE
  1717                           postdec2	equ	0xFDD
  1718                           fsr2h	equ	0xFDA
  1719                           fsr2l	equ	0xFD9
  1720                           status	equ	0xFD8
  1721                           
  1722 ;; *************** function ___ftmul *****************
  1723 ;; Defined at:
  1724 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  1725 ;; Parameters:    Size  Location     Type
  1726 ;;  f1              3   12[COMRAM] float 
  1727 ;;  f2              3   15[COMRAM] float 
  1728 ;; Auto vars:     Size  Location     Type
  1729 ;;  f3_as_produc    3   22[COMRAM] unsigned um
  1730 ;;  sign            1   26[COMRAM] unsigned char 
  1731 ;;  cntr            1   25[COMRAM] unsigned char 
  1732 ;;  exp             1   21[COMRAM] unsigned char 
  1733 ;; Return value:  Size  Location     Type
  1734 ;;                  3   12[COMRAM] float 
  1735 ;; Registers used:
  1736 ;;		wreg, status,2, status,0, cstack
  1737 ;; Tracked objects:
  1738 ;;		On entry : 0/0
  1739 ;;		On exit  : 0/0
  1740 ;;		Unchanged: 0/0
  1741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1742 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1743 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1744 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1745 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1746 ;;Total ram usage:       15 bytes
  1747 ;; Hardware stack levels used:    1
  1748 ;; Hardware stack levels required when called:    1
  1749 ;; This function calls:
  1750 ;;		___ftpack
  1751 ;; This function is called by:
  1752 ;;		_main
  1753 ;; This function uses a non-reentrant model
  1754 ;;
  1755                           
  1756                           	psect	text8
  1757  00154C                     __ptext8:
  1758                           	opt stack 0
  1759  00154C                     ___ftmul:
  1760                           	opt stack 29
  1761                           
  1762                           ;incstack = 0
  1763  00154C  C00F  F013         	movff	___ftmul@f1+2,??___ftmul
  1764  001550  6A14               	clrf	(??___ftmul+1)& (0+255),c
  1765  001552  6A15               	clrf	(??___ftmul+2)& (0+255),c
  1766  001554  340E               	rlcf	___ftmul@f1+1,w,c
  1767  001556  3613               	rlcf	??___ftmul& (0+255),f,c
  1768  001558  E301               	bnc	u1801
  1769  00155A  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  1770  00155C                     u1801:
  1771  00155C  5013               	movf	??___ftmul,w,c
  1772  00155E  6E16               	movwf	___ftmul@exp,c
  1773  001560  5016               	movf	___ftmul@exp,w,c
  1774  001562  A4D8               	btfss	status,2,c
  1775  001564  D002               	goto	l1777
  1776  001566  D00E               	goto	l1779
  1777  001568  D06C               	goto	l571
  1778  00156A                     l1777:
  1779  00156A  C012  F013         	movff	___ftmul@f2+2,??___ftmul
  1780  00156E  6A14               	clrf	(??___ftmul+1)& (0+255),c
  1781  001570  6A15               	clrf	(??___ftmul+2)& (0+255),c
  1782  001572  3411               	rlcf	___ftmul@f2+1,w,c
  1783  001574  3613               	rlcf	??___ftmul& (0+255),f,c
  1784  001576  E301               	bnc	u1821
  1785  001578  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  1786  00157A                     u1821:
  1787  00157A  5013               	movf	??___ftmul,w,c
  1788  00157C  6E1B               	movwf	___ftmul@sign,c
  1789  00157E  501B               	movf	___ftmul@sign,w,c
  1790  001580  A4D8               	btfss	status,2,c
  1791  001582  D007               	goto	l1783
  1792  001584                     l1779:
  1793  001584  0E00               	movlw	0
  1794  001586  6E0D               	movwf	?___ftmul,c
  1795  001588  0E00               	movlw	0
  1796  00158A  6E0E               	movwf	?___ftmul+1,c
  1797  00158C  0E00               	movlw	0
  1798  00158E  6E0F               	movwf	?___ftmul+2,c
  1799  001590  D058               	goto	l571
  1800  001592                     l1783:
  1801  001592  501B               	movf	___ftmul@sign,w,c
  1802  001594  0F7B               	addlw	123
  1803  001596  2616               	addwf	___ftmul@exp,f,c
  1804  001598  C00F  F01B         	movff	___ftmul@f1+2,___ftmul@sign
  1805  00159C  5012               	movf	___ftmul@f2+2,w,c
  1806  00159E  1A1B               	xorwf	___ftmul@sign,f,c
  1807  0015A0  0E80               	movlw	128
  1808  0015A2  161B               	andwf	___ftmul@sign,f,c
  1809  0015A4  8E0E               	bsf	___ftmul@f1+1,7,c
  1810  0015A6  8E11               	bsf	___ftmul@f2+1,7,c
  1811  0015A8  0EFF               	movlw	255
  1812  0015AA  1610               	andwf	___ftmul@f2,f,c
  1813  0015AC  0EFF               	movlw	255
  1814  0015AE  1611               	andwf	___ftmul@f2+1,f,c
  1815  0015B0  0E00               	movlw	0
  1816  0015B2  1612               	andwf	___ftmul@f2+2,f,c
  1817  0015B4  0E00               	movlw	0
  1818  0015B6  6E17               	movwf	___ftmul@f3_as_product,c
  1819  0015B8  0E00               	movlw	0
  1820  0015BA  6E18               	movwf	___ftmul@f3_as_product+1,c
  1821  0015BC  0E00               	movlw	0
  1822  0015BE  6E19               	movwf	___ftmul@f3_as_product+2,c
  1823  0015C0  0E07               	movlw	7
  1824  0015C2  6E1A               	movwf	___ftmul@cntr,c
  1825  0015C4  D000               	goto	l1797
  1826  0015C6                     l1797:
  1827  0015C6  A00D               	btfss	___ftmul@f1,0,c
  1828  0015C8  D007               	goto	l1801
  1829  0015CA  5010               	movf	___ftmul@f2,w,c
  1830  0015CC  2617               	addwf	___ftmul@f3_as_product,f,c
  1831  0015CE  5011               	movf	___ftmul@f2+1,w,c
  1832  0015D0  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  1833  0015D2  5012               	movf	___ftmul@f2+2,w,c
  1834  0015D4  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  1835  0015D6  D000               	goto	l1801
  1836  0015D8                     l1801:
  1837  0015D8  90D8               	bcf	status,0,c
  1838  0015DA  320F               	rrcf	___ftmul@f1+2,f,c
  1839  0015DC  320E               	rrcf	___ftmul@f1+1,f,c
  1840  0015DE  320D               	rrcf	___ftmul@f1,f,c
  1841  0015E0  90D8               	bcf	status,0,c
  1842  0015E2  3610               	rlcf	___ftmul@f2,f,c
  1843  0015E4  3611               	rlcf	___ftmul@f2+1,f,c
  1844  0015E6  3612               	rlcf	___ftmul@f2+2,f,c
  1845  0015E8  2E1A               	decfsz	___ftmul@cntr,f,c
  1846  0015EA  D7ED               	goto	l1797
  1847  0015EC  D000               	goto	l1805
  1848  0015EE                     l1805:
  1849  0015EE  0E09               	movlw	9
  1850  0015F0  6E1A               	movwf	___ftmul@cntr,c
  1851  0015F2  D000               	goto	l1807
  1852  0015F4                     l1807:
  1853  0015F4  A00D               	btfss	___ftmul@f1,0,c
  1854  0015F6  D007               	goto	l1811
  1855  0015F8  5010               	movf	___ftmul@f2,w,c
  1856  0015FA  2617               	addwf	___ftmul@f3_as_product,f,c
  1857  0015FC  5011               	movf	___ftmul@f2+1,w,c
  1858  0015FE  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  1859  001600  5012               	movf	___ftmul@f2+2,w,c
  1860  001602  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  1861  001604  D000               	goto	l1811
  1862  001606                     l1811:
  1863  001606  90D8               	bcf	status,0,c
  1864  001608  320F               	rrcf	___ftmul@f1+2,f,c
  1865  00160A  320E               	rrcf	___ftmul@f1+1,f,c
  1866  00160C  320D               	rrcf	___ftmul@f1,f,c
  1867  00160E  90D8               	bcf	status,0,c
  1868  001610  3219               	rrcf	___ftmul@f3_as_product+2,f,c
  1869  001612  3218               	rrcf	___ftmul@f3_as_product+1,f,c
  1870  001614  3217               	rrcf	___ftmul@f3_as_product,f,c
  1871  001616  2E1A               	decfsz	___ftmul@cntr,f,c
  1872  001618  D7ED               	goto	l1807
  1873  00161A  D000               	goto	l1815
  1874  00161C                     l1815:
  1875  00161C  C017  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  1876  001620  C018  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  1877  001624  C019  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  1878  001628  C016  F004         	movff	___ftmul@exp,___ftpack@exp
  1879  00162C  C01B  F005         	movff	___ftmul@sign,___ftpack@sign
  1880  001630  EC06  F00C         	call	___ftpack	;wreg free
  1881  001634  C001  F00D         	movff	?___ftpack,?___ftmul
  1882  001638  C002  F00E         	movff	?___ftpack+1,?___ftmul+1
  1883  00163C  C003  F00F         	movff	?___ftpack+2,?___ftmul+2
  1884  001640  D000               	goto	l571
  1885  001642                     l571:
  1886  001642  0012               	return		;funcret
  1887  001644                     __end_of___ftmul:
  1888                           	opt stack 0
  1889                           tblptru	equ	0xFF8
  1890                           tblptrh	equ	0xFF7
  1891                           tblptrl	equ	0xFF6
  1892                           tablat	equ	0xFF5
  1893                           prodh	equ	0xFF4
  1894                           prodl	equ	0xFF3
  1895                           postinc0	equ	0xFEE
  1896                           postdec1	equ	0xFE5
  1897                           fsr1l	equ	0xFE1
  1898                           indf2	equ	0xFDF
  1899                           postinc2	equ	0xFDE
  1900                           postdec2	equ	0xFDD
  1901                           fsr2h	equ	0xFDA
  1902                           fsr2l	equ	0xFD9
  1903                           status	equ	0xFD8
  1904                           
  1905 ;; *************** function ___ftdiv *****************
  1906 ;; Defined at:
  1907 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  1908 ;; Parameters:    Size  Location     Type
  1909 ;;  f1              3   39[COMRAM] float 
  1910 ;;  f2              3   42[COMRAM] float 
  1911 ;; Auto vars:     Size  Location     Type
  1912 ;;  f3              3   49[COMRAM] float 
  1913 ;;  sign            1   53[COMRAM] unsigned char 
  1914 ;;  exp             1   52[COMRAM] unsigned char 
  1915 ;;  cntr            1   48[COMRAM] unsigned char 
  1916 ;; Return value:  Size  Location     Type
  1917 ;;                  3   39[COMRAM] float 
  1918 ;; Registers used:
  1919 ;;		wreg, status,2, status,0, cstack
  1920 ;; Tracked objects:
  1921 ;;		On entry : 0/0
  1922 ;;		On exit  : 0/0
  1923 ;;		Unchanged: 0/0
  1924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1925 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1926 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1927 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1928 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1929 ;;Total ram usage:       15 bytes
  1930 ;; Hardware stack levels used:    1
  1931 ;; Hardware stack levels required when called:    1
  1932 ;; This function calls:
  1933 ;;		___ftpack
  1934 ;; This function is called by:
  1935 ;;		_main
  1936 ;; This function uses a non-reentrant model
  1937 ;;
  1938                           
  1939                           	psect	text9
  1940  00172A                     __ptext9:
  1941                           	opt stack 0
  1942  00172A                     ___ftdiv:
  1943                           	opt stack 29
  1944                           
  1945                           ;incstack = 0
  1946  00172A  C02A  F02E         	movff	___ftdiv@f1+2,??___ftdiv
  1947  00172E  6A2F               	clrf	(??___ftdiv+1)& (0+255),c
  1948  001730  6A30               	clrf	(??___ftdiv+2)& (0+255),c
  1949  001732  3429               	rlcf	___ftdiv@f1+1,w,c
  1950  001734  362E               	rlcf	??___ftdiv& (0+255),f,c
  1951  001736  E301               	bnc	u1751
  1952  001738  802F               	bsf	(??___ftdiv+1)& (0+255),0,c
  1953  00173A                     u1751:
  1954  00173A  502E               	movf	??___ftdiv,w,c
  1955  00173C  6E35               	movwf	___ftdiv@exp,c
  1956  00173E  5035               	movf	___ftdiv@exp,w,c
  1957  001740  A4D8               	btfss	status,2,c
  1958  001742  D002               	goto	l1731
  1959  001744  D00E               	goto	l1733
  1960  001746  D061               	goto	l556
  1961  001748                     l1731:
  1962  001748  C02D  F02E         	movff	___ftdiv@f2+2,??___ftdiv
  1963  00174C  6A2F               	clrf	(??___ftdiv+1)& (0+255),c
  1964  00174E  6A30               	clrf	(??___ftdiv+2)& (0+255),c
  1965  001750  342C               	rlcf	___ftdiv@f2+1,w,c
  1966  001752  362E               	rlcf	??___ftdiv& (0+255),f,c
  1967  001754  E301               	bnc	u1771
  1968  001756  802F               	bsf	(??___ftdiv+1)& (0+255),0,c
  1969  001758                     u1771:
  1970  001758  502E               	movf	??___ftdiv,w,c
  1971  00175A  6E36               	movwf	___ftdiv@sign,c
  1972  00175C  5036               	movf	___ftdiv@sign,w,c
  1973  00175E  A4D8               	btfss	status,2,c
  1974  001760  D007               	goto	l1737
  1975  001762                     l1733:
  1976  001762  0E00               	movlw	0
  1977  001764  6E28               	movwf	?___ftdiv,c
  1978  001766  0E00               	movlw	0
  1979  001768  6E29               	movwf	?___ftdiv+1,c
  1980  00176A  0E00               	movlw	0
  1981  00176C  6E2A               	movwf	?___ftdiv+2,c
  1982  00176E  D04D               	goto	l556
  1983  001770                     l1737:
  1984  001770  0E00               	movlw	0
  1985  001772  6E32               	movwf	___ftdiv@f3,c
  1986  001774  0E00               	movlw	0
  1987  001776  6E33               	movwf	___ftdiv@f3+1,c
  1988  001778  0E00               	movlw	0
  1989  00177A  6E34               	movwf	___ftdiv@f3+2,c
  1990  00177C  5036               	movf	___ftdiv@sign,w,c
  1991  00177E  0F89               	addlw	137
  1992  001780  5E35               	subwf	___ftdiv@exp,f,c
  1993  001782  C02A  F036         	movff	___ftdiv@f1+2,___ftdiv@sign
  1994  001786  502D               	movf	___ftdiv@f2+2,w,c
  1995  001788  1A36               	xorwf	___ftdiv@sign,f,c
  1996  00178A  0E80               	movlw	128
  1997  00178C  1636               	andwf	___ftdiv@sign,f,c
  1998  00178E  8E29               	bsf	___ftdiv@f1+1,7,c
  1999  001790  0EFF               	movlw	255
  2000  001792  1628               	andwf	___ftdiv@f1,f,c
  2001  001794  0EFF               	movlw	255
  2002  001796  1629               	andwf	___ftdiv@f1+1,f,c
  2003  001798  0E00               	movlw	0
  2004  00179A  162A               	andwf	___ftdiv@f1+2,f,c
  2005  00179C  8E2C               	bsf	___ftdiv@f2+1,7,c
  2006  00179E  0EFF               	movlw	255
  2007  0017A0  162B               	andwf	___ftdiv@f2,f,c
  2008  0017A2  0EFF               	movlw	255
  2009  0017A4  162C               	andwf	___ftdiv@f2+1,f,c
  2010  0017A6  0E00               	movlw	0
  2011  0017A8  162D               	andwf	___ftdiv@f2+2,f,c
  2012  0017AA  0E18               	movlw	24
  2013  0017AC  6E31               	movwf	___ftdiv@cntr,c
  2014  0017AE  D000               	goto	l1757
  2015  0017B0                     l1757:
  2016  0017B0  90D8               	bcf	status,0,c
  2017  0017B2  3632               	rlcf	___ftdiv@f3,f,c
  2018  0017B4  3633               	rlcf	___ftdiv@f3+1,f,c
  2019  0017B6  3634               	rlcf	___ftdiv@f3+2,f,c
  2020  0017B8  502B               	movf	___ftdiv@f2,w,c
  2021  0017BA  5C28               	subwf	___ftdiv@f1,w,c
  2022  0017BC  502C               	movf	___ftdiv@f2+1,w,c
  2023  0017BE  5829               	subwfb	___ftdiv@f1+1,w,c
  2024  0017C0  502D               	movf	___ftdiv@f2+2,w,c
  2025  0017C2  582A               	subwfb	___ftdiv@f1+2,w,c
  2026  0017C4  A0D8               	btfss	status,0,c
  2027  0017C6  D007               	goto	l559
  2028  0017C8  502B               	movf	___ftdiv@f2,w,c
  2029  0017CA  5E28               	subwf	___ftdiv@f1,f,c
  2030  0017CC  502C               	movf	___ftdiv@f2+1,w,c
  2031  0017CE  5A29               	subwfb	___ftdiv@f1+1,f,c
  2032  0017D0  502D               	movf	___ftdiv@f2+2,w,c
  2033  0017D2  5A2A               	subwfb	___ftdiv@f1+2,f,c
  2034  0017D4  8032               	bsf	___ftdiv@f3,0,c
  2035  0017D6                     l559:
  2036  0017D6  90D8               	bcf	status,0,c
  2037  0017D8  3628               	rlcf	___ftdiv@f1,f,c
  2038  0017DA  3629               	rlcf	___ftdiv@f1+1,f,c
  2039  0017DC  362A               	rlcf	___ftdiv@f1+2,f,c
  2040  0017DE  2E31               	decfsz	___ftdiv@cntr,f,c
  2041  0017E0  D7E7               	goto	l1757
  2042  0017E2  D000               	goto	l1767
  2043  0017E4                     l1767:
  2044  0017E4  C032  F001         	movff	___ftdiv@f3,___ftpack@arg
  2045  0017E8  C033  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2046  0017EC  C034  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2047  0017F0  C035  F004         	movff	___ftdiv@exp,___ftpack@exp
  2048  0017F4  C036  F005         	movff	___ftdiv@sign,___ftpack@sign
  2049  0017F8  EC06  F00C         	call	___ftpack	;wreg free
  2050  0017FC  C001  F028         	movff	?___ftpack,?___ftdiv
  2051  001800  C002  F029         	movff	?___ftpack+1,?___ftdiv+1
  2052  001804  C003  F02A         	movff	?___ftpack+2,?___ftdiv+2
  2053  001808  D000               	goto	l556
  2054  00180A                     l556:
  2055  00180A  0012               	return		;funcret
  2056  00180C                     __end_of___ftdiv:
  2057                           	opt stack 0
  2058                           tblptru	equ	0xFF8
  2059                           tblptrh	equ	0xFF7
  2060                           tblptrl	equ	0xFF6
  2061                           tablat	equ	0xFF5
  2062                           prodh	equ	0xFF4
  2063                           prodl	equ	0xFF3
  2064                           postinc0	equ	0xFEE
  2065                           postdec1	equ	0xFE5
  2066                           fsr1l	equ	0xFE1
  2067                           indf2	equ	0xFDF
  2068                           postinc2	equ	0xFDE
  2069                           postdec2	equ	0xFDD
  2070                           fsr2h	equ	0xFDA
  2071                           fsr2l	equ	0xFD9
  2072                           status	equ	0xFD8
  2073                           
  2074 ;; *************** function ___ftadd *****************
  2075 ;; Defined at:
  2076 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftadd.c"
  2077 ;; Parameters:    Size  Location     Type
  2078 ;;  f1              3   27[COMRAM] float 
  2079 ;;  f2              3   30[COMRAM] float 
  2080 ;; Auto vars:     Size  Location     Type
  2081 ;;  exp1            1   38[COMRAM] unsigned char 
  2082 ;;  exp2            1   37[COMRAM] unsigned char 
  2083 ;;  sign            1   36[COMRAM] unsigned char 
  2084 ;; Return value:  Size  Location     Type
  2085 ;;                  3   27[COMRAM] float 
  2086 ;; Registers used:
  2087 ;;		wreg, status,2, status,0, cstack
  2088 ;; Tracked objects:
  2089 ;;		On entry : 0/0
  2090 ;;		On exit  : 0/0
  2091 ;;		Unchanged: 0/0
  2092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2093 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2094 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2095 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2096 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2097 ;;Total ram usage:       12 bytes
  2098 ;; Hardware stack levels used:    1
  2099 ;; Hardware stack levels required when called:    1
  2100 ;; This function calls:
  2101 ;;		___ftpack
  2102 ;; This function is called by:
  2103 ;;		_main
  2104 ;; This function uses a non-reentrant model
  2105 ;;
  2106                           
  2107                           	psect	text10
  2108  00124A                     __ptext10:
  2109                           	opt stack 0
  2110  00124A                     ___ftadd:
  2111                           	opt stack 29
  2112                           
  2113                           ;incstack = 0
  2114  00124A  C01E  F022         	movff	___ftadd@f1+2,??___ftadd
  2115  00124E  6A23               	clrf	(??___ftadd+1)& (0+255),c
  2116  001250  6A24               	clrf	(??___ftadd+2)& (0+255),c
  2117  001252  341D               	rlcf	___ftadd@f1+1,w,c
  2118  001254  3622               	rlcf	??___ftadd& (0+255),f,c
  2119  001256  E301               	bnc	u1541
  2120  001258  8023               	bsf	(??___ftadd+1)& (0+255),0,c
  2121  00125A                     u1541:
  2122  00125A  5022               	movf	??___ftadd,w,c
  2123  00125C  6E27               	movwf	___ftadd@exp1,c
  2124  00125E  C021  F022         	movff	___ftadd@f2+2,??___ftadd
  2125  001262  6A23               	clrf	(??___ftadd+1)& (0+255),c
  2126  001264  6A24               	clrf	(??___ftadd+2)& (0+255),c
  2127  001266  3420               	rlcf	___ftadd@f2+1,w,c
  2128  001268  3622               	rlcf	??___ftadd& (0+255),f,c
  2129  00126A  E301               	bnc	u1551
  2130  00126C  8023               	bsf	(??___ftadd+1)& (0+255),0,c
  2131  00126E                     u1551:
  2132  00126E  5022               	movf	??___ftadd,w,c
  2133  001270  6E26               	movwf	___ftadd@exp2,c
  2134  001272  5027               	movf	___ftadd@exp1,w,c
  2135  001274  B4D8               	btfsc	status,2,c
  2136  001276  D00B               	goto	l524
  2137  001278  5026               	movf	___ftadd@exp2,w,c
  2138  00127A  5C27               	subwf	___ftadd@exp1,w,c
  2139  00127C  B0D8               	btfsc	status,0,c
  2140  00127E  D00E               	goto	l1663
  2141  001280  5027               	movf	___ftadd@exp1,w,c
  2142  001282  0800               	sublw	0
  2143  001284  2426               	addwf	___ftadd@exp2,w,c
  2144  001286  6E22               	movwf	??___ftadd& (0+255),c
  2145  001288  0E18               	movlw	24
  2146  00128A  6422               	cpfsgt	??___ftadd,c
  2147  00128C  D007               	goto	l1663
  2148  00128E                     l524:
  2149  00128E  C01F  F01C         	movff	___ftadd@f2,?___ftadd
  2150  001292  C020  F01D         	movff	___ftadd@f2+1,?___ftadd+1
  2151  001296  C021  F01E         	movff	___ftadd@f2+2,?___ftadd+2
  2152  00129A  D0B8               	goto	l525
  2153  00129C                     l1663:
  2154  00129C  5026               	movf	___ftadd@exp2,w,c
  2155  00129E  B4D8               	btfsc	status,2,c
  2156  0012A0  D00B               	goto	l528
  2157  0012A2  5027               	movf	___ftadd@exp1,w,c
  2158  0012A4  5C26               	subwf	___ftadd@exp2,w,c
  2159  0012A6  B0D8               	btfsc	status,0,c
  2160  0012A8  D00E               	goto	l1669
  2161  0012AA  5026               	movf	___ftadd@exp2,w,c
  2162  0012AC  0800               	sublw	0
  2163  0012AE  2427               	addwf	___ftadd@exp1,w,c
  2164  0012B0  6E22               	movwf	??___ftadd& (0+255),c
  2165  0012B2  0E18               	movlw	24
  2166  0012B4  6422               	cpfsgt	??___ftadd,c
  2167  0012B6  D007               	goto	l1669
  2168  0012B8                     l528:
  2169  0012B8  C01C  F01C         	movff	___ftadd@f1,?___ftadd
  2170  0012BC  C01D  F01D         	movff	___ftadd@f1+1,?___ftadd+1
  2171  0012C0  C01E  F01E         	movff	___ftadd@f1+2,?___ftadd+2
  2172  0012C4  D0A3               	goto	l525
  2173  0012C6                     l1669:
  2174  0012C6  0E06               	movlw	6
  2175  0012C8  6E25               	movwf	___ftadd@sign,c
  2176  0012CA  AE1E               	btfss	___ftadd@f1+2,7,c
  2177  0012CC  D002               	goto	l1675
  2178  0012CE  8E25               	bsf	___ftadd@sign,7,c
  2179  0012D0  D000               	goto	l1675
  2180  0012D2                     l1675:
  2181  0012D2  BE21               	btfsc	___ftadd@f2+2,7,c
  2182  0012D4  8C25               	bsf	___ftadd@sign,6,c
  2183  0012D6  8E1D               	bsf	___ftadd@f1+1,7,c
  2184  0012D8  0EFF               	movlw	255
  2185  0012DA  161C               	andwf	___ftadd@f1,f,c
  2186  0012DC  0EFF               	movlw	255
  2187  0012DE  161D               	andwf	___ftadd@f1+1,f,c
  2188  0012E0  0E00               	movlw	0
  2189  0012E2  161E               	andwf	___ftadd@f1+2,f,c
  2190  0012E4  8E20               	bsf	___ftadd@f2+1,7,c
  2191  0012E6  0EFF               	movlw	255
  2192  0012E8  161F               	andwf	___ftadd@f2,f,c
  2193  0012EA  0EFF               	movlw	255
  2194  0012EC  1620               	andwf	___ftadd@f2+1,f,c
  2195  0012EE  0E00               	movlw	0
  2196  0012F0  1621               	andwf	___ftadd@f2+2,f,c
  2197  0012F2  5026               	movf	___ftadd@exp2,w,c
  2198  0012F4  5C27               	subwf	___ftadd@exp1,w,c
  2199  0012F6  B0D8               	btfsc	status,0,c
  2200  0012F8  D01E               	goto	l1695
  2201  0012FA                     l1685:
  2202  0012FA  90D8               	bcf	status,0,c
  2203  0012FC  361F               	rlcf	___ftadd@f2,f,c
  2204  0012FE  3620               	rlcf	___ftadd@f2+1,f,c
  2205  001300  3621               	rlcf	___ftadd@f2+2,f,c
  2206  001302  0626               	decf	___ftadd@exp2,f,c
  2207  001304  5027               	movf	___ftadd@exp1,w,c
  2208  001306  1826               	xorwf	___ftadd@exp2,w,c
  2209  001308  B4D8               	btfsc	status,2,c
  2210  00130A  D00F               	goto	l1693
  2211  00130C  0625               	decf	___ftadd@sign,f,c
  2212  00130E  C025  F022         	movff	___ftadd@sign,??___ftadd
  2213  001312  0E07               	movlw	7
  2214  001314  1622               	andwf	??___ftadd,f,c
  2215  001316  B4D8               	btfsc	status,2,c
  2216  001318  D008               	goto	l1693
  2217  00131A  D7EF               	goto	l1685
  2218  00131C  D006               	goto	l1693
  2219  00131E                     l1691:
  2220  00131E  90D8               	bcf	status,0,c
  2221  001320  321E               	rrcf	___ftadd@f1+2,f,c
  2222  001322  321D               	rrcf	___ftadd@f1+1,f,c
  2223  001324  321C               	rrcf	___ftadd@f1,f,c
  2224  001326  2A27               	incf	___ftadd@exp1,f,c
  2225  001328  D000               	goto	l1693
  2226  00132A                     l1693:
  2227  00132A  5026               	movf	___ftadd@exp2,w,c
  2228  00132C  1827               	xorwf	___ftadd@exp1,w,c
  2229  00132E  B4D8               	btfsc	status,2,c
  2230  001330  D024               	goto	l539
  2231  001332  D7F5               	goto	l1691
  2232  001334  D022               	goto	l539
  2233  001336                     l1695:
  2234  001336  5027               	movf	___ftadd@exp1,w,c
  2235  001338  5C26               	subwf	___ftadd@exp2,w,c
  2236  00133A  B0D8               	btfsc	status,0,c
  2237  00133C  D01E               	goto	l539
  2238  00133E                     l1697:
  2239  00133E  90D8               	bcf	status,0,c
  2240  001340  361C               	rlcf	___ftadd@f1,f,c
  2241  001342  361D               	rlcf	___ftadd@f1+1,f,c
  2242  001344  361E               	rlcf	___ftadd@f1+2,f,c
  2243  001346  0627               	decf	___ftadd@exp1,f,c
  2244  001348  5027               	movf	___ftadd@exp1,w,c
  2245  00134A  1826               	xorwf	___ftadd@exp2,w,c
  2246  00134C  B4D8               	btfsc	status,2,c
  2247  00134E  D00F               	goto	l1705
  2248  001350  0625               	decf	___ftadd@sign,f,c
  2249  001352  C025  F022         	movff	___ftadd@sign,??___ftadd
  2250  001356  0E07               	movlw	7
  2251  001358  1622               	andwf	??___ftadd,f,c
  2252  00135A  B4D8               	btfsc	status,2,c
  2253  00135C  D008               	goto	l1705
  2254  00135E  D7EF               	goto	l1697
  2255  001360  D006               	goto	l1705
  2256  001362                     l1703:
  2257  001362  90D8               	bcf	status,0,c
  2258  001364  3221               	rrcf	___ftadd@f2+2,f,c
  2259  001366  3220               	rrcf	___ftadd@f2+1,f,c
  2260  001368  321F               	rrcf	___ftadd@f2,f,c
  2261  00136A  2A26               	incf	___ftadd@exp2,f,c
  2262  00136C  D000               	goto	l1705
  2263  00136E                     l1705:
  2264  00136E  5026               	movf	___ftadd@exp2,w,c
  2265  001370  1827               	xorwf	___ftadd@exp1,w,c
  2266  001372  B4D8               	btfsc	status,2,c
  2267  001374  D002               	goto	l539
  2268  001376  D7F5               	goto	l1703
  2269  001378  D000               	goto	l539
  2270  00137A                     l539:
  2271  00137A  AE25               	btfss	___ftadd@sign,7,c
  2272  00137C  D00C               	goto	l548
  2273  00137E  0EFF               	movlw	255
  2274  001380  1A1C               	xorwf	___ftadd@f1,f,c
  2275  001382  0EFF               	movlw	255
  2276  001384  1A1D               	xorwf	___ftadd@f1+1,f,c
  2277  001386  0EFF               	movlw	255
  2278  001388  1A1E               	xorwf	___ftadd@f1+2,f,c
  2279  00138A  0E01               	movlw	1
  2280  00138C  261C               	addwf	___ftadd@f1,f,c
  2281  00138E  0E00               	movlw	0
  2282  001390  221D               	addwfc	___ftadd@f1+1,f,c
  2283  001392  0E00               	movlw	0
  2284  001394  221E               	addwfc	___ftadd@f1+2,f,c
  2285  001396                     l548:
  2286  001396  AC25               	btfss	___ftadd@sign,6,c
  2287  001398  D00D               	goto	l1711
  2288  00139A  0EFF               	movlw	255
  2289  00139C  1A1F               	xorwf	___ftadd@f2,f,c
  2290  00139E  0EFF               	movlw	255
  2291  0013A0  1A20               	xorwf	___ftadd@f2+1,f,c
  2292  0013A2  0EFF               	movlw	255
  2293  0013A4  1A21               	xorwf	___ftadd@f2+2,f,c
  2294  0013A6  0E01               	movlw	1
  2295  0013A8  261F               	addwf	___ftadd@f2,f,c
  2296  0013AA  0E00               	movlw	0
  2297  0013AC  2220               	addwfc	___ftadd@f2+1,f,c
  2298  0013AE  0E00               	movlw	0
  2299  0013B0  2221               	addwfc	___ftadd@f2+2,f,c
  2300  0013B2  D000               	goto	l1711
  2301  0013B4                     l1711:
  2302  0013B4  0E00               	movlw	0
  2303  0013B6  6E25               	movwf	___ftadd@sign,c
  2304  0013B8  501C               	movf	___ftadd@f1,w,c
  2305  0013BA  261F               	addwf	___ftadd@f2,f,c
  2306  0013BC  501D               	movf	___ftadd@f1+1,w,c
  2307  0013BE  2220               	addwfc	___ftadd@f2+1,f,c
  2308  0013C0  501E               	movf	___ftadd@f1+2,w,c
  2309  0013C2  2221               	addwfc	___ftadd@f2+2,f,c
  2310  0013C4  AE21               	btfss	___ftadd@f2+2,7,c
  2311  0013C6  D00F               	goto	l1721
  2312  0013C8  0EFF               	movlw	255
  2313  0013CA  1A1F               	xorwf	___ftadd@f2,f,c
  2314  0013CC  0EFF               	movlw	255
  2315  0013CE  1A20               	xorwf	___ftadd@f2+1,f,c
  2316  0013D0  0EFF               	movlw	255
  2317  0013D2  1A21               	xorwf	___ftadd@f2+2,f,c
  2318  0013D4  0E01               	movlw	1
  2319  0013D6  261F               	addwf	___ftadd@f2,f,c
  2320  0013D8  0E00               	movlw	0
  2321  0013DA  2220               	addwfc	___ftadd@f2+1,f,c
  2322  0013DC  0E00               	movlw	0
  2323  0013DE  2221               	addwfc	___ftadd@f2+2,f,c
  2324  0013E0  0E01               	movlw	1
  2325  0013E2  6E25               	movwf	___ftadd@sign,c
  2326  0013E4  D000               	goto	l1721
  2327  0013E6                     l1721:
  2328  0013E6  C01F  F001         	movff	___ftadd@f2,___ftpack@arg
  2329  0013EA  C020  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  2330  0013EE  C021  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  2331  0013F2  C027  F004         	movff	___ftadd@exp1,___ftpack@exp
  2332  0013F6  C025  F005         	movff	___ftadd@sign,___ftpack@sign
  2333  0013FA  EC06  F00C         	call	___ftpack	;wreg free
  2334  0013FE  C001  F01C         	movff	?___ftpack,?___ftadd
  2335  001402  C002  F01D         	movff	?___ftpack+1,?___ftadd+1
  2336  001406  C003  F01E         	movff	?___ftpack+2,?___ftadd+2
  2337  00140A  D000               	goto	l525
  2338  00140C                     l525:
  2339  00140C  0012               	return		;funcret
  2340  00140E                     __end_of___ftadd:
  2341                           	opt stack 0
  2342                           tblptru	equ	0xFF8
  2343                           tblptrh	equ	0xFF7
  2344                           tblptrl	equ	0xFF6
  2345                           tablat	equ	0xFF5
  2346                           prodh	equ	0xFF4
  2347                           prodl	equ	0xFF3
  2348                           postinc0	equ	0xFEE
  2349                           postdec1	equ	0xFE5
  2350                           fsr1l	equ	0xFE1
  2351                           indf2	equ	0xFDF
  2352                           postinc2	equ	0xFDE
  2353                           postdec2	equ	0xFDD
  2354                           fsr2h	equ	0xFDA
  2355                           fsr2l	equ	0xFD9
  2356                           status	equ	0xFD8
  2357                           
  2358 ;; *************** function ___awtoft *****************
  2359 ;; Defined at:
  2360 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awtoft.c"
  2361 ;; Parameters:    Size  Location     Type
  2362 ;;  c               2    8[COMRAM] int 
  2363 ;; Auto vars:     Size  Location     Type
  2364 ;;  sign            1   11[COMRAM] unsigned char 
  2365 ;; Return value:  Size  Location     Type
  2366 ;;                  3    8[COMRAM] float 
  2367 ;; Registers used:
  2368 ;;		wreg, status,2, status,0, cstack
  2369 ;; Tracked objects:
  2370 ;;		On entry : 0/0
  2371 ;;		On exit  : 0/0
  2372 ;;		Unchanged: 0/0
  2373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2374 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2375 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2377 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2378 ;;Total ram usage:        4 bytes
  2379 ;; Hardware stack levels used:    1
  2380 ;; Hardware stack levels required when called:    1
  2381 ;; This function calls:
  2382 ;;		___ftpack
  2383 ;; This function is called by:
  2384 ;;		_main
  2385 ;; This function uses a non-reentrant model
  2386 ;;
  2387                           
  2388                           	psect	text11
  2389  001CD2                     __ptext11:
  2390                           	opt stack 0
  2391  001CD2                     ___awtoft:
  2392                           	opt stack 29
  2393                           
  2394                           ;incstack = 0
  2395  001CD2  0E00               	movlw	0
  2396  001CD4  6E0C               	movwf	___awtoft@sign,c
  2397  001CD6  AE0A               	btfss	___awtoft@c+1,7,c
  2398  001CD8  D007               	goto	l1907
  2399  001CDA  6C09               	negf	___awtoft@c,c
  2400  001CDC  1E0A               	comf	___awtoft@c+1,f,c
  2401  001CDE  B0D8               	btfsc	status,0,c
  2402  001CE0  2A0A               	incf	___awtoft@c+1,f,c
  2403  001CE2  0E01               	movlw	1
  2404  001CE4  6E0C               	movwf	___awtoft@sign,c
  2405  001CE6  D000               	goto	l1907
  2406  001CE8                     l1907:
  2407  001CE8  C009  F001         	movff	___awtoft@c,___ftpack@arg
  2408  001CEC  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  2409  001CF0  6A03               	clrf	___ftpack@arg+2,c
  2410  001CF2  0E8E               	movlw	142
  2411  001CF4  6E04               	movwf	___ftpack@exp,c
  2412  001CF6  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  2413  001CFA  EC06  F00C         	call	___ftpack	;wreg free
  2414  001CFE  C001  F009         	movff	?___ftpack,?___awtoft
  2415  001D02  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  2416  001D06  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  2417  001D0A  D000               	goto	l394
  2418  001D0C                     l394:
  2419  001D0C  0012               	return		;funcret
  2420  001D0E                     __end_of___awtoft:
  2421                           	opt stack 0
  2422                           tblptru	equ	0xFF8
  2423                           tblptrh	equ	0xFF7
  2424                           tblptrl	equ	0xFF6
  2425                           tablat	equ	0xFF5
  2426                           prodh	equ	0xFF4
  2427                           prodl	equ	0xFF3
  2428                           postinc0	equ	0xFEE
  2429                           postdec1	equ	0xFE5
  2430                           fsr1l	equ	0xFE1
  2431                           indf2	equ	0xFDF
  2432                           postinc2	equ	0xFDE
  2433                           postdec2	equ	0xFDD
  2434                           fsr2h	equ	0xFDA
  2435                           fsr2l	equ	0xFD9
  2436                           status	equ	0xFD8
  2437                           
  2438 ;; *************** function ___ftpack *****************
  2439 ;; Defined at:
  2440 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  2441 ;; Parameters:    Size  Location     Type
  2442 ;;  arg             3    0[COMRAM] unsigned um
  2443 ;;  exp             1    3[COMRAM] unsigned char 
  2444 ;;  sign            1    4[COMRAM] unsigned char 
  2445 ;; Auto vars:     Size  Location     Type
  2446 ;;		None
  2447 ;; Return value:  Size  Location     Type
  2448 ;;                  3    0[COMRAM] float 
  2449 ;; Registers used:
  2450 ;;		wreg, status,2, status,0
  2451 ;; Tracked objects:
  2452 ;;		On entry : 0/0
  2453 ;;		On exit  : 0/0
  2454 ;;		Unchanged: 0/0
  2455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2456 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2458 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2459 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2460 ;;Total ram usage:        8 bytes
  2461 ;; Hardware stack levels used:    1
  2462 ;; This function calls:
  2463 ;;		Nothing
  2464 ;; This function is called by:
  2465 ;;		___awtoft
  2466 ;;		___ftadd
  2467 ;;		___ftdiv
  2468 ;;		___ftmul
  2469 ;; This function uses a non-reentrant model
  2470 ;;
  2471                           
  2472                           	psect	text12
  2473  00180C                     __ptext12:
  2474                           	opt stack 0
  2475  00180C                     ___ftpack:
  2476                           	opt stack 29
  2477                           
  2478                           ;incstack = 0
  2479  00180C  5004               	movf	___ftpack@exp,w,c
  2480  00180E  B4D8               	btfsc	status,2,c
  2481  001810  D005               	goto	l1453
  2482  001812  5001               	movf	___ftpack@arg,w,c
  2483  001814  1002               	iorwf	___ftpack@arg+1,w,c
  2484  001816  1003               	iorwf	___ftpack@arg+2,w,c
  2485  001818  A4D8               	btfss	status,2,c
  2486  00181A  D00E               	goto	l1459
  2487  00181C                     l1453:
  2488  00181C  0E00               	movlw	0
  2489  00181E  6E01               	movwf	?___ftpack,c
  2490  001820  0E00               	movlw	0
  2491  001822  6E02               	movwf	?___ftpack+1,c
  2492  001824  0E00               	movlw	0
  2493  001826  6E03               	movwf	?___ftpack+2,c
  2494  001828  D053               	goto	l484
  2495  00182A  D006               	goto	l1459
  2496  00182C                     l1457:
  2497  00182C  2A04               	incf	___ftpack@exp,f,c
  2498  00182E  90D8               	bcf	status,0,c
  2499  001830  3203               	rrcf	___ftpack@arg+2,f,c
  2500  001832  3202               	rrcf	___ftpack@arg+1,f,c
  2501  001834  3201               	rrcf	___ftpack@arg,f,c
  2502  001836  D000               	goto	l1459
  2503  001838                     l1459:
  2504  001838  0E00               	movlw	0
  2505  00183A  1401               	andwf	___ftpack@arg,w,c
  2506  00183C  6E06               	movwf	??___ftpack& (0+255),c
  2507  00183E  0E00               	movlw	0
  2508  001840  1402               	andwf	___ftpack@arg+1,w,c
  2509  001842  6E07               	movwf	(??___ftpack+1)& (0+255),c
  2510  001844  0EFE               	movlw	254
  2511  001846  1403               	andwf	___ftpack@arg+2,w,c
  2512  001848  6E08               	movwf	(??___ftpack+2)& (0+255),c
  2513  00184A  5006               	movf	??___ftpack,w,c
  2514  00184C  1007               	iorwf	??___ftpack+1,w,c
  2515  00184E  1008               	iorwf	??___ftpack+2,w,c
  2516  001850  B4D8               	btfsc	status,2,c
  2517  001852  D00E               	goto	l1465
  2518  001854  D7EB               	goto	l1457
  2519  001856  D00C               	goto	l1465
  2520  001858                     l1461:
  2521  001858  2A04               	incf	___ftpack@exp,f,c
  2522  00185A  0E01               	movlw	1
  2523  00185C  2601               	addwf	___ftpack@arg,f,c
  2524  00185E  0E00               	movlw	0
  2525  001860  2202               	addwfc	___ftpack@arg+1,f,c
  2526  001862  0E00               	movlw	0
  2527  001864  2203               	addwfc	___ftpack@arg+2,f,c
  2528  001866  90D8               	bcf	status,0,c
  2529  001868  3203               	rrcf	___ftpack@arg+2,f,c
  2530  00186A  3202               	rrcf	___ftpack@arg+1,f,c
  2531  00186C  3201               	rrcf	___ftpack@arg,f,c
  2532  00186E  D000               	goto	l1465
  2533  001870                     l1465:
  2534  001870  0E00               	movlw	0
  2535  001872  1401               	andwf	___ftpack@arg,w,c
  2536  001874  6E06               	movwf	??___ftpack& (0+255),c
  2537  001876  0E00               	movlw	0
  2538  001878  1402               	andwf	___ftpack@arg+1,w,c
  2539  00187A  6E07               	movwf	(??___ftpack+1)& (0+255),c
  2540  00187C  0EFF               	movlw	255
  2541  00187E  1403               	andwf	___ftpack@arg+2,w,c
  2542  001880  6E08               	movwf	(??___ftpack+2)& (0+255),c
  2543  001882  5006               	movf	??___ftpack,w,c
  2544  001884  1007               	iorwf	??___ftpack+1,w,c
  2545  001886  1008               	iorwf	??___ftpack+2,w,c
  2546  001888  B4D8               	btfsc	status,2,c
  2547  00188A  D008               	goto	l1469
  2548  00188C  D7E5               	goto	l1461
  2549  00188E  D006               	goto	l1469
  2550  001890                     l1467:
  2551  001890  0604               	decf	___ftpack@exp,f,c
  2552  001892  90D8               	bcf	status,0,c
  2553  001894  3601               	rlcf	___ftpack@arg,f,c
  2554  001896  3602               	rlcf	___ftpack@arg+1,f,c
  2555  001898  3603               	rlcf	___ftpack@arg+2,f,c
  2556  00189A  D000               	goto	l1469
  2557  00189C                     l1469:
  2558  00189C  BE02               	btfsc	___ftpack@arg+1,7,c
  2559  00189E  D004               	goto	l495
  2560  0018A0  0E02               	movlw	2
  2561  0018A2  6004               	cpfslt	___ftpack@exp,c
  2562  0018A4  D7F5               	goto	l1467
  2563  0018A6  D000               	goto	l495
  2564  0018A8                     l495:
  2565  0018A8  B004               	btfsc	___ftpack@exp,0,c
  2566  0018AA  D002               	goto	l1475
  2567  0018AC  9E02               	bcf	___ftpack@arg+1,7,c
  2568  0018AE  D000               	goto	l1475
  2569  0018B0                     l1475:
  2570  0018B0  90D8               	bcf	status,0,c
  2571  0018B2  3204               	rrcf	___ftpack@exp,f,c
  2572  0018B4  5004               	movf	___ftpack@exp,w,c
  2573  0018B6  1203               	iorwf	___ftpack@arg+2,f,c
  2574  0018B8  5005               	movf	___ftpack@sign,w,c
  2575  0018BA  B4D8               	btfsc	status,2,c
  2576  0018BC  D002               	goto	l1481
  2577  0018BE  8E03               	bsf	___ftpack@arg+2,7,c
  2578  0018C0  D000               	goto	l1481
  2579  0018C2                     l1481:
  2580  0018C2  C001  F001         	movff	___ftpack@arg,?___ftpack
  2581  0018C6  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  2582  0018CA  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  2583  0018CE  D000               	goto	l484
  2584  0018D0                     l484:
  2585  0018D0  0012               	return		;funcret
  2586  0018D2                     __end_of___ftpack:
  2587                           	opt stack 0
  2588                           tblptru	equ	0xFF8
  2589                           tblptrh	equ	0xFF7
  2590                           tblptrl	equ	0xFF6
  2591                           tablat	equ	0xFF5
  2592                           prodh	equ	0xFF4
  2593                           prodl	equ	0xFF3
  2594                           postinc0	equ	0xFEE
  2595                           postdec1	equ	0xFE5
  2596                           fsr1l	equ	0xFE1
  2597                           indf2	equ	0xFDF
  2598                           postinc2	equ	0xFDE
  2599                           postdec2	equ	0xFDD
  2600                           fsr2h	equ	0xFDA
  2601                           fsr2l	equ	0xFD9
  2602                           status	equ	0xFD8
  2603                           
  2604 ;; *************** function ___awmod *****************
  2605 ;; Defined at:
  2606 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
  2607 ;; Parameters:    Size  Location     Type
  2608 ;;  dividend        2    0[COMRAM] int 
  2609 ;;  divisor         2    2[COMRAM] int 
  2610 ;; Auto vars:     Size  Location     Type
  2611 ;;  sign            1    5[COMRAM] unsigned char 
  2612 ;;  counter         1    4[COMRAM] unsigned char 
  2613 ;; Return value:  Size  Location     Type
  2614 ;;                  2    0[COMRAM] int 
  2615 ;; Registers used:
  2616 ;;		wreg, status,2, status,0
  2617 ;; Tracked objects:
  2618 ;;		On entry : 0/0
  2619 ;;		On exit  : 0/0
  2620 ;;		Unchanged: 0/0
  2621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2622 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2623 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2625 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2626 ;;Total ram usage:        6 bytes
  2627 ;; Hardware stack levels used:    1
  2628 ;; This function calls:
  2629 ;;		Nothing
  2630 ;; This function is called by:
  2631 ;;		_main
  2632 ;; This function uses a non-reentrant model
  2633 ;;
  2634                           
  2635                           	psect	text13
  2636  001B38                     __ptext13:
  2637                           	opt stack 0
  2638  001B38                     ___awmod:
  2639                           	opt stack 30
  2640                           
  2641                           ;incstack = 0
  2642  001B38  0E00               	movlw	0
  2643  001B3A  6E06               	movwf	___awmod@sign,c
  2644  001B3C  AE02               	btfss	___awmod@dividend+1,7,c
  2645  001B3E  D007               	goto	l1871
  2646  001B40  6C01               	negf	___awmod@dividend,c
  2647  001B42  1E02               	comf	___awmod@dividend+1,f,c
  2648  001B44  B0D8               	btfsc	status,0,c
  2649  001B46  2A02               	incf	___awmod@dividend+1,f,c
  2650  001B48  0E01               	movlw	1
  2651  001B4A  6E06               	movwf	___awmod@sign,c
  2652  001B4C  D000               	goto	l1871
  2653  001B4E                     l1871:
  2654  001B4E  AE04               	btfss	___awmod@divisor+1,7,c
  2655  001B50  D005               	goto	l1875
  2656  001B52  6C03               	negf	___awmod@divisor,c
  2657  001B54  1E04               	comf	___awmod@divisor+1,f,c
  2658  001B56  B0D8               	btfsc	status,0,c
  2659  001B58  2A04               	incf	___awmod@divisor+1,f,c
  2660  001B5A  D000               	goto	l1875
  2661  001B5C                     l1875:
  2662  001B5C  5003               	movf	___awmod@divisor,w,c
  2663  001B5E  1004               	iorwf	___awmod@divisor+1,w,c
  2664  001B60  B4D8               	btfsc	status,2,c
  2665  001B62  D01D               	goto	l1891
  2666  001B64  0E01               	movlw	1
  2667  001B66  6E05               	movwf	___awmod@counter,c
  2668  001B68  D005               	goto	l1881
  2669  001B6A                     l1879:
  2670  001B6A  90D8               	bcf	status,0,c
  2671  001B6C  3603               	rlcf	___awmod@divisor,f,c
  2672  001B6E  3604               	rlcf	___awmod@divisor+1,f,c
  2673  001B70  2A05               	incf	___awmod@counter,f,c
  2674  001B72  D000               	goto	l1881
  2675  001B74                     l1881:
  2676  001B74  BE04               	btfsc	___awmod@divisor+1,7,c
  2677  001B76  D002               	goto	l1883
  2678  001B78  D7F8               	goto	l1879
  2679  001B7A  D000               	goto	l1883
  2680  001B7C                     l1883:
  2681  001B7C  5003               	movf	___awmod@divisor,w,c
  2682  001B7E  5C01               	subwf	___awmod@dividend,w,c
  2683  001B80  5004               	movf	___awmod@divisor+1,w,c
  2684  001B82  5802               	subwfb	___awmod@dividend+1,w,c
  2685  001B84  A0D8               	btfss	status,0,c
  2686  001B86  D005               	goto	l1887
  2687  001B88  5003               	movf	___awmod@divisor,w,c
  2688  001B8A  5E01               	subwf	___awmod@dividend,f,c
  2689  001B8C  5004               	movf	___awmod@divisor+1,w,c
  2690  001B8E  5A02               	subwfb	___awmod@dividend+1,f,c
  2691  001B90  D000               	goto	l1887
  2692  001B92                     l1887:
  2693  001B92  90D8               	bcf	status,0,c
  2694  001B94  3204               	rrcf	___awmod@divisor+1,f,c
  2695  001B96  3203               	rrcf	___awmod@divisor,f,c
  2696  001B98  2E05               	decfsz	___awmod@counter,f,c
  2697  001B9A  D7F0               	goto	l1883
  2698  001B9C  D000               	goto	l1891
  2699  001B9E                     l1891:
  2700  001B9E  5006               	movf	___awmod@sign,w,c
  2701  001BA0  B4D8               	btfsc	status,2,c
  2702  001BA2  D005               	goto	l1895
  2703  001BA4  6C01               	negf	___awmod@dividend,c
  2704  001BA6  1E02               	comf	___awmod@dividend+1,f,c
  2705  001BA8  B0D8               	btfsc	status,0,c
  2706  001BAA  2A02               	incf	___awmod@dividend+1,f,c
  2707  001BAC  D000               	goto	l1895
  2708  001BAE                     l1895:
  2709  001BAE  C001  F001         	movff	___awmod@dividend,?___awmod
  2710  001BB2  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  2711  001BB6  D000               	goto	l382
  2712  001BB8                     l382:
  2713  001BB8  0012               	return		;funcret
  2714  001BBA                     __end_of___awmod:
  2715                           	opt stack 0
  2716                           tblptru	equ	0xFF8
  2717                           tblptrh	equ	0xFF7
  2718                           tblptrl	equ	0xFF6
  2719                           tablat	equ	0xFF5
  2720                           prodh	equ	0xFF4
  2721                           prodl	equ	0xFF3
  2722                           postinc0	equ	0xFEE
  2723                           postdec1	equ	0xFE5
  2724                           fsr1l	equ	0xFE1
  2725                           indf2	equ	0xFDF
  2726                           postinc2	equ	0xFDE
  2727                           postdec2	equ	0xFDD
  2728                           fsr2h	equ	0xFDA
  2729                           fsr2l	equ	0xFD9
  2730                           status	equ	0xFD8
  2731                           
  2732 ;; *************** function ___awdiv *****************
  2733 ;; Defined at:
  2734 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  2735 ;; Parameters:    Size  Location     Type
  2736 ;;  dividend        2    0[COMRAM] int 
  2737 ;;  divisor         2    2[COMRAM] int 
  2738 ;; Auto vars:     Size  Location     Type
  2739 ;;  quotient        2    6[COMRAM] int 
  2740 ;;  sign            1    5[COMRAM] unsigned char 
  2741 ;;  counter         1    4[COMRAM] unsigned char 
  2742 ;; Return value:  Size  Location     Type
  2743 ;;                  2    0[COMRAM] int 
  2744 ;; Registers used:
  2745 ;;		wreg, status,2, status,0
  2746 ;; Tracked objects:
  2747 ;;		On entry : 0/0
  2748 ;;		On exit  : 0/0
  2749 ;;		Unchanged: 0/0
  2750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2751 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2752 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2754 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2755 ;;Total ram usage:        8 bytes
  2756 ;; Hardware stack levels used:    1
  2757 ;; This function calls:
  2758 ;;		Nothing
  2759 ;; This function is called by:
  2760 ;;		_main
  2761 ;; This function uses a non-reentrant model
  2762 ;;
  2763                           
  2764                           	psect	text14
  2765  001976                     __ptext14:
  2766                           	opt stack 0
  2767  001976                     ___awdiv:
  2768                           	opt stack 30
  2769                           
  2770                           ;incstack = 0
  2771  001976  0E00               	movlw	0
  2772  001978  6E06               	movwf	___awdiv@sign,c
  2773  00197A  AE04               	btfss	___awdiv@divisor+1,7,c
  2774  00197C  D007               	goto	l1827
  2775  00197E  6C03               	negf	___awdiv@divisor,c
  2776  001980  1E04               	comf	___awdiv@divisor+1,f,c
  2777  001982  B0D8               	btfsc	status,0,c
  2778  001984  2A04               	incf	___awdiv@divisor+1,f,c
  2779  001986  0E01               	movlw	1
  2780  001988  6E06               	movwf	___awdiv@sign,c
  2781  00198A  D000               	goto	l1827
  2782  00198C                     l1827:
  2783  00198C  AE02               	btfss	___awdiv@dividend+1,7,c
  2784  00198E  D007               	goto	l1833
  2785  001990  6C01               	negf	___awdiv@dividend,c
  2786  001992  1E02               	comf	___awdiv@dividend+1,f,c
  2787  001994  B0D8               	btfsc	status,0,c
  2788  001996  2A02               	incf	___awdiv@dividend+1,f,c
  2789  001998  0E01               	movlw	1
  2790  00199A  1A06               	xorwf	___awdiv@sign,f,c
  2791  00199C  D000               	goto	l1833
  2792  00199E                     l1833:
  2793  00199E  0E00               	movlw	0
  2794  0019A0  6E08               	movwf	___awdiv@quotient+1,c
  2795  0019A2  0E00               	movlw	0
  2796  0019A4  6E07               	movwf	___awdiv@quotient,c
  2797  0019A6  5003               	movf	___awdiv@divisor,w,c
  2798  0019A8  1004               	iorwf	___awdiv@divisor+1,w,c
  2799  0019AA  B4D8               	btfsc	status,2,c
  2800  0019AC  D021               	goto	l1855
  2801  0019AE  0E01               	movlw	1
  2802  0019B0  6E05               	movwf	___awdiv@counter,c
  2803  0019B2  D005               	goto	l1841
  2804  0019B4                     l1839:
  2805  0019B4  90D8               	bcf	status,0,c
  2806  0019B6  3603               	rlcf	___awdiv@divisor,f,c
  2807  0019B8  3604               	rlcf	___awdiv@divisor+1,f,c
  2808  0019BA  2A05               	incf	___awdiv@counter,f,c
  2809  0019BC  D000               	goto	l1841
  2810  0019BE                     l1841:
  2811  0019BE  BE04               	btfsc	___awdiv@divisor+1,7,c
  2812  0019C0  D002               	goto	l1843
  2813  0019C2  D7F8               	goto	l1839
  2814  0019C4  D000               	goto	l1843
  2815  0019C6                     l1843:
  2816  0019C6  90D8               	bcf	status,0,c
  2817  0019C8  3607               	rlcf	___awdiv@quotient,f,c
  2818  0019CA  3608               	rlcf	___awdiv@quotient+1,f,c
  2819  0019CC  5003               	movf	___awdiv@divisor,w,c
  2820  0019CE  5C01               	subwf	___awdiv@dividend,w,c
  2821  0019D0  5004               	movf	___awdiv@divisor+1,w,c
  2822  0019D2  5802               	subwfb	___awdiv@dividend+1,w,c
  2823  0019D4  A0D8               	btfss	status,0,c
  2824  0019D6  D006               	goto	l1851
  2825  0019D8  5003               	movf	___awdiv@divisor,w,c
  2826  0019DA  5E01               	subwf	___awdiv@dividend,f,c
  2827  0019DC  5004               	movf	___awdiv@divisor+1,w,c
  2828  0019DE  5A02               	subwfb	___awdiv@dividend+1,f,c
  2829  0019E0  8007               	bsf	___awdiv@quotient,0,c
  2830  0019E2  D000               	goto	l1851
  2831  0019E4                     l1851:
  2832  0019E4  90D8               	bcf	status,0,c
  2833  0019E6  3204               	rrcf	___awdiv@divisor+1,f,c
  2834  0019E8  3203               	rrcf	___awdiv@divisor,f,c
  2835  0019EA  2E05               	decfsz	___awdiv@counter,f,c
  2836  0019EC  D7EC               	goto	l1843
  2837  0019EE  D000               	goto	l1855
  2838  0019F0                     l1855:
  2839  0019F0  5006               	movf	___awdiv@sign,w,c
  2840  0019F2  B4D8               	btfsc	status,2,c
  2841  0019F4  D005               	goto	l1859
  2842  0019F6  6C07               	negf	___awdiv@quotient,c
  2843  0019F8  1E08               	comf	___awdiv@quotient+1,f,c
  2844  0019FA  B0D8               	btfsc	status,0,c
  2845  0019FC  2A08               	incf	___awdiv@quotient+1,f,c
  2846  0019FE  D000               	goto	l1859
  2847  001A00                     l1859:
  2848  001A00  C007  F001         	movff	___awdiv@quotient,?___awdiv
  2849  001A04  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  2850  001A08  D000               	goto	l369
  2851  001A0A                     l369:
  2852  001A0A  0012               	return		;funcret
  2853  001A0C                     __end_of___awdiv:
  2854                           	opt stack 0
  2855                           tblptru	equ	0xFF8
  2856                           tblptrh	equ	0xFF7
  2857                           tblptrl	equ	0xFF6
  2858                           tablat	equ	0xFF5
  2859                           prodh	equ	0xFF4
  2860                           prodl	equ	0xFF3
  2861                           postinc0	equ	0xFEE
  2862                           postdec1	equ	0xFE5
  2863                           fsr1l	equ	0xFE1
  2864                           indf2	equ	0xFDF
  2865                           postinc2	equ	0xFDE
  2866                           postdec2	equ	0xFDD
  2867                           fsr2h	equ	0xFDA
  2868                           fsr2l	equ	0xFD9
  2869                           status	equ	0xFD8
  2870                           
  2871 ;; *************** function _WAIT_1_SEC *****************
  2872 ;; Defined at:
  2873 ;;		line 99 in file "lab5.c"
  2874 ;; Parameters:    Size  Location     Type
  2875 ;;		None
  2876 ;; Auto vars:     Size  Location     Type
  2877 ;;  j               2    0[COMRAM] int 
  2878 ;; Return value:  Size  Location     Type
  2879 ;;		None               void
  2880 ;; Registers used:
  2881 ;;		wreg, status,2, status,0
  2882 ;; Tracked objects:
  2883 ;;		On entry : 0/0
  2884 ;;		On exit  : 0/0
  2885 ;;		Unchanged: 0/0
  2886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2888 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2890 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2891 ;;Total ram usage:        2 bytes
  2892 ;; Hardware stack levels used:    1
  2893 ;; This function calls:
  2894 ;;		Nothing
  2895 ;; This function is called by:
  2896 ;;		_main
  2897 ;; This function uses a non-reentrant model
  2898 ;;
  2899                           
  2900                           	psect	text15
  2901  001D82                     __ptext15:
  2902                           	opt stack 0
  2903  001D82                     _WAIT_1_SEC:
  2904                           	opt stack 30
  2905                           
  2906                           ;lab5.c: 100: for (int j = 0; j < 27000; j++);
  2907                           
  2908                           ;incstack = 0
  2909  001D82  0E00               	movlw	0
  2910  001D84  6E02               	movwf	WAIT_1_SEC@j+1,c
  2911  001D86  0E00               	movlw	0
  2912  001D88  6E01               	movwf	WAIT_1_SEC@j,c
  2913  001D8A                     l993:
  2914  001D8A  BE02               	btfsc	WAIT_1_SEC@j+1,7,c
  2915  001D8C  D008               	goto	l997
  2916  001D8E  0E78               	movlw	120
  2917  001D90  5C01               	subwf	WAIT_1_SEC@j,w,c
  2918  001D92  0E69               	movlw	105
  2919  001D94  5802               	subwfb	WAIT_1_SEC@j+1,w,c
  2920  001D96  B0D8               	btfsc	status,0,c
  2921  001D98  D005               	goto	l104
  2922  001D9A  D001               	goto	l997
  2923  001D9C  D003               	goto	l104
  2924  001D9E                     l997:
  2925  001D9E  4A01               	infsnz	WAIT_1_SEC@j,f,c
  2926  001DA0  2A02               	incf	WAIT_1_SEC@j+1,f,c
  2927  001DA2  D7F3               	goto	l993
  2928  001DA4                     l104:
  2929  001DA4  0012               	return		;funcret
  2930  001DA6                     __end_of_WAIT_1_SEC:
  2931                           	opt stack 0
  2932                           tblptru	equ	0xFF8
  2933                           tblptrh	equ	0xFF7
  2934                           tblptrl	equ	0xFF6
  2935                           tablat	equ	0xFF5
  2936                           prodh	equ	0xFF4
  2937                           prodl	equ	0xFF3
  2938                           postinc0	equ	0xFEE
  2939                           postdec1	equ	0xFE5
  2940                           fsr1l	equ	0xFE1
  2941                           indf2	equ	0xFDF
  2942                           postinc2	equ	0xFDE
  2943                           postdec2	equ	0xFDD
  2944                           fsr2h	equ	0xFDA
  2945                           fsr2l	equ	0xFD9
  2946                           status	equ	0xFD8
  2947                           
  2948 ;; *************** function _Set_ADCON0 *****************
  2949 ;; Defined at:
  2950 ;;		line 65 in file "lab5.c"
  2951 ;; Parameters:    Size  Location     Type
  2952 ;;  AN_pin          1    wreg     unsigned char 
  2953 ;; Auto vars:     Size  Location     Type
  2954 ;;  AN_pin          1    0[COMRAM] unsigned char 
  2955 ;; Return value:  Size  Location     Type
  2956 ;;		None               void
  2957 ;; Registers used:
  2958 ;;		wreg, status,2, status,0, prodl, prodh
  2959 ;; Tracked objects:
  2960 ;;		On entry : 0/0
  2961 ;;		On exit  : 0/0
  2962 ;;		Unchanged: 0/0
  2963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2965 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2967 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2968 ;;Total ram usage:        1 bytes
  2969 ;; Hardware stack levels used:    1
  2970 ;; This function calls:
  2971 ;;		Nothing
  2972 ;; This function is called by:
  2973 ;;		_main
  2974 ;; This function uses a non-reentrant model
  2975 ;;
  2976                           
  2977                           	psect	text16
  2978  001E0C                     __ptext16:
  2979                           	opt stack 0
  2980  001E0C                     _Set_ADCON0:
  2981                           	opt stack 30
  2982                           
  2983                           ;incstack = 0
  2984                           ;Set_ADCON0@AN_pin stored from wreg
  2985  001E0C  6E01               	movwf	Set_ADCON0@AN_pin,c
  2986                           
  2987                           ;lab5.c: 66: ADCON0 = AN_pin * 4 + 1;
  2988  001E0E  5001               	movf	Set_ADCON0@AN_pin,w,c
  2989  001E10  0D04               	mullw	4
  2990  001E12  28F3               	incf	prodl,w,c
  2991  001E14  6EC2               	movwf	4034,c	;volatile
  2992  001E16  0012               	return		;funcret
  2993  001E18                     __end_of_Set_ADCON0:
  2994                           	opt stack 0
  2995                           tblptru	equ	0xFF8
  2996                           tblptrh	equ	0xFF7
  2997                           tblptrl	equ	0xFF6
  2998                           tablat	equ	0xFF5
  2999                           prodh	equ	0xFF4
  3000                           prodl	equ	0xFF3
  3001                           postinc0	equ	0xFEE
  3002                           postdec1	equ	0xFE5
  3003                           fsr1l	equ	0xFE1
  3004                           indf2	equ	0xFDF
  3005                           postinc2	equ	0xFDE
  3006                           postdec2	equ	0xFDD
  3007                           fsr2h	equ	0xFDA
  3008                           fsr2l	equ	0xFD9
  3009                           status	equ	0xFD8
  3010                           
  3011 ;; *************** function _SET_RGB_D3 *****************
  3012 ;; Defined at:
  3013 ;;		line 90 in file "lab5.c"
  3014 ;; Parameters:    Size  Location     Type
  3015 ;;  voltage         3   12[COMRAM] float 
  3016 ;; Auto vars:     Size  Location     Type
  3017 ;;		None
  3018 ;; Return value:  Size  Location     Type
  3019 ;;		None               void
  3020 ;; Registers used:
  3021 ;;		wreg, status,2, status,0, cstack
  3022 ;; Tracked objects:
  3023 ;;		On entry : 0/0
  3024 ;;		On exit  : 0/0
  3025 ;;		Unchanged: 0/0
  3026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3027 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3030 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3031 ;;Total ram usage:        3 bytes
  3032 ;; Hardware stack levels used:    1
  3033 ;; Hardware stack levels required when called:    1
  3034 ;; This function calls:
  3035 ;;		___ftge
  3036 ;; This function is called by:
  3037 ;;		_main
  3038 ;; This function uses a non-reentrant model
  3039 ;;
  3040                           
  3041                           	psect	text17
  3042  0018D2                     __ptext17:
  3043                           	opt stack 0
  3044  0018D2                     _SET_RGB_D3:
  3045                           	opt stack 29
  3046                           
  3047                           ;lab5.c: 91: if (voltage < 2600) { PORTEbits.RE0 = 1; PORTEbits.RE1 = 1; PORTEbits.RE2 =
      +                           1; }
  3048                           
  3049                           ;incstack = 0
  3050  0018D2  C00D  F001         	movff	SET_RGB_D3@voltage,___ftge@ff1
  3051  0018D6  C00E  F002         	movff	SET_RGB_D3@voltage+1,___ftge@ff1+1
  3052  0018DA  C00F  F003         	movff	SET_RGB_D3@voltage+2,___ftge@ff1+2
  3053  0018DE  0E80               	movlw	128
  3054  0018E0  6E04               	movwf	___ftge@ff2,c
  3055  0018E2  0E22               	movlw	34
  3056  0018E4  6E05               	movwf	___ftge@ff2+1,c
  3057  0018E6  0E45               	movlw	69
  3058  0018E8  6E06               	movwf	___ftge@ff2+2,c
  3059  0018EA  EC06  F00D         	call	___ftge	;wreg free
  3060  0018EE  B0D8               	btfsc	status,0,c
  3061  0018F0  D002               	goto	l1593
  3062  0018F2  8084               	bsf	3972,0,c	;volatile
  3063  0018F4  D011               	goto	L1
  3064  0018F6                     l1593:
  3065                           
  3066                           ;lab5.c: 92: else if (voltage < 2900) { PORTEbits.RE0 = 0; PORTEbits.RE1 = 1; PORTEbits.
      +                          RE2 = 1; }
  3067  0018F6  C00D  F001         	movff	SET_RGB_D3@voltage,___ftge@ff1
  3068  0018FA  C00E  F002         	movff	SET_RGB_D3@voltage+1,___ftge@ff1+1
  3069  0018FE  C00F  F003         	movff	SET_RGB_D3@voltage+2,___ftge@ff1+2
  3070  001902  0E40               	movlw	64
  3071  001904  6E04               	movwf	___ftge@ff2,c
  3072  001906  0E35               	movlw	53
  3073  001908  6E05               	movwf	___ftge@ff2+1,c
  3074  00190A  0E45               	movlw	69
  3075  00190C  6E06               	movwf	___ftge@ff2+2,c
  3076  00190E  EC06  F00D         	call	___ftge	;wreg free
  3077  001912  B0D8               	btfsc	status,0,c
  3078  001914  D004               	goto	l1597
  3079  001916  9084               	bcf	3972,0,c	;volatile
  3080  001918                     L1:
  3081  001918  8284               	bsf	3972,1,c	;volatile
  3082  00191A  8484               	bsf	3972,2,c	;volatile
  3083  00191C  D02B               	goto	l99
  3084  00191E                     l1597:
  3085                           
  3086                           ;lab5.c: 93: else if (voltage < 3200) { PORTEbits.RE0 = 1; PORTEbits.RE1 = 1; PORTEbits.
      +                          RE2 = 0; }
  3087  00191E  C00D  F001         	movff	SET_RGB_D3@voltage,___ftge@ff1
  3088  001922  C00E  F002         	movff	SET_RGB_D3@voltage+1,___ftge@ff1+1
  3089  001926  C00F  F003         	movff	SET_RGB_D3@voltage+2,___ftge@ff1+2
  3090  00192A  0E00               	movlw	0
  3091  00192C  6E04               	movwf	___ftge@ff2,c
  3092  00192E  0E48               	movlw	72
  3093  001930  6E05               	movwf	___ftge@ff2+1,c
  3094  001932  0E45               	movlw	69
  3095  001934  6E06               	movwf	___ftge@ff2+2,c
  3096  001936  EC06  F00D         	call	___ftge	;wreg free
  3097  00193A  B0D8               	btfsc	status,0,c
  3098  00193C  D003               	goto	l1601
  3099  00193E  8084               	bsf	3972,0,c	;volatile
  3100  001940  8284               	bsf	3972,1,c	;volatile
  3101  001942  D012               	goto	L2
  3102  001944                     l1601:
  3103                           
  3104                           ;lab5.c: 94: else if (voltage < 3600) { PORTEbits.RE0 = 1; PORTEbits.RE1 = 0; PORTEbits.
      +                          RE2 = 0; }
  3105  001944  C00D  F001         	movff	SET_RGB_D3@voltage,___ftge@ff1
  3106  001948  C00E  F002         	movff	SET_RGB_D3@voltage+1,___ftge@ff1+1
  3107  00194C  C00F  F003         	movff	SET_RGB_D3@voltage+2,___ftge@ff1+2
  3108  001950  0E00               	movlw	0
  3109  001952  6E04               	movwf	___ftge@ff2,c
  3110  001954  0E61               	movlw	97
  3111  001956  6E05               	movwf	___ftge@ff2+1,c
  3112  001958  0E45               	movlw	69
  3113  00195A  6E06               	movwf	___ftge@ff2+2,c
  3114  00195C  EC06  F00D         	call	___ftge	;wreg free
  3115  001960  B0D8               	btfsc	status,0,c
  3116  001962  D004               	goto	l97
  3117  001964  8084               	bsf	3972,0,c	;volatile
  3118  001966  D003               	goto	L3
  3119  001968                     L2:
  3120  001968  9484               	bcf	3972,2,c	;volatile
  3121  00196A  D004               	goto	l99
  3122  00196C                     l97:
  3123                           
  3124                           ;lab5.c: 95: else { PORTEbits.RE0 = 0; PORTEbits.RE1 = 0; PORTEbits.RE2 = 0; }
  3125  00196C  9084               	bcf	3972,0,c	;volatile
  3126  00196E                     L3:
  3127  00196E  9284               	bcf	3972,1,c	;volatile
  3128  001970  D7FB               	goto	L2
  3129  001972  D000               	goto	l99
  3130  001974                     l99:
  3131  001974  0012               	return		;funcret
  3132  001976                     __end_of_SET_RGB_D3:
  3133                           	opt stack 0
  3134                           tblptru	equ	0xFF8
  3135                           tblptrh	equ	0xFF7
  3136                           tblptrl	equ	0xFF6
  3137                           tablat	equ	0xFF5
  3138                           prodh	equ	0xFF4
  3139                           prodl	equ	0xFF3
  3140                           postinc0	equ	0xFEE
  3141                           postdec1	equ	0xFE5
  3142                           fsr1l	equ	0xFE1
  3143                           indf2	equ	0xFDF
  3144                           postinc2	equ	0xFDE
  3145                           postdec2	equ	0xFDD
  3146                           fsr2h	equ	0xFDA
  3147                           fsr2l	equ	0xFD9
  3148                           status	equ	0xFD8
  3149                           
  3150 ;; *************** function ___ftge *****************
  3151 ;; Defined at:
  3152 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftge.c"
  3153 ;; Parameters:    Size  Location     Type
  3154 ;;  ff1             3    0[COMRAM] float 
  3155 ;;  ff2             3    3[COMRAM] float 
  3156 ;; Auto vars:     Size  Location     Type
  3157 ;;		None
  3158 ;; Return value:  Size  Location     Type
  3159 ;;		None               void
  3160 ;; Registers used:
  3161 ;;		wreg, status,2, status,0
  3162 ;; Tracked objects:
  3163 ;;		On entry : 0/0
  3164 ;;		On exit  : 0/0
  3165 ;;		Unchanged: 0/0
  3166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3167 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3169 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3170 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3171 ;;Total ram usage:        9 bytes
  3172 ;; Hardware stack levels used:    1
  3173 ;; This function calls:
  3174 ;;		Nothing
  3175 ;; This function is called by:
  3176 ;;		_SET_RGB_D3
  3177 ;; This function uses a non-reentrant model
  3178 ;;
  3179                           
  3180                           	psect	text18
  3181  001A0C                     __ptext18:
  3182                           	opt stack 0
  3183  001A0C                     ___ftge:
  3184                           	opt stack 29
  3185                           
  3186                           ;incstack = 0
  3187  001A0C  AE03               	btfss	___ftge@ff1+2,7,c
  3188  001A0E  D017               	goto	l1489
  3189  001A10  C001  F007         	movff	___ftge@ff1,??___ftge
  3190  001A14  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  3191  001A18  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  3192  001A1C  1E07               	comf	??___ftge,f,c
  3193  001A1E  1E08               	comf	??___ftge+1,f,c
  3194  001A20  1E09               	comf	??___ftge+2,f,c
  3195  001A22  2A07               	incf	??___ftge,f,c
  3196  001A24  0E00               	movlw	0
  3197  001A26  2208               	addwfc	??___ftge+1,f,c
  3198  001A28  2209               	addwfc	??___ftge+2,f,c
  3199  001A2A  0E00               	movlw	0
  3200  001A2C  2407               	addwf	??___ftge,w,c
  3201  001A2E  6E01               	movwf	___ftge@ff1,c
  3202  001A30  0E00               	movlw	0
  3203  001A32  2008               	addwfc	??___ftge+1,w,c
  3204  001A34  6E02               	movwf	___ftge@ff1+1,c
  3205  001A36  0E80               	movlw	128
  3206  001A38  2009               	addwfc	??___ftge+2,w,c
  3207  001A3A  6E03               	movwf	___ftge@ff1+2,c
  3208  001A3C  D000               	goto	l1489
  3209  001A3E                     l1489:
  3210  001A3E  AE06               	btfss	___ftge@ff2+2,7,c
  3211  001A40  D017               	goto	l1493
  3212  001A42  C004  F007         	movff	___ftge@ff2,??___ftge
  3213  001A46  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  3214  001A4A  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  3215  001A4E  1E07               	comf	??___ftge,f,c
  3216  001A50  1E08               	comf	??___ftge+1,f,c
  3217  001A52  1E09               	comf	??___ftge+2,f,c
  3218  001A54  2A07               	incf	??___ftge,f,c
  3219  001A56  0E00               	movlw	0
  3220  001A58  2208               	addwfc	??___ftge+1,f,c
  3221  001A5A  2209               	addwfc	??___ftge+2,f,c
  3222  001A5C  0E00               	movlw	0
  3223  001A5E  2407               	addwf	??___ftge,w,c
  3224  001A60  6E04               	movwf	___ftge@ff2,c
  3225  001A62  0E00               	movlw	0
  3226  001A64  2008               	addwfc	??___ftge+1,w,c
  3227  001A66  6E05               	movwf	___ftge@ff2+1,c
  3228  001A68  0E80               	movlw	128
  3229  001A6A  2009               	addwfc	??___ftge+2,w,c
  3230  001A6C  6E06               	movwf	___ftge@ff2+2,c
  3231  001A6E  D000               	goto	l1493
  3232  001A70                     l1493:
  3233  001A70  0E00               	movlw	0
  3234  001A72  1A01               	xorwf	___ftge@ff1,f,c
  3235  001A74  0E00               	movlw	0
  3236  001A76  1A02               	xorwf	___ftge@ff1+1,f,c
  3237  001A78  0E80               	movlw	128
  3238  001A7A  1A03               	xorwf	___ftge@ff1+2,f,c
  3239  001A7C  0E00               	movlw	0
  3240  001A7E  1A04               	xorwf	___ftge@ff2,f,c
  3241  001A80  0E00               	movlw	0
  3242  001A82  1A05               	xorwf	___ftge@ff2+1,f,c
  3243  001A84  0E80               	movlw	128
  3244  001A86  1A06               	xorwf	___ftge@ff2+2,f,c
  3245  001A88  5004               	movf	___ftge@ff2,w,c
  3246  001A8A  5C01               	subwf	___ftge@ff1,w,c
  3247  001A8C  5005               	movf	___ftge@ff2+1,w,c
  3248  001A8E  5802               	subwfb	___ftge@ff1+1,w,c
  3249  001A90  5006               	movf	___ftge@ff2+2,w,c
  3250  001A92  5803               	subwfb	___ftge@ff1+2,w,c
  3251  001A94  B0D8               	btfsc	status,0,c
  3252  001A96  D002               	goto	l1499
  3253  001A98  90D8               	bcf	status,0,c
  3254  001A9A  D002               	goto	l565
  3255  001A9C                     l1499:
  3256  001A9C  80D8               	bsf	status,0,c
  3257  001A9E  D000               	goto	l565
  3258  001AA0                     l565:
  3259  001AA0  0012               	return		;funcret
  3260  001AA2                     __end_of___ftge:
  3261                           	opt stack 0
  3262                           tblptru	equ	0xFF8
  3263                           tblptrh	equ	0xFF7
  3264                           tblptrl	equ	0xFF6
  3265                           tablat	equ	0xFF5
  3266                           prodh	equ	0xFF4
  3267                           prodl	equ	0xFF3
  3268                           postinc0	equ	0xFEE
  3269                           postdec1	equ	0xFE5
  3270                           fsr1l	equ	0xFE1
  3271                           indf2	equ	0xFDF
  3272                           postinc2	equ	0xFDE
  3273                           postdec2	equ	0xFDD
  3274                           fsr2h	equ	0xFDA
  3275                           fsr2l	equ	0xFD9
  3276                           status	equ	0xFD8
  3277                           
  3278 ;; *************** function _SET_RGB_D2 *****************
  3279 ;; Defined at:
  3280 ;;		line 78 in file "lab5.c"
  3281 ;; Parameters:    Size  Location     Type
  3282 ;;  temp_f          2    0[COMRAM] int 
  3283 ;; Auto vars:     Size  Location     Type
  3284 ;;		None
  3285 ;; Return value:  Size  Location     Type
  3286 ;;		None               void
  3287 ;; Registers used:
  3288 ;;		wreg, status,2, status,0
  3289 ;; Tracked objects:
  3290 ;;		On entry : 0/0
  3291 ;;		On exit  : 0/0
  3292 ;;		Unchanged: 0/0
  3293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3294 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3297 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3298 ;;Total ram usage:        2 bytes
  3299 ;; Hardware stack levels used:    1
  3300 ;; This function calls:
  3301 ;;		Nothing
  3302 ;; This function is called by:
  3303 ;;		_main
  3304 ;; This function uses a non-reentrant model
  3305 ;;
  3306                           
  3307                           	psect	text19
  3308  001AA2                     __ptext19:
  3309                           	opt stack 0
  3310  001AA2                     _SET_RGB_D2:
  3311                           	opt stack 30
  3312                           
  3313                           ;lab5.c: 79: if (temp_f < 35) PORTC &= 0x18;
  3314                           
  3315                           ;incstack = 0
  3316  001AA2  BE02               	btfsc	SET_RGB_D2@temp_f+1,7,c
  3317  001AA4  D006               	goto	l1561
  3318  001AA6  5002               	movf	SET_RGB_D2@temp_f+1,w,c
  3319  001AA8  E107               	bnz	l1563
  3320  001AAA  0E23               	movlw	35
  3321  001AAC  5C01               	subwf	SET_RGB_D2@temp_f,w,c
  3322  001AAE  B0D8               	btfsc	status,0,c
  3323  001AB0  D003               	goto	l1563
  3324  001AB2                     l1561:
  3325  001AB2  0E18               	movlw	24
  3326  001AB4  1682               	andwf	3970,f,c	;volatile
  3327  001AB6  D03F               	goto	l88
  3328  001AB8                     l1563:
  3329                           
  3330                           ;lab5.c: 80: else if (temp_f < 45) PORTC |= 0x01;
  3331  001AB8  BE02               	btfsc	SET_RGB_D2@temp_f+1,7,c
  3332  001ABA  D006               	goto	l1565
  3333  001ABC  5002               	movf	SET_RGB_D2@temp_f+1,w,c
  3334  001ABE  E106               	bnz	l1567
  3335  001AC0  0E2D               	movlw	45
  3336  001AC2  5C01               	subwf	SET_RGB_D2@temp_f,w,c
  3337  001AC4  B0D8               	btfsc	status,0,c
  3338  001AC6  D002               	goto	l1567
  3339  001AC8                     l1565:
  3340  001AC8  8082               	bsf	3970,0,c	;volatile
  3341  001ACA  D035               	goto	l88
  3342  001ACC                     l1567:
  3343                           
  3344                           ;lab5.c: 81: else if (temp_f < 55) PORTC |= 0x02;
  3345  001ACC  BE02               	btfsc	SET_RGB_D2@temp_f+1,7,c
  3346  001ACE  D006               	goto	l1569
  3347  001AD0  5002               	movf	SET_RGB_D2@temp_f+1,w,c
  3348  001AD2  E106               	bnz	l1571
  3349  001AD4  0E37               	movlw	55
  3350  001AD6  5C01               	subwf	SET_RGB_D2@temp_f,w,c
  3351  001AD8  B0D8               	btfsc	status,0,c
  3352  001ADA  D002               	goto	l1571
  3353  001ADC                     l1569:
  3354  001ADC  8282               	bsf	3970,1,c	;volatile
  3355  001ADE  D02B               	goto	l88
  3356  001AE0                     l1571:
  3357                           
  3358                           ;lab5.c: 82: else if (temp_f < 65) PORTC |= 0x03;
  3359  001AE0  BE02               	btfsc	SET_RGB_D2@temp_f+1,7,c
  3360  001AE2  D006               	goto	l1573
  3361  001AE4  5002               	movf	SET_RGB_D2@temp_f+1,w,c
  3362  001AE6  E106               	bnz	l1575
  3363  001AE8  0E41               	movlw	65
  3364  001AEA  5C01               	subwf	SET_RGB_D2@temp_f,w,c
  3365  001AEC  B0D8               	btfsc	status,0,c
  3366  001AEE  D002               	goto	l1575
  3367  001AF0                     l1573:
  3368  001AF0  0E03               	movlw	3
  3369  001AF2  D01F               	goto	L6
  3370  001AF4                     l1575:
  3371                           
  3372                           ;lab5.c: 83: else if (temp_f < 75) PORTC |= 0x04;
  3373  001AF4  BE02               	btfsc	SET_RGB_D2@temp_f+1,7,c
  3374  001AF6  D006               	goto	l1577
  3375  001AF8  5002               	movf	SET_RGB_D2@temp_f+1,w,c
  3376  001AFA  E106               	bnz	l1579
  3377  001AFC  0E4B               	movlw	75
  3378  001AFE  5C01               	subwf	SET_RGB_D2@temp_f,w,c
  3379  001B00  B0D8               	btfsc	status,0,c
  3380  001B02  D002               	goto	l1579
  3381  001B04                     l1577:
  3382  001B04  8482               	bsf	3970,2,c	;volatile
  3383  001B06  D017               	goto	l88
  3384  001B08                     l1579:
  3385                           
  3386                           ;lab5.c: 84: else if (temp_f < 78) PORTC |= 0x05;
  3387  001B08  BE02               	btfsc	SET_RGB_D2@temp_f+1,7,c
  3388  001B0A  D006               	goto	l1581
  3389  001B0C  5002               	movf	SET_RGB_D2@temp_f+1,w,c
  3390  001B0E  E106               	bnz	l1583
  3391  001B10  0E4E               	movlw	78
  3392  001B12  5C01               	subwf	SET_RGB_D2@temp_f,w,c
  3393  001B14  B0D8               	btfsc	status,0,c
  3394  001B16  D002               	goto	l1583
  3395  001B18                     l1581:
  3396  001B18  0E05               	movlw	5
  3397  001B1A  D00B               	goto	L6
  3398  001B1C                     l1583:
  3399                           
  3400                           ;lab5.c: 85: else if (temp_f < 82) PORTC |= 0x06;
  3401  001B1C  BE02               	btfsc	SET_RGB_D2@temp_f+1,7,c
  3402  001B1E  D006               	goto	l1585
  3403  001B20  5002               	movf	SET_RGB_D2@temp_f+1,w,c
  3404  001B22  E106               	bnz	l1587
  3405  001B24  0E52               	movlw	82
  3406  001B26  5C01               	subwf	SET_RGB_D2@temp_f,w,c
  3407  001B28  B0D8               	btfsc	status,0,c
  3408  001B2A  D002               	goto	l1587
  3409  001B2C                     l1585:
  3410  001B2C  0E06               	movlw	6
  3411  001B2E  D001               	goto	L6
  3412  001B30                     l1587:
  3413                           
  3414                           ;lab5.c: 86: else PORTC |= 0x07;
  3415  001B30  0E07               	movlw	7
  3416  001B32                     L6:
  3417  001B32  1282               	iorwf	3970,f,c	;volatile
  3418  001B34  D000               	goto	l88
  3419  001B36                     l88:
  3420  001B36  0012               	return		;funcret
  3421  001B38                     __end_of_SET_RGB_D2:
  3422                           	opt stack 0
  3423                           tblptru	equ	0xFF8
  3424                           tblptrh	equ	0xFF7
  3425                           tblptrl	equ	0xFF6
  3426                           tablat	equ	0xFF5
  3427                           prodh	equ	0xFF4
  3428                           prodl	equ	0xFF3
  3429                           postinc0	equ	0xFEE
  3430                           postdec1	equ	0xFE5
  3431                           fsr1l	equ	0xFE1
  3432                           indf2	equ	0xFDF
  3433                           postinc2	equ	0xFDE
  3434                           postdec2	equ	0xFDD
  3435                           fsr2h	equ	0xFDA
  3436                           fsr2l	equ	0xFD9
  3437                           status	equ	0xFD8
  3438                           
  3439 ;; *************** function _SET_RGB_D1 *****************
  3440 ;; Defined at:
  3441 ;;		line 70 in file "lab5.c"
  3442 ;; Parameters:    Size  Location     Type
  3443 ;;  temp_up         2    0[COMRAM] int 
  3444 ;; Auto vars:     Size  Location     Type
  3445 ;;		None
  3446 ;; Return value:  Size  Location     Type
  3447 ;;		None               void
  3448 ;; Registers used:
  3449 ;;		wreg, status,2, status,0
  3450 ;; Tracked objects:
  3451 ;;		On entry : 0/0
  3452 ;;		On exit  : 0/0
  3453 ;;		Unchanged: 0/0
  3454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3455 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3458 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3459 ;;Total ram usage:        2 bytes
  3460 ;; Hardware stack levels used:    1
  3461 ;; This function calls:
  3462 ;;		Nothing
  3463 ;; This function is called by:
  3464 ;;		_main
  3465 ;; This function uses a non-reentrant model
  3466 ;;
  3467                           
  3468                           	psect	text20
  3469  001DA6                     __ptext20:
  3470                           	opt stack 0
  3471  001DA6                     _SET_RGB_D1:
  3472                           	opt stack 30
  3473                           
  3474                           ;lab5.c: 71: if(temp_up >= 7)
  3475                           
  3476                           ;incstack = 0
  3477  001DA6  BE02               	btfsc	SET_RGB_D1@temp_up+1,7,c
  3478  001DA8  D008               	goto	l1557
  3479  001DAA  5002               	movf	SET_RGB_D1@temp_up+1,w,c
  3480  001DAC  E104               	bnz	u1340
  3481  001DAE  0E07               	movlw	7
  3482  001DB0  5C01               	subwf	SET_RGB_D1@temp_up,w,c
  3483  001DB2  A0D8               	btfss	status,0,c
  3484  001DB4  D002               	goto	l1557
  3485  001DB6                     u1340:
  3486                           
  3487                           ;lab5.c: 72: {PORTC = (7<<3);}
  3488  001DB6  0E38               	movlw	56
  3489  001DB8  D003               	goto	L7
  3490  001DBA                     l1557:
  3491                           
  3492                           ;lab5.c: 73: else
  3493                           ;lab5.c: 74: {PORTC = (temp_up<<3);}
  3494  001DBA  3801               	swapf	SET_RGB_D1@temp_up,w,c
  3495  001DBC  42E8               	rrncf	wreg,f,c
  3496  001DBE  0BF8               	andlw	248
  3497  001DC0                     L7:
  3498  001DC0  6E82               	movwf	3970,c	;volatile
  3499  001DC2  D000               	goto	l71
  3500  001DC4                     l71:
  3501  001DC4  0012               	return		;funcret
  3502  001DC6                     __end_of_SET_RGB_D1:
  3503                           	opt stack 0
  3504                           tblptru	equ	0xFF8
  3505                           tblptrh	equ	0xFF7
  3506                           tblptrl	equ	0xFF6
  3507                           tablat	equ	0xFF5
  3508                           prodh	equ	0xFF4
  3509                           prodl	equ	0xFF3
  3510                           postinc0	equ	0xFEE
  3511                           wreg	equ	0xFE8
  3512                           postdec1	equ	0xFE5
  3513                           fsr1l	equ	0xFE1
  3514                           indf2	equ	0xFDF
  3515                           postinc2	equ	0xFDE
  3516                           postdec2	equ	0xFDD
  3517                           fsr2h	equ	0xFDA
  3518                           fsr2l	equ	0xFD9
  3519                           status	equ	0xFD8
  3520                           
  3521 ;; *************** function _Init_UART *****************
  3522 ;; Defined at:
  3523 ;;		line 27 in file "lab5.c"
  3524 ;; Parameters:    Size  Location     Type
  3525 ;;		None
  3526 ;; Auto vars:     Size  Location     Type
  3527 ;;		None
  3528 ;; Return value:  Size  Location     Type
  3529 ;;		None               void
  3530 ;; Registers used:
  3531 ;;		wreg, status,2, cstack
  3532 ;; Tracked objects:
  3533 ;;		On entry : 0/0
  3534 ;;		On exit  : 0/0
  3535 ;;		Unchanged: 0/0
  3536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3541 ;;Total ram usage:        0 bytes
  3542 ;; Hardware stack levels used:    1
  3543 ;; Hardware stack levels required when called:    1
  3544 ;; This function calls:
  3545 ;;		_OpenUSART
  3546 ;; This function is called by:
  3547 ;;		_main
  3548 ;; This function uses a non-reentrant model
  3549 ;;
  3550                           
  3551                           	psect	text21
  3552  001DDC                     __ptext21:
  3553                           	opt stack 0
  3554  001DDC                     _Init_UART:
  3555                           	opt stack 29
  3556                           
  3557                           ;lab5.c: 28: OpenUSART(0b01111111 & 0b10111111 &
  3558                           ;lab5.c: 29: 0b11111110 & 0b11111101 & 0b11111111 &
  3559                           ;lab5.c: 30: 0b11111111, 25);
  3560                           
  3561                           ;incstack = 0
  3562  001DDC  0E00               	movlw	0
  3563  001DDE  6E02               	movwf	OpenUSART@spbrg+1,c
  3564  001DE0  0E19               	movlw	25
  3565  001DE2  6E01               	movwf	OpenUSART@spbrg,c
  3566  001DE4  0E3C               	movlw	60
  3567  001DE6  ECDD  F00D         	call	_OpenUSART
  3568                           
  3569                           ;lab5.c: 31: OSCCON = 0x60;
  3570  001DEA  0E60               	movlw	96
  3571  001DEC  6ED3               	movwf	4051,c	;volatile
  3572  001DEE  0012               	return		;funcret
  3573  001DF0                     __end_of_Init_UART:
  3574                           	opt stack 0
  3575                           tblptru	equ	0xFF8
  3576                           tblptrh	equ	0xFF7
  3577                           tblptrl	equ	0xFF6
  3578                           tablat	equ	0xFF5
  3579                           prodh	equ	0xFF4
  3580                           prodl	equ	0xFF3
  3581                           postinc0	equ	0xFEE
  3582                           wreg	equ	0xFE8
  3583                           postdec1	equ	0xFE5
  3584                           fsr1l	equ	0xFE1
  3585                           indf2	equ	0xFDF
  3586                           postinc2	equ	0xFDE
  3587                           postdec2	equ	0xFDD
  3588                           fsr2h	equ	0xFDA
  3589                           fsr2l	equ	0xFD9
  3590                           status	equ	0xFD8
  3591                           
  3592 ;; *************** function _OpenUSART *****************
  3593 ;; Defined at:
  3594 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\uopen.c"
  3595 ;; Parameters:    Size  Location     Type
  3596 ;;  config          1    wreg     unsigned char 
  3597 ;;  spbrg           2    0[COMRAM] unsigned int 
  3598 ;; Auto vars:     Size  Location     Type
  3599 ;;  config          1    2[COMRAM] unsigned char 
  3600 ;; Return value:  Size  Location     Type
  3601 ;;		None               void
  3602 ;; Registers used:
  3603 ;;		wreg, status,2
  3604 ;; Tracked objects:
  3605 ;;		On entry : 0/0
  3606 ;;		On exit  : 0/0
  3607 ;;		Unchanged: 0/0
  3608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3609 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3610 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3612 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3613 ;;Total ram usage:        3 bytes
  3614 ;; Hardware stack levels used:    1
  3615 ;; This function calls:
  3616 ;;		Nothing
  3617 ;; This function is called by:
  3618 ;;		_Init_UART
  3619 ;; This function uses a non-reentrant model
  3620 ;;
  3621                           
  3622                           	psect	text22
  3623  001BBA                     __ptext22:
  3624                           	opt stack 0
  3625  001BBA                     _OpenUSART:
  3626                           	opt stack 29
  3627                           
  3628                           ;incstack = 0
  3629                           ;OpenUSART@config stored from wreg
  3630  001BBA  6E03               	movwf	OpenUSART@config,c
  3631  001BBC  0E00               	movlw	0
  3632  001BBE  6EAC               	movwf	4012,c	;volatile
  3633  001BC0  0E00               	movlw	0
  3634  001BC2  6EAB               	movwf	4011,c	;volatile
  3635  001BC4  A003               	btfss	OpenUSART@config,0,c
  3636  001BC6  D002               	goto	l1405
  3637  001BC8  88AC               	bsf	4012,4,c	;volatile
  3638  001BCA  D000               	goto	l1405
  3639  001BCC                     l1405:
  3640  001BCC  A203               	btfss	OpenUSART@config,1,c
  3641  001BCE  D003               	goto	l1409
  3642  001BD0  8CAC               	bsf	4012,6,c	;volatile
  3643  001BD2  8CAB               	bsf	4011,6,c	;volatile
  3644  001BD4  D000               	goto	l1409
  3645  001BD6                     l1409:
  3646  001BD6  A403               	btfss	OpenUSART@config,2,c
  3647  001BD8  D002               	goto	l1413
  3648  001BDA  8EAC               	bsf	4012,7,c	;volatile
  3649  001BDC  D000               	goto	l1413
  3650  001BDE                     l1413:
  3651  001BDE  A603               	btfss	OpenUSART@config,3,c
  3652  001BE0  D002               	goto	l164
  3653  001BE2  88AB               	bsf	4011,4,c	;volatile
  3654  001BE4  D002               	goto	l1417
  3655  001BE6                     l164:
  3656  001BE6  8AAB               	bsf	4011,5,c	;volatile
  3657  001BE8  D000               	goto	l1417
  3658  001BEA                     l1417:
  3659  001BEA  B803               	btfsc	OpenUSART@config,4,c
  3660  001BEC  84AC               	bsf	4012,2,c	;volatile
  3661  001BEE  989E               	bcf	3998,4,c	;volatile
  3662  001BF0  AA03               	btfss	OpenUSART@config,5,c
  3663  001BF2  D002               	goto	l1425
  3664  001BF4  86AB               	bsf	4011,3,c	;volatile
  3665  001BF6  D000               	goto	l1425
  3666  001BF8                     l1425:
  3667  001BF8  AC03               	btfss	OpenUSART@config,6,c
  3668  001BFA  D002               	goto	l168
  3669  001BFC  8A9D               	bsf	3997,5,c	;volatile
  3670  001BFE  D001               	goto	l169
  3671  001C00                     l168:
  3672  001C00  9A9D               	bcf	3997,5,c	;volatile
  3673  001C02                     l169:
  3674  001C02  9A9E               	bcf	3998,5,c	;volatile
  3675  001C04  AE03               	btfss	OpenUSART@config,7,c
  3676  001C06  D002               	goto	l170
  3677  001C08  889D               	bsf	3997,4,c	;volatile
  3678  001C0A  D001               	goto	l171
  3679  001C0C                     l170:
  3680  001C0C  989D               	bcf	3997,4,c	;volatile
  3681  001C0E                     l171:
  3682  001C0E  C001  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  3683  001C12  5002               	movf	OpenUSART@spbrg+1,w,c
  3684  001C14  6EB0               	movwf	4016,c	;volatile
  3685  001C16  8AAC               	bsf	4012,5,c	;volatile
  3686  001C18  8EAB               	bsf	4011,7,c	;volatile
  3687  001C1A  9C94               	bcf	3988,6,c	;volatile
  3688  001C1C  8E94               	bsf	3988,7,c	;volatile
  3689  001C1E  B8AC               	btfsc	4012,4,c	;volatile
  3690  001C20  BEAC               	btfsc	4012,7,c	;volatile
  3691  001C22  D002               	goto	l173
  3692  001C24  8C94               	bsf	3988,6,c	;volatile
  3693  001C26  D000               	goto	l173
  3694  001C28                     l173:
  3695  001C28  0012               	return		;funcret
  3696  001C2A                     __end_of_OpenUSART:
  3697                           	opt stack 0
  3698                           tblptru	equ	0xFF8
  3699                           tblptrh	equ	0xFF7
  3700                           tblptrl	equ	0xFF6
  3701                           tablat	equ	0xFF5
  3702                           prodh	equ	0xFF4
  3703                           prodl	equ	0xFF3
  3704                           postinc0	equ	0xFEE
  3705                           wreg	equ	0xFE8
  3706                           postdec1	equ	0xFE5
  3707                           fsr1l	equ	0xFE1
  3708                           indf2	equ	0xFDF
  3709                           postinc2	equ	0xFDE
  3710                           postdec2	equ	0xFDD
  3711                           fsr2h	equ	0xFDA
  3712                           fsr2l	equ	0xFD9
  3713                           status	equ	0xFD8
  3714                           
  3715 ;; *************** function _Init_TRIS *****************
  3716 ;; Defined at:
  3717 ;;		line 47 in file "lab5.c"
  3718 ;; Parameters:    Size  Location     Type
  3719 ;;		None
  3720 ;; Auto vars:     Size  Location     Type
  3721 ;;		None
  3722 ;; Return value:  Size  Location     Type
  3723 ;;		None               void
  3724 ;; Registers used:
  3725 ;;		wreg, status,2
  3726 ;; Tracked objects:
  3727 ;;		On entry : 0/0
  3728 ;;		On exit  : 0/0
  3729 ;;		Unchanged: 0/0
  3730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3735 ;;Total ram usage:        0 bytes
  3736 ;; Hardware stack levels used:    1
  3737 ;; This function calls:
  3738 ;;		Nothing
  3739 ;; This function is called by:
  3740 ;;		_main
  3741 ;; This function uses a non-reentrant model
  3742 ;;
  3743                           
  3744                           	psect	text23
  3745  001DC6                     __ptext23:
  3746                           	opt stack 0
  3747  001DC6                     _Init_TRIS:
  3748                           	opt stack 30
  3749                           
  3750                           ;lab5.c: 48: TRISA = 0x0F;
  3751                           
  3752                           ;incstack = 0
  3753  001DC6  0E0F               	movlw	15
  3754  001DC8  6E92               	movwf	3986,c	;volatile
  3755                           
  3756                           ;lab5.c: 49: TRISB = 0x00;
  3757  001DCA  0E00               	movlw	0
  3758  001DCC  6E93               	movwf	3987,c	;volatile
  3759                           
  3760                           ;lab5.c: 50: TRISC = 0x00;
  3761  001DCE  0E00               	movlw	0
  3762  001DD0  6E94               	movwf	3988,c	;volatile
  3763                           
  3764                           ;lab5.c: 51: TRISD = 0x00;
  3765  001DD2  0E00               	movlw	0
  3766  001DD4  6E95               	movwf	3989,c	;volatile
  3767                           
  3768                           ;lab5.c: 52: TRISE = 0x00;
  3769  001DD6  0E00               	movlw	0
  3770  001DD8  6E96               	movwf	3990,c	;volatile
  3771  001DDA  0012               	return		;funcret
  3772  001DDC                     __end_of_Init_TRIS:
  3773                           	opt stack 0
  3774                           tblptru	equ	0xFF8
  3775                           tblptrh	equ	0xFF7
  3776                           tblptrl	equ	0xFF6
  3777                           tablat	equ	0xFF5
  3778                           prodh	equ	0xFF4
  3779                           prodl	equ	0xFF3
  3780                           postinc0	equ	0xFEE
  3781                           wreg	equ	0xFE8
  3782                           postdec1	equ	0xFE5
  3783                           fsr1l	equ	0xFE1
  3784                           indf2	equ	0xFDF
  3785                           postinc2	equ	0xFDE
  3786                           postdec2	equ	0xFDD
  3787                           fsr2h	equ	0xFDA
  3788                           fsr2l	equ	0xFD9
  3789                           status	equ	0xFD8
  3790                           
  3791 ;; *************** function _Init_ADC *****************
  3792 ;; Defined at:
  3793 ;;		line 41 in file "lab5.c"
  3794 ;; Parameters:    Size  Location     Type
  3795 ;;		None
  3796 ;; Auto vars:     Size  Location     Type
  3797 ;;		None
  3798 ;; Return value:  Size  Location     Type
  3799 ;;		None               void
  3800 ;; Registers used:
  3801 ;;		wreg, status,2
  3802 ;; Tracked objects:
  3803 ;;		On entry : 0/0
  3804 ;;		On exit  : 0/0
  3805 ;;		Unchanged: 0/0
  3806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3811 ;;Total ram usage:        0 bytes
  3812 ;; Hardware stack levels used:    1
  3813 ;; This function calls:
  3814 ;;		Nothing
  3815 ;; This function is called by:
  3816 ;;		_main
  3817 ;; This function uses a non-reentrant model
  3818 ;;
  3819                           
  3820                           	psect	text24
  3821  001DFE                     __ptext24:
  3822                           	opt stack 0
  3823  001DFE                     _Init_ADC:
  3824                           	opt stack 30
  3825                           
  3826                           ;lab5.c: 42: ADCON0 = 0x01 * 4 + 1;
  3827                           
  3828                           ;incstack = 0
  3829  001DFE  0E05               	movlw	5
  3830  001E00  6EC2               	movwf	4034,c	;volatile
  3831                           
  3832                           ;lab5.c: 43: ADCON1 = 0x1B;
  3833  001E02  0E1B               	movlw	27
  3834  001E04  6EC1               	movwf	4033,c	;volatile
  3835                           
  3836                           ;lab5.c: 44: ADCON2 = 0xA9;
  3837  001E06  0EA9               	movlw	169
  3838  001E08  6EC0               	movwf	4032,c	;volatile
  3839  001E0A  0012               	return		;funcret
  3840  001E0C                     __end_of_Init_ADC:
  3841                           	opt stack 0
  3842                           tblptru	equ	0xFF8
  3843                           tblptrh	equ	0xFF7
  3844                           tblptrl	equ	0xFF6
  3845                           tablat	equ	0xFF5
  3846                           prodh	equ	0xFF4
  3847                           prodl	equ	0xFF3
  3848                           postinc0	equ	0xFEE
  3849                           wreg	equ	0xFE8
  3850                           postdec1	equ	0xFE5
  3851                           fsr1l	equ	0xFE1
  3852                           indf2	equ	0xFDF
  3853                           postinc2	equ	0xFDE
  3854                           postdec2	equ	0xFDD
  3855                           fsr2h	equ	0xFDA
  3856                           fsr2l	equ	0xFD9
  3857                           status	equ	0xFD8
  3858                           tblptru	equ	0xFF8
  3859                           tblptrh	equ	0xFF7
  3860                           tblptrl	equ	0xFF6
  3861                           tablat	equ	0xFF5
  3862                           prodh	equ	0xFF4
  3863                           prodl	equ	0xFF3
  3864                           postinc0	equ	0xFEE
  3865                           wreg	equ	0xFE8
  3866                           postdec1	equ	0xFE5
  3867                           fsr1l	equ	0xFE1
  3868                           indf2	equ	0xFDF
  3869                           postinc2	equ	0xFDE
  3870                           postdec2	equ	0xFDD
  3871                           fsr2h	equ	0xFDA
  3872                           fsr2l	equ	0xFD9
  3873                           status	equ	0xFD8
  3874                           
  3875                           	psect	rparam
  3876  0000                     tblptru	equ	0xFF8
  3877                           tblptrh	equ	0xFF7
  3878                           tblptrl	equ	0xFF6
  3879                           tablat	equ	0xFF5
  3880                           prodh	equ	0xFF4
  3881                           prodl	equ	0xFF3
  3882                           postinc0	equ	0xFEE
  3883                           wreg	equ	0xFE8
  3884                           postdec1	equ	0xFE5
  3885                           fsr1l	equ	0xFE1
  3886                           indf2	equ	0xFDF
  3887                           postinc2	equ	0xFDE
  3888                           postdec2	equ	0xFDD
  3889                           fsr2h	equ	0xFDA
  3890                           fsr2l	equ	0xFD9
  3891                           status	equ	0xFD8


Data Sizes:
    Strings     69
    Constant    10
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     71      81
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 35
		 -> STR_2(CODE[34]), STR_1(CODE[35]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->___ftdiv
    _printf->___fttol
    ___lwmod->___lwdiv
    ___ftmul->___awtoft
    ___ftdiv->___ftadd
    ___ftadd->___ftmul
    ___awtoft->___ftpack
    _SET_RGB_D3->___awtoft
    _Init_UART->_OpenUSART

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0   13287
                                             54 COMRAM    17    17      0
                           _Init_ADC
                          _Init_TRIS
                          _Init_UART
                         _SET_RGB_D1
                         _SET_RGB_D2
                         _SET_RGB_D3
                         _Set_ADCON0
                         _WAIT_1_SEC
                            ___awdiv
                            ___awmod
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                            ___fttol
                       _get_full_ADC
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              23    17      6    1040
                                             15 COMRAM    14     8      6
                            ___fttol (ARG)
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     265
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     268
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _get_full_ADC                                         6     4      2      23
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     358
                                              0 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (1) ___ftneg                                              3     0      3      98
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    2325
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    2173
                                             39 COMRAM    15     9      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftadd                                             12     6      6    2919
                                             27 COMRAM    12     6      6
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    1904
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1707
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     402
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     406
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _WAIT_1_SEC                                           2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Set_ADCON0                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SET_RGB_D3                                           3     0      3     701
                                             12 COMRAM     3     0      3
                           ___awtoft (ARG)
                             ___ftge
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     560
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (1) _SET_RGB_D2                                           2     0      2     207
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SET_RGB_D1                                           2     0      2      97
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Init_UART                                            0     0      0     273
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     273
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _Init_TRIS                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init_ADC
   _Init_TRIS
   _Init_UART
     _OpenUSART
   _SET_RGB_D1
   _SET_RGB_D2
   _SET_RGB_D3
     ___awtoft (ARG)
       ___ftpack
     ___ftge (ARG)
   _Set_ADCON0
   _WAIT_1_SEC
   ___awdiv
   ___awmod
   ___awtoft
     ___ftpack
   ___ftadd
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftneg (ARG)
     ___ftpack (ARG)
   ___ftdiv
     ___ftadd (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftneg (ARG)
     ___ftpack (ARG)
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___ftneg
   ___fttol
   _get_full_ADC
   _printf
     ___fttol (ARG)
     ___lwdiv (ARG)
     ___lwmod (ARG)
       ___lwdiv (ARG)
     _putch (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     47      51       1       63.8%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      51      34        0.0%
DATA                 0      0      51       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Oct 07 16:45:46 2025

                     l60 1D3C                       l71 1DC4                       l63 1D5C  
                     l48 1DF4                       l88 1B36                       l97 196C  
                     l99 1974             ___awdiv@sign 0006             ___ftadd@exp1 0027  
           ___ftadd@exp2 0026             ___ftadd@sign 0025                      l104 1DA4  
                    l140 154A                      l170 1C0C                      l171 1C0E  
                    l164 1BE6                      l173 1C28                      l168 1C00  
                    l169 1C02                      l524 128E                      l525 140C  
                    l382 1BB8                      l528 12B8                      l704 1CC8  
                    l369 1A0A                      l394 1D0C                      l539 137A  
                    l571 1642                      l484 18D0                      l548 1396  
                    l556 180A                      l565 1AA0                      l581 1D74  
                    l495 18A8                      l559 17D6                      l592 1728  
                    l694 1C7C                      l993 1D8A                      l997 1D9E  
           ___awmod@sign 0006                      prod 000FF3                      wreg 000FE8  
           __CFG_LVP$OFF 000000             ___ftdiv@cntr 0031             ___ftdiv@sign 0036  
           __CFG_WDT$OFF 000000                     l1413 1BDE                     l1405 1BCC  
                   l1511 1C4A                     l1425 1BF8                     l1417 1BEA  
                   l1409 1BD6                     l1601 1944                     l1521 1C70  
                   l1513 1C52                     l1531 1C9E                     l1611 1428  
                   l1461 1858                     l1453 181C                     l1509 1C40  
                   l1533 1CA6                     l1711 13B4                     l1703 1362  
                   l1615 1436                     l1607 1418                     l1561 1AB2  
                   l1481 18C2                     l1465 1870                     l1457 182C  
                   l1721 13E6                     l1705 136E                     l1801 15D8  
                   l1537 1CBC                     l1529 1C94                     l1641 14BE  
                   l1633 1496                     l1617 145C                     l1571 1AE0  
                   l1563 1AB8                     l1475 18B0                     l1467 1890  
                   l1459 1838                     l1731 1748                     l1811 1606  
                   l1651 1522                     l1627 1486                     l1557 1DBA  
                   l1581 1B18                     l1573 1AF0                     l1565 1AC8  
                   l1493 1A70                     l1469 189C                     l1733 1762  
                   l1805 15EE                     l1645 14D2                     l1637 14BA  
                   l1629 148A                     l1653 152E                     l1583 1B1C  
                   l1575 1AF4                     l1567 1ACC                     l1663 129C  
                   l1815 161C                     l1807 15F4                     l1647 14D8  
                   l1585 1B2C                     l1577 1B04                     l1569 1ADC  
                   l1489 1A3E                     l1593 18F6                     l1841 19BE  
                   l1833 199E                     l1737 1770                     l1921 1662  
                   l1587 1B30                     l1579 1B08                     l1499 1A9C  
                   l1851 19E4                     l1843 19C6                     l1827 198C  
                   l1907 1CE8                     l1691 131E                     l1675 12D2  
                   l1597 191E                     l1693 132A                     l1685 12FA  
                   l1669 12C6                     l1757 17B0                     l1839 19B4  
                   l1855 19F0                     l1871 1B4E                     l1695 1336  
                   l1767 17E4                     l1783 1592                     l1951 16F4  
                   l1943 16CC                     l1881 1B74                     l1697 133E  
                   l1777 156A                     l1945 16D2                     l1953 16FE  
                   l1859 1A00                     l1883 1B7C                     l1891 1B9E  
                   l1875 1B5C                     l1779 1584                     l1939 16BC  
                   l1963 1060                     l1797 15C6                     l1957 1716  
                   l1949 16E6                     l1895 1BAE                     l1887 1B92  
                   l1879 1B6A                     STR_1 100B                     STR_2 102E  
                   u2001 1654                     u2020 1680                     u2025 1678  
                   u1340 1DB6                     u1541 125A                     u1551 126E  
                   u1801 155C                     u1821 157A                     u1751 173A  
                   u1771 1758                     _TRMT 007D61                     _main 1052  
           ___ftpack@arg 0001             ___ftpack@exp 0004           ??_get_full_ADC 0003  
                   fsr2h 000FDA                     fsr1l 000FE1                     indf2 000FDF  
                   fsr2l 000FD9                     prodh 000FF4                     prodl 000FF3  
                   start 0000             ___ftmul@cntr 001A             ___param_bank 000010  
           ___ftmul@sign 001B             ___fttol@exp1 000F             ___fttol@lval 000B  
           main@mVolt_in 003D              ?_WAIT_1_SEC 0001                    ?_main 0001  
        __end_of___awdiv 1A0C          __end_of___ftadd 140E          __end_of___awmod 1BBA  
        __end_of___ftdiv 180C          __end_of___ftneg 1D82          __end_of___ftmul 1644  
        ___awdiv@divisor 0003          __end_of___fttol 172A          __end_of___lwdiv 1C86  
        __end_of___lwmod 1CD2          ___awdiv@counter 0005                    _RCSTA 000FAB  
                  _SPBRG 000FAF                    _PORTB 000F81                    _PORTC 000F82  
                  _PORTD 000F83                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TRISE 000F96  
                  _TXREG 000FAD                    _TXSTA 000FAC              ?_SET_RGB_D1 0001  
            ?_SET_RGB_D2 0001              ?_SET_RGB_D3 000D            ___awtoft@sign 000C  
        __end_of_dpowers 100B            ___ftpack@sign 0005                    _putch 1DF0  
         __CFG_BOREN$OFF 000000                    tablat 000FF5                    status 000FD8  
        __initialization 1D0E             __end_of_main 124A         __end_of_Init_ADC 1E0C  
                 ??_main 0037            ___fttol@sign1 000A               _Set_ADCON0 1E0C  
          __activetblptr 000002                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _ADCON2 000FC0                   _ADRESH 000FC4                   _ADRESL 000FC3  
       ___awdiv@dividend 0001         __end_of___awtoft 1D0E                   ?_putch 0001  
       __end_of___ftpack 18D2                   _OSCCON 000FD3       __size_of_Init_UART 0014  
     __size_of_Init_TRIS 0016                   _SPBRGH 000FB0      __size_of_WAIT_1_SEC 0024  
     main@mVolt_in_float 0041      __size_of_SET_RGB_D1 0020      __size_of_SET_RGB_D2 0096  
    __size_of_SET_RGB_D3 00A4       __size_of_OpenUSART 0070                   ___ftge 1A0C  
              ??___awdiv 0005                ??___ftadd 0022                ??___awmod 0005  
              ??___ftdiv 002E                ??___ftneg 0004                ??___ftmul 0013  
              ??___fttol 0005                ??___lwdiv 0005                ??___lwmod 000C  
       ___awdiv@quotient 0007          ___awmod@divisor 0003          ___awmod@counter 0005  
                 _printf 140E    ___ftmul@f3_as_product 0017     __end_of_get_full_ADC 1D5E  
           __pdataCOMRAM 0048             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8                   putch@c 0001  
             __accesstop 0080  __end_of__initialization 1D2E               ___ftadd@f1 001C  
             ___ftadd@f2 001F               ___ftge@ff1 0001               ___ftge@ff2 0004  
          ___rparam_used 000001               ___ftdiv@f1 0028               ___ftdiv@f2 002B  
             ___ftdiv@f3 0032               ___ftneg@f1 0001               ___awtoft@c 0009  
             ___ftmul@f1 000D               ___ftmul@f2 0010               ___fttol@f1 0001  
         __pcstackCOMRAM 0001            __end_of_putch 1DFE        __end_of_Init_UART 1DF0  
      __end_of_Init_TRIS 1DDC              ?_Set_ADCON0 0001        __end_of_OpenUSART 1C2A  
                ??_putch 0001                ?_Init_ADC 0001           main@mVolt_in_1 0044  
                ?___ftge 0001             ??_WAIT_1_SEC 0001                ?___awtoft 0009  
              ?___ftpack 0001                  ?_printf 0010             ??_SET_RGB_D1 0003  
           ??_SET_RGB_D2 0003             ??_SET_RGB_D3 0010              WAIT_1_SEC@j 0001  
       SET_RGB_D2@temp_f 0001               ??_Init_ADC 0001       __end_of_WAIT_1_SEC 1DA6  
    __size_of_Set_ADCON0 000C                  __Hparam 0000                  __Lparam 0000  
     __end_of_SET_RGB_D1 1DC6       __end_of_SET_RGB_D2 1B38       __end_of_SET_RGB_D3 1976  
        __size_of___ftge 0096                  ___awdiv 1976                  ___ftadd 124A  
                ___awmod 1B38                  ___ftdiv 172A                  ___ftneg 1D5E  
                ___ftmul 154C                  ___fttol 1644                  ___lwdiv 1C2A  
                ___lwmod 1C86    __size_of_get_full_ADC 0026             __psmallconst 1000  
                __pcinit 1D0E               ??___awtoft 000C               ??___ftpack 0006  
                __ramtop 1000                  __ptext0 1052                  __ptext1 140E  
                __ptext2 1DF0                  __ptext3 1C86                  __ptext4 1C2A  
                __ptext5 1D38                  __ptext6 1644                  __ptext7 1D5E  
                __ptext8 154C                  __ptext9 172A          __size_of_printf 013E  
                _dpowers 1001         ___awmod@dividend 0001     end_of_initialization 1D2E  
          __Lmediumconst 0000             _get_full_ADC 1D38                _RCSTAbits 000FAB  
                printf@c 001D                  printf@f 0010                  postdec1 000FE5  
                postdec2 000FDD                  postinc0 000FEE                  postinc2 000FDE  
              _PORTEbits 000F84                _TRISCbits 000F94              ___ftdiv@exp 0035  
              _TXSTAbits 000FAC       get_full_ADC@result 0005              ___ftmul@exp 0016  
         __end_of___ftge 1AA2            __pidataCOMRAM 1E18             ??_Set_ADCON0 0001  
         __end_of_printf 154C      start_initialization 1D0E                _Init_UART 1DDC  
              _Init_TRIS 1DC6                _OpenUSART 1BBA         __CFG_OSC$INTIO67 000000  
      __size_of_Init_ADC 000E       __end_of_Set_ADCON0 1E18                 ??___ftge 0007  
               ??_printf 0016        __size_of___awtoft 003C        __size_of___ftpack 00C6  
             ?_Init_UART 0001               ?_Init_TRIS 0001               ?_OpenUSART 0001  
       ___lwdiv@dividend 0001                 ?___awdiv 0001                 ?___ftadd 001C  
               ?___awmod 0001                 ?___ftdiv 0028                 ?___ftneg 0001  
               ?___ftmul 000D                 ?___fttol 0001                 ?___lwdiv 0001  
               ?___lwmod 0008              __smallconst 1000         ___lwdiv@quotient 0005  
         __size_of_putch 000E                 _LED_7seg 0048                 _PIE1bits 000F9D  
      SET_RGB_D1@temp_up 0001                 _PIR1bits 000F9E        SET_RGB_D3@voltage 000D  
             _ADCON0bits 000FC2   main@temp_Celsius_float 0037               printf@flag 0019  
             printf@prec 001A              ??_Init_UART 0004              ??_Init_TRIS 0001  
              copy_data0 1D22                 _Init_ADC 1DFE              ??_OpenUSART 0003  
        OpenUSART@config 0003                 __Hrparam 0000                 __Lrparam 0000  
       __size_of___awdiv 0096         __size_of___ftadd 01C4         __size_of___awmod 0082  
       __size_of___ftdiv 00E2         __size_of___ftneg 0024         __size_of___ftmul 00F8  
       __size_of___fttol 00E6         __size_of___lwdiv 005C         __size_of___lwmod 004C  
               ___awtoft 1CD2                 ___ftpack 180C          ___lwdiv@divisor 0003  
        ___lwdiv@counter 0007                 __ptext10 124A                 __ptext11 1CD2  
               __ptext20 1DA6                 __ptext12 180C                 __ptext21 1DDC  
               __ptext13 1B38                 __ptext22 1BBA                 __ptext14 1976  
               __ptext23 1DC6                 __ptext15 1D82                 __ptext24 1DFE  
               __ptext16 1E0C                 __ptext17 18D2                 __ptext18 1A0C  
               __ptext19 1AA2    main@temp_Fahren_float 003A            __size_of_main 01F8  
        main@temp_Fahren 0046                printf@val 001B           OpenUSART@spbrg 0001  
       ___lwmod@dividend 0008                 printf@ap 0017            main@LOWER_DIS 0040  
             _WAIT_1_SEC 1D82          ___lwmod@divisor 000A               _SET_RGB_D1 1DA6  
             _SET_RGB_D2 1AA2               _SET_RGB_D3 18D2          ___lwmod@counter 000C  
          main@UPPER_DIS 003F            ?_get_full_ADC 0001         Set_ADCON0@AN_pin 0001  
